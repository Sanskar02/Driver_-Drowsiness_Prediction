{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Driver Drowsiness Detection using CNN"
   ]
  },
  {
   "attachments": {
    "driver-drwsiness.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![](attachment:driver-drwsiness.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Importing necessary libraries.."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:07.011726Z",
     "iopub.status.busy": "2022-02-09T16:24:07.011403Z",
     "iopub.status.idle": "2022-02-09T16:24:08.843266Z",
     "shell.execute_reply": "2022-02-09T16:24:08.842469Z",
     "shell.execute_reply.started": "2022-02-09T16:24:07.011692Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import cv2\n",
    "from tensorflow.keras.layers import Input, Conv2D, BatchNormalization, Dropout, Flatten, Dense, MaxPool2D\n",
    "from tensorflow.keras.models import Model, Sequential\n",
    "from tensorflow.keras.initializers import glorot_uniform\n",
    "from tensorflow.keras.optimizers import Adam, SGD\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import classification_report\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from sklearn.model_selection import train_test_split\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "import seaborn as sns\n",
    "from tensorflow.keras.regularizers import l2\n",
    "import tensorflow as tf\n",
    "import pandas as pd\n",
    "from imutils.face_utils import FaceAligner\n",
    "from imutils.face_utils import rect_to_bb\n",
    "import imutils\n",
    "import dlib"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the images and labels and Preprocessing the Dataset\n",
    "\n",
    "Input Shape of Images for the CNN model - (32, 32, 3) <br>\n",
    "Dataset os split into Train Set and Test Set with test set containing 20% of the total number of images<br>\n",
    "Labels -> \n",
    "- 0 - Closed Eye<br>\n",
    "- 1 - Open Eye"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:12.443714Z",
     "iopub.status.busy": "2022-02-09T16:24:12.443445Z",
     "iopub.status.idle": "2022-02-09T16:24:14.428349Z",
     "shell.execute_reply": "2022-02-09T16:24:14.427375Z",
     "shell.execute_reply.started": "2022-02-09T16:24:12.443682Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1452\n",
      "1452\n"
     ]
    }
   ],
   "source": [
    "data = np.load('desktop/prooo/dataset_compressed.npz', allow_pickle=True)\n",
    "X = data['arr_0']\n",
    "Y = data['arr_1']\n",
    "\n",
    "X = list(X)\n",
    "Y = list(Y)\n",
    "print(len(X))\n",
    "print(len(Y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([[[ 77,  78,  93],\n",
       "         [ 76,  75,  91],\n",
       "         [ 68,  68,  83],\n",
       "         ...,\n",
       "         [132, 115, 129],\n",
       "         [134, 117, 131],\n",
       "         [123, 106, 119]],\n",
       " \n",
       "        [[ 82,  83,  97],\n",
       "         [ 77,  75,  90],\n",
       "         [ 80,  77,  90],\n",
       "         ...,\n",
       "         [ 96,  81,  94],\n",
       "         [108,  91, 105],\n",
       "         [117, 100, 114]],\n",
       " \n",
       "        [[ 71,  72,  84],\n",
       "         [ 72,  67,  79],\n",
       "         [ 76,  69,  80],\n",
       "         ...,\n",
       "         [ 95,  82,  96],\n",
       "         [102,  87, 103],\n",
       "         [106,  90, 107]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94,  93, 118],\n",
       "         [ 94,  94, 120],\n",
       "         [ 96,  95, 120],\n",
       "         ...,\n",
       "         [104, 105, 133],\n",
       "         [103, 104, 132],\n",
       "         [ 99,  99, 129]],\n",
       " \n",
       "        [[ 97,  95, 122],\n",
       "         [ 96,  95, 122],\n",
       "         [ 93,  92, 118],\n",
       "         ...,\n",
       "         [105, 106, 134],\n",
       "         [103, 104, 132],\n",
       "         [100, 100, 130]],\n",
       " \n",
       "        [[ 96,  92, 121],\n",
       "         [ 98,  94, 124],\n",
       "         [101,  98, 124],\n",
       "         ...,\n",
       "         [107, 108, 136],\n",
       "         [102, 103, 131],\n",
       "         [102, 102, 132]]], dtype=uint8),\n",
       " array([[[ 83, 103, 170],\n",
       "         [ 87, 105, 170],\n",
       "         [ 65,  83, 144],\n",
       "         ...,\n",
       "         [ 39,  60, 115],\n",
       "         [ 50,  72, 127],\n",
       "         [ 69,  94, 148]],\n",
       " \n",
       "        [[112, 136, 192],\n",
       "         [ 96, 117, 173],\n",
       "         [ 75,  95, 149],\n",
       "         ...,\n",
       "         [ 81, 103, 156],\n",
       "         [ 60,  84, 137],\n",
       "         [ 47,  74, 126]],\n",
       " \n",
       "        [[104, 131, 179],\n",
       "         [ 94, 118, 168],\n",
       "         [ 84, 105, 157],\n",
       "         ...,\n",
       "         [102, 127, 177],\n",
       "         [ 93, 121, 171],\n",
       "         [ 90, 120, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89, 133, 200],\n",
       "         [ 95, 139, 206],\n",
       "         [ 91, 136, 203],\n",
       "         ...,\n",
       "         [113, 150, 218],\n",
       "         [115, 149, 217],\n",
       "         [115, 151, 219]],\n",
       " \n",
       "        [[ 89, 134, 201],\n",
       "         [100, 142, 213],\n",
       "         [ 97, 137, 208],\n",
       "         ...,\n",
       "         [122, 157, 226],\n",
       "         [121, 155, 225],\n",
       "         [120, 154, 224]],\n",
       " \n",
       "        [[ 95, 140, 207],\n",
       "         [ 93, 134, 206],\n",
       "         [ 98, 138, 210],\n",
       "         ...,\n",
       "         [123, 157, 227],\n",
       "         [120, 154, 224],\n",
       "         [120, 154, 224]]], dtype=uint8),\n",
       " array([[[ 47,  68, 103],\n",
       "         [ 46,  66, 100],\n",
       "         [ 37,  56,  87],\n",
       "         ...,\n",
       "         [ 90, 130, 182],\n",
       "         [ 89, 129, 181],\n",
       "         [ 93, 133, 185]],\n",
       " \n",
       "        [[ 62,  80, 108],\n",
       "         [ 63,  80, 107],\n",
       "         [ 56,  71,  96],\n",
       "         ...,\n",
       "         [ 89, 129, 181],\n",
       "         [ 89, 129, 181],\n",
       "         [ 88, 128, 180]],\n",
       " \n",
       "        [[ 51,  71,  99],\n",
       "         [ 56,  77, 102],\n",
       "         [ 49,  68,  92],\n",
       "         ...,\n",
       "         [ 83, 123, 175],\n",
       "         [ 84, 124, 176],\n",
       "         [ 83, 123, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[141, 178, 221],\n",
       "         [138, 177, 222],\n",
       "         [125, 165, 213],\n",
       "         ...,\n",
       "         [144, 179, 229],\n",
       "         [143, 177, 230],\n",
       "         [144, 182, 231]],\n",
       " \n",
       "        [[141, 177, 223],\n",
       "         [143, 181, 229],\n",
       "         [128, 168, 217],\n",
       "         ...,\n",
       "         [143, 178, 228],\n",
       "         [143, 177, 230],\n",
       "         [143, 182, 231]],\n",
       " \n",
       "        [[139, 175, 223],\n",
       "         [141, 178, 228],\n",
       "         [131, 170, 222],\n",
       "         ...,\n",
       "         [143, 178, 228],\n",
       "         [143, 177, 230],\n",
       "         [138, 178, 230]]], dtype=uint8),\n",
       " array([[[184, 210, 240],\n",
       "         [184, 210, 240],\n",
       "         [190, 214, 244],\n",
       "         ...,\n",
       "         [179, 203, 237],\n",
       "         [177, 199, 231],\n",
       "         [188, 208, 238]],\n",
       " \n",
       "        [[178, 206, 240],\n",
       "         [178, 206, 240],\n",
       "         [182, 209, 243],\n",
       "         ...,\n",
       "         [103, 132, 188],\n",
       "         [124, 152, 207],\n",
       "         [132, 159, 210]],\n",
       " \n",
       "        [[169, 200, 235],\n",
       "         [169, 200, 235],\n",
       "         [174, 203, 239],\n",
       "         ...,\n",
       "         [133, 168, 220],\n",
       "         [132, 170, 223],\n",
       "         [122, 158, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[208, 224, 245],\n",
       "         [201, 218, 240],\n",
       "         [196, 213, 238],\n",
       "         ...,\n",
       "         [158, 183, 224],\n",
       "         [171, 194, 229],\n",
       "         [196, 215, 241]],\n",
       " \n",
       "        [[211, 226, 245],\n",
       "         [208, 222, 244],\n",
       "         [204, 218, 240],\n",
       "         ...,\n",
       "         [194, 212, 246],\n",
       "         [199, 214, 243],\n",
       "         [204, 220, 239]],\n",
       " \n",
       "        [[216, 230, 248],\n",
       "         [212, 226, 244],\n",
       "         [212, 224, 243],\n",
       "         ...,\n",
       "         [206, 217, 241],\n",
       "         [215, 223, 243],\n",
       "         [216, 225, 246]]], dtype=uint8),\n",
       " array([[[175, 188, 236],\n",
       "         [148, 154, 213],\n",
       "         [143, 153, 208],\n",
       "         ...,\n",
       "         [ 25,  31,  57],\n",
       "         [ 49,  65, 111],\n",
       "         [ 68,  82, 127]],\n",
       " \n",
       "        [[141, 156, 215],\n",
       "         [101, 113, 167],\n",
       "         [115, 126, 178],\n",
       "         ...,\n",
       "         [ 11,  16,  32],\n",
       "         [ 33,  48,  87],\n",
       "         [ 62,  76, 121]],\n",
       " \n",
       "        [[ 97, 113, 175],\n",
       "         [ 93, 107, 159],\n",
       "         [118, 130, 178],\n",
       "         ...,\n",
       "         [  4,   7,  12],\n",
       "         [ 23,  36,  67],\n",
       "         [ 61,  76, 121]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[191, 204, 246],\n",
       "         [191, 203, 244],\n",
       "         [187, 201, 245],\n",
       "         ...,\n",
       "         [195, 204, 241],\n",
       "         [201, 207, 241],\n",
       "         [192, 199, 237]],\n",
       " \n",
       "        [[190, 203, 246],\n",
       "         [191, 203, 245],\n",
       "         [189, 203, 245],\n",
       "         ...,\n",
       "         [192, 203, 241],\n",
       "         [204, 210, 242],\n",
       "         [204, 209, 242]],\n",
       " \n",
       "        [[190, 202, 246],\n",
       "         [192, 203, 245],\n",
       "         [193, 205, 247],\n",
       "         ...,\n",
       "         [193, 205, 242],\n",
       "         [206, 211, 242],\n",
       "         [208, 211, 239]]], dtype=uint8),\n",
       " array([[[ 80,  98, 136],\n",
       "         [ 52,  74, 118],\n",
       "         [ 73,  97, 139],\n",
       "         ...,\n",
       "         [137, 157, 198],\n",
       "         [134, 154, 196],\n",
       "         [135, 154, 196]],\n",
       " \n",
       "        [[ 80,  99, 137],\n",
       "         [ 55,  78, 121],\n",
       "         [ 91, 113, 155],\n",
       "         ...,\n",
       "         [135, 155, 196],\n",
       "         [134, 154, 196],\n",
       "         [142, 163, 201]],\n",
       " \n",
       "        [[ 81, 102, 139],\n",
       "         [ 63,  85, 129],\n",
       "         [104, 125, 167],\n",
       "         ...,\n",
       "         [134, 154, 195],\n",
       "         [136, 156, 197],\n",
       "         [138, 159, 197]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[174, 189, 222],\n",
       "         [178, 190, 222],\n",
       "         [169, 184, 218],\n",
       "         ...,\n",
       "         [150, 168, 197],\n",
       "         [158, 172, 204],\n",
       "         [165, 179, 208]],\n",
       " \n",
       "        [[172, 188, 223],\n",
       "         [178, 190, 222],\n",
       "         [171, 186, 218],\n",
       "         ...,\n",
       "         [157, 172, 201],\n",
       "         [162, 174, 202],\n",
       "         [175, 187, 210]],\n",
       " \n",
       "        [[177, 192, 223],\n",
       "         [181, 192, 221],\n",
       "         [173, 185, 218],\n",
       "         ...,\n",
       "         [165, 176, 205],\n",
       "         [175, 184, 211],\n",
       "         [182, 192, 215]]], dtype=uint8),\n",
       " array([[[112, 132, 179],\n",
       "         [107, 129, 175],\n",
       "         [105, 128, 174],\n",
       "         ...,\n",
       "         [ 37,  57,  98],\n",
       "         [ 29,  47,  82],\n",
       "         [  8,  25,  48]],\n",
       " \n",
       "        [[110, 130, 176],\n",
       "         [109, 131, 177],\n",
       "         [108, 131, 176],\n",
       "         ...,\n",
       "         [ 34,  52,  93],\n",
       "         [ 34,  52,  89],\n",
       "         [ 11,  27,  55]],\n",
       " \n",
       "        [[111, 132, 177],\n",
       "         [105, 128, 173],\n",
       "         [102, 125, 170],\n",
       "         ...,\n",
       "         [ 33,  52,  90],\n",
       "         [ 25,  45,  83],\n",
       "         [ 23,  36,  70]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 52,  82, 121],\n",
       "         [ 55,  86, 123],\n",
       "         [ 58,  85, 121],\n",
       "         ...,\n",
       "         [ 76, 105, 149],\n",
       "         [ 88, 116, 160],\n",
       "         [ 94, 121, 165]],\n",
       " \n",
       "        [[ 52,  87, 125],\n",
       "         [ 53,  89, 127],\n",
       "         [ 57,  90, 126],\n",
       "         ...,\n",
       "         [ 87, 115, 161],\n",
       "         [ 91, 116, 163],\n",
       "         [ 95, 120, 167]],\n",
       " \n",
       "        [[ 56,  91, 131],\n",
       "         [ 54,  87, 129],\n",
       "         [ 58,  90, 131],\n",
       "         ...,\n",
       "         [ 99, 122, 167],\n",
       "         [103, 127, 171],\n",
       "         [107, 131, 175]]], dtype=uint8),\n",
       " array([[[226, 221, 211],\n",
       "         [230, 221, 212],\n",
       "         [224, 216, 208],\n",
       "         ...,\n",
       "         [148, 173, 213],\n",
       "         [147, 170, 214],\n",
       "         [148, 172, 214]],\n",
       " \n",
       "        [[222, 217, 208],\n",
       "         [226, 219, 210],\n",
       "         [216, 209, 202],\n",
       "         ...,\n",
       "         [151, 174, 215],\n",
       "         [151, 173, 215],\n",
       "         [139, 163, 208]],\n",
       " \n",
       "        [[227, 219, 207],\n",
       "         [228, 219, 207],\n",
       "         [214, 207, 198],\n",
       "         ...,\n",
       "         [144, 167, 212],\n",
       "         [145, 169, 214],\n",
       "         [139, 164, 212]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 183, 222],\n",
       "         [170, 182, 221],\n",
       "         [177, 187, 224],\n",
       "         ...,\n",
       "         [147, 167, 212],\n",
       "         [160, 175, 213],\n",
       "         [180, 186, 216]],\n",
       " \n",
       "        [[170, 182, 222],\n",
       "         [173, 183, 222],\n",
       "         [176, 185, 222],\n",
       "         ...,\n",
       "         [149, 168, 211],\n",
       "         [164, 176, 210],\n",
       "         [182, 189, 216]],\n",
       " \n",
       "        [[168, 180, 220],\n",
       "         [173, 183, 222],\n",
       "         [177, 186, 223],\n",
       "         ...,\n",
       "         [155, 172, 213],\n",
       "         [170, 180, 212],\n",
       "         [181, 187, 213]]], dtype=uint8),\n",
       " array([[[139, 165, 211],\n",
       "         [139, 165, 210],\n",
       "         [141, 165, 211],\n",
       "         ...,\n",
       "         [166, 172, 185],\n",
       "         [166, 174, 181],\n",
       "         [166, 173, 180]],\n",
       " \n",
       "        [[134, 163, 208],\n",
       "         [136, 162, 209],\n",
       "         [132, 157, 206],\n",
       "         ...,\n",
       "         [157, 165, 179],\n",
       "         [159, 167, 176],\n",
       "         [161, 168, 177]],\n",
       " \n",
       "        [[130, 157, 207],\n",
       "         [130, 157, 207],\n",
       "         [133, 158, 208],\n",
       "         ...,\n",
       "         [156, 165, 179],\n",
       "         [154, 164, 173],\n",
       "         [161, 172, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 145, 189],\n",
       "         [124, 149, 195],\n",
       "         [119, 146, 191],\n",
       "         ...,\n",
       "         [150, 163, 194],\n",
       "         [170, 176, 194],\n",
       "         [183, 185, 195]],\n",
       " \n",
       "        [[124, 149, 194],\n",
       "         [122, 149, 198],\n",
       "         [122, 149, 198],\n",
       "         ...,\n",
       "         [161, 172, 200],\n",
       "         [171, 178, 196],\n",
       "         [176, 181, 192]],\n",
       " \n",
       "        [[125, 148, 196],\n",
       "         [125, 152, 203],\n",
       "         [125, 152, 202],\n",
       "         ...,\n",
       "         [160, 168, 194],\n",
       "         [169, 178, 195],\n",
       "         [174, 181, 194]]], dtype=uint8),\n",
       " array([[[183, 194, 226],\n",
       "         [189, 200, 228],\n",
       "         [191, 202, 229],\n",
       "         ...,\n",
       "         [163, 181, 219],\n",
       "         [164, 182, 217],\n",
       "         [159, 178, 216]],\n",
       " \n",
       "        [[184, 195, 227],\n",
       "         [190, 202, 230],\n",
       "         [190, 201, 228],\n",
       "         ...,\n",
       "         [159, 177, 216],\n",
       "         [159, 178, 213],\n",
       "         [160, 179, 217]],\n",
       " \n",
       "        [[185, 196, 228],\n",
       "         [189, 201, 228],\n",
       "         [193, 204, 230],\n",
       "         ...,\n",
       "         [162, 180, 218],\n",
       "         [162, 180, 216],\n",
       "         [162, 181, 219]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[188, 199, 233],\n",
       "         [193, 205, 236],\n",
       "         [199, 210, 235],\n",
       "         ...,\n",
       "         [193, 204, 235],\n",
       "         [195, 205, 234],\n",
       "         [208, 213, 234]],\n",
       " \n",
       "        [[187, 198, 232],\n",
       "         [193, 205, 236],\n",
       "         [198, 209, 236],\n",
       "         ...,\n",
       "         [193, 204, 232],\n",
       "         [199, 208, 236],\n",
       "         [208, 215, 235]],\n",
       " \n",
       "        [[185, 197, 233],\n",
       "         [192, 202, 235],\n",
       "         [197, 209, 238],\n",
       "         ...,\n",
       "         [195, 206, 233],\n",
       "         [200, 209, 236],\n",
       "         [208, 214, 236]]], dtype=uint8),\n",
       " array([[[148, 167, 210],\n",
       "         [143, 161, 207],\n",
       "         [143, 162, 207],\n",
       "         ...,\n",
       "         [ 95, 107, 143],\n",
       "         [ 90, 104, 140],\n",
       "         [ 81,  95, 131]],\n",
       " \n",
       "        [[151, 170, 208],\n",
       "         [149, 167, 210],\n",
       "         [149, 166, 208],\n",
       "         ...,\n",
       "         [ 95, 107, 142],\n",
       "         [ 92, 104, 140],\n",
       "         [ 87,  99, 135]],\n",
       " \n",
       "        [[148, 169, 209],\n",
       "         [143, 162, 206],\n",
       "         [140, 159, 202],\n",
       "         ...,\n",
       "         [ 96, 107, 141],\n",
       "         [ 92, 104, 138],\n",
       "         [ 89, 101, 135]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 80, 100, 155],\n",
       "         [ 76,  97, 149],\n",
       "         [ 77,  98, 148],\n",
       "         ...,\n",
       "         [ 96, 117, 164],\n",
       "         [ 92, 111, 156],\n",
       "         [ 93, 108, 151]],\n",
       " \n",
       "        [[ 84, 104, 159],\n",
       "         [ 80, 101, 153],\n",
       "         [ 83, 104, 154],\n",
       "         ...,\n",
       "         [ 93, 114, 160],\n",
       "         [ 91, 110, 155],\n",
       "         [ 93, 107, 151]],\n",
       " \n",
       "        [[ 90, 110, 158],\n",
       "         [ 84, 103, 154],\n",
       "         [ 88, 106, 159],\n",
       "         ...,\n",
       "         [ 95, 116, 162],\n",
       "         [ 92, 111, 156],\n",
       "         [ 91, 105, 149]]], dtype=uint8),\n",
       " array([[[ 91, 133, 191],\n",
       "         [ 93, 135, 193],\n",
       "         [ 97, 141, 195],\n",
       "         ...,\n",
       "         [146, 178, 218],\n",
       "         [141, 177, 216],\n",
       "         [139, 175, 218]],\n",
       " \n",
       "        [[ 90, 132, 190],\n",
       "         [ 92, 135, 192],\n",
       "         [ 91, 135, 189],\n",
       "         ...,\n",
       "         [143, 176, 216],\n",
       "         [142, 177, 216],\n",
       "         [140, 175, 215]],\n",
       " \n",
       "        [[ 90, 132, 187],\n",
       "         [ 98, 139, 194],\n",
       "         [101, 145, 197],\n",
       "         ...,\n",
       "         [141, 176, 218],\n",
       "         [140, 175, 215],\n",
       "         [138, 173, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 131, 189],\n",
       "         [ 78, 123, 182],\n",
       "         [ 79, 121, 179],\n",
       "         ...,\n",
       "         [100, 139, 190],\n",
       "         [ 92, 132, 182],\n",
       "         [ 95, 139, 192]],\n",
       " \n",
       "        [[ 79, 123, 186],\n",
       "         [ 78, 122, 186],\n",
       "         [ 82, 127, 188],\n",
       "         ...,\n",
       "         [ 88, 128, 180],\n",
       "         [ 99, 142, 193],\n",
       "         [105, 147, 199]],\n",
       " \n",
       "        [[ 74, 123, 185],\n",
       "         [ 82, 127, 189],\n",
       "         [ 79, 125, 187],\n",
       "         ...,\n",
       "         [110, 150, 202],\n",
       "         [107, 150, 201],\n",
       "         [106, 148, 201]]], dtype=uint8),\n",
       " array([[[131, 177, 220],\n",
       "         [130, 174, 221],\n",
       "         [137, 178, 222],\n",
       "         ...,\n",
       "         [114, 160, 214],\n",
       "         [108, 155, 211],\n",
       "         [106, 152, 209]],\n",
       " \n",
       "        [[130, 173, 219],\n",
       "         [133, 176, 222],\n",
       "         [133, 175, 220],\n",
       "         ...,\n",
       "         [109, 154, 210],\n",
       "         [111, 156, 213],\n",
       "         [107, 152, 210]],\n",
       " \n",
       "        [[141, 180, 223],\n",
       "         [140, 178, 221],\n",
       "         [138, 179, 224],\n",
       "         ...,\n",
       "         [111, 156, 210],\n",
       "         [110, 156, 210],\n",
       "         [109, 155, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[123, 165, 213],\n",
       "         [130, 172, 218],\n",
       "         [141, 179, 221],\n",
       "         ...,\n",
       "         [157, 195, 233],\n",
       "         [153, 189, 229],\n",
       "         [133, 175, 223]],\n",
       " \n",
       "        [[124, 165, 217],\n",
       "         [126, 170, 219],\n",
       "         [134, 174, 220],\n",
       "         ...,\n",
       "         [160, 196, 231],\n",
       "         [141, 181, 225],\n",
       "         [151, 189, 226]],\n",
       " \n",
       "        [[121, 164, 217],\n",
       "         [122, 166, 219],\n",
       "         [122, 168, 217],\n",
       "         ...,\n",
       "         [149, 189, 230],\n",
       "         [141, 183, 226],\n",
       "         [151, 190, 230]]], dtype=uint8),\n",
       " array([[[ 88, 128, 180],\n",
       "         [ 89, 126, 178],\n",
       "         [ 91, 126, 176],\n",
       "         ...,\n",
       "         [ 82, 106, 142],\n",
       "         [ 69,  91, 123],\n",
       "         [ 85, 106, 132]],\n",
       " \n",
       "        [[ 86, 126, 178],\n",
       "         [ 88, 125, 176],\n",
       "         [ 90, 124, 175],\n",
       "         ...,\n",
       "         [ 60,  84, 120],\n",
       "         [ 70,  94, 128],\n",
       "         [ 71,  94, 123]],\n",
       " \n",
       "        [[ 85, 124, 176],\n",
       "         [ 85, 122, 174],\n",
       "         [ 89, 124, 174],\n",
       "         ...,\n",
       "         [ 93, 120, 156],\n",
       "         [ 85, 111, 146],\n",
       "         [ 92, 119, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[123, 156, 214],\n",
       "         [126, 157, 212],\n",
       "         [131, 162, 215],\n",
       "         ...,\n",
       "         [126, 159, 205],\n",
       "         [127, 159, 204],\n",
       "         [126, 159, 205]],\n",
       " \n",
       "        [[128, 159, 217],\n",
       "         [128, 158, 213],\n",
       "         [133, 161, 215],\n",
       "         ...,\n",
       "         [126, 159, 206],\n",
       "         [127, 159, 204],\n",
       "         [126, 159, 204]],\n",
       " \n",
       "        [[130, 161, 213],\n",
       "         [128, 160, 213],\n",
       "         [130, 161, 216],\n",
       "         ...,\n",
       "         [123, 158, 205],\n",
       "         [125, 160, 206],\n",
       "         [126, 160, 206]]], dtype=uint8),\n",
       " array([[[ 97, 114, 165],\n",
       "         [113, 128, 184],\n",
       "         [117, 135, 190],\n",
       "         ...,\n",
       "         [164, 169, 213],\n",
       "         [160, 165, 211],\n",
       "         [155, 160, 206]],\n",
       " \n",
       "        [[111, 129, 184],\n",
       "         [122, 138, 194],\n",
       "         [125, 144, 198],\n",
       "         ...,\n",
       "         [153, 158, 203],\n",
       "         [154, 159, 204],\n",
       "         [156, 159, 204]],\n",
       " \n",
       "        [[110, 131, 186],\n",
       "         [124, 145, 200],\n",
       "         [129, 147, 201],\n",
       "         ...,\n",
       "         [145, 150, 198],\n",
       "         [152, 156, 203],\n",
       "         [150, 153, 197]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 172, 224],\n",
       "         [145, 172, 223],\n",
       "         [149, 173, 224],\n",
       "         ...,\n",
       "         [150, 158, 208],\n",
       "         [155, 162, 214],\n",
       "         [156, 172, 229]],\n",
       " \n",
       "        [[147, 173, 228],\n",
       "         [150, 180, 230],\n",
       "         [151, 177, 231],\n",
       "         ...,\n",
       "         [143, 158, 216],\n",
       "         [157, 171, 227],\n",
       "         [155, 171, 228]],\n",
       " \n",
       "        [[150, 176, 231],\n",
       "         [149, 178, 233],\n",
       "         [152, 177, 229],\n",
       "         ...,\n",
       "         [156, 175, 230],\n",
       "         [157, 173, 229],\n",
       "         [171, 180, 233]]], dtype=uint8),\n",
       " array([[[116, 126, 146],\n",
       "         [115, 129, 148],\n",
       "         [114, 128, 147],\n",
       "         ...,\n",
       "         [122, 134, 174],\n",
       "         [119, 132, 170],\n",
       "         [116, 128, 168]],\n",
       " \n",
       "        [[115, 126, 146],\n",
       "         [114, 128, 147],\n",
       "         [108, 122, 141],\n",
       "         ...,\n",
       "         [123, 135, 176],\n",
       "         [127, 141, 177],\n",
       "         [119, 132, 170]],\n",
       " \n",
       "        [[108, 119, 139],\n",
       "         [107, 119, 138],\n",
       "         [113, 121, 141],\n",
       "         ...,\n",
       "         [116, 128, 170],\n",
       "         [125, 136, 175],\n",
       "         [121, 133, 171]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[104, 123, 160],\n",
       "         [104, 123, 160],\n",
       "         [104, 123, 160],\n",
       "         ...,\n",
       "         [ 94, 102, 154],\n",
       "         [ 86,  93, 148],\n",
       "         [ 92,  99, 154]],\n",
       " \n",
       "        [[102, 121, 158],\n",
       "         [105, 124, 161],\n",
       "         [105, 124, 161],\n",
       "         ...,\n",
       "         [ 91, 101, 150],\n",
       "         [ 90,  98, 152],\n",
       "         [ 94, 103, 157]],\n",
       " \n",
       "        [[106, 125, 162],\n",
       "         [103, 122, 159],\n",
       "         [106, 125, 162],\n",
       "         ...,\n",
       "         [ 98, 108, 156],\n",
       "         [ 95, 106, 158],\n",
       "         [ 98, 109, 161]]], dtype=uint8),\n",
       " array([[[ 22,  45,  75],\n",
       "         [ 21,  44,  81],\n",
       "         [ 23,  48,  91],\n",
       "         ...,\n",
       "         [ 44,  73, 109],\n",
       "         [ 44,  71, 108],\n",
       "         [ 44,  72, 109]],\n",
       " \n",
       "        [[ 21,  48,  79],\n",
       "         [ 22,  44,  85],\n",
       "         [ 27,  50,  97],\n",
       "         ...,\n",
       "         [ 48,  74, 110],\n",
       "         [ 38,  63, 104],\n",
       "         [ 34,  65, 102]],\n",
       " \n",
       "        [[ 20,  43,  80],\n",
       "         [ 20,  43,  84],\n",
       "         [ 21,  45,  92],\n",
       "         ...,\n",
       "         [ 48,  74, 111],\n",
       "         [ 31,  55,  93],\n",
       "         [ 30,  54,  93]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 46,  84, 125],\n",
       "         [ 49,  87, 131],\n",
       "         [ 47,  85, 134],\n",
       "         ...,\n",
       "         [ 75, 100, 137],\n",
       "         [ 65,  96, 128],\n",
       "         [ 53,  81, 116]],\n",
       " \n",
       "        [[ 47,  86, 130],\n",
       "         [ 48,  85, 135],\n",
       "         [ 52,  86, 138],\n",
       "         ...,\n",
       "         [ 91, 117, 142],\n",
       "         [ 74, 101, 132],\n",
       "         [ 55,  84, 118]],\n",
       " \n",
       "        [[ 45,  83, 130],\n",
       "         [ 50,  86, 137],\n",
       "         [ 55,  89, 142],\n",
       "         ...,\n",
       "         [ 97, 122, 145],\n",
       "         [ 83, 106, 136],\n",
       "         [ 56,  87, 120]]], dtype=uint8),\n",
       " array([[[122, 127, 164],\n",
       "         [113, 120, 158],\n",
       "         [109, 114, 149],\n",
       "         ...,\n",
       "         [146, 158, 186],\n",
       "         [135, 147, 174],\n",
       "         [125, 139, 164]],\n",
       " \n",
       "        [[ 84,  99, 151],\n",
       "         [ 96, 103, 150],\n",
       "         [ 77,  86, 128],\n",
       "         ...,\n",
       "         [155, 172, 205],\n",
       "         [143, 161, 194],\n",
       "         [124, 142, 175]],\n",
       " \n",
       "        [[ 71,  87, 128],\n",
       "         [ 59,  66, 103],\n",
       "         [ 61,  65,  92],\n",
       "         ...,\n",
       "         [153, 169, 202],\n",
       "         [145, 162, 195],\n",
       "         [129, 148, 181]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 145, 193],\n",
       "         [126, 138, 185],\n",
       "         [118, 130, 179],\n",
       "         ...,\n",
       "         [141, 157, 191],\n",
       "         [140, 152, 186],\n",
       "         [138, 151, 182]],\n",
       " \n",
       "        [[147, 156, 204],\n",
       "         [124, 136, 187],\n",
       "         [124, 135, 184],\n",
       "         ...,\n",
       "         [141, 157, 193],\n",
       "         [143, 156, 189],\n",
       "         [148, 158, 192]],\n",
       " \n",
       "        [[143, 150, 191],\n",
       "         [126, 136, 185],\n",
       "         [122, 130, 183],\n",
       "         ...,\n",
       "         [144, 159, 195],\n",
       "         [145, 158, 192],\n",
       "         [143, 156, 184]]], dtype=uint8),\n",
       " array([[[ 22,  24,  35],\n",
       "         [ 20,  29,  43],\n",
       "         [ 28,  41,  63],\n",
       "         ...,\n",
       "         [148, 159, 186],\n",
       "         [158, 167, 194],\n",
       "         [152, 165, 191]],\n",
       " \n",
       "        [[ 18,  23,  34],\n",
       "         [ 23,  33,  51],\n",
       "         [ 31,  47,  68],\n",
       "         ...,\n",
       "         [148, 156, 184],\n",
       "         [153, 157, 185],\n",
       "         [155, 162, 190]],\n",
       " \n",
       "        [[ 17,  25,  37],\n",
       "         [ 25,  37,  58],\n",
       "         [ 34,  53,  73],\n",
       "         ...,\n",
       "         [128, 137, 168],\n",
       "         [138, 144, 176],\n",
       "         [142, 150, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 48,  76, 107],\n",
       "         [ 46,  73, 104],\n",
       "         [ 62,  83, 115],\n",
       "         ...,\n",
       "         [ 51,  74, 100],\n",
       "         [ 52,  75, 101],\n",
       "         [ 49,  72, 100]],\n",
       " \n",
       "        [[ 50,  78, 109],\n",
       "         [ 47,  74, 105],\n",
       "         [ 65,  86, 118],\n",
       "         ...,\n",
       "         [ 50,  74,  97],\n",
       "         [ 49,  72,  98],\n",
       "         [ 49,  72, 102]],\n",
       " \n",
       "        [[ 51,  76, 108],\n",
       "         [ 58,  81, 113],\n",
       "         [ 59,  82, 114],\n",
       "         ...,\n",
       "         [ 49,  72,  98],\n",
       "         [ 44,  68,  98],\n",
       "         [ 52,  77, 109]]], dtype=uint8),\n",
       " array([[[149, 159, 188],\n",
       "         [145, 156, 188],\n",
       "         [152, 158, 189],\n",
       "         ...,\n",
       "         [ 84,  95, 112],\n",
       "         [ 53,  66,  81],\n",
       "         [ 40,  47,  58]],\n",
       " \n",
       "        [[148, 152, 183],\n",
       "         [124, 140, 173],\n",
       "         [155, 158, 190],\n",
       "         ...,\n",
       "         [ 78,  92, 108],\n",
       "         [ 47,  63,  78],\n",
       "         [ 40,  49,  61]],\n",
       " \n",
       "        [[144, 151, 177],\n",
       "         [148, 150, 181],\n",
       "         [143, 147, 177],\n",
       "         ...,\n",
       "         [ 85,  94, 112],\n",
       "         [ 43,  60,  76],\n",
       "         [ 35,  45,  59]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[202, 211, 227],\n",
       "         [204, 211, 230],\n",
       "         [205, 213, 231],\n",
       "         ...,\n",
       "         [186, 200, 223],\n",
       "         [183, 197, 218],\n",
       "         [171, 182, 207]],\n",
       " \n",
       "        [[198, 211, 226],\n",
       "         [199, 211, 228],\n",
       "         [204, 214, 231],\n",
       "         ...,\n",
       "         [187, 202, 222],\n",
       "         [180, 195, 215],\n",
       "         [165, 177, 198]],\n",
       " \n",
       "        [[194, 208, 227],\n",
       "         [200, 211, 227],\n",
       "         [202, 212, 227],\n",
       "         ...,\n",
       "         [181, 198, 222],\n",
       "         [175, 190, 217],\n",
       "         [154, 165, 186]]], dtype=uint8),\n",
       " array([[[ 68,  63,  72],\n",
       "         [ 77,  72,  78],\n",
       "         [ 91,  87,  89],\n",
       "         ...,\n",
       "         [160, 161, 165],\n",
       "         [161, 163, 167],\n",
       "         [159, 162, 166]],\n",
       " \n",
       "        [[ 64,  59,  68],\n",
       "         [ 76,  69,  75],\n",
       "         [ 92,  85,  88],\n",
       "         ...,\n",
       "         [159, 160, 164],\n",
       "         [159, 161, 167],\n",
       "         [157, 161, 167]],\n",
       " \n",
       "        [[ 65,  56,  65],\n",
       "         [ 72,  64,  70],\n",
       "         [ 80,  73,  78],\n",
       "         ...,\n",
       "         [155, 159, 164],\n",
       "         [154, 157, 165],\n",
       "         [151, 154, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97,  96, 105],\n",
       "         [ 96,  95, 104],\n",
       "         [100,  99, 108],\n",
       "         ...,\n",
       "         [ 91,  87, 103],\n",
       "         [ 89,  83, 105],\n",
       "         [ 93,  88, 109]],\n",
       " \n",
       "        [[ 99,  98, 107],\n",
       "         [102, 101, 110],\n",
       "         [ 98,  99, 107],\n",
       "         ...,\n",
       "         [102,  98, 116],\n",
       "         [ 94,  89, 111],\n",
       "         [ 88,  83, 107]],\n",
       " \n",
       "        [[103, 102, 111],\n",
       "         [103, 103, 111],\n",
       "         [101, 103, 111],\n",
       "         ...,\n",
       "         [ 98,  93, 114],\n",
       "         [ 97,  91, 114],\n",
       "         [ 90,  84, 109]]], dtype=uint8),\n",
       " array([[[185, 189, 190],\n",
       "         [186, 190, 191],\n",
       "         [183, 187, 189],\n",
       "         ...,\n",
       "         [118, 127, 131],\n",
       "         [118, 125, 128],\n",
       "         [ 94,  97, 103]],\n",
       " \n",
       "        [[185, 189, 190],\n",
       "         [185, 189, 189],\n",
       "         [182, 186, 188],\n",
       "         ...,\n",
       "         [115, 125, 131],\n",
       "         [118, 125, 130],\n",
       "         [117, 123, 125]],\n",
       " \n",
       "        [[182, 187, 190],\n",
       "         [180, 185, 188],\n",
       "         [180, 185, 188],\n",
       "         ...,\n",
       "         [114, 125, 130],\n",
       "         [113, 125, 130],\n",
       "         [117, 124, 128]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 161, 178],\n",
       "         [146, 153, 170],\n",
       "         [148, 150, 165],\n",
       "         ...,\n",
       "         [139, 146, 156],\n",
       "         [136, 144, 157],\n",
       "         [128, 135, 150]],\n",
       " \n",
       "        [[153, 159, 178],\n",
       "         [152, 158, 177],\n",
       "         [153, 156, 175],\n",
       "         ...,\n",
       "         [150, 156, 165],\n",
       "         [137, 144, 157],\n",
       "         [132, 139, 154]],\n",
       " \n",
       "        [[151, 159, 175],\n",
       "         [157, 162, 181],\n",
       "         [155, 160, 181],\n",
       "         ...,\n",
       "         [148, 156, 166],\n",
       "         [141, 147, 160],\n",
       "         [133, 140, 156]]], dtype=uint8),\n",
       " array([[[ 14,  20,  28],\n",
       "         [ 19,  27,  41],\n",
       "         [ 25,  39,  57],\n",
       "         ...,\n",
       "         [141, 178, 227],\n",
       "         [146, 184, 232],\n",
       "         [146, 185, 231]],\n",
       " \n",
       "        [[ 16,  23,  31],\n",
       "         [ 19,  28,  41],\n",
       "         [ 25,  40,  59],\n",
       "         ...,\n",
       "         [126, 169, 220],\n",
       "         [132, 173, 224],\n",
       "         [134, 175, 224]],\n",
       " \n",
       "        [[ 16,  23,  30],\n",
       "         [ 19,  28,  41],\n",
       "         [ 23,  41,  61],\n",
       "         ...,\n",
       "         [127, 168, 217],\n",
       "         [118, 162, 216],\n",
       "         [121, 166, 219]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 55,  90, 131],\n",
       "         [ 61, 100, 144],\n",
       "         [ 73, 115, 160],\n",
       "         ...,\n",
       "         [117, 162, 220],\n",
       "         [115, 161, 220],\n",
       "         [114, 159, 220]],\n",
       " \n",
       "        [[ 58,  95, 139],\n",
       "         [ 68, 110, 157],\n",
       "         [ 78, 122, 170],\n",
       "         ...,\n",
       "         [117, 162, 223],\n",
       "         [117, 162, 223],\n",
       "         [112, 156, 219]],\n",
       " \n",
       "        [[ 56,  95, 139],\n",
       "         [ 70, 114, 163],\n",
       "         [ 87, 131, 183],\n",
       "         ...,\n",
       "         [117, 162, 223],\n",
       "         [108, 155, 218],\n",
       "         [115, 160, 223]]], dtype=uint8),\n",
       " array([[[172, 199, 236],\n",
       "         [171, 197, 234],\n",
       "         [170, 199, 234],\n",
       "         ...,\n",
       "         [ 22,  26,  32],\n",
       "         [ 21,  25,  26],\n",
       "         [ 19,  20,  24]],\n",
       " \n",
       "        [[169, 195, 236],\n",
       "         [170, 197, 237],\n",
       "         [164, 193, 235],\n",
       "         ...,\n",
       "         [ 23,  27,  33],\n",
       "         [ 17,  20,  25],\n",
       "         [ 13,  14,  18]],\n",
       " \n",
       "        [[155, 188, 232],\n",
       "         [157, 189, 233],\n",
       "         [154, 183, 228],\n",
       "         ...,\n",
       "         [ 17,  20,  30],\n",
       "         [ 18,  21,  27],\n",
       "         [ 15,  18,  22]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 169, 229],\n",
       "         [124, 168, 227],\n",
       "         [130, 174, 228],\n",
       "         ...,\n",
       "         [ 60,  98, 141],\n",
       "         [ 46,  81, 120],\n",
       "         [ 36,  63,  92]],\n",
       " \n",
       "        [[125, 168, 228],\n",
       "         [123, 166, 224],\n",
       "         [125, 166, 223],\n",
       "         ...,\n",
       "         [ 61,  98, 141],\n",
       "         [ 50,  85, 122],\n",
       "         [ 39,  67, 100]],\n",
       " \n",
       "        [[122, 166, 225],\n",
       "         [123, 167, 224],\n",
       "         [125, 167, 225],\n",
       "         ...,\n",
       "         [ 65, 106, 147],\n",
       "         [ 52,  89, 127],\n",
       "         [ 42,  70, 103]]], dtype=uint8),\n",
       " array([[[145, 186, 225],\n",
       "         [154, 193, 232],\n",
       "         [152, 184, 225],\n",
       "         ...,\n",
       "         [124, 164, 217],\n",
       "         [126, 164, 222],\n",
       "         [126, 164, 222]],\n",
       " \n",
       "        [[150, 188, 228],\n",
       "         [152, 189, 228],\n",
       "         [154, 186, 226],\n",
       "         ...,\n",
       "         [120, 159, 213],\n",
       "         [122, 160, 217],\n",
       "         [122, 160, 218]],\n",
       " \n",
       "        [[155, 191, 230],\n",
       "         [154, 187, 226],\n",
       "         [149, 179, 217],\n",
       "         ...,\n",
       "         [117, 155, 210],\n",
       "         [121, 157, 216],\n",
       "         [119, 157, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[175, 206, 245],\n",
       "         [169, 200, 241],\n",
       "         [166, 196, 241],\n",
       "         ...,\n",
       "         [152, 185, 234],\n",
       "         [155, 188, 238],\n",
       "         [154, 188, 242]],\n",
       " \n",
       "        [[176, 207, 246],\n",
       "         [170, 201, 241],\n",
       "         [165, 196, 240],\n",
       "         ...,\n",
       "         [153, 187, 233],\n",
       "         [157, 190, 239],\n",
       "         [157, 191, 243]],\n",
       " \n",
       "        [[177, 208, 247],\n",
       "         [171, 201, 242],\n",
       "         [164, 195, 240],\n",
       "         ...,\n",
       "         [160, 194, 240],\n",
       "         [162, 195, 244],\n",
       "         [160, 193, 243]]], dtype=uint8),\n",
       " array([[[165, 182, 202],\n",
       "         [154, 174, 198],\n",
       "         [153, 174, 201],\n",
       "         ...,\n",
       "         [177, 202, 236],\n",
       "         [178, 203, 236],\n",
       "         [180, 204, 237]],\n",
       " \n",
       "        [[165, 180, 199],\n",
       "         [159, 176, 198],\n",
       "         [153, 174, 202],\n",
       "         ...,\n",
       "         [169, 196, 233],\n",
       "         [172, 199, 235],\n",
       "         [183, 207, 239]],\n",
       " \n",
       "        [[171, 186, 205],\n",
       "         [169, 185, 207],\n",
       "         [147, 168, 198],\n",
       "         ...,\n",
       "         [164, 192, 231],\n",
       "         [162, 189, 230],\n",
       "         [168, 196, 231]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 188, 224],\n",
       "         [152, 188, 224],\n",
       "         [153, 188, 228],\n",
       "         ...,\n",
       "         [151, 187, 226],\n",
       "         [147, 181, 223],\n",
       "         [138, 173, 217]],\n",
       " \n",
       "        [[151, 186, 226],\n",
       "         [156, 190, 226],\n",
       "         [158, 191, 230],\n",
       "         ...,\n",
       "         [147, 181, 223],\n",
       "         [140, 177, 220],\n",
       "         [133, 169, 215]],\n",
       " \n",
       "        [[152, 186, 228],\n",
       "         [158, 191, 230],\n",
       "         [158, 191, 230],\n",
       "         ...,\n",
       "         [141, 176, 221],\n",
       "         [134, 172, 216],\n",
       "         [123, 162, 207]]], dtype=uint8),\n",
       " array([[[172, 196, 237],\n",
       "         [167, 193, 233],\n",
       "         [159, 188, 232],\n",
       "         ...,\n",
       "         [149, 171, 193],\n",
       "         [156, 175, 196],\n",
       "         [164, 181, 200]],\n",
       " \n",
       "        [[167, 192, 229],\n",
       "         [166, 193, 233],\n",
       "         [155, 184, 228],\n",
       "         ...,\n",
       "         [157, 176, 200],\n",
       "         [155, 174, 195],\n",
       "         [162, 179, 198]],\n",
       " \n",
       "        [[162, 188, 231],\n",
       "         [159, 184, 227],\n",
       "         [148, 179, 223],\n",
       "         ...,\n",
       "         [155, 173, 198],\n",
       "         [156, 175, 196],\n",
       "         [160, 177, 196]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[146, 179, 221],\n",
       "         [152, 186, 226],\n",
       "         [154, 186, 222],\n",
       "         ...,\n",
       "         [144, 181, 219],\n",
       "         [142, 179, 220],\n",
       "         [146, 182, 219]],\n",
       " \n",
       "        [[137, 174, 218],\n",
       "         [144, 182, 224],\n",
       "         [144, 180, 221],\n",
       "         ...,\n",
       "         [148, 183, 222],\n",
       "         [143, 180, 223],\n",
       "         [146, 182, 220]],\n",
       " \n",
       "        [[134, 175, 218],\n",
       "         [142, 180, 222],\n",
       "         [145, 182, 226],\n",
       "         ...,\n",
       "         [152, 184, 227],\n",
       "         [150, 181, 224],\n",
       "         [146, 181, 221]]], dtype=uint8),\n",
       " array([[[ 29,  57,  97],\n",
       "         [ 31,  63, 107],\n",
       "         [ 37,  70, 116],\n",
       "         ...,\n",
       "         [ 70, 117, 173],\n",
       "         [ 77, 123, 177],\n",
       "         [ 83, 127, 182]],\n",
       " \n",
       "        [[ 27,  57,  97],\n",
       "         [ 33,  66, 110],\n",
       "         [ 37,  69, 118],\n",
       "         ...,\n",
       "         [ 58, 102, 160],\n",
       "         [ 74, 119, 177],\n",
       "         [ 77, 120, 177]],\n",
       " \n",
       "        [[ 31,  60, 102],\n",
       "         [ 35,  68, 113],\n",
       "         [ 43,  77, 123],\n",
       "         ...,\n",
       "         [ 58, 101, 158],\n",
       "         [ 62, 107, 165],\n",
       "         [ 72, 116, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  81, 133],\n",
       "         [ 47,  86, 138],\n",
       "         [ 51,  89, 141],\n",
       "         ...,\n",
       "         [ 68, 109, 168],\n",
       "         [ 64, 104, 163],\n",
       "         [ 68, 108, 166]],\n",
       " \n",
       "        [[ 41,  80, 132],\n",
       "         [ 47,  86, 139],\n",
       "         [ 52,  91, 143],\n",
       "         ...,\n",
       "         [ 64, 103, 162],\n",
       "         [ 62, 101, 160],\n",
       "         [ 64, 103, 161]],\n",
       " \n",
       "        [[ 43,  82, 134],\n",
       "         [ 49,  88, 141],\n",
       "         [ 53,  93, 145],\n",
       "         ...,\n",
       "         [ 63, 100, 160],\n",
       "         [ 63, 101, 159],\n",
       "         [ 62,  99, 158]]], dtype=uint8),\n",
       " array([[[141, 128, 151],\n",
       "         [135, 122, 144],\n",
       "         [135, 122, 144],\n",
       "         ...,\n",
       "         [ 43,  44,  64],\n",
       "         [ 40,  40,  56],\n",
       "         [ 24,  26,  33]],\n",
       " \n",
       "        [[140, 130, 147],\n",
       "         [138, 128, 145],\n",
       "         [133, 123, 140],\n",
       "         ...,\n",
       "         [ 43,  45,  63],\n",
       "         [ 38,  41,  59],\n",
       "         [ 29,  31,  41]],\n",
       " \n",
       "        [[139, 129, 146],\n",
       "         [131, 122, 139],\n",
       "         [132, 122, 139],\n",
       "         ...,\n",
       "         [ 45,  47,  65],\n",
       "         [ 36,  40,  58],\n",
       "         [ 31,  33,  43]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 63,  61,  91],\n",
       "         [ 54,  52,  81],\n",
       "         [ 55,  54,  80],\n",
       "         ...,\n",
       "         [ 67,  66,  87],\n",
       "         [ 64,  64,  82],\n",
       "         [ 56,  56,  74]],\n",
       " \n",
       "        [[ 65,  63,  93],\n",
       "         [ 55,  53,  82],\n",
       "         [ 54,  53,  79],\n",
       "         ...,\n",
       "         [ 68,  67,  87],\n",
       "         [ 61,  61,  80],\n",
       "         [ 58,  58,  76]],\n",
       " \n",
       "        [[ 65,  63,  93],\n",
       "         [ 57,  55,  84],\n",
       "         [ 54,  53,  79],\n",
       "         ...,\n",
       "         [ 70,  68,  90],\n",
       "         [ 63,  62,  82],\n",
       "         [ 59,  58,  77]]], dtype=uint8),\n",
       " array([[[ 19,  21,  35],\n",
       "         [ 20,  25,  43],\n",
       "         [ 16,  22,  43],\n",
       "         ...,\n",
       "         [181, 168, 220],\n",
       "         [180, 171, 222],\n",
       "         [177, 171, 224]],\n",
       " \n",
       "        [[ 19,  18,  32],\n",
       "         [ 15,  15,  34],\n",
       "         [ 20,  22,  44],\n",
       "         ...,\n",
       "         [181, 168, 220],\n",
       "         [178, 169, 220],\n",
       "         [172, 166, 219]],\n",
       " \n",
       "        [[ 22,  17,  32],\n",
       "         [ 20,  18,  38],\n",
       "         [ 21,  22,  44],\n",
       "         ...,\n",
       "         [176, 164, 216],\n",
       "         [171, 164, 216],\n",
       "         [169, 165, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 50,  56,  78],\n",
       "         [ 59,  66,  95],\n",
       "         [ 49,  60,  93],\n",
       "         ...,\n",
       "         [ 77,  83, 126],\n",
       "         [ 55,  61, 107],\n",
       "         [ 73,  80, 129]],\n",
       " \n",
       "        [[ 57,  65,  89],\n",
       "         [ 66,  77, 105],\n",
       "         [ 62,  75, 109],\n",
       "         ...,\n",
       "         [ 75,  81, 124],\n",
       "         [ 59,  65, 111],\n",
       "         [ 76,  85, 132]],\n",
       " \n",
       "        [[ 57,  66,  91],\n",
       "         [ 64,  73, 106],\n",
       "         [ 62,  75, 112],\n",
       "         ...,\n",
       "         [ 73,  78, 122],\n",
       "         [ 66,  72, 118],\n",
       "         [ 77,  84, 132]]], dtype=uint8),\n",
       " array([[[203, 215, 243],\n",
       "         [202, 214, 242],\n",
       "         [200, 212, 240],\n",
       "         ...,\n",
       "         [133, 156, 188],\n",
       "         [128, 151, 183],\n",
       "         [129, 152, 184]],\n",
       " \n",
       "        [[202, 213, 241],\n",
       "         [201, 212, 240],\n",
       "         [205, 217, 245],\n",
       "         ...,\n",
       "         [131, 154, 186],\n",
       "         [129, 152, 184],\n",
       "         [130, 153, 185]],\n",
       " \n",
       "        [[202, 214, 242],\n",
       "         [199, 211, 239],\n",
       "         [199, 211, 239],\n",
       "         ...,\n",
       "         [131, 155, 187],\n",
       "         [126, 149, 181],\n",
       "         [125, 148, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 194, 227],\n",
       "         [172, 196, 229],\n",
       "         [167, 191, 224],\n",
       "         ...,\n",
       "         [163, 190, 218],\n",
       "         [162, 189, 217],\n",
       "         [159, 185, 213]],\n",
       " \n",
       "        [[170, 193, 225],\n",
       "         [172, 195, 227],\n",
       "         [173, 196, 228],\n",
       "         ...,\n",
       "         [164, 191, 218],\n",
       "         [161, 188, 215],\n",
       "         [157, 184, 211]],\n",
       " \n",
       "        [[170, 193, 225],\n",
       "         [169, 192, 224],\n",
       "         [178, 201, 233],\n",
       "         ...,\n",
       "         [166, 190, 219],\n",
       "         [163, 187, 215],\n",
       "         [158, 182, 210]]], dtype=uint8),\n",
       " array([[[120, 131, 169],\n",
       "         [122, 133, 171],\n",
       "         [125, 137, 173],\n",
       "         ...,\n",
       "         [184, 186, 194],\n",
       "         [185, 188, 192],\n",
       "         [182, 184, 190]],\n",
       " \n",
       "        [[122, 133, 171],\n",
       "         [115, 126, 164],\n",
       "         [122, 134, 170],\n",
       "         ...,\n",
       "         [176, 178, 188],\n",
       "         [184, 187, 192],\n",
       "         [179, 183, 187]],\n",
       " \n",
       "        [[119, 128, 166],\n",
       "         [119, 128, 166],\n",
       "         [120, 131, 169],\n",
       "         ...,\n",
       "         [172, 172, 183],\n",
       "         [176, 178, 184],\n",
       "         [176, 179, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[161, 164, 199],\n",
       "         [160, 163, 198],\n",
       "         [168, 172, 204],\n",
       "         ...,\n",
       "         [142, 156, 188],\n",
       "         [163, 169, 191],\n",
       "         [185, 188, 203]],\n",
       " \n",
       "        [[172, 174, 205],\n",
       "         [171, 173, 204],\n",
       "         [175, 177, 207],\n",
       "         ...,\n",
       "         [149, 158, 191],\n",
       "         [175, 178, 200],\n",
       "         [192, 195, 210]],\n",
       " \n",
       "        [[181, 183, 214],\n",
       "         [172, 174, 205],\n",
       "         [171, 170, 202],\n",
       "         ...,\n",
       "         [151, 159, 191],\n",
       "         [187, 191, 210],\n",
       "         [179, 182, 197]]], dtype=uint8),\n",
       " array([[[ 33,  42,  77],\n",
       "         [ 34,  41,  72],\n",
       "         [ 31,  37,  63],\n",
       "         ...,\n",
       "         [ 81,  92, 119],\n",
       "         [ 79,  90, 116],\n",
       "         [ 72,  82, 109]],\n",
       " \n",
       "        [[ 25,  30,  60],\n",
       "         [ 30,  34,  61],\n",
       "         [ 28,  32,  57],\n",
       "         ...,\n",
       "         [ 97, 115, 143],\n",
       "         [ 93, 110, 139],\n",
       "         [ 86, 104, 133]],\n",
       " \n",
       "        [[ 23,  27,  49],\n",
       "         [ 30,  31,  54],\n",
       "         [ 31,  29,  51],\n",
       "         ...,\n",
       "         [108, 127, 161],\n",
       "         [112, 131, 165],\n",
       "         [110, 129, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 146, 193],\n",
       "         [126, 151, 192],\n",
       "         [118, 143, 179],\n",
       "         ...,\n",
       "         [138, 162, 206],\n",
       "         [142, 166, 210],\n",
       "         [142, 167, 211]],\n",
       " \n",
       "        [[121, 147, 200],\n",
       "         [125, 151, 197],\n",
       "         [127, 153, 190],\n",
       "         ...,\n",
       "         [145, 164, 207],\n",
       "         [145, 169, 211],\n",
       "         [143, 169, 211]],\n",
       " \n",
       "        [[123, 146, 199],\n",
       "         [125, 151, 197],\n",
       "         [127, 156, 194],\n",
       "         ...,\n",
       "         [145, 165, 212],\n",
       "         [150, 170, 217],\n",
       "         [147, 167, 214]]], dtype=uint8),\n",
       " array([[[109, 149, 195],\n",
       "         [127, 159, 203],\n",
       "         [118, 154, 198],\n",
       "         ...,\n",
       "         [100, 127, 164],\n",
       "         [ 36,  57,  76],\n",
       "         [ 51,  71,  86]],\n",
       " \n",
       "        [[113, 150, 195],\n",
       "         [106, 142, 188],\n",
       "         [104, 142, 188],\n",
       "         ...,\n",
       "         [129, 152, 186],\n",
       "         [ 29,  52,  69],\n",
       "         [ 17,  36,  42]],\n",
       " \n",
       "        [[ 91, 129, 178],\n",
       "         [ 81, 117, 161],\n",
       "         [ 88, 127, 176],\n",
       "         ...,\n",
       "         [141, 165, 197],\n",
       "         [ 29,  56,  76],\n",
       "         [  8,  22,  25]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[176, 200, 229],\n",
       "         [182, 204, 232],\n",
       "         [177, 201, 229],\n",
       "         ...,\n",
       "         [200, 214, 233],\n",
       "         [204, 218, 236],\n",
       "         [207, 222, 238]],\n",
       " \n",
       "        [[176, 200, 230],\n",
       "         [177, 201, 230],\n",
       "         [184, 205, 233],\n",
       "         ...,\n",
       "         [199, 213, 232],\n",
       "         [204, 219, 235],\n",
       "         [208, 222, 238]],\n",
       " \n",
       "        [[174, 197, 227],\n",
       "         [176, 199, 228],\n",
       "         [180, 202, 230],\n",
       "         ...,\n",
       "         [202, 216, 235],\n",
       "         [204, 218, 235],\n",
       "         [213, 224, 237]]], dtype=uint8),\n",
       " array([[[219, 226, 235],\n",
       "         [224, 229, 238],\n",
       "         [227, 229, 239],\n",
       "         ...,\n",
       "         [152, 171, 205],\n",
       "         [151, 167, 204],\n",
       "         [149, 162, 200]],\n",
       " \n",
       "        [[222, 228, 235],\n",
       "         [224, 227, 235],\n",
       "         [228, 230, 239],\n",
       "         ...,\n",
       "         [148, 169, 207],\n",
       "         [150, 169, 206],\n",
       "         [145, 164, 201]],\n",
       " \n",
       "        [[227, 230, 238],\n",
       "         [225, 228, 236],\n",
       "         [227, 230, 238],\n",
       "         ...,\n",
       "         [149, 169, 209],\n",
       "         [143, 163, 204],\n",
       "         [145, 165, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[221, 226, 240],\n",
       "         [217, 222, 239],\n",
       "         [209, 216, 235],\n",
       "         ...,\n",
       "         [211, 217, 237],\n",
       "         [203, 211, 234],\n",
       "         [205, 211, 231]],\n",
       " \n",
       "        [[220, 227, 240],\n",
       "         [215, 222, 239],\n",
       "         [208, 215, 234],\n",
       "         ...,\n",
       "         [208, 214, 233],\n",
       "         [206, 215, 236],\n",
       "         [210, 216, 235]],\n",
       " \n",
       "        [[216, 225, 240],\n",
       "         [213, 221, 238],\n",
       "         [211, 219, 239],\n",
       "         ...,\n",
       "         [206, 216, 234],\n",
       "         [212, 219, 236],\n",
       "         [215, 219, 233]]], dtype=uint8),\n",
       " array([[[120, 155, 211],\n",
       "         [120, 155, 211],\n",
       "         [119, 154, 210],\n",
       "         ...,\n",
       "         [155, 172, 210],\n",
       "         [148, 167, 202],\n",
       "         [150, 168, 205]],\n",
       " \n",
       "        [[112, 151, 206],\n",
       "         [110, 148, 203],\n",
       "         [108, 147, 201],\n",
       "         ...,\n",
       "         [157, 174, 212],\n",
       "         [149, 167, 204],\n",
       "         [147, 165, 202]],\n",
       " \n",
       "        [[105, 146, 201],\n",
       "         [102, 143, 197],\n",
       "         [102, 142, 195],\n",
       "         ...,\n",
       "         [156, 173, 210],\n",
       "         [148, 166, 203],\n",
       "         [147, 165, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 164, 221],\n",
       "         [133, 163, 219],\n",
       "         [135, 166, 221],\n",
       "         ...,\n",
       "         [153, 176, 227],\n",
       "         [154, 176, 224],\n",
       "         [158, 177, 224]],\n",
       " \n",
       "        [[137, 166, 221],\n",
       "         [136, 167, 220],\n",
       "         [136, 168, 222],\n",
       "         ...,\n",
       "         [155, 178, 229],\n",
       "         [153, 175, 223],\n",
       "         [157, 177, 224]],\n",
       " \n",
       "        [[141, 170, 221],\n",
       "         [137, 167, 218],\n",
       "         [136, 168, 221],\n",
       "         ...,\n",
       "         [155, 178, 228],\n",
       "         [153, 175, 223],\n",
       "         [158, 177, 225]]], dtype=uint8),\n",
       " array([[[144, 160, 195],\n",
       "         [144, 161, 194],\n",
       "         [141, 157, 194],\n",
       "         ...,\n",
       "         [157, 167, 177],\n",
       "         [164, 174, 183],\n",
       "         [164, 174, 183]],\n",
       " \n",
       "        [[139, 158, 194],\n",
       "         [138, 157, 192],\n",
       "         [138, 157, 192],\n",
       "         ...,\n",
       "         [158, 168, 178],\n",
       "         [169, 180, 188],\n",
       "         [166, 175, 184]],\n",
       " \n",
       "        [[136, 158, 193],\n",
       "         [139, 160, 195],\n",
       "         [141, 160, 196],\n",
       "         ...,\n",
       "         [164, 173, 182],\n",
       "         [172, 181, 190],\n",
       "         [168, 178, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[108, 127, 162],\n",
       "         [116, 133, 166],\n",
       "         [103, 121, 155],\n",
       "         ...,\n",
       "         [147, 157, 178],\n",
       "         [154, 164, 185],\n",
       "         [156, 166, 183]],\n",
       " \n",
       "        [[110, 132, 167],\n",
       "         [111, 131, 166],\n",
       "         [110, 129, 163],\n",
       "         ...,\n",
       "         [147, 158, 180],\n",
       "         [146, 158, 180],\n",
       "         [151, 162, 181]],\n",
       " \n",
       "        [[116, 135, 170],\n",
       "         [115, 132, 168],\n",
       "         [111, 130, 163],\n",
       "         ...,\n",
       "         [144, 156, 180],\n",
       "         [146, 159, 183],\n",
       "         [146, 160, 180]]], dtype=uint8),\n",
       " array([[[199, 217, 238],\n",
       "         [191, 208, 237],\n",
       "         [187, 206, 243],\n",
       "         ...,\n",
       "         [184, 204, 241],\n",
       "         [182, 203, 240],\n",
       "         [182, 203, 239]],\n",
       " \n",
       "        [[202, 220, 240],\n",
       "         [182, 199, 233],\n",
       "         [157, 177, 217],\n",
       "         ...,\n",
       "         [181, 202, 238],\n",
       "         [181, 203, 239],\n",
       "         [181, 203, 239]],\n",
       " \n",
       "        [[174, 192, 217],\n",
       "         [152, 170, 206],\n",
       "         [132, 152, 197],\n",
       "         ...,\n",
       "         [179, 201, 239],\n",
       "         [179, 201, 239],\n",
       "         [179, 202, 239]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[181, 204, 243],\n",
       "         [180, 203, 241],\n",
       "         [181, 204, 242],\n",
       "         ...,\n",
       "         [164, 187, 223],\n",
       "         [164, 187, 223],\n",
       "         [164, 186, 222]],\n",
       " \n",
       "        [[185, 206, 244],\n",
       "         [185, 206, 244],\n",
       "         [184, 205, 243],\n",
       "         ...,\n",
       "         [164, 188, 224],\n",
       "         [164, 188, 224],\n",
       "         [165, 189, 225]],\n",
       " \n",
       "        [[185, 206, 244],\n",
       "         [185, 206, 244],\n",
       "         [185, 206, 244],\n",
       "         ...,\n",
       "         [163, 190, 225],\n",
       "         [162, 189, 225],\n",
       "         [164, 191, 226]]], dtype=uint8),\n",
       " array([[[181, 202, 238],\n",
       "         [182, 201, 238],\n",
       "         [182, 201, 238],\n",
       "         ...,\n",
       "         [187, 203, 232],\n",
       "         [194, 207, 235],\n",
       "         [202, 214, 241]],\n",
       " \n",
       "        [[179, 200, 238],\n",
       "         [180, 200, 237],\n",
       "         [180, 200, 237],\n",
       "         ...,\n",
       "         [181, 199, 233],\n",
       "         [188, 204, 233],\n",
       "         [191, 205, 234]],\n",
       " \n",
       "        [[177, 199, 237],\n",
       "         [178, 200, 235],\n",
       "         [178, 198, 238],\n",
       "         ...,\n",
       "         [162, 185, 224],\n",
       "         [172, 193, 226],\n",
       "         [186, 207, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 179, 226],\n",
       "         [152, 179, 223],\n",
       "         [148, 175, 218],\n",
       "         ...,\n",
       "         [180, 201, 239],\n",
       "         [181, 202, 240],\n",
       "         [182, 202, 240]],\n",
       " \n",
       "        [[154, 181, 226],\n",
       "         [151, 179, 222],\n",
       "         [150, 178, 220],\n",
       "         ...,\n",
       "         [182, 201, 239],\n",
       "         [184, 202, 240],\n",
       "         [181, 201, 239]],\n",
       " \n",
       "        [[157, 185, 222],\n",
       "         [157, 183, 219],\n",
       "         [157, 181, 218],\n",
       "         ...,\n",
       "         [186, 204, 238],\n",
       "         [184, 203, 236],\n",
       "         [183, 202, 236]]], dtype=uint8),\n",
       " array([[[ 96, 121, 170],\n",
       "         [ 88, 116, 166],\n",
       "         [ 98, 127, 181],\n",
       "         ...,\n",
       "         [148, 179, 234],\n",
       "         [146, 177, 232],\n",
       "         [144, 176, 231]],\n",
       " \n",
       "        [[ 92, 117, 165],\n",
       "         [ 92, 119, 170],\n",
       "         [113, 141, 195],\n",
       "         ...,\n",
       "         [152, 183, 238],\n",
       "         [150, 181, 236],\n",
       "         [147, 178, 233]],\n",
       " \n",
       "        [[ 81, 107, 157],\n",
       "         [ 99, 127, 178],\n",
       "         [129, 159, 213],\n",
       "         ...,\n",
       "         [153, 184, 239],\n",
       "         [152, 183, 238],\n",
       "         [148, 179, 234]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 192, 242],\n",
       "         [170, 195, 242],\n",
       "         [171, 196, 241],\n",
       "         ...,\n",
       "         [152, 184, 237],\n",
       "         [146, 180, 234],\n",
       "         [135, 168, 224]],\n",
       " \n",
       "        [[166, 193, 243],\n",
       "         [167, 192, 239],\n",
       "         [171, 195, 241],\n",
       "         ...,\n",
       "         [149, 181, 235],\n",
       "         [141, 174, 231],\n",
       "         [127, 159, 218]],\n",
       " \n",
       "        [[166, 193, 243],\n",
       "         [168, 193, 241],\n",
       "         [171, 195, 241],\n",
       "         ...,\n",
       "         [145, 178, 234],\n",
       "         [139, 171, 230],\n",
       "         [125, 157, 216]]], dtype=uint8),\n",
       " array([[[167, 191, 245],\n",
       "         [168, 192, 246],\n",
       "         [168, 193, 247],\n",
       "         ...,\n",
       "         [ 64,  85, 132],\n",
       "         [ 66,  84, 128],\n",
       "         [ 63,  81, 123]],\n",
       " \n",
       "        [[162, 188, 242],\n",
       "         [163, 189, 243],\n",
       "         [158, 185, 239],\n",
       "         ...,\n",
       "         [ 67,  85, 132],\n",
       "         [ 67,  85, 129],\n",
       "         [ 63,  81, 123]],\n",
       " \n",
       "        [[156, 187, 240],\n",
       "         [154, 185, 238],\n",
       "         [151, 181, 234],\n",
       "         ...,\n",
       "         [ 67,  86, 132],\n",
       "         [ 68,  86, 130],\n",
       "         [ 64,  82, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 69,  88, 132],\n",
       "         [ 76,  97, 148],\n",
       "         [ 81, 101, 158],\n",
       "         ...,\n",
       "         [ 81, 103, 150],\n",
       "         [ 81,  99, 146],\n",
       "         [ 79,  97, 144]],\n",
       " \n",
       "        [[ 65,  87, 129],\n",
       "         [ 75,  93, 145],\n",
       "         [ 79,  99, 155],\n",
       "         ...,\n",
       "         [ 81, 105, 151],\n",
       "         [ 79,  98, 144],\n",
       "         [ 78,  97, 142]],\n",
       " \n",
       "        [[ 61,  83, 125],\n",
       "         [ 69,  88, 139],\n",
       "         [ 76,  98, 150],\n",
       "         ...,\n",
       "         [ 79, 103, 149],\n",
       "         [ 76,  96, 141],\n",
       "         [ 76,  95, 139]]], dtype=uint8),\n",
       " array([[[113, 148, 214],\n",
       "         [118, 153, 217],\n",
       "         [122, 157, 220],\n",
       "         ...,\n",
       "         [135, 164, 214],\n",
       "         [144, 175, 226],\n",
       "         [157, 183, 230]],\n",
       " \n",
       "        [[111, 147, 213],\n",
       "         [115, 150, 217],\n",
       "         [121, 157, 221],\n",
       "         ...,\n",
       "         [142, 170, 223],\n",
       "         [147, 176, 231],\n",
       "         [156, 181, 231]],\n",
       " \n",
       "        [[108, 146, 213],\n",
       "         [113, 150, 218],\n",
       "         [115, 153, 218],\n",
       "         ...,\n",
       "         [142, 169, 224],\n",
       "         [142, 170, 226],\n",
       "         [150, 175, 227]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 197, 228],\n",
       "         [181, 197, 229],\n",
       "         [175, 194, 233],\n",
       "         ...,\n",
       "         [128, 151, 198],\n",
       "         [136, 165, 219],\n",
       "         [166, 191, 233]],\n",
       " \n",
       "        [[181, 195, 227],\n",
       "         [180, 195, 228],\n",
       "         [181, 199, 236],\n",
       "         ...,\n",
       "         [170, 195, 238],\n",
       "         [123, 154, 205],\n",
       "         [156, 182, 225]],\n",
       " \n",
       "        [[174, 191, 226],\n",
       "         [174, 191, 228],\n",
       "         [179, 198, 236],\n",
       "         ...,\n",
       "         [158, 181, 224],\n",
       "         [154, 185, 235],\n",
       "         [142, 168, 211]]], dtype=uint8),\n",
       " array([[[150, 174, 190],\n",
       "         [147, 172, 188],\n",
       "         [143, 168, 189],\n",
       "         ...,\n",
       "         [121, 151, 187],\n",
       "         [126, 157, 187],\n",
       "         [126, 158, 186]],\n",
       " \n",
       "        [[136, 167, 192],\n",
       "         [137, 169, 193],\n",
       "         [132, 160, 184],\n",
       "         ...,\n",
       "         [ 73, 101, 140],\n",
       "         [120, 151, 184],\n",
       "         [126, 158, 187]],\n",
       " \n",
       "        [[149, 177, 198],\n",
       "         [142, 170, 191],\n",
       "         [134, 164, 189],\n",
       "         ...,\n",
       "         [ 57,  85, 126],\n",
       "         [ 73, 102, 139],\n",
       "         [121, 152, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[207, 223, 239],\n",
       "         [210, 226, 242],\n",
       "         [210, 226, 242],\n",
       "         ...,\n",
       "         [189, 204, 223],\n",
       "         [200, 213, 232],\n",
       "         [193, 207, 226]],\n",
       " \n",
       "        [[207, 223, 239],\n",
       "         [210, 226, 242],\n",
       "         [210, 226, 242],\n",
       "         ...,\n",
       "         [196, 208, 227],\n",
       "         [196, 210, 229],\n",
       "         [202, 215, 235]],\n",
       " \n",
       "        [[203, 223, 235],\n",
       "         [210, 226, 238],\n",
       "         [209, 225, 241],\n",
       "         ...,\n",
       "         [207, 215, 233],\n",
       "         [199, 215, 232],\n",
       "         [202, 216, 234]]], dtype=uint8),\n",
       " array([[[ 53,  65,  84],\n",
       "         [ 58,  66,  86],\n",
       "         [ 57,  63,  82],\n",
       "         ...,\n",
       "         [ 87, 102, 135],\n",
       "         [ 97, 114, 147],\n",
       "         [112, 133, 164]],\n",
       " \n",
       "        [[ 57,  69,  88],\n",
       "         [ 60,  67,  87],\n",
       "         [ 60,  66,  85],\n",
       "         ...,\n",
       "         [ 81,  96, 129],\n",
       "         [ 94, 110, 143],\n",
       "         [113, 133, 164]],\n",
       " \n",
       "        [[ 57,  70,  92],\n",
       "         [ 58,  68,  88],\n",
       "         [ 61,  67,  87],\n",
       "         ...,\n",
       "         [ 74,  86, 119],\n",
       "         [ 86, 103, 136],\n",
       "         [112, 131, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[131, 145, 169],\n",
       "         [118, 131, 157],\n",
       "         [ 92, 103, 130],\n",
       "         ...,\n",
       "         [ 36,  37,  55],\n",
       "         [ 37,  39,  57],\n",
       "         [ 38,  42,  60]],\n",
       " \n",
       "        [[135, 148, 173],\n",
       "         [122, 135, 161],\n",
       "         [ 97, 108, 135],\n",
       "         ...,\n",
       "         [ 34,  35,  53],\n",
       "         [ 37,  39,  57],\n",
       "         [ 40,  44,  62]],\n",
       " \n",
       "        [[135, 149, 171],\n",
       "         [124, 137, 162],\n",
       "         [104, 115, 142],\n",
       "         ...,\n",
       "         [ 31,  33,  51],\n",
       "         [ 35,  39,  57],\n",
       "         [ 39,  43,  63]]], dtype=uint8),\n",
       " array([[[114, 127, 153],\n",
       "         [110, 125, 155],\n",
       "         [105, 123, 150],\n",
       "         ...,\n",
       "         [119, 132, 178],\n",
       "         [125, 138, 184],\n",
       "         [127, 140, 186]],\n",
       " \n",
       "        [[114, 127, 153],\n",
       "         [107, 123, 152],\n",
       "         [103, 121, 148],\n",
       "         ...,\n",
       "         [121, 131, 179],\n",
       "         [131, 142, 186],\n",
       "         [121, 132, 178]],\n",
       " \n",
       "        [[105, 118, 145],\n",
       "         [105, 120, 149],\n",
       "         [104, 120, 148],\n",
       "         ...,\n",
       "         [121, 128, 178],\n",
       "         [133, 143, 188],\n",
       "         [129, 138, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 84, 101, 143],\n",
       "         [ 85, 103, 144],\n",
       "         [ 85, 103, 144],\n",
       "         ...,\n",
       "         [ 76,  84, 135],\n",
       "         [122, 131, 165],\n",
       "         [110, 117, 165]],\n",
       " \n",
       "        [[ 82, 100, 145],\n",
       "         [ 85, 104, 149],\n",
       "         [ 87, 105, 150],\n",
       "         ...,\n",
       "         [ 99, 108, 153],\n",
       "         [104, 111, 154],\n",
       "         [111, 118, 168]],\n",
       " \n",
       "        [[ 85, 104, 149],\n",
       "         [ 87, 106, 151],\n",
       "         [ 88, 107, 153],\n",
       "         ...,\n",
       "         [126, 136, 174],\n",
       "         [114, 121, 168],\n",
       "         [106, 116, 168]]], dtype=uint8),\n",
       " array([[[173, 184, 184],\n",
       "         [137, 143, 139],\n",
       "         [ 97,  93,  84],\n",
       "         ...,\n",
       "         [110, 139, 151],\n",
       "         [128, 159, 174],\n",
       "         [135, 171, 189]],\n",
       " \n",
       "        [[ 95, 105, 107],\n",
       "         [ 52,  63,  66],\n",
       "         [110, 115, 119],\n",
       "         ...,\n",
       "         [113, 147, 163],\n",
       "         [125, 158, 176],\n",
       "         [137, 171, 189]],\n",
       " \n",
       "        [[134, 152, 163],\n",
       "         [127, 148, 162],\n",
       "         [113, 134, 152],\n",
       "         ...,\n",
       "         [119, 163, 185],\n",
       "         [118, 161, 180],\n",
       "         [134, 172, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[239, 242, 246],\n",
       "         [244, 245, 248],\n",
       "         [244, 247, 248],\n",
       "         ...,\n",
       "         [241, 243, 244],\n",
       "         [239, 243, 244],\n",
       "         [237, 242, 243]],\n",
       " \n",
       "        [[239, 242, 246],\n",
       "         [241, 243, 245],\n",
       "         [243, 246, 247],\n",
       "         ...,\n",
       "         [241, 243, 244],\n",
       "         [239, 243, 244],\n",
       "         [237, 242, 243]],\n",
       " \n",
       "        [[238, 241, 245],\n",
       "         [242, 244, 247],\n",
       "         [240, 244, 245],\n",
       "         ...,\n",
       "         [240, 243, 244],\n",
       "         [237, 241, 242],\n",
       "         [235, 240, 241]]], dtype=uint8),\n",
       " array([[[ 55,  71, 100],\n",
       "         [ 62,  78, 107],\n",
       "         [ 65,  80, 111],\n",
       "         ...,\n",
       "         [165, 173, 210],\n",
       "         [167, 175, 212],\n",
       "         [167, 175, 212]],\n",
       " \n",
       "        [[ 59,  73, 101],\n",
       "         [ 61,  76, 104],\n",
       "         [ 64,  78, 106],\n",
       "         ...,\n",
       "         [163, 171, 208],\n",
       "         [167, 175, 212],\n",
       "         [167, 175, 212]],\n",
       " \n",
       "        [[ 62,  76, 102],\n",
       "         [ 55,  68,  93],\n",
       "         [ 53,  67,  90],\n",
       "         ...,\n",
       "         [161, 169, 206],\n",
       "         [165, 173, 210],\n",
       "         [166, 174, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73,  85, 120],\n",
       "         [ 88,  99, 137],\n",
       "         [ 97, 106, 149],\n",
       "         ...,\n",
       "         [ 76,  99, 144],\n",
       "         [ 67,  88, 133],\n",
       "         [ 59,  74, 121]],\n",
       " \n",
       "        [[ 71,  83, 117],\n",
       "         [ 85,  97, 133],\n",
       "         [ 98, 107, 149],\n",
       "         ...,\n",
       "         [ 75,  96, 141],\n",
       "         [ 68,  87, 132],\n",
       "         [ 54,  69, 116]],\n",
       " \n",
       "        [[ 69,  82, 115],\n",
       "         [ 84,  96, 132],\n",
       "         [ 99, 107, 148],\n",
       "         ...,\n",
       "         [ 75,  95, 140],\n",
       "         [ 69,  85, 131],\n",
       "         [ 54,  69, 115]]], dtype=uint8),\n",
       " array([[[188, 202, 219],\n",
       "         [201, 213, 228],\n",
       "         [203, 214, 227],\n",
       "         ...,\n",
       "         [210, 221, 234],\n",
       "         [206, 220, 229],\n",
       "         [206, 221, 227]],\n",
       " \n",
       "        [[189, 205, 221],\n",
       "         [198, 211, 226],\n",
       "         [199, 211, 224],\n",
       "         ...,\n",
       "         [208, 221, 237],\n",
       "         [203, 218, 229],\n",
       "         [204, 218, 225]],\n",
       " \n",
       "        [[191, 207, 223],\n",
       "         [196, 211, 225],\n",
       "         [195, 208, 222],\n",
       "         ...,\n",
       "         [204, 219, 235],\n",
       "         [199, 218, 228],\n",
       "         [206, 220, 227]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[204, 216, 226],\n",
       "         [210, 221, 229],\n",
       "         [204, 215, 224],\n",
       "         ...,\n",
       "         [212, 219, 232],\n",
       "         [209, 218, 228],\n",
       "         [207, 220, 228]],\n",
       " \n",
       "        [[201, 213, 223],\n",
       "         [209, 219, 227],\n",
       "         [207, 218, 226],\n",
       "         ...,\n",
       "         [215, 216, 230],\n",
       "         [209, 217, 228],\n",
       "         [208, 221, 229]],\n",
       " \n",
       "        [[202, 215, 225],\n",
       "         [207, 218, 226],\n",
       "         [208, 219, 227],\n",
       "         ...,\n",
       "         [214, 219, 232],\n",
       "         [210, 218, 229],\n",
       "         [208, 221, 229]]], dtype=uint8),\n",
       " array([[[130, 155, 201],\n",
       "         [133, 158, 204],\n",
       "         [141, 160, 207],\n",
       "         ...,\n",
       "         [236, 237, 248],\n",
       "         [237, 237, 255],\n",
       "         [237, 237, 255]],\n",
       " \n",
       "        [[130, 154, 200],\n",
       "         [134, 157, 203],\n",
       "         [141, 159, 206],\n",
       "         ...,\n",
       "         [237, 239, 249],\n",
       "         [239, 237, 255],\n",
       "         [239, 237, 255]],\n",
       " \n",
       "        [[131, 151, 198],\n",
       "         [135, 155, 202],\n",
       "         [141, 159, 206],\n",
       "         ...,\n",
       "         [235, 238, 253],\n",
       "         [238, 237, 255],\n",
       "         [239, 237, 255]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 174, 219],\n",
       "         [156, 175, 220],\n",
       "         [160, 177, 220],\n",
       "         ...,\n",
       "         [164, 178, 222],\n",
       "         [160, 174, 222],\n",
       "         [159, 173, 221]],\n",
       " \n",
       "        [[153, 172, 217],\n",
       "         [157, 176, 220],\n",
       "         [161, 178, 221],\n",
       "         ...,\n",
       "         [171, 182, 226],\n",
       "         [161, 175, 223],\n",
       "         [161, 175, 223]],\n",
       " \n",
       "        [[158, 174, 220],\n",
       "         [162, 179, 223],\n",
       "         [167, 183, 226],\n",
       "         ...,\n",
       "         [173, 184, 228],\n",
       "         [165, 179, 227],\n",
       "         [164, 178, 226]]], dtype=uint8),\n",
       " array([[[170, 206, 235],\n",
       "         [161, 204, 232],\n",
       "         [169, 205, 235],\n",
       "         ...,\n",
       "         [106, 170, 213],\n",
       "         [120, 182, 219],\n",
       "         [119, 183, 215]],\n",
       " \n",
       "        [[167, 207, 235],\n",
       "         [153, 199, 229],\n",
       "         [161, 203, 232],\n",
       "         ...,\n",
       "         [ 99, 161, 207],\n",
       "         [119, 181, 217],\n",
       "         [117, 180, 214]],\n",
       " \n",
       "        [[158, 198, 229],\n",
       "         [153, 198, 229],\n",
       "         [143, 193, 228],\n",
       "         ...,\n",
       "         [102, 163, 208],\n",
       "         [119, 182, 216],\n",
       "         [114, 176, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 181, 217],\n",
       "         [141, 191, 224],\n",
       "         [ 62, 123, 195],\n",
       "         ...,\n",
       "         [112, 173, 216],\n",
       "         [121, 182, 221],\n",
       "         [125, 187, 222]],\n",
       " \n",
       "        [[127, 185, 224],\n",
       "         [139, 191, 226],\n",
       "         [140, 193, 224],\n",
       "         ...,\n",
       "         [116, 175, 222],\n",
       "         [118, 178, 221],\n",
       "         [122, 184, 221]],\n",
       " \n",
       "        [[119, 179, 222],\n",
       "         [136, 193, 227],\n",
       "         [148, 196, 230],\n",
       "         ...,\n",
       "         [112, 172, 219],\n",
       "         [120, 182, 222],\n",
       "         [121, 183, 220]]], dtype=uint8),\n",
       " array([[[ 47,  48,  57],\n",
       "         [ 47,  47,  59],\n",
       "         [ 55,  56,  69],\n",
       "         ...,\n",
       "         [103, 109, 141],\n",
       "         [103, 110, 142],\n",
       "         [108, 115, 148]],\n",
       " \n",
       "        [[ 47,  49,  57],\n",
       "         [ 52,  52,  64],\n",
       "         [ 57,  58,  72],\n",
       "         ...,\n",
       "         [ 94, 102, 132],\n",
       "         [ 97, 104, 134],\n",
       "         [103, 111, 141]],\n",
       " \n",
       "        [[ 48,  49,  59],\n",
       "         [ 55,  56,  69],\n",
       "         [ 57,  60,  75],\n",
       "         ...,\n",
       "         [ 89,  93, 120],\n",
       "         [ 93, 100, 126],\n",
       "         [ 95, 102, 130]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 76,  87, 114],\n",
       "         [ 76,  87, 114],\n",
       "         [ 76,  87, 115],\n",
       "         ...,\n",
       "         [ 69,  79, 109],\n",
       "         [ 65,  75, 105],\n",
       "         [ 67,  78, 106]],\n",
       " \n",
       "        [[ 77,  89, 117],\n",
       "         [ 79,  90, 118],\n",
       "         [ 79,  90, 118],\n",
       "         ...,\n",
       "         [ 65,  75, 105],\n",
       "         [ 64,  74, 104],\n",
       "         [ 63,  74, 102]],\n",
       " \n",
       "        [[ 80,  91, 119],\n",
       "         [ 81,  92, 121],\n",
       "         [ 84,  95, 126],\n",
       "         ...,\n",
       "         [ 66,  74, 104],\n",
       "         [ 63,  71, 101],\n",
       "         [ 61,  70, 100]]], dtype=uint8),\n",
       " array([[[146, 147, 173],\n",
       "         [143, 145, 169],\n",
       "         [146, 148, 172],\n",
       "         ...,\n",
       "         [ 90,  87,  92],\n",
       "         [ 93,  90,  93],\n",
       "         [ 92,  90,  92]],\n",
       " \n",
       "        [[139, 142, 170],\n",
       "         [135, 138, 165],\n",
       "         [134, 137, 162],\n",
       "         ...,\n",
       "         [ 93,  91,  95],\n",
       "         [101,  97, 100],\n",
       "         [100,  96,  98]],\n",
       " \n",
       "        [[136, 139, 167],\n",
       "         [130, 133, 161],\n",
       "         [120, 125, 152],\n",
       "         ...,\n",
       "         [ 93,  89,  94],\n",
       "         [ 89,  86,  88],\n",
       "         [ 93,  90,  92]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[182, 186, 215],\n",
       "         [183, 187, 214],\n",
       "         [184, 186, 212],\n",
       "         ...,\n",
       "         [207, 205, 217],\n",
       "         [209, 209, 221],\n",
       "         [209, 209, 221]],\n",
       " \n",
       "        [[184, 189, 215],\n",
       "         [185, 190, 215],\n",
       "         [183, 185, 209],\n",
       "         ...,\n",
       "         [207, 205, 217],\n",
       "         [208, 208, 220],\n",
       "         [209, 210, 220]],\n",
       " \n",
       "        [[184, 189, 215],\n",
       "         [182, 187, 215],\n",
       "         [183, 188, 213],\n",
       "         ...,\n",
       "         [209, 207, 219],\n",
       "         [211, 209, 221],\n",
       "         [213, 212, 222]]], dtype=uint8),\n",
       " array([[[  5,   7,   7],\n",
       "         [  8,  10,  10],\n",
       "         [ 10,  13,  17],\n",
       "         ...,\n",
       "         [115, 119, 119],\n",
       "         [110, 114, 117],\n",
       "         [110, 115, 118]],\n",
       " \n",
       "        [[  4,   6,   6],\n",
       "         [ 10,  13,  13],\n",
       "         [  9,  13,  17],\n",
       "         ...,\n",
       "         [123, 127, 127],\n",
       "         [106, 109, 114],\n",
       "         [121, 123, 124]],\n",
       " \n",
       "        [[  6,   8,   8],\n",
       "         [  9,  13,  14],\n",
       "         [ 13,  18,  21],\n",
       "         ...,\n",
       "         [105, 110, 112],\n",
       "         [111, 115, 115],\n",
       "         [128, 128, 128]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 30,  35,  40],\n",
       "         [ 34,  38,  43],\n",
       "         [ 30,  36,  42],\n",
       "         ...,\n",
       "         [ 32,  38,  43],\n",
       "         [ 29,  36,  39],\n",
       "         [ 29,  35,  40]],\n",
       " \n",
       "        [[ 33,  39,  44],\n",
       "         [ 32,  39,  44],\n",
       "         [ 33,  39,  46],\n",
       "         ...,\n",
       "         [ 34,  40,  45],\n",
       "         [ 35,  41,  45],\n",
       "         [ 31,  37,  42]],\n",
       " \n",
       "        [[ 31,  34,  41],\n",
       "         [ 37,  42,  49],\n",
       "         [ 32,  38,  43],\n",
       "         ...,\n",
       "         [ 29,  38,  45],\n",
       "         [ 27,  35,  41],\n",
       "         [ 31,  40,  44]]], dtype=uint8),\n",
       " array([[[ 48,  51,  57],\n",
       "         [ 67,  73,  87],\n",
       "         [ 76,  84, 103],\n",
       "         ...,\n",
       "         [152, 163, 183],\n",
       "         [150, 162, 182],\n",
       "         [152, 164, 184]],\n",
       " \n",
       "        [[ 52,  54,  63],\n",
       "         [ 63,  73,  88],\n",
       "         [ 79,  87, 109],\n",
       "         ...,\n",
       "         [154, 165, 185],\n",
       "         [150, 162, 182],\n",
       "         [154, 166, 186]],\n",
       " \n",
       "        [[ 57,  58,  69],\n",
       "         [ 72,  83, 101],\n",
       "         [ 80,  93, 116],\n",
       "         ...,\n",
       "         [147, 162, 181],\n",
       "         [148, 159, 181],\n",
       "         [145, 158, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93, 106, 139],\n",
       "         [ 97, 109, 142],\n",
       "         [ 92, 105, 137],\n",
       "         ...,\n",
       "         [ 98, 110, 139],\n",
       "         [100, 114, 142],\n",
       "         [101, 114, 140]],\n",
       " \n",
       "        [[ 96, 108, 142],\n",
       "         [100, 112, 145],\n",
       "         [ 97, 110, 142],\n",
       "         ...,\n",
       "         [102, 114, 142],\n",
       "         [101, 113, 141],\n",
       "         [ 99, 114, 140]],\n",
       " \n",
       "        [[ 88, 100, 134],\n",
       "         [ 90, 102, 136],\n",
       "         [ 97, 112, 144],\n",
       "         ...,\n",
       "         [102, 113, 143],\n",
       "         [100, 112, 141],\n",
       "         [100, 113, 139]]], dtype=uint8),\n",
       " array([[[118, 129, 137],\n",
       "         [118, 129, 136],\n",
       "         [113, 126, 132],\n",
       "         ...,\n",
       "         [110, 124, 136],\n",
       "         [101, 116, 128],\n",
       "         [104, 117, 125]],\n",
       " \n",
       "        [[121, 131, 138],\n",
       "         [122, 131, 135],\n",
       "         [115, 126, 131],\n",
       "         ...,\n",
       "         [112, 128, 140],\n",
       "         [103, 121, 132],\n",
       "         [111, 126, 136]],\n",
       " \n",
       "        [[118, 127, 131],\n",
       "         [116, 123, 126],\n",
       "         [115, 124, 128],\n",
       "         ...,\n",
       "         [114, 130, 142],\n",
       "         [108, 126, 137],\n",
       "         [112, 128, 137]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 61,  74,  90],\n",
       "         [ 60,  71,  85],\n",
       "         [ 53,  63,  73],\n",
       "         ...,\n",
       "         [106, 117, 131],\n",
       "         [ 93, 106, 120],\n",
       "         [100, 113, 129]],\n",
       " \n",
       "        [[ 60,  72,  90],\n",
       "         [ 51,  62,  79],\n",
       "         [ 48,  57,  71],\n",
       "         ...,\n",
       "         [102, 113, 127],\n",
       "         [ 94, 107, 123],\n",
       "         [ 95, 107, 124]],\n",
       " \n",
       "        [[ 65,  76,  96],\n",
       "         [ 55,  65,  83],\n",
       "         [ 52,  62,  79],\n",
       "         ...,\n",
       "         [101, 112, 126],\n",
       "         [ 95, 106, 122],\n",
       "         [ 91, 103, 121]]], dtype=uint8),\n",
       " array([[[25, 34, 42],\n",
       "         [26, 36, 43],\n",
       "         [23, 34, 41],\n",
       "         ...,\n",
       "         [29, 35, 43],\n",
       "         [28, 35, 40],\n",
       "         [26, 32, 35]],\n",
       " \n",
       "        [[23, 32, 41],\n",
       "         [23, 34, 40],\n",
       "         [22, 32, 40],\n",
       "         ...,\n",
       "         [26, 35, 45],\n",
       "         [28, 36, 44],\n",
       "         [28, 35, 40]],\n",
       " \n",
       "        [[24, 33, 41],\n",
       "         [26, 36, 43],\n",
       "         [21, 31, 38],\n",
       "         ...,\n",
       "         [28, 37, 47],\n",
       "         [30, 38, 48],\n",
       "         [26, 37, 44]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[11, 15, 20],\n",
       "         [10, 14, 19],\n",
       "         [11, 16, 19],\n",
       "         ...,\n",
       "         [36, 38, 43],\n",
       "         [39, 43, 47],\n",
       "         [39, 42, 46]],\n",
       " \n",
       "        [[13, 17, 22],\n",
       "         [12, 15, 21],\n",
       "         [12, 17, 20],\n",
       "         ...,\n",
       "         [35, 38, 43],\n",
       "         [40, 43, 48],\n",
       "         [41, 44, 48]],\n",
       " \n",
       "        [[13, 19, 24],\n",
       "         [12, 16, 21],\n",
       "         [11, 15, 20],\n",
       "         ...,\n",
       "         [36, 39, 44],\n",
       "         [41, 44, 48],\n",
       "         [42, 44, 49]]], dtype=uint8),\n",
       " array([[[ 60,  61,  65],\n",
       "         [ 72,  73,  75],\n",
       "         [ 73,  76,  80],\n",
       "         ...,\n",
       "         [107, 101, 113],\n",
       "         [107, 100, 113],\n",
       "         [104, 102, 112]],\n",
       " \n",
       "        [[ 63,  66,  68],\n",
       "         [ 75,  74,  83],\n",
       "         [ 74,  78,  81],\n",
       "         ...,\n",
       "         [103,  97, 107],\n",
       "         [108,  99, 115],\n",
       "         [102, 100, 110]],\n",
       " \n",
       "        [[ 67,  70,  71],\n",
       "         [ 70,  72,  81],\n",
       "         [ 77,  78,  82],\n",
       "         ...,\n",
       "         [ 94,  92,  99],\n",
       "         [101,  93, 109],\n",
       "         [100,  95, 110]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 105, 115],\n",
       "         [105, 109, 118],\n",
       "         [110, 114, 124],\n",
       "         ...,\n",
       "         [101, 103, 114],\n",
       "         [ 97,  98, 112],\n",
       "         [105, 101, 113]],\n",
       " \n",
       "        [[100, 103, 114],\n",
       "         [102, 110, 118],\n",
       "         [110, 113, 126],\n",
       "         ...,\n",
       "         [107, 107, 120],\n",
       "         [104, 105, 116],\n",
       "         [109, 104, 115]],\n",
       " \n",
       "        [[104, 106, 116],\n",
       "         [108, 111, 124],\n",
       "         [113, 116, 129],\n",
       "         ...,\n",
       "         [108, 108, 121],\n",
       "         [106, 106, 118],\n",
       "         [109, 106, 120]]], dtype=uint8),\n",
       " array([[[ 80, 125, 176],\n",
       "         [ 90, 136, 184],\n",
       "         [ 92, 139, 187],\n",
       "         ...,\n",
       "         [172, 201, 238],\n",
       "         [173, 203, 241],\n",
       "         [164, 197, 236]],\n",
       " \n",
       "        [[ 85, 128, 177],\n",
       "         [ 91, 137, 184],\n",
       "         [ 97, 143, 190],\n",
       "         ...,\n",
       "         [165, 198, 233],\n",
       "         [165, 198, 234],\n",
       "         [166, 199, 238]],\n",
       " \n",
       "        [[ 89, 129, 175],\n",
       "         [ 98, 141, 184],\n",
       "         [101, 145, 189],\n",
       "         ...,\n",
       "         [163, 197, 234],\n",
       "         [159, 192, 230],\n",
       "         [159, 192, 231]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[131, 171, 214],\n",
       "         [135, 173, 215],\n",
       "         [140, 177, 219],\n",
       "         ...,\n",
       "         [151, 190, 229],\n",
       "         [145, 183, 225],\n",
       "         [141, 181, 224]],\n",
       " \n",
       "        [[126, 165, 211],\n",
       "         [137, 176, 218],\n",
       "         [142, 180, 222],\n",
       "         ...,\n",
       "         [151, 187, 227],\n",
       "         [152, 186, 229],\n",
       "         [149, 187, 229]],\n",
       " \n",
       "        [[123, 165, 211],\n",
       "         [131, 173, 216],\n",
       "         [138, 176, 220],\n",
       "         ...,\n",
       "         [153, 189, 229],\n",
       "         [149, 186, 226],\n",
       "         [142, 180, 223]]], dtype=uint8),\n",
       " array([[[112, 124, 166],\n",
       "         [109, 118, 162],\n",
       "         [100, 111, 156],\n",
       "         ...,\n",
       "         [124, 133, 161],\n",
       "         [124, 133, 160],\n",
       "         [141, 148, 174]],\n",
       " \n",
       "        [[106, 118, 158],\n",
       "         [100, 110, 150],\n",
       "         [100, 112, 153],\n",
       "         ...,\n",
       "         [109, 120, 148],\n",
       "         [114, 122, 150],\n",
       "         [123, 130, 157]],\n",
       " \n",
       "        [[ 95, 106, 146],\n",
       "         [ 99, 110, 148],\n",
       "         [ 98, 111, 148],\n",
       "         ...,\n",
       "         [ 97, 108, 138],\n",
       "         [120, 131, 159],\n",
       "         [130, 138, 164]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 141, 180],\n",
       "         [157, 160, 193],\n",
       "         [140, 142, 187],\n",
       "         ...,\n",
       "         [124, 140, 177],\n",
       "         [123, 139, 177],\n",
       "         [117, 134, 173]],\n",
       " \n",
       "        [[142, 143, 188],\n",
       "         [191, 194, 225],\n",
       "         [154, 154, 198],\n",
       "         ...,\n",
       "         [121, 139, 177],\n",
       "         [121, 137, 178],\n",
       "         [111, 130, 170]],\n",
       " \n",
       "        [[150, 151, 194],\n",
       "         [181, 185, 214],\n",
       "         [167, 169, 205],\n",
       "         ...,\n",
       "         [120, 137, 177],\n",
       "         [116, 132, 175],\n",
       "         [114, 132, 173]]], dtype=uint8),\n",
       " array([[[ 26,  40,  59],\n",
       "         [ 23,  37,  56],\n",
       "         [ 17,  31,  49],\n",
       "         ...,\n",
       "         [ 18,  34,  63],\n",
       "         [ 18,  34,  62],\n",
       "         [ 17,  36,  63]],\n",
       " \n",
       "        [[ 29,  46,  67],\n",
       "         [ 27,  44,  65],\n",
       "         [ 26,  43,  64],\n",
       "         ...,\n",
       "         [ 16,  30,  57],\n",
       "         [ 17,  31,  59],\n",
       "         [ 18,  34,  61]],\n",
       " \n",
       "        [[ 23,  43,  68],\n",
       "         [ 20,  40,  65],\n",
       "         [ 23,  43,  68],\n",
       "         ...,\n",
       "         [ 14,  26,  50],\n",
       "         [ 17,  29,  53],\n",
       "         [ 17,  31,  55]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 135, 187],\n",
       "         [123, 134, 187],\n",
       "         [124, 130, 184],\n",
       "         ...,\n",
       "         [124, 126, 178],\n",
       "         [125, 127, 180],\n",
       "         [122, 125, 176]],\n",
       " \n",
       "        [[127, 141, 199],\n",
       "         [127, 139, 197],\n",
       "         [134, 140, 199],\n",
       "         ...,\n",
       "         [126, 129, 186],\n",
       "         [122, 124, 181],\n",
       "         [113, 117, 170]],\n",
       " \n",
       "        [[134, 146, 205],\n",
       "         [134, 148, 207],\n",
       "         [144, 149, 210],\n",
       "         ...,\n",
       "         [124, 128, 186],\n",
       "         [119, 123, 182],\n",
       "         [113, 118, 173]]], dtype=uint8),\n",
       " array([[[182, 175, 190],\n",
       "         [184, 177, 194],\n",
       "         [183, 176, 194],\n",
       "         ...,\n",
       "         [160, 156, 166],\n",
       "         [135, 134, 141],\n",
       "         [ 54,  56,  56]],\n",
       " \n",
       "        [[173, 169, 188],\n",
       "         [174, 168, 185],\n",
       "         [176, 170, 187],\n",
       "         ...,\n",
       "         [159, 158, 163],\n",
       "         [144, 142, 147],\n",
       "         [ 54,  54,  48]],\n",
       " \n",
       "        [[177, 174, 191],\n",
       "         [167, 165, 180],\n",
       "         [166, 164, 181],\n",
       "         ...,\n",
       "         [159, 158, 160],\n",
       "         [145, 144, 146],\n",
       "         [ 59,  53,  55]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 156, 171],\n",
       "         [146, 142, 154],\n",
       "         [138, 134, 148],\n",
       "         ...,\n",
       "         [152, 150, 156],\n",
       "         [153, 151, 157],\n",
       "         [160, 156, 160]],\n",
       " \n",
       "        [[166, 164, 177],\n",
       "         [152, 149, 164],\n",
       "         [139, 136, 150],\n",
       "         ...,\n",
       "         [156, 154, 158],\n",
       "         [154, 149, 155],\n",
       "         [158, 152, 159]],\n",
       " \n",
       "        [[164, 164, 179],\n",
       "         [161, 161, 174],\n",
       "         [146, 146, 159],\n",
       "         ...,\n",
       "         [154, 152, 158],\n",
       "         [160, 159, 162],\n",
       "         [154, 150, 155]]], dtype=uint8),\n",
       " array([[[119, 113, 135],\n",
       "         [115, 115, 136],\n",
       "         [116, 113, 133],\n",
       "         ...,\n",
       "         [ 73,  77,  83],\n",
       "         [ 76,  79,  83],\n",
       "         [ 71,  75,  79]],\n",
       " \n",
       "        [[123, 118, 136],\n",
       "         [111, 108, 131],\n",
       "         [115, 115, 130],\n",
       "         ...,\n",
       "         [ 68,  77,  86],\n",
       "         [ 78,  81,  87],\n",
       "         [ 62,  70,  77]],\n",
       " \n",
       "        [[112, 105, 125],\n",
       "         [116, 115, 132],\n",
       "         [101, 103, 123],\n",
       "         ...,\n",
       "         [ 66,  70,  79],\n",
       "         [ 72,  75,  84],\n",
       "         [ 66,  70,  82]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 106, 126],\n",
       "         [ 96,  84, 103],\n",
       "         [ 81,  73,  95],\n",
       "         ...,\n",
       "         [ 72,  73,  80],\n",
       "         [ 64,  69,  78],\n",
       "         [ 65,  70,  82]],\n",
       " \n",
       "        [[128, 118, 139],\n",
       "         [113, 104, 120],\n",
       "         [ 73,  72,  91],\n",
       "         ...,\n",
       "         [ 64,  66,  78],\n",
       "         [ 68,  72,  88],\n",
       "         [ 69,  73,  75]],\n",
       " \n",
       "        [[125, 113, 134],\n",
       "         [114, 106, 121],\n",
       "         [ 90,  87, 108],\n",
       "         ...,\n",
       "         [ 66,  69,  77],\n",
       "         [ 64,  69,  84],\n",
       "         [ 73,  75,  80]]], dtype=uint8),\n",
       " array([[[ 58,  61,  69],\n",
       "         [ 59,  64,  74],\n",
       "         [ 63,  66,  81],\n",
       "         ...,\n",
       "         [ 68,  79, 107],\n",
       "         [ 69,  77, 107],\n",
       "         [ 70,  79, 109]],\n",
       " \n",
       "        [[ 60,  63,  73],\n",
       "         [ 60,  65,  76],\n",
       "         [ 62,  67,  81],\n",
       "         ...,\n",
       "         [ 64,  70,  97],\n",
       "         [ 63,  73, 101],\n",
       "         [ 67,  77, 106]],\n",
       " \n",
       "        [[ 58,  63,  73],\n",
       "         [ 61,  67,  79],\n",
       "         [ 61,  67,  82],\n",
       "         ...,\n",
       "         [ 62,  68,  92],\n",
       "         [ 63,  68,  96],\n",
       "         [ 62,  70,  97]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  73,  92],\n",
       "         [ 63,  70,  89],\n",
       "         [ 61,  68,  87],\n",
       "         ...,\n",
       "         [ 48,  58,  88],\n",
       "         [ 47,  57,  87],\n",
       "         [ 50,  60,  89]],\n",
       " \n",
       "        [[ 64,  71,  90],\n",
       "         [ 63,  71,  90],\n",
       "         [ 60,  68,  89],\n",
       "         ...,\n",
       "         [ 49,  60,  90],\n",
       "         [ 52,  62,  92],\n",
       "         [ 52,  62,  92]],\n",
       " \n",
       "        [[ 67,  74,  93],\n",
       "         [ 64,  73,  91],\n",
       "         [ 61,  68,  91],\n",
       "         ...,\n",
       "         [ 53,  64,  95],\n",
       "         [ 52,  62,  92],\n",
       "         [ 51,  62,  92]]], dtype=uint8),\n",
       " array([[[114, 121, 148],\n",
       "         [116, 122, 149],\n",
       "         [123, 125, 151],\n",
       "         ...,\n",
       "         [145, 140, 154],\n",
       "         [116, 109, 112],\n",
       "         [111, 106, 106]],\n",
       " \n",
       "        [[112, 119, 146],\n",
       "         [112, 118, 145],\n",
       "         [111, 115, 140],\n",
       "         ...,\n",
       "         [165, 164, 175],\n",
       "         [119, 114, 116],\n",
       "         [110, 102, 102]],\n",
       " \n",
       "        [[107, 111, 139],\n",
       "         [102, 106, 134],\n",
       "         [105, 109, 134],\n",
       "         ...,\n",
       "         [180, 178, 190],\n",
       "         [138, 134, 141],\n",
       "         [106, 100, 101]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[184, 186, 208],\n",
       "         [187, 184, 206],\n",
       "         [187, 185, 205],\n",
       "         ...,\n",
       "         [207, 206, 216],\n",
       "         [208, 207, 217],\n",
       "         [208, 207, 217]],\n",
       " \n",
       "        [[184, 186, 209],\n",
       "         [188, 188, 208],\n",
       "         [192, 191, 211],\n",
       "         ...,\n",
       "         [214, 210, 221],\n",
       "         [212, 208, 220],\n",
       "         [210, 208, 219]],\n",
       " \n",
       "        [[188, 190, 215],\n",
       "         [193, 193, 213],\n",
       "         [192, 191, 209],\n",
       "         ...,\n",
       "         [215, 211, 223],\n",
       "         [215, 211, 221],\n",
       "         [213, 211, 221]]], dtype=uint8),\n",
       " array([[[ 59,  58,  66],\n",
       "         [ 58,  62,  71],\n",
       "         [ 61,  67,  80],\n",
       "         ...,\n",
       "         [ 69,  80, 110],\n",
       "         [ 73,  83, 113],\n",
       "         [ 75,  85, 115]],\n",
       " \n",
       "        [[ 57,  58,  68],\n",
       "         [ 63,  66,  76],\n",
       "         [ 62,  67,  82],\n",
       "         ...,\n",
       "         [ 68,  78, 109],\n",
       "         [ 68,  78, 108],\n",
       "         [ 71,  80, 113]],\n",
       " \n",
       "        [[ 60,  62,  72],\n",
       "         [ 62,  66,  79],\n",
       "         [ 61,  67,  81],\n",
       "         ...,\n",
       "         [ 62,  72, 100],\n",
       "         [ 65,  76, 104],\n",
       "         [ 72,  80, 110]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 69,  75,  94],\n",
       "         [ 65,  72,  91],\n",
       "         [ 63,  70,  89],\n",
       "         ...,\n",
       "         [ 49,  61,  91],\n",
       "         [ 53,  64,  94],\n",
       "         [ 51,  63,  93]],\n",
       " \n",
       "        [[ 68,  75,  94],\n",
       "         [ 65,  72,  91],\n",
       "         [ 62,  71,  91],\n",
       "         ...,\n",
       "         [ 52,  63,  93],\n",
       "         [ 52,  63,  93],\n",
       "         [ 55,  65,  95]],\n",
       " \n",
       "        [[ 70,  78,  97],\n",
       "         [ 63,  73,  91],\n",
       "         [ 60,  69,  89],\n",
       "         ...,\n",
       "         [ 54,  65,  95],\n",
       "         [ 53,  64,  94],\n",
       "         [ 54,  67,  97]]], dtype=uint8),\n",
       " array([[[ 19,  23,  34],\n",
       "         [ 22,  28,  41],\n",
       "         [ 22,  29,  44],\n",
       "         ...,\n",
       "         [ 64,  71, 101],\n",
       "         [ 64,  71, 104],\n",
       "         [ 69,  76, 110]],\n",
       " \n",
       "        [[ 31,  34,  46],\n",
       "         [ 29,  35,  48],\n",
       "         [ 30,  34,  50],\n",
       "         ...,\n",
       "         [ 70,  74, 105],\n",
       "         [ 70,  75, 105],\n",
       "         [ 71,  78, 111]],\n",
       " \n",
       "        [[ 23,  30,  42],\n",
       "         [ 31,  35,  51],\n",
       "         [ 27,  30,  48],\n",
       "         ...,\n",
       "         [ 70,  74, 102],\n",
       "         [ 70,  74, 103],\n",
       "         [ 73,  78, 109]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 25,  34,  55],\n",
       "         [ 27,  35,  56],\n",
       "         [ 21,  31,  53],\n",
       "         ...,\n",
       "         [ 21,  27,  56],\n",
       "         [ 29,  34,  66],\n",
       "         [ 29,  34,  67]],\n",
       " \n",
       "        [[ 26,  36,  60],\n",
       "         [ 23,  30,  55],\n",
       "         [ 24,  33,  59],\n",
       "         ...,\n",
       "         [ 24,  32,  62],\n",
       "         [ 24,  31,  64],\n",
       "         [ 24,  31,  64]],\n",
       " \n",
       "        [[ 24,  34,  60],\n",
       "         [ 29,  36,  62],\n",
       "         [ 23,  30,  57],\n",
       "         ...,\n",
       "         [ 21,  31,  61],\n",
       "         [ 21,  30,  63],\n",
       "         [ 22,  29,  62]]], dtype=uint8),\n",
       " array([[[ 84,  93, 130],\n",
       "         [ 86,  96, 130],\n",
       "         [ 86,  96, 130],\n",
       "         ...,\n",
       "         [ 40,  44,  48],\n",
       "         [ 41,  45,  46],\n",
       "         [ 47,  51,  52]],\n",
       " \n",
       "        [[ 85,  95, 131],\n",
       "         [ 89,  99, 133],\n",
       "         [ 88,  99, 133],\n",
       "         ...,\n",
       "         [ 34,  38,  44],\n",
       "         [ 48,  51,  55],\n",
       "         [ 46,  50,  51]],\n",
       " \n",
       "        [[ 91, 100, 137],\n",
       "         [ 89,  99, 133],\n",
       "         [ 88,  99, 131],\n",
       "         ...,\n",
       "         [ 43,  48,  53],\n",
       "         [ 42,  45,  49],\n",
       "         [ 45,  48,  51]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  95, 126],\n",
       "         [ 75,  94, 125],\n",
       "         [ 73,  90, 120],\n",
       "         ...,\n",
       "         [ 75,  86, 108],\n",
       "         [ 83,  94, 117],\n",
       "         [ 89, 100, 122]],\n",
       " \n",
       "        [[ 75,  95, 126],\n",
       "         [ 80,  98, 129],\n",
       "         [ 76,  93, 124],\n",
       "         ...,\n",
       "         [ 73,  84, 106],\n",
       "         [ 82,  94, 116],\n",
       "         [ 88,  99, 121]],\n",
       " \n",
       "        [[ 72,  92, 125],\n",
       "         [ 79,  97, 128],\n",
       "         [ 75,  95, 126],\n",
       "         ...,\n",
       "         [ 75,  86, 108],\n",
       "         [ 79,  90, 112],\n",
       "         [ 81,  92, 114]]], dtype=uint8),\n",
       " array([[[ 58,  61,  74],\n",
       "         [ 57,  60,  76],\n",
       "         [ 68,  73,  88],\n",
       "         ...,\n",
       "         [124, 134, 169],\n",
       "         [121, 130, 166],\n",
       "         [120, 132, 169]],\n",
       " \n",
       "        [[ 62,  65,  78],\n",
       "         [ 66,  70,  85],\n",
       "         [ 66,  71,  86],\n",
       "         ...,\n",
       "         [127, 136, 172],\n",
       "         [127, 136, 172],\n",
       "         [125, 137, 173]],\n",
       " \n",
       "        [[ 59,  62,  77],\n",
       "         [ 61,  65,  80],\n",
       "         [ 69,  74,  88],\n",
       "         ...,\n",
       "         [128, 139, 171],\n",
       "         [128, 139, 172],\n",
       "         [128, 138, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  83, 107],\n",
       "         [ 76,  83, 108],\n",
       "         [ 73,  80, 105],\n",
       "         ...,\n",
       "         [ 75,  84, 119],\n",
       "         [ 74,  84, 118],\n",
       "         [ 78,  87, 123]],\n",
       " \n",
       "        [[ 77,  87, 112],\n",
       "         [ 76,  85, 113],\n",
       "         [ 78,  87, 114],\n",
       "         ...,\n",
       "         [ 77,  87, 121],\n",
       "         [ 77,  87, 121],\n",
       "         [ 80,  88, 126]],\n",
       " \n",
       "        [[ 80,  90, 118],\n",
       "         [ 78,  88, 116],\n",
       "         [ 79,  90, 118],\n",
       "         ...,\n",
       "         [ 76,  88, 122],\n",
       "         [ 79,  89, 123],\n",
       "         [ 82,  90, 127]]], dtype=uint8),\n",
       " array([[[ 25,  33,  53],\n",
       "         [ 35,  46,  68],\n",
       "         [ 27,  42,  65],\n",
       "         ...,\n",
       "         [ 51,  96, 140],\n",
       "         [ 73, 123, 169],\n",
       "         [ 65, 120, 166]],\n",
       " \n",
       "        [[ 23,  31,  48],\n",
       "         [ 27,  38,  58],\n",
       "         [ 24,  39,  62],\n",
       "         ...,\n",
       "         [ 53,  96, 140],\n",
       "         [ 72, 121, 166],\n",
       "         [ 62, 116, 163]],\n",
       " \n",
       "        [[ 23,  27,  41],\n",
       "         [ 24,  31,  49],\n",
       "         [ 22,  36,  59],\n",
       "         ...,\n",
       "         [ 53,  93, 138],\n",
       "         [ 61, 106, 153],\n",
       "         [ 59, 110, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 27,  35,  63],\n",
       "         [ 29,  38,  72],\n",
       "         [ 34,  43,  81],\n",
       "         ...,\n",
       "         [ 48,  83, 136],\n",
       "         [ 49,  82, 132],\n",
       "         [ 50,  81, 132]],\n",
       " \n",
       "        [[ 22,  30,  59],\n",
       "         [ 29,  38,  69],\n",
       "         [ 29,  40,  75],\n",
       "         ...,\n",
       "         [ 45,  84, 136],\n",
       "         [ 50,  85, 135],\n",
       "         [ 51,  82, 133]],\n",
       " \n",
       "        [[ 23,  31,  60],\n",
       "         [ 27,  38,  68],\n",
       "         [ 27,  39,  73],\n",
       "         ...,\n",
       "         [ 47,  87, 139],\n",
       "         [ 55,  92, 142],\n",
       "         [ 52,  84, 134]]], dtype=uint8),\n",
       " array([[[138, 148, 182],\n",
       "         [138, 148, 182],\n",
       "         [140, 151, 183],\n",
       "         ...,\n",
       "         [ 84,  92, 104],\n",
       "         [ 67,  74,  81],\n",
       "         [ 62,  66,  71]],\n",
       " \n",
       "        [[138, 147, 180],\n",
       "         [140, 149, 182],\n",
       "         [137, 147, 177],\n",
       "         ...,\n",
       "         [ 86,  93, 107],\n",
       "         [ 73,  79,  88],\n",
       "         [ 61,  65,  70]],\n",
       " \n",
       "        [[141, 150, 181],\n",
       "         [140, 149, 180],\n",
       "         [138, 147, 177],\n",
       "         ...,\n",
       "         [ 89,  97, 113],\n",
       "         [ 75,  82,  91],\n",
       "         [ 60,  64,  69]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 90, 105, 144],\n",
       "         [ 85,  99, 137],\n",
       "         [ 84,  96, 133],\n",
       "         ...,\n",
       "         [103, 116, 139],\n",
       "         [108, 120, 144],\n",
       "         [114, 127, 150]],\n",
       " \n",
       "        [[ 91, 109, 147],\n",
       "         [ 86, 105, 143],\n",
       "         [ 83, 101, 139],\n",
       "         ...,\n",
       "         [109, 120, 147],\n",
       "         [109, 120, 146],\n",
       "         [113, 124, 148]],\n",
       " \n",
       "        [[ 94, 113, 153],\n",
       "         [ 91, 111, 150],\n",
       "         [ 94, 110, 151],\n",
       "         ...,\n",
       "         [108, 119, 147],\n",
       "         [111, 122, 149],\n",
       "         [112, 123, 148]]], dtype=uint8),\n",
       " array([[[122, 130, 159],\n",
       "         [135, 143, 172],\n",
       "         [147, 152, 181],\n",
       "         ...,\n",
       "         [115, 121, 148],\n",
       "         [119, 130, 156],\n",
       "         [131, 139, 165]],\n",
       " \n",
       "        [[127, 135, 164],\n",
       "         [140, 148, 177],\n",
       "         [146, 153, 181],\n",
       "         ...,\n",
       "         [ 99, 107, 134],\n",
       "         [102, 111, 138],\n",
       "         [113, 124, 150]],\n",
       " \n",
       "        [[134, 139, 170],\n",
       "         [140, 149, 178],\n",
       "         [146, 152, 180],\n",
       "         ...,\n",
       "         [ 80,  86, 112],\n",
       "         [ 93, 100, 127],\n",
       "         [101, 109, 138]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 122, 141],\n",
       "         [125, 123, 141],\n",
       "         [129, 126, 145],\n",
       "         ...,\n",
       "         [102, 108, 141],\n",
       "         [104, 109, 145],\n",
       "         [130, 134, 161]],\n",
       " \n",
       "        [[125, 123, 142],\n",
       "         [132, 130, 149],\n",
       "         [140, 138, 157],\n",
       "         ...,\n",
       "         [101, 104, 142],\n",
       "         [111, 115, 149],\n",
       "         [133, 134, 162]],\n",
       " \n",
       "        [[116, 114, 138],\n",
       "         [136, 135, 153],\n",
       "         [141, 140, 159],\n",
       "         ...,\n",
       "         [120, 122, 157],\n",
       "         [128, 131, 160],\n",
       "         [159, 159, 178]]], dtype=uint8),\n",
       " array([[[  6,  17,   9],\n",
       "         [  6,  18,   6],\n",
       "         [  6,  19,   5],\n",
       "         ...,\n",
       "         [ 42,  78,  98],\n",
       "         [ 48,  82, 103],\n",
       "         [ 50,  86, 106]],\n",
       " \n",
       "        [[  5,  17,   5],\n",
       "         [  6,  18,   7],\n",
       "         [  6,  18,   6],\n",
       "         ...,\n",
       "         [ 45,  82, 105],\n",
       "         [ 47,  83, 108],\n",
       "         [ 54,  89, 115]],\n",
       " \n",
       "        [[  4,  16,   5],\n",
       "         [  8,  20,   9],\n",
       "         [  7,  18,  10],\n",
       "         ...,\n",
       "         [ 51,  86, 114],\n",
       "         [ 47,  83, 108],\n",
       "         [ 48,  83, 112]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 63, 102, 132],\n",
       "         [ 79, 112, 127],\n",
       "         [ 57,  94, 117],\n",
       "         ...,\n",
       "         [ 92, 121, 143],\n",
       "         [ 95, 123, 146],\n",
       "         [ 95, 124, 144]],\n",
       " \n",
       "        [[ 83, 114, 140],\n",
       "         [ 65, 103, 124],\n",
       "         [ 81, 119, 140],\n",
       "         ...,\n",
       "         [ 90, 121, 143],\n",
       "         [ 93, 123, 146],\n",
       "         [110, 135, 150]],\n",
       " \n",
       "        [[ 84, 116, 140],\n",
       "         [ 91, 129, 139],\n",
       "         [ 70, 106, 131],\n",
       "         ...,\n",
       "         [105, 128, 156],\n",
       "         [108, 130, 151],\n",
       "         [ 87, 117, 138]]], dtype=uint8),\n",
       " array([[[148, 154, 179],\n",
       "         [160, 164, 183],\n",
       "         [155, 159, 179],\n",
       "         ...,\n",
       "         [ 66,  57,  53],\n",
       "         [ 69,  59,  58],\n",
       "         [ 59,  50,  48]],\n",
       " \n",
       "        [[147, 151, 181],\n",
       "         [157, 159, 178],\n",
       "         [160, 162, 180],\n",
       "         ...,\n",
       "         [ 67,  59,  57],\n",
       "         [ 64,  57,  54],\n",
       "         [ 71,  60,  60]],\n",
       " \n",
       "        [[136, 144, 171],\n",
       "         [140, 145, 171],\n",
       "         [149, 152, 170],\n",
       "         ...,\n",
       "         [ 64,  58,  58],\n",
       "         [ 54,  49,  48],\n",
       "         [ 59,  52,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[153, 154, 180],\n",
       "         [141, 149, 176],\n",
       "         [154, 161, 180],\n",
       "         ...,\n",
       "         [170, 170, 179],\n",
       "         [138, 139, 155],\n",
       "         [102, 106, 130]],\n",
       " \n",
       "        [[176, 175, 195],\n",
       "         [144, 149, 178],\n",
       "         [155, 161, 182],\n",
       "         ...,\n",
       "         [188, 183, 184],\n",
       "         [198, 191, 192],\n",
       "         [150, 150, 163]],\n",
       " \n",
       "        [[194, 193, 211],\n",
       "         [153, 158, 183],\n",
       "         [156, 163, 182],\n",
       "         ...,\n",
       "         [107, 111, 139],\n",
       "         [141, 146, 167],\n",
       "         [159, 164, 181]]], dtype=uint8),\n",
       " array([[[ 62,  64,  73],\n",
       "         [ 63,  63,  75],\n",
       "         [ 68,  70,  82],\n",
       "         ...,\n",
       "         [ 97, 107, 138],\n",
       "         [ 98, 107, 141],\n",
       "         [101, 110, 143]],\n",
       " \n",
       "        [[ 61,  62,  71],\n",
       "         [ 67,  67,  79],\n",
       "         [ 69,  70,  83],\n",
       "         ...,\n",
       "         [ 92,  99, 129],\n",
       "         [ 94, 103, 134],\n",
       "         [ 99, 106, 139]],\n",
       " \n",
       "        [[ 63,  63,  74],\n",
       "         [ 67,  68,  82],\n",
       "         [ 73,  74,  87],\n",
       "         ...,\n",
       "         [ 88,  92, 121],\n",
       "         [ 91,  98, 128],\n",
       "         [ 91, 100, 133]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71,  81, 105],\n",
       "         [ 70,  79, 103],\n",
       "         [ 68,  79, 107],\n",
       "         ...,\n",
       "         [ 62,  71,  98],\n",
       "         [ 64,  71, 101],\n",
       "         [ 66,  74, 103]],\n",
       " \n",
       "        [[ 72,  81, 108],\n",
       "         [ 71,  83, 109],\n",
       "         [ 70,  82, 110],\n",
       "         ...,\n",
       "         [ 63,  71,  99],\n",
       "         [ 62,  70,  99],\n",
       "         [ 63,  71, 100]],\n",
       " \n",
       "        [[ 74,  84, 111],\n",
       "         [ 73,  84, 112],\n",
       "         [ 73,  85, 113],\n",
       "         ...,\n",
       "         [ 63,  72,  99],\n",
       "         [ 61,  69,  98],\n",
       "         [ 62,  70,  99]]], dtype=uint8),\n",
       " array([[[147, 149, 177],\n",
       "         [153, 154, 181],\n",
       "         [158, 156, 183],\n",
       "         ...,\n",
       "         [118, 117, 119],\n",
       "         [112, 110, 113],\n",
       "         [114, 111, 113]],\n",
       " \n",
       "        [[142, 146, 174],\n",
       "         [143, 144, 174],\n",
       "         [143, 145, 175],\n",
       "         ...,\n",
       "         [130, 126, 132],\n",
       "         [119, 116, 121],\n",
       "         [114, 111, 114]],\n",
       " \n",
       "        [[137, 139, 169],\n",
       "         [136, 138, 168],\n",
       "         [137, 141, 169],\n",
       "         ...,\n",
       "         [128, 127, 132],\n",
       "         [117, 116, 120],\n",
       "         [114, 113, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[155, 178, 195],\n",
       "         [143, 155, 173],\n",
       "         [126, 129, 152],\n",
       "         ...,\n",
       "         [149, 147, 164],\n",
       "         [157, 155, 170],\n",
       "         [168, 165, 179]],\n",
       " \n",
       "        [[113, 122, 151],\n",
       "         [118, 122, 150],\n",
       "         [141, 140, 163],\n",
       "         ...,\n",
       "         [154, 151, 167],\n",
       "         [163, 160, 174],\n",
       "         [172, 170, 182]],\n",
       " \n",
       "        [[122, 128, 161],\n",
       "         [127, 131, 159],\n",
       "         [134, 134, 163],\n",
       "         ...,\n",
       "         [154, 149, 168],\n",
       "         [165, 162, 178],\n",
       "         [185, 183, 196]]], dtype=uint8),\n",
       " array([[[151, 153, 182],\n",
       "         [150, 152, 185],\n",
       "         [151, 155, 185],\n",
       "         ...,\n",
       "         [ 86,  83,  87],\n",
       "         [ 86,  82,  87],\n",
       "         [ 84,  80,  84]],\n",
       " \n",
       "        [[146, 151, 182],\n",
       "         [145, 149, 181],\n",
       "         [140, 146, 179],\n",
       "         ...,\n",
       "         [ 91,  86,  91],\n",
       "         [ 85,  81,  86],\n",
       "         [ 84,  78,  84]],\n",
       " \n",
       "        [[131, 140, 174],\n",
       "         [132, 141, 175],\n",
       "         [135, 144, 177],\n",
       "         ...,\n",
       "         [ 90,  85,  93],\n",
       "         [ 83,  77,  81],\n",
       "         [ 81,  78,  80]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[145, 155, 193],\n",
       "         [112, 126, 169],\n",
       "         [134, 150, 186],\n",
       "         ...,\n",
       "         [169, 173, 194],\n",
       "         [169, 173, 197],\n",
       "         [168, 175, 198]],\n",
       " \n",
       "        [[169, 180, 214],\n",
       "         [125, 138, 181],\n",
       "         [129, 145, 183],\n",
       "         ...,\n",
       "         [174, 178, 198],\n",
       "         [169, 175, 196],\n",
       "         [155, 160, 181]],\n",
       " \n",
       "        [[184, 194, 222],\n",
       "         [165, 174, 211],\n",
       "         [111, 127, 169],\n",
       "         ...,\n",
       "         [177, 181, 200],\n",
       "         [164, 166, 187],\n",
       "         [143, 147, 172]]], dtype=uint8),\n",
       " array([[[ 36,  36,  45],\n",
       "         [ 38,  37,  45],\n",
       "         [ 33,  34,  44],\n",
       "         ...,\n",
       "         [191, 198, 225],\n",
       "         [193, 197, 225],\n",
       "         [196, 199, 225]],\n",
       " \n",
       "        [[ 35,  34,  44],\n",
       "         [ 34,  33,  43],\n",
       "         [ 36,  37,  47],\n",
       "         ...,\n",
       "         [186, 192, 220],\n",
       "         [185, 192, 221],\n",
       "         [188, 194, 223]],\n",
       " \n",
       "        [[ 35,  36,  46],\n",
       "         [ 37,  38,  48],\n",
       "         [ 34,  36,  46],\n",
       "         ...,\n",
       "         [182, 190, 219],\n",
       "         [181, 189, 218],\n",
       "         [175, 184, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[109, 124, 161],\n",
       "         [112, 131, 167],\n",
       "         [121, 139, 177],\n",
       "         ...,\n",
       "         [127, 142, 188],\n",
       "         [133, 150, 196],\n",
       "         [136, 152, 198]],\n",
       " \n",
       "        [[111, 127, 164],\n",
       "         [118, 134, 174],\n",
       "         [120, 139, 178],\n",
       "         ...,\n",
       "         [128, 146, 191],\n",
       "         [132, 152, 197],\n",
       "         [133, 150, 196]],\n",
       " \n",
       "        [[111, 125, 165],\n",
       "         [119, 136, 178],\n",
       "         [120, 138, 179],\n",
       "         ...,\n",
       "         [129, 145, 191],\n",
       "         [132, 148, 194],\n",
       "         [130, 147, 195]]], dtype=uint8),\n",
       " array([[[104, 111, 115],\n",
       "         [102, 111, 118],\n",
       "         [105, 112, 121],\n",
       "         ...,\n",
       "         [ 78,  88,  97],\n",
       "         [ 80,  89, 100],\n",
       "         [ 87,  96, 105]],\n",
       " \n",
       "        [[ 98, 106, 114],\n",
       "         [ 99, 107, 116],\n",
       "         [100, 108, 118],\n",
       "         ...,\n",
       "         [ 82,  91, 103],\n",
       "         [ 78,  87,  99],\n",
       "         [ 86,  95, 106]],\n",
       " \n",
       "        [[ 99, 105, 115],\n",
       "         [ 97, 103, 112],\n",
       "         [ 99, 105, 114],\n",
       "         ...,\n",
       "         [ 86,  95, 105],\n",
       "         [ 81,  90, 101],\n",
       "         [ 84,  93, 106]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[168, 175, 183],\n",
       "         [163, 172, 182],\n",
       "         [164, 173, 183],\n",
       "         ...,\n",
       "         [178, 180, 182],\n",
       "         [179, 178, 180],\n",
       "         [178, 178, 180]],\n",
       " \n",
       "        [[172, 177, 185],\n",
       "         [166, 172, 183],\n",
       "         [167, 173, 184],\n",
       "         ...,\n",
       "         [182, 181, 183],\n",
       "         [186, 186, 186],\n",
       "         [182, 181, 183]],\n",
       " \n",
       "        [[179, 183, 190],\n",
       "         [183, 186, 190],\n",
       "         [177, 180, 187],\n",
       "         ...,\n",
       "         [186, 186, 187],\n",
       "         [189, 189, 189],\n",
       "         [187, 187, 187]]], dtype=uint8),\n",
       " array([[[ 80,  83,  83],\n",
       "         [ 83,  84,  84],\n",
       "         [ 86,  88,  88],\n",
       "         ...,\n",
       "         [ 88,  86,  87],\n",
       "         [105, 104, 103],\n",
       "         [107, 108, 106]],\n",
       " \n",
       "        [[ 79,  84,  87],\n",
       "         [ 76,  80,  83],\n",
       "         [ 81,  84,  88],\n",
       "         ...,\n",
       "         [ 87,  87,  90],\n",
       "         [ 81,  80,  80],\n",
       "         [101, 103, 102]],\n",
       " \n",
       "        [[ 76,  82,  88],\n",
       "         [ 75,  81,  87],\n",
       "         [ 81,  85,  90],\n",
       "         ...,\n",
       "         [ 97,  98, 101],\n",
       "         [ 91,  92,  93],\n",
       "         [ 75,  76,  77]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 162, 169],\n",
       "         [157, 161, 171],\n",
       "         [166, 169, 177],\n",
       "         ...,\n",
       "         [160, 167, 177],\n",
       "         [146, 156, 167],\n",
       "         [143, 151, 162]],\n",
       " \n",
       "        [[174, 173, 175],\n",
       "         [175, 175, 179],\n",
       "         [171, 173, 180],\n",
       "         ...,\n",
       "         [157, 163, 174],\n",
       "         [148, 156, 169],\n",
       "         [145, 151, 162]],\n",
       " \n",
       "        [[171, 170, 172],\n",
       "         [179, 178, 180],\n",
       "         [187, 185, 186],\n",
       "         ...,\n",
       "         [154, 160, 172],\n",
       "         [151, 157, 168],\n",
       "         [147, 152, 163]]], dtype=uint8),\n",
       " array([[[179, 182, 220],\n",
       "         [180, 183, 221],\n",
       "         [173, 176, 214],\n",
       "         ...,\n",
       "         [111, 129, 165],\n",
       "         [122, 139, 171],\n",
       "         [122, 136, 164]],\n",
       " \n",
       "        [[181, 183, 220],\n",
       "         [174, 176, 214],\n",
       "         [162, 165, 202],\n",
       "         ...,\n",
       "         [105, 122, 158],\n",
       "         [116, 134, 165],\n",
       "         [126, 142, 170]],\n",
       " \n",
       "        [[169, 170, 208],\n",
       "         [168, 169, 207],\n",
       "         [163, 166, 204],\n",
       "         ...,\n",
       "         [ 81,  96, 131],\n",
       "         [113, 130, 161],\n",
       "         [123, 142, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 161, 209],\n",
       "         [144, 158, 204],\n",
       "         [145, 154, 201],\n",
       "         ...,\n",
       "         [144, 162, 199],\n",
       "         [146, 161, 198],\n",
       "         [148, 162, 200]],\n",
       " \n",
       "        [[148, 164, 209],\n",
       "         [152, 165, 209],\n",
       "         [151, 161, 205],\n",
       "         ...,\n",
       "         [145, 161, 199],\n",
       "         [147, 160, 198],\n",
       "         [150, 161, 199]],\n",
       " \n",
       "        [[150, 166, 212],\n",
       "         [155, 169, 212],\n",
       "         [155, 167, 207],\n",
       "         ...,\n",
       "         [145, 160, 199],\n",
       "         [147, 160, 198],\n",
       "         [149, 160, 198]]], dtype=uint8),\n",
       " array([[[ 45,  53,  76],\n",
       "         [ 47,  58,  81],\n",
       "         [ 42,  54,  80],\n",
       "         ...,\n",
       "         [ 48,  56,  81],\n",
       "         [ 50,  57,  81],\n",
       "         [ 53,  62,  85]],\n",
       " \n",
       "        [[ 44,  54,  73],\n",
       "         [ 45,  56,  77],\n",
       "         [ 38,  52,  76],\n",
       "         ...,\n",
       "         [ 45,  55,  79],\n",
       "         [ 49,  56,  81],\n",
       "         [ 45,  52,  77]],\n",
       " \n",
       "        [[ 39,  49,  67],\n",
       "         [ 34,  47,  67],\n",
       "         [ 36,  49,  71],\n",
       "         ...,\n",
       "         [ 46,  53,  78],\n",
       "         [ 45,  52,  77],\n",
       "         [ 47,  54,  79]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  80, 107],\n",
       "         [ 72,  95, 122],\n",
       "         [ 82, 106, 134],\n",
       "         ...,\n",
       "         [101, 123, 141],\n",
       "         [101, 123, 141],\n",
       "         [ 92, 110, 130]],\n",
       " \n",
       "        [[ 55,  73, 103],\n",
       "         [ 66,  87, 115],\n",
       "         [ 76, 102, 131],\n",
       "         ...,\n",
       "         [109, 130, 148],\n",
       "         [105, 127, 145],\n",
       "         [ 98, 115, 136]],\n",
       " \n",
       "        [[ 47,  65,  92],\n",
       "         [ 58,  80, 108],\n",
       "         [ 65,  90, 119],\n",
       "         ...,\n",
       "         [122, 143, 160],\n",
       "         [ 98, 117, 136],\n",
       "         [ 97, 114, 135]]], dtype=uint8),\n",
       " array([[[ 48,  55,  74],\n",
       "         [ 47,  53,  72],\n",
       "         [ 44,  50,  69],\n",
       "         ...,\n",
       "         [ 51,  60,  80],\n",
       "         [ 55,  65,  85],\n",
       "         [ 55,  66,  85]],\n",
       " \n",
       "        [[ 45,  52,  72],\n",
       "         [ 44,  51,  70],\n",
       "         [ 43,  50,  69],\n",
       "         ...,\n",
       "         [ 52,  59,  83],\n",
       "         [ 54,  64,  87],\n",
       "         [ 56,  70,  89]],\n",
       " \n",
       "        [[ 44,  51,  74],\n",
       "         [ 45,  54,  74],\n",
       "         [ 44,  53,  71],\n",
       "         ...,\n",
       "         [ 46,  55,  79],\n",
       "         [ 58,  67,  91],\n",
       "         [ 61,  72,  94]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 196, 205],\n",
       "         [177, 188, 197],\n",
       "         [177, 187, 195],\n",
       "         ...,\n",
       "         [202, 205, 210],\n",
       "         [208, 208, 213],\n",
       "         [210, 211, 215]],\n",
       " \n",
       "        [[191, 200, 209],\n",
       "         [184, 193, 202],\n",
       "         [183, 193, 201],\n",
       "         ...,\n",
       "         [201, 204, 209],\n",
       "         [209, 210, 215],\n",
       "         [214, 215, 219]],\n",
       " \n",
       "        [[196, 204, 212],\n",
       "         [201, 209, 217],\n",
       "         [191, 200, 209],\n",
       "         ...,\n",
       "         [204, 208, 212],\n",
       "         [211, 212, 218],\n",
       "         [208, 211, 215]]], dtype=uint8),\n",
       " array([[[ 50,  54,  68],\n",
       "         [ 51,  57,  71],\n",
       "         [ 59,  68,  82],\n",
       "         ...,\n",
       "         [149, 174, 200],\n",
       "         [155, 179, 205],\n",
       "         [154, 178, 204]],\n",
       " \n",
       "        [[ 48,  50,  64],\n",
       "         [ 40,  42,  56],\n",
       "         [ 53,  57,  71],\n",
       "         ...,\n",
       "         [152, 177, 204],\n",
       "         [151, 175, 202],\n",
       "         [152, 177, 204]],\n",
       " \n",
       "        [[ 46,  48,  61],\n",
       "         [ 45,  48,  59],\n",
       "         [ 48,  51,  64],\n",
       "         ...,\n",
       "         [141, 168, 196],\n",
       "         [146, 171, 199],\n",
       "         [148, 173, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  62, 105],\n",
       "         [ 59,  70, 108],\n",
       "         [ 61,  78, 116],\n",
       "         ...,\n",
       "         [113, 138, 164],\n",
       "         [101, 127, 152],\n",
       "         [104, 129, 155]],\n",
       " \n",
       "        [[ 48,  51,  93],\n",
       "         [ 51,  68, 106],\n",
       "         [ 57,  76, 114],\n",
       "         ...,\n",
       "         [114, 140, 166],\n",
       "         [112, 137, 163],\n",
       "         [107, 131, 157]],\n",
       " \n",
       "        [[ 66,  65, 123],\n",
       "         [ 56,  67, 108],\n",
       "         [ 52,  67, 104],\n",
       "         ...,\n",
       "         [115, 140, 166],\n",
       "         [114, 139, 165],\n",
       "         [117, 140, 166]]], dtype=uint8),\n",
       " array([[[129, 130, 154],\n",
       "         [126, 128, 152],\n",
       "         [125, 127, 151],\n",
       "         ...,\n",
       "         [ 76,  81, 120],\n",
       "         [ 75,  75, 115],\n",
       "         [ 75,  75, 116]],\n",
       " \n",
       "        [[122, 124, 149],\n",
       "         [120, 121, 147],\n",
       "         [119, 121, 146],\n",
       "         ...,\n",
       "         [101, 107, 142],\n",
       "         [ 95,  96, 134],\n",
       "         [ 87,  88, 126]],\n",
       " \n",
       "        [[111, 112, 140],\n",
       "         [112, 113, 141],\n",
       "         [112, 113, 141],\n",
       "         ...,\n",
       "         [118, 125, 155],\n",
       "         [113, 115, 149],\n",
       "         [ 99, 101, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 151, 169],\n",
       "         [147, 149, 167],\n",
       "         [148, 150, 168],\n",
       "         ...,\n",
       "         [185, 184, 209],\n",
       "         [183, 187, 206],\n",
       "         [183, 187, 206]],\n",
       " \n",
       "        [[152, 154, 172],\n",
       "         [150, 152, 170],\n",
       "         [151, 153, 171],\n",
       "         ...,\n",
       "         [188, 189, 210],\n",
       "         [187, 190, 210],\n",
       "         [184, 188, 207]],\n",
       " \n",
       "        [[154, 157, 175],\n",
       "         [153, 156, 174],\n",
       "         [151, 154, 172],\n",
       "         ...,\n",
       "         [188, 189, 210],\n",
       "         [185, 187, 209],\n",
       "         [185, 187, 209]]], dtype=uint8),\n",
       " array([[[133, 162, 192],\n",
       "         [133, 160, 190],\n",
       "         [140, 167, 195],\n",
       "         ...,\n",
       "         [143, 165, 187],\n",
       "         [134, 158, 180],\n",
       "         [137, 161, 183]],\n",
       " \n",
       "        [[135, 161, 191],\n",
       "         [135, 161, 191],\n",
       "         [141, 168, 196],\n",
       "         ...,\n",
       "         [133, 150, 170],\n",
       "         [129, 143, 163],\n",
       "         [127, 145, 164]],\n",
       " \n",
       "        [[131, 159, 189],\n",
       "         [128, 162, 193],\n",
       "         [138, 167, 195],\n",
       "         ...,\n",
       "         [110, 123, 141],\n",
       "         [107, 121, 139],\n",
       "         [107, 125, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 132, 159],\n",
       "         [111, 133, 159],\n",
       "         [113, 134, 160],\n",
       "         ...,\n",
       "         [155, 185, 210],\n",
       "         [152, 183, 208],\n",
       "         [152, 185, 211]],\n",
       " \n",
       "        [[112, 139, 169],\n",
       "         [112, 140, 166],\n",
       "         [120, 146, 172],\n",
       "         ...,\n",
       "         [156, 186, 212],\n",
       "         [153, 185, 211],\n",
       "         [157, 190, 216]],\n",
       " \n",
       "        [[120, 148, 175],\n",
       "         [120, 149, 175],\n",
       "         [124, 152, 178],\n",
       "         ...,\n",
       "         [153, 183, 210],\n",
       "         [161, 191, 218],\n",
       "         [157, 190, 216]]], dtype=uint8),\n",
       " array([[[134, 169, 210],\n",
       "         [121, 151, 192],\n",
       "         [141, 175, 211],\n",
       "         ...,\n",
       "         [ 79, 109, 152],\n",
       "         [ 87, 112, 149],\n",
       "         [ 37,  62, 105]],\n",
       " \n",
       "        [[144, 179, 218],\n",
       "         [128, 162, 204],\n",
       "         [128, 160, 197],\n",
       "         ...,\n",
       "         [ 84, 122, 171],\n",
       "         [ 93, 131, 175],\n",
       "         [ 71, 107, 154]],\n",
       " \n",
       "        [[114, 150, 195],\n",
       "         [115, 146, 188],\n",
       "         [101, 135, 181],\n",
       "         ...,\n",
       "         [ 92, 135, 179],\n",
       "         [ 91, 132, 177],\n",
       "         [ 91, 132, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[122, 150, 196],\n",
       "         [106, 136, 189],\n",
       "         [143, 166, 210],\n",
       "         ...,\n",
       "         [ 90, 132, 183],\n",
       "         [ 86, 132, 185],\n",
       "         [ 85, 129, 183]],\n",
       " \n",
       "        [[154, 177, 216],\n",
       "         [125, 148, 192],\n",
       "         [100, 133, 190],\n",
       "         ...,\n",
       "         [ 89, 131, 183],\n",
       "         [ 78, 123, 179],\n",
       "         [ 82, 125, 182]],\n",
       " \n",
       "        [[159, 178, 211],\n",
       "         [152, 166, 200],\n",
       "         [159, 184, 217],\n",
       "         ...,\n",
       "         [100, 142, 189],\n",
       "         [ 91, 136, 189],\n",
       "         [ 83, 130, 183]]], dtype=uint8),\n",
       " array([[[ 15,  27,  45],\n",
       "         [ 37,  53,  78],\n",
       "         [ 48,  65,  97],\n",
       "         ...,\n",
       "         [139, 167, 208],\n",
       "         [142, 169, 206],\n",
       "         [163, 190, 227]],\n",
       " \n",
       "        [[ 24,  38,  60],\n",
       "         [ 32,  48,  74],\n",
       "         [ 44,  65, 102],\n",
       "         ...,\n",
       "         [152, 180, 215],\n",
       "         [140, 168, 204],\n",
       "         [149, 178, 214]],\n",
       " \n",
       "        [[ 23,  39,  68],\n",
       "         [ 42,  67, 103],\n",
       "         [ 52,  78, 121],\n",
       "         ...,\n",
       "         [107, 133, 176],\n",
       "         [150, 180, 216],\n",
       "         [138, 167, 207]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72, 109, 163],\n",
       "         [ 73, 113, 168],\n",
       "         [ 73, 117, 175],\n",
       "         ...,\n",
       "         [175, 200, 228],\n",
       "         [190, 209, 233],\n",
       "         [165, 196, 232]],\n",
       " \n",
       "        [[ 76, 112, 166],\n",
       "         [ 74, 115, 170],\n",
       "         [ 75, 120, 175],\n",
       "         ...,\n",
       "         [175, 199, 226],\n",
       "         [170, 197, 229],\n",
       "         [164, 195, 230]],\n",
       " \n",
       "        [[ 65, 101, 156],\n",
       "         [ 70, 109, 166],\n",
       "         [ 76, 118, 175],\n",
       "         ...,\n",
       "         [187, 210, 233],\n",
       "         [170, 198, 233],\n",
       "         [164, 195, 234]]], dtype=uint8),\n",
       " array([[[ 66,  67,  64],\n",
       "         [ 60,  64,  64],\n",
       "         [ 62,  61,  60],\n",
       "         ...,\n",
       "         [ 78,  75,  65],\n",
       "         [ 80,  73,  60],\n",
       "         [ 84,  73,  64]],\n",
       " \n",
       "        [[ 66,  72,  69],\n",
       "         [ 66,  67,  65],\n",
       "         [ 65,  62,  57],\n",
       "         ...,\n",
       "         [ 85,  82,  75],\n",
       "         [ 90,  86,  78],\n",
       "         [ 86,  78,  71]],\n",
       " \n",
       "        [[ 63,  69,  62],\n",
       "         [ 67,  69,  63],\n",
       "         [ 53,  49,  49],\n",
       "         ...,\n",
       "         [ 86,  83,  78],\n",
       "         [ 89,  82,  75],\n",
       "         [ 82,  80,  69]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74,  91, 104],\n",
       "         [ 82,  95, 107],\n",
       "         [ 83,  93, 103],\n",
       "         ...,\n",
       "         [ 96, 100, 107],\n",
       "         [ 99, 102, 109],\n",
       "         [103, 104, 114]],\n",
       " \n",
       "        [[ 68,  83,  98],\n",
       "         [ 76,  89, 104],\n",
       "         [ 83,  96, 103],\n",
       "         ...,\n",
       "         [ 98, 106, 118],\n",
       "         [101, 108, 117],\n",
       "         [100, 104, 117]],\n",
       " \n",
       "        [[ 74,  81,  93],\n",
       "         [ 76,  88,  98],\n",
       "         [ 81,  93, 105],\n",
       "         ...,\n",
       "         [103, 111, 124],\n",
       "         [108, 114, 123],\n",
       "         [104, 113, 121]]], dtype=uint8),\n",
       " array([[[104,  96,  80],\n",
       "         [100,  98,  75],\n",
       "         [ 97, 100,  81],\n",
       "         ...,\n",
       "         [ 78,  84,  75],\n",
       "         [ 75,  86,  80],\n",
       "         [ 83,  90,  81]],\n",
       " \n",
       "        [[108, 105,  89],\n",
       "         [111, 113,  96],\n",
       "         [104, 107,  92],\n",
       "         ...,\n",
       "         [ 82,  84,  73],\n",
       "         [ 83,  90,  82],\n",
       "         [ 84,  96,  86]],\n",
       " \n",
       "        [[100, 104,  84],\n",
       "         [111, 109,  94],\n",
       "         [106, 110,  98],\n",
       "         ...,\n",
       "         [ 68,  68,  61],\n",
       "         [ 83,  93,  79],\n",
       "         [ 80,  93,  78]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 134, 136],\n",
       "         [121, 132, 131],\n",
       "         [117, 130, 130],\n",
       "         ...,\n",
       "         [102, 122, 125],\n",
       "         [102, 123, 129],\n",
       "         [ 94, 119, 127]],\n",
       " \n",
       "        [[124, 138, 142],\n",
       "         [124, 138, 140],\n",
       "         [118, 135, 141],\n",
       "         ...,\n",
       "         [103, 126, 127],\n",
       "         [ 95, 117, 126],\n",
       "         [ 85, 112, 122]],\n",
       " \n",
       "        [[128, 144, 146],\n",
       "         [130, 145, 147],\n",
       "         [125, 141, 147],\n",
       "         ...,\n",
       "         [102, 121, 128],\n",
       "         [ 96, 116, 121],\n",
       "         [ 91, 107, 115]]], dtype=uint8),\n",
       " array([[[ 67,  74, 108],\n",
       "         [ 72,  78, 112],\n",
       "         [ 74,  80, 114],\n",
       "         ...,\n",
       "         [126, 143, 181],\n",
       "         [132, 149, 188],\n",
       "         [135, 150, 189]],\n",
       " \n",
       "        [[ 68,  77, 111],\n",
       "         [ 71,  79, 115],\n",
       "         [ 75,  83, 120],\n",
       "         ...,\n",
       "         [128, 144, 181],\n",
       "         [132, 149, 188],\n",
       "         [133, 149, 188]],\n",
       " \n",
       "        [[ 64,  73, 107],\n",
       "         [ 68,  78, 113],\n",
       "         [ 71,  80, 117],\n",
       "         ...,\n",
       "         [125, 141, 178],\n",
       "         [129, 145, 182],\n",
       "         [131, 148, 186]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  59,  87],\n",
       "         [ 62,  64, 100],\n",
       "         [ 65,  72, 111],\n",
       "         ...,\n",
       "         [ 88,  93, 135],\n",
       "         [ 83,  89, 126],\n",
       "         [ 87,  90, 127]],\n",
       " \n",
       "        [[ 57,  61,  89],\n",
       "         [ 62,  65, 102],\n",
       "         [ 64,  71, 110],\n",
       "         ...,\n",
       "         [ 88,  93, 136],\n",
       "         [ 86,  93, 129],\n",
       "         [ 89,  91, 130]],\n",
       " \n",
       "        [[ 55,  59,  87],\n",
       "         [ 65,  70, 104],\n",
       "         [ 62,  70, 108],\n",
       "         ...,\n",
       "         [ 89,  95, 138],\n",
       "         [ 86,  92, 129],\n",
       "         [ 90,  95, 131]]], dtype=uint8),\n",
       " array([[[ 92, 133, 190],\n",
       "         [102, 145, 202],\n",
       "         [106, 152, 208],\n",
       "         ...,\n",
       "         [122, 159, 219],\n",
       "         [121, 161, 220],\n",
       "         [123, 165, 224]],\n",
       " \n",
       "        [[ 89, 135, 189],\n",
       "         [100, 146, 200],\n",
       "         [109, 157, 211],\n",
       "         ...,\n",
       "         [114, 150, 210],\n",
       "         [116, 153, 213],\n",
       "         [116, 156, 215]],\n",
       " \n",
       "        [[ 90, 138, 191],\n",
       "         [ 98, 145, 198],\n",
       "         [115, 162, 215],\n",
       "         ...,\n",
       "         [100, 135, 195],\n",
       "         [102, 137, 198],\n",
       "         [107, 144, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 161, 213],\n",
       "         [119, 166, 218],\n",
       "         [123, 170, 222],\n",
       "         ...,\n",
       "         [111, 148, 208],\n",
       "         [105, 142, 202],\n",
       "         [104, 141, 201]],\n",
       " \n",
       "        [[115, 163, 215],\n",
       "         [122, 170, 222],\n",
       "         [125, 173, 224],\n",
       "         ...,\n",
       "         [108, 144, 204],\n",
       "         [102, 139, 199],\n",
       "         [103, 140, 200]],\n",
       " \n",
       "        [[110, 160, 212],\n",
       "         [118, 168, 221],\n",
       "         [124, 174, 226],\n",
       "         ...,\n",
       "         [104, 141, 201],\n",
       "         [ 99, 136, 197],\n",
       "         [103, 139, 200]]], dtype=uint8),\n",
       " array([[[105, 114, 123],\n",
       "         [110, 118, 125],\n",
       "         [108, 114, 120],\n",
       "         ...,\n",
       "         [189, 193, 183],\n",
       "         [190, 194, 183],\n",
       "         [200, 204, 192]],\n",
       " \n",
       "        [[108, 115, 123],\n",
       "         [110, 118, 124],\n",
       "         [114, 120, 126],\n",
       "         ...,\n",
       "         [196, 201, 186],\n",
       "         [212, 214, 196],\n",
       "         [213, 215, 197]],\n",
       " \n",
       "        [[108, 116, 123],\n",
       "         [114, 122, 127],\n",
       "         [119, 125, 130],\n",
       "         ...,\n",
       "         [193, 198, 184],\n",
       "         [210, 214, 194],\n",
       "         [224, 224, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[139, 148, 161],\n",
       "         [140, 148, 161],\n",
       "         [141, 149, 162],\n",
       "         ...,\n",
       "         [170, 175, 174],\n",
       "         [175, 180, 179],\n",
       "         [178, 180, 180]],\n",
       " \n",
       "        [[142, 151, 164],\n",
       "         [145, 154, 167],\n",
       "         [144, 152, 165],\n",
       "         ...,\n",
       "         [175, 177, 177],\n",
       "         [179, 181, 181],\n",
       "         [183, 185, 185]],\n",
       " \n",
       "        [[147, 156, 168],\n",
       "         [148, 158, 168],\n",
       "         [149, 157, 169],\n",
       "         ...,\n",
       "         [176, 178, 178],\n",
       "         [184, 186, 186],\n",
       "         [186, 188, 188]]], dtype=uint8),\n",
       " array([[[ 34,  35,  36],\n",
       "         [ 35,  36,  37],\n",
       "         [ 31,  31,  31],\n",
       "         ...,\n",
       "         [105, 116, 144],\n",
       "         [104, 115, 142],\n",
       "         [103, 115, 142]],\n",
       " \n",
       "        [[ 34,  37,  40],\n",
       "         [ 35,  37,  38],\n",
       "         [ 33,  35,  36],\n",
       "         ...,\n",
       "         [103, 114, 141],\n",
       "         [104, 115, 142],\n",
       "         [108, 119, 146]],\n",
       " \n",
       "        [[ 35,  40,  44],\n",
       "         [ 38,  41,  44],\n",
       "         [ 33,  36,  38],\n",
       "         ...,\n",
       "         [105, 115, 142],\n",
       "         [105, 116, 143],\n",
       "         [107, 118, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 36,  38,  46],\n",
       "         [ 39,  42,  50],\n",
       "         [ 42,  44,  54],\n",
       "         ...,\n",
       "         [ 54,  54,  70],\n",
       "         [ 59,  60,  81],\n",
       "         [ 68,  72,  95]],\n",
       " \n",
       "        [[ 38,  40,  50],\n",
       "         [ 41,  43,  53],\n",
       "         [ 44,  48,  59],\n",
       "         ...,\n",
       "         [ 57,  57,  74],\n",
       "         [ 59,  60,  80],\n",
       "         [ 69,  73,  97]],\n",
       " \n",
       "        [[ 40,  42,  53],\n",
       "         [ 42,  46,  56],\n",
       "         [ 45,  48,  62],\n",
       "         ...,\n",
       "         [ 57,  57,  74],\n",
       "         [ 60,  64,  82],\n",
       "         [ 68,  73,  96]]], dtype=uint8),\n",
       " array([[[183, 154, 170],\n",
       "         [187, 156, 171],\n",
       "         [194, 164, 177],\n",
       "         ...,\n",
       "         [196, 170, 186],\n",
       "         [193, 167, 183],\n",
       "         [190, 164, 181]],\n",
       " \n",
       "        [[180, 151, 166],\n",
       "         [185, 155, 168],\n",
       "         [189, 159, 172],\n",
       "         ...,\n",
       "         [195, 169, 185],\n",
       "         [193, 167, 183],\n",
       "         [192, 166, 183]],\n",
       " \n",
       "        [[178, 149, 164],\n",
       "         [180, 150, 163],\n",
       "         [181, 151, 162],\n",
       "         ...,\n",
       "         [192, 166, 182],\n",
       "         [192, 166, 182],\n",
       "         [188, 162, 178]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[219, 194, 207],\n",
       "         [219, 193, 206],\n",
       "         [219, 193, 206],\n",
       "         ...,\n",
       "         [203, 180, 195],\n",
       "         [202, 178, 195],\n",
       "         [201, 177, 195]],\n",
       " \n",
       "        [[221, 195, 208],\n",
       "         [219, 193, 206],\n",
       "         [220, 194, 207],\n",
       "         ...,\n",
       "         [201, 177, 194],\n",
       "         [198, 175, 192],\n",
       "         [199, 175, 193]],\n",
       " \n",
       "        [[220, 194, 208],\n",
       "         [219, 193, 206],\n",
       "         [220, 194, 207],\n",
       "         ...,\n",
       "         [201, 177, 195],\n",
       "         [201, 177, 195],\n",
       "         [197, 173, 191]]], dtype=uint8),\n",
       " array([[[ 42,  44,  63],\n",
       "         [ 43,  44,  63],\n",
       "         [ 43,  45,  63],\n",
       "         ...,\n",
       "         [138, 140, 150],\n",
       "         [134, 138, 145],\n",
       "         [130, 134, 142]],\n",
       " \n",
       "        [[ 42,  46,  65],\n",
       "         [ 44,  46,  66],\n",
       "         [ 43,  46,  62],\n",
       "         ...,\n",
       "         [137, 141, 156],\n",
       "         [137, 140, 150],\n",
       "         [134, 139, 148]],\n",
       " \n",
       "        [[ 44,  45,  65],\n",
       "         [ 46,  48,  68],\n",
       "         [ 44,  46,  62],\n",
       "         ...,\n",
       "         [129, 137, 155],\n",
       "         [134, 137, 152],\n",
       "         [133, 137, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 135, 161],\n",
       "         [137, 146, 163],\n",
       "         [132, 142, 159],\n",
       "         ...,\n",
       "         [196, 198, 206],\n",
       "         [194, 197, 208],\n",
       "         [178, 185, 202]],\n",
       " \n",
       "        [[123, 138, 165],\n",
       "         [127, 140, 162],\n",
       "         [134, 144, 161],\n",
       "         ...,\n",
       "         [199, 202, 208],\n",
       "         [192, 197, 206],\n",
       "         [181, 188, 204]],\n",
       " \n",
       "        [[133, 147, 173],\n",
       "         [128, 141, 167],\n",
       "         [133, 144, 163],\n",
       "         ...,\n",
       "         [198, 202, 208],\n",
       "         [193, 199, 209],\n",
       "         [182, 190, 204]]], dtype=uint8),\n",
       " array([[[135, 179, 220],\n",
       "         [139, 183, 224],\n",
       "         [142, 186, 227],\n",
       "         ...,\n",
       "         [183, 219, 248],\n",
       "         [185, 220, 244],\n",
       "         [195, 229, 252]],\n",
       " \n",
       "        [[138, 182, 223],\n",
       "         [142, 186, 227],\n",
       "         [144, 188, 229],\n",
       "         ...,\n",
       "         [179, 217, 249],\n",
       "         [177, 215, 240],\n",
       "         [187, 224, 248]],\n",
       " \n",
       "        [[140, 185, 225],\n",
       "         [145, 189, 230],\n",
       "         [145, 189, 230],\n",
       "         ...,\n",
       "         [176, 214, 248],\n",
       "         [175, 216, 243],\n",
       "         [185, 225, 250]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[191, 225, 249],\n",
       "         [190, 224, 248],\n",
       "         [189, 223, 247],\n",
       "         ...,\n",
       "         [209, 240, 255],\n",
       "         [209, 240, 253],\n",
       "         [208, 240, 253]],\n",
       " \n",
       "        [[192, 226, 250],\n",
       "         [191, 225, 249],\n",
       "         [190, 224, 248],\n",
       "         ...,\n",
       "         [208, 239, 254],\n",
       "         [207, 239, 254],\n",
       "         [205, 238, 254]],\n",
       " \n",
       "        [[194, 228, 252],\n",
       "         [194, 228, 252],\n",
       "         [193, 226, 250],\n",
       "         ...,\n",
       "         [205, 238, 253],\n",
       "         [205, 238, 254],\n",
       "         [203, 237, 255]]], dtype=uint8),\n",
       " array([[[133, 142, 159],\n",
       "         [132, 141, 162],\n",
       "         [128, 136, 159],\n",
       "         ...,\n",
       "         [ 55,  60,  86],\n",
       "         [ 53,  59,  84],\n",
       "         [ 51,  58,  87]],\n",
       " \n",
       "        [[133, 140, 157],\n",
       "         [133, 142, 162],\n",
       "         [131, 139, 162],\n",
       "         ...,\n",
       "         [ 54,  61,  87],\n",
       "         [ 54,  60,  88],\n",
       "         [ 50,  59,  88]],\n",
       " \n",
       "        [[133, 141, 158],\n",
       "         [136, 143, 162],\n",
       "         [134, 141, 162],\n",
       "         ...,\n",
       "         [ 52,  60,  89],\n",
       "         [ 49,  58,  87],\n",
       "         [ 52,  61,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[179, 187, 203],\n",
       "         [188, 194, 207],\n",
       "         [196, 202, 209],\n",
       "         ...,\n",
       "         [ 91,  98, 120],\n",
       "         [ 97, 109, 130],\n",
       "         [106, 120, 140]],\n",
       " \n",
       "        [[173, 184, 199],\n",
       "         [186, 194, 207],\n",
       "         [198, 203, 211],\n",
       "         ...,\n",
       "         [109, 116, 141],\n",
       "         [125, 132, 150],\n",
       "         [123, 133, 151]],\n",
       " \n",
       "        [[169, 180, 198],\n",
       "         [182, 190, 204],\n",
       "         [196, 200, 209],\n",
       "         ...,\n",
       "         [122, 135, 153],\n",
       "         [134, 141, 160],\n",
       "         [133, 142, 161]]], dtype=uint8),\n",
       " array([[[ 51,  57,  70],\n",
       "         [ 35,  39,  52],\n",
       "         [ 31,  34,  48],\n",
       "         ...,\n",
       "         [ 67,  67,  79],\n",
       "         [ 67,  68,  77],\n",
       "         [ 72,  74,  85]],\n",
       " \n",
       "        [[ 42,  48,  64],\n",
       "         [ 39,  43,  60],\n",
       "         [ 38,  43,  60],\n",
       "         ...,\n",
       "         [ 69,  70,  83],\n",
       "         [ 65,  66,  77],\n",
       "         [ 68,  68,  81]],\n",
       " \n",
       "        [[ 51,  58,  77],\n",
       "         [ 49,  57,  77],\n",
       "         [ 52,  60,  82],\n",
       "         ...,\n",
       "         [ 63,  67,  81],\n",
       "         [ 66,  68,  82],\n",
       "         [ 79,  81,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  90, 140],\n",
       "         [ 68,  90, 141],\n",
       "         [ 68,  90, 139],\n",
       "         ...,\n",
       "         [ 57,  68, 108],\n",
       "         [ 57,  68, 107],\n",
       "         [ 56,  69, 106]],\n",
       " \n",
       "        [[ 69,  90, 142],\n",
       "         [ 69,  91, 141],\n",
       "         [ 68,  91, 141],\n",
       "         ...,\n",
       "         [ 56,  67, 107],\n",
       "         [ 53,  67, 105],\n",
       "         [ 53,  68, 105]],\n",
       " \n",
       "        [[ 71,  92, 144],\n",
       "         [ 72,  93, 145],\n",
       "         [ 71,  94, 145],\n",
       "         ...,\n",
       "         [ 54,  68, 106],\n",
       "         [ 55,  67, 104],\n",
       "         [ 50,  65, 102]]], dtype=uint8),\n",
       " array([[[ 69,  72,  91],\n",
       "         [ 69,  73,  93],\n",
       "         [ 73,  78, 103],\n",
       "         ...,\n",
       "         [ 53,  60,  86],\n",
       "         [ 53,  61,  84],\n",
       "         [ 52,  58,  80]],\n",
       " \n",
       "        [[ 74,  78, 103],\n",
       "         [ 74,  79, 106],\n",
       "         [ 75,  83, 111],\n",
       "         ...,\n",
       "         [ 60,  69, 100],\n",
       "         [ 53,  62,  90],\n",
       "         [ 54,  63,  89]],\n",
       " \n",
       "        [[ 74,  82, 111],\n",
       "         [ 74,  82, 113],\n",
       "         [ 76,  85, 116],\n",
       "         ...,\n",
       "         [ 62,  70, 104],\n",
       "         [ 61,  70, 103],\n",
       "         [ 62,  72, 101]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  65, 101],\n",
       "         [ 56,  66, 100],\n",
       "         [ 55,  64, 101],\n",
       "         ...,\n",
       "         [ 62,  76, 122],\n",
       "         [ 56,  70, 117],\n",
       "         [ 56,  72, 118]],\n",
       " \n",
       "        [[ 55,  66, 102],\n",
       "         [ 57,  68, 104],\n",
       "         [ 54,  65, 103],\n",
       "         ...,\n",
       "         [ 63,  79, 125],\n",
       "         [ 62,  78, 125],\n",
       "         [ 57,  75, 122]],\n",
       " \n",
       "        [[ 58,  70, 106],\n",
       "         [ 54,  65, 104],\n",
       "         [ 55,  64, 106],\n",
       "         ...,\n",
       "         [ 64,  82, 128],\n",
       "         [ 63,  80, 127],\n",
       "         [ 63,  81, 129]]], dtype=uint8),\n",
       " array([[[ 32,  52,  78],\n",
       "         [ 33,  50,  77],\n",
       "         [ 31,  49,  76],\n",
       "         ...,\n",
       "         [ 26,  35,  44],\n",
       "         [ 32,  40,  56],\n",
       "         [ 40,  47,  64]],\n",
       " \n",
       "        [[ 28,  50,  75],\n",
       "         [ 32,  52,  78],\n",
       "         [ 36,  53,  80],\n",
       "         ...,\n",
       "         [ 21,  27,  33],\n",
       "         [ 30,  37,  47],\n",
       "         [ 37,  44,  55]],\n",
       " \n",
       "        [[ 33,  55,  80],\n",
       "         [ 38,  55,  82],\n",
       "         [ 37,  54,  82],\n",
       "         ...,\n",
       "         [ 14,  19,  20],\n",
       "         [ 18,  23,  25],\n",
       "         [ 24,  30,  31]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 45,  66, 109],\n",
       "         [ 39,  61, 105],\n",
       "         [ 34,  60, 106],\n",
       "         ...,\n",
       "         [ 28,  47,  90],\n",
       "         [ 31,  51,  91],\n",
       "         [ 28,  48,  90]],\n",
       " \n",
       "        [[ 44,  63, 104],\n",
       "         [ 39,  63, 106],\n",
       "         [ 37,  61, 108],\n",
       "         ...,\n",
       "         [ 35,  54, 101],\n",
       "         [ 31,  49,  97],\n",
       "         [ 31,  52,  98]],\n",
       " \n",
       "        [[ 44,  64, 105],\n",
       "         [ 44,  67, 111],\n",
       "         [ 41,  64, 110],\n",
       "         ...,\n",
       "         [ 35,  55, 103],\n",
       "         [ 36,  56, 106],\n",
       "         [ 33,  53, 100]]], dtype=uint8),\n",
       " array([[[ 59,  63,  85],\n",
       "         [ 61,  65,  85],\n",
       "         [ 57,  62,  85],\n",
       "         ...,\n",
       "         [195, 182, 182],\n",
       "         [186, 167, 164],\n",
       "         [166, 146, 143]],\n",
       " \n",
       "        [[ 65,  70,  96],\n",
       "         [ 62,  68,  90],\n",
       "         [ 62,  67,  93],\n",
       "         ...,\n",
       "         [222, 207, 207],\n",
       "         [206, 191, 191],\n",
       "         [179, 163, 162]],\n",
       " \n",
       "        [[ 65,  71,  97],\n",
       "         [ 58,  67,  93],\n",
       "         [ 59,  65,  93],\n",
       "         ...,\n",
       "         [199, 186, 188],\n",
       "         [212, 197, 198],\n",
       "         [211, 195, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 174, 194],\n",
       "         [172, 176, 192],\n",
       "         [177, 179, 192],\n",
       "         ...,\n",
       "         [175, 176, 191],\n",
       "         [187, 184, 197],\n",
       "         [210, 204, 210]],\n",
       " \n",
       "        [[182, 182, 200],\n",
       "         [179, 181, 198],\n",
       "         [186, 185, 198],\n",
       "         ...,\n",
       "         [181, 181, 195],\n",
       "         [190, 189, 200],\n",
       "         [205, 199, 206]],\n",
       " \n",
       "        [[192, 192, 205],\n",
       "         [196, 196, 210],\n",
       "         [200, 199, 209],\n",
       "         ...,\n",
       "         [187, 186, 198],\n",
       "         [194, 192, 203],\n",
       "         [215, 209, 215]]], dtype=uint8),\n",
       " array([[[127, 164, 220],\n",
       "         [129, 164, 220],\n",
       "         [128, 163, 219],\n",
       "         ...,\n",
       "         [107, 155, 199],\n",
       "         [105, 149, 192],\n",
       "         [ 99, 143, 184]],\n",
       " \n",
       "        [[121, 154, 210],\n",
       "         [125, 155, 212],\n",
       "         [121, 152, 207],\n",
       "         ...,\n",
       "         [119, 161, 207],\n",
       "         [111, 153, 198],\n",
       "         [101, 142, 187]],\n",
       " \n",
       "        [[104, 138, 194],\n",
       "         [102, 133, 189],\n",
       "         [104, 134, 188],\n",
       "         ...,\n",
       "         [111, 147, 192],\n",
       "         [116, 153, 197],\n",
       "         [102, 138, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[137, 179, 238],\n",
       "         [140, 183, 240],\n",
       "         [145, 186, 241],\n",
       "         ...,\n",
       "         [135, 183, 231],\n",
       "         [134, 182, 231],\n",
       "         [132, 179, 231]],\n",
       " \n",
       "        [[138, 178, 236],\n",
       "         [141, 181, 239],\n",
       "         [146, 187, 242],\n",
       "         ...,\n",
       "         [140, 188, 236],\n",
       "         [136, 183, 234],\n",
       "         [135, 181, 232]],\n",
       " \n",
       "        [[136, 176, 234],\n",
       "         [140, 180, 237],\n",
       "         [145, 186, 241],\n",
       "         ...,\n",
       "         [140, 188, 236],\n",
       "         [139, 186, 237],\n",
       "         [136, 183, 234]]], dtype=uint8),\n",
       " array([[[ 84,  83,  93],\n",
       "         [ 98,  99, 111],\n",
       "         [108, 107, 124],\n",
       "         ...,\n",
       "         [ 99, 102, 132],\n",
       "         [ 92, 103, 130],\n",
       "         [104, 109, 135]],\n",
       " \n",
       "        [[122, 122, 138],\n",
       "         [124, 125, 141],\n",
       "         [106, 108, 127],\n",
       "         ...,\n",
       "         [ 90,  96, 130],\n",
       "         [ 94, 102, 134],\n",
       "         [ 97, 105, 134]],\n",
       " \n",
       "        [[116, 118, 136],\n",
       "         [118, 122, 140],\n",
       "         [127, 133, 152],\n",
       "         ...,\n",
       "         [ 93, 102, 138],\n",
       "         [ 92, 101, 135],\n",
       "         [ 94, 104, 137]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[140, 153, 179],\n",
       "         [137, 151, 176],\n",
       "         [132, 147, 171],\n",
       "         ...,\n",
       "         [128, 139, 156],\n",
       "         [132, 141, 161],\n",
       "         [128, 138, 161]],\n",
       " \n",
       "        [[145, 160, 185],\n",
       "         [141, 158, 181],\n",
       "         [139, 156, 179],\n",
       "         ...,\n",
       "         [141, 151, 169],\n",
       "         [133, 144, 164],\n",
       "         [129, 141, 163]],\n",
       " \n",
       "        [[150, 169, 191],\n",
       "         [149, 167, 190],\n",
       "         [146, 167, 188],\n",
       "         ...,\n",
       "         [143, 155, 174],\n",
       "         [135, 148, 169],\n",
       "         [133, 145, 167]]], dtype=uint8),\n",
       " array([[[ 63,  76,  84],\n",
       "         [ 55,  68,  76],\n",
       "         [ 55,  68,  76],\n",
       "         ...,\n",
       "         [ 73,  88,  95],\n",
       "         [ 78,  96, 103],\n",
       "         [ 88, 106, 113]],\n",
       " \n",
       "        [[ 72,  88,  97],\n",
       "         [ 80,  96, 103],\n",
       "         [ 80,  96, 103],\n",
       "         ...,\n",
       "         [ 69,  82,  91],\n",
       "         [ 75,  92, 101],\n",
       "         [ 82,  99, 108]],\n",
       " \n",
       "        [[ 90, 106, 112],\n",
       "         [ 87, 103, 110],\n",
       "         [ 86, 102, 109],\n",
       "         ...,\n",
       "         [ 65,  80,  89],\n",
       "         [ 70,  87,  96],\n",
       "         [ 78,  94, 105]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 150, 166],\n",
       "         [123, 143, 157],\n",
       "         [ 76,  85,  95],\n",
       "         ...,\n",
       "         [ 91, 108, 128],\n",
       "         [ 89, 106, 125],\n",
       "         [ 90, 105, 124]],\n",
       " \n",
       "        [[136, 157, 174],\n",
       "         [124, 145, 160],\n",
       "         [125, 147, 162],\n",
       "         ...,\n",
       "         [ 91, 108, 127],\n",
       "         [ 92, 107, 126],\n",
       "         [ 91, 106, 125]],\n",
       " \n",
       "        [[133, 158, 175],\n",
       "         [135, 160, 177],\n",
       "         [137, 161, 179],\n",
       "         ...,\n",
       "         [ 94, 110, 127],\n",
       "         [ 95, 111, 128],\n",
       "         [ 93, 109, 127]]], dtype=uint8),\n",
       " array([[[ 34,  55,  60],\n",
       "         [ 30,  50,  55],\n",
       "         [ 27,  45,  51],\n",
       "         ...,\n",
       "         [ 19,  34,  42],\n",
       "         [ 18,  34,  41],\n",
       "         [ 22,  38,  45]],\n",
       " \n",
       "        [[ 29,  51,  57],\n",
       "         [ 26,  48,  54],\n",
       "         [ 25,  42,  49],\n",
       "         ...,\n",
       "         [ 31,  50,  55],\n",
       "         [ 31,  50,  55],\n",
       "         [ 27,  46,  52]],\n",
       " \n",
       "        [[ 28,  48,  56],\n",
       "         [ 23,  45,  51],\n",
       "         [ 23,  41,  48],\n",
       "         ...,\n",
       "         [ 34,  53,  58],\n",
       "         [ 34,  53,  58],\n",
       "         [ 35,  54,  59]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 36,  52,  69],\n",
       "         [ 34,  52,  69],\n",
       "         [ 36,  54,  71],\n",
       "         ...,\n",
       "         [ 31,  42,  49],\n",
       "         [ 68,  91, 102],\n",
       "         [ 77, 100, 114]],\n",
       " \n",
       "        [[ 37,  53,  70],\n",
       "         [ 38,  54,  71],\n",
       "         [ 36,  53,  70],\n",
       "         ...,\n",
       "         [ 69,  94, 107],\n",
       "         [ 68,  92, 104],\n",
       "         [ 88, 112, 127]],\n",
       " \n",
       "        [[ 38,  54,  70],\n",
       "         [ 39,  56,  69],\n",
       "         [ 39,  56,  69],\n",
       "         ...,\n",
       "         [ 89, 118, 133],\n",
       "         [ 86, 115, 130],\n",
       "         [ 84, 113, 129]]], dtype=uint8),\n",
       " array([[[116, 131, 140],\n",
       "         [121, 137, 148],\n",
       "         [129, 142, 150],\n",
       "         ...,\n",
       "         [149, 150, 162],\n",
       "         [151, 157, 167],\n",
       "         [153, 159, 169]],\n",
       " \n",
       "        [[118, 132, 141],\n",
       "         [122, 134, 144],\n",
       "         [123, 132, 139],\n",
       "         ...,\n",
       "         [148, 153, 162],\n",
       "         [156, 162, 170],\n",
       "         [153, 159, 169]],\n",
       " \n",
       "        [[114, 129, 136],\n",
       "         [119, 131, 138],\n",
       "         [ 87,  87,  90],\n",
       "         ...,\n",
       "         [141, 148, 155],\n",
       "         [147, 155, 162],\n",
       "         [147, 156, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 147, 164],\n",
       "         [137, 147, 163],\n",
       "         [143, 151, 162],\n",
       "         ...,\n",
       "         [133, 143, 160],\n",
       "         [145, 156, 173],\n",
       "         [149, 159, 177]],\n",
       " \n",
       "        [[130, 143, 161],\n",
       "         [137, 149, 167],\n",
       "         [135, 147, 166],\n",
       "         ...,\n",
       "         [135, 146, 164],\n",
       "         [138, 151, 168],\n",
       "         [147, 157, 175]],\n",
       " \n",
       "        [[129, 142, 158],\n",
       "         [133, 146, 164],\n",
       "         [136, 147, 166],\n",
       "         ...,\n",
       "         [141, 150, 167],\n",
       "         [141, 151, 169],\n",
       "         [145, 154, 173]]], dtype=uint8),\n",
       " array([[[111, 129, 141],\n",
       "         [ 99, 114, 125],\n",
       "         [100, 114, 119],\n",
       "         ...,\n",
       "         [107, 121, 144],\n",
       "         [105, 119, 142],\n",
       "         [106, 119, 142]],\n",
       " \n",
       "        [[105, 123, 133],\n",
       "         [ 97, 112, 120],\n",
       "         [ 88, 102, 109],\n",
       "         ...,\n",
       "         [110, 118, 136],\n",
       "         [117, 125, 144],\n",
       "         [125, 132, 150]],\n",
       " \n",
       "        [[101, 121, 130],\n",
       "         [ 90, 107, 119],\n",
       "         [ 83,  97, 105],\n",
       "         ...,\n",
       "         [104, 109, 125],\n",
       "         [127, 130, 143],\n",
       "         [153, 154, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72,  92, 130],\n",
       "         [ 71,  90, 128],\n",
       "         [ 68,  88, 126],\n",
       "         ...,\n",
       "         [103, 123, 160],\n",
       "         [103, 121, 155],\n",
       "         [108, 120, 152]],\n",
       " \n",
       "        [[ 71,  90, 128],\n",
       "         [ 71,  90, 127],\n",
       "         [ 60,  78, 117],\n",
       "         ...,\n",
       "         [100, 118, 154],\n",
       "         [102, 117, 149],\n",
       "         [107, 116, 144]],\n",
       " \n",
       "        [[ 72,  93, 132],\n",
       "         [ 75,  96, 132],\n",
       "         [ 66,  85, 123],\n",
       "         ...,\n",
       "         [ 97, 114, 147],\n",
       "         [106, 115, 143],\n",
       "         [109, 113, 137]]], dtype=uint8),\n",
       " array([[[ 78,  97, 134],\n",
       "         [ 78,  97, 135],\n",
       "         [ 79,  97, 137],\n",
       "         ...,\n",
       "         [ 86, 105, 142],\n",
       "         [ 84, 103, 140],\n",
       "         [ 74,  93, 130]],\n",
       " \n",
       "        [[ 76,  93, 135],\n",
       "         [ 79,  96, 140],\n",
       "         [ 82,  98, 144],\n",
       "         ...,\n",
       "         [ 79, 102, 145],\n",
       "         [ 80, 102, 144],\n",
       "         [ 85, 105, 146]],\n",
       " \n",
       "        [[ 78,  95, 138],\n",
       "         [ 77,  94, 136],\n",
       "         [ 77,  92, 139],\n",
       "         ...,\n",
       "         [ 71,  93, 139],\n",
       "         [ 73,  96, 141],\n",
       "         [ 77,  98, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 117, 169],\n",
       "         [ 99, 120, 173],\n",
       "         [ 98, 119, 171],\n",
       "         ...,\n",
       "         [114, 142, 203],\n",
       "         [111, 139, 200],\n",
       "         [113, 141, 202]],\n",
       " \n",
       "        [[ 93, 115, 167],\n",
       "         [ 96, 116, 172],\n",
       "         [101, 121, 178],\n",
       "         ...,\n",
       "         [114, 142, 203],\n",
       "         [117, 145, 206],\n",
       "         [102, 131, 192]],\n",
       " \n",
       "        [[ 91, 113, 165],\n",
       "         [ 93, 114, 170],\n",
       "         [ 99, 119, 176],\n",
       "         ...,\n",
       "         [113, 139, 199],\n",
       "         [107, 133, 195],\n",
       "         [107, 135, 196]]], dtype=uint8),\n",
       " array([[[ 48,  54,  73],\n",
       "         [ 47,  51,  73],\n",
       "         [ 41,  46,  67],\n",
       "         ...,\n",
       "         [130, 139, 157],\n",
       "         [129, 138, 156],\n",
       "         [130, 140, 156]],\n",
       " \n",
       "        [[ 50,  55,  76],\n",
       "         [ 50,  55,  76],\n",
       "         [ 49,  54,  74],\n",
       "         ...,\n",
       "         [127, 138, 159],\n",
       "         [130, 141, 159],\n",
       "         [131, 140, 159]],\n",
       " \n",
       "        [[ 54,  64,  83],\n",
       "         [ 54,  62,  82],\n",
       "         [ 52,  60,  80],\n",
       "         ...,\n",
       "         [124, 138, 157],\n",
       "         [130, 140, 160],\n",
       "         [131, 141, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[143, 155, 175],\n",
       "         [147, 160, 175],\n",
       "         [151, 160, 175],\n",
       "         ...,\n",
       "         [196, 203, 209],\n",
       "         [180, 190, 204],\n",
       "         [167, 180, 197]],\n",
       " \n",
       "        [[147, 160, 180],\n",
       "         [155, 166, 182],\n",
       "         [162, 171, 184],\n",
       "         ...,\n",
       "         [189, 194, 207],\n",
       "         [177, 186, 200],\n",
       "         [164, 177, 196]],\n",
       " \n",
       "        [[151, 164, 185],\n",
       "         [158, 168, 185],\n",
       "         [165, 176, 188],\n",
       "         ...,\n",
       "         [167, 181, 196],\n",
       "         [165, 178, 195],\n",
       "         [158, 172, 194]]], dtype=uint8),\n",
       " array([[[ 24,  31,  31],\n",
       "         [ 39,  41,  50],\n",
       "         [ 44,  49,  60],\n",
       "         ...,\n",
       "         [153, 149, 155],\n",
       "         [157, 148, 157],\n",
       "         [157, 149, 160]],\n",
       " \n",
       "        [[ 28,  35,  37],\n",
       "         [ 41,  45,  53],\n",
       "         [ 49,  53,  68],\n",
       "         ...,\n",
       "         [140, 140, 152],\n",
       "         [151, 143, 154],\n",
       "         [151, 141, 157]],\n",
       " \n",
       "        [[ 32,  38,  40],\n",
       "         [ 43,  44,  54],\n",
       "         [ 48,  53,  67],\n",
       "         ...,\n",
       "         [131, 128, 144],\n",
       "         [139, 133, 147],\n",
       "         [147, 138, 153]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  78,  95],\n",
       "         [ 74,  83,  99],\n",
       "         [ 77,  87, 103],\n",
       "         ...,\n",
       "         [ 88,  95, 115],\n",
       "         [ 85,  90, 114],\n",
       "         [ 80,  87, 114]],\n",
       " \n",
       "        [[ 73,  82,  99],\n",
       "         [ 73,  85, 102],\n",
       "         [ 79,  88, 105],\n",
       "         ...,\n",
       "         [ 90,  97, 120],\n",
       "         [ 90,  96, 124],\n",
       "         [ 87,  90, 119]],\n",
       " \n",
       "        [[ 69,  84, 100],\n",
       "         [ 78,  88, 103],\n",
       "         [ 86,  93, 111],\n",
       "         ...,\n",
       "         [ 96, 100, 128],\n",
       "         [ 95, 100, 127],\n",
       "         [ 94,  94, 121]]], dtype=uint8),\n",
       " array([[[167, 159, 168],\n",
       "         [170, 161, 173],\n",
       "         [164, 158, 169],\n",
       "         ...,\n",
       "         [ 24,  24,  24],\n",
       "         [ 25,  20,  21],\n",
       "         [ 23,  20,  19]],\n",
       " \n",
       "        [[159, 153, 162],\n",
       "         [159, 152, 165],\n",
       "         [162, 154, 164],\n",
       "         ...,\n",
       "         [ 31,  27,  29],\n",
       "         [ 27,  27,  26],\n",
       "         [ 20,  19,  16]],\n",
       " \n",
       "        [[156, 153, 163],\n",
       "         [154, 148, 161],\n",
       "         [155, 149, 160],\n",
       "         ...,\n",
       "         [ 41,  33,  37],\n",
       "         [ 26,  22,  23],\n",
       "         [ 26,  23,  23]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[156, 150, 175],\n",
       "         [142, 134, 160],\n",
       "         [142, 139, 159],\n",
       "         ...,\n",
       "         [134, 128, 148],\n",
       "         [125, 122, 142],\n",
       "         [114, 116, 133]],\n",
       " \n",
       "        [[156, 149, 176],\n",
       "         [151, 144, 167],\n",
       "         [148, 145, 166],\n",
       "         ...,\n",
       "         [135, 135, 150],\n",
       "         [124, 121, 144],\n",
       "         [115, 115, 132]],\n",
       " \n",
       "        [[155, 147, 176],\n",
       "         [150, 140, 166],\n",
       "         [155, 148, 169],\n",
       "         ...,\n",
       "         [136, 135, 153],\n",
       "         [126, 123, 146],\n",
       "         [116, 115, 135]]], dtype=uint8),\n",
       " array([[[130, 171, 210],\n",
       "         [130, 171, 210],\n",
       "         [128, 169, 208],\n",
       "         ...,\n",
       "         [129, 165, 205],\n",
       "         [122, 159, 198],\n",
       "         [120, 159, 198]],\n",
       " \n",
       "        [[131, 175, 212],\n",
       "         [131, 175, 212],\n",
       "         [130, 174, 211],\n",
       "         ...,\n",
       "         [125, 162, 200],\n",
       "         [121, 159, 197],\n",
       "         [112, 151, 189]],\n",
       " \n",
       "        [[136, 177, 216],\n",
       "         [137, 178, 217],\n",
       "         [133, 174, 213],\n",
       "         ...,\n",
       "         [124, 160, 200],\n",
       "         [120, 158, 196],\n",
       "         [113, 152, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 186, 228],\n",
       "         [144, 186, 228],\n",
       "         [150, 189, 227],\n",
       "         ...,\n",
       "         [148, 185, 219],\n",
       "         [144, 180, 216],\n",
       "         [140, 178, 213]],\n",
       " \n",
       "        [[143, 183, 225],\n",
       "         [148, 186, 229],\n",
       "         [147, 188, 227],\n",
       "         ...,\n",
       "         [148, 185, 219],\n",
       "         [143, 179, 215],\n",
       "         [140, 178, 213]],\n",
       " \n",
       "        [[143, 180, 224],\n",
       "         [148, 185, 229],\n",
       "         [144, 186, 227],\n",
       "         ...,\n",
       "         [148, 185, 219],\n",
       "         [144, 180, 216],\n",
       "         [139, 177, 212]]], dtype=uint8),\n",
       " array([[[156, 177, 209],\n",
       "         [156, 177, 209],\n",
       "         [161, 182, 214],\n",
       "         ...,\n",
       "         [205, 220, 239],\n",
       "         [206, 221, 240],\n",
       "         [205, 221, 238]],\n",
       " \n",
       "        [[154, 175, 207],\n",
       "         [156, 179, 211],\n",
       "         [157, 182, 214],\n",
       "         ...,\n",
       "         [202, 215, 241],\n",
       "         [204, 217, 243],\n",
       "         [200, 219, 240]],\n",
       " \n",
       "        [[157, 178, 210],\n",
       "         [156, 179, 211],\n",
       "         [155, 180, 212],\n",
       "         ...,\n",
       "         [207, 219, 243],\n",
       "         [203, 215, 239],\n",
       "         [202, 219, 240]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 196, 228],\n",
       "         [175, 200, 232],\n",
       "         [175, 200, 232],\n",
       "         ...,\n",
       "         [171, 193, 227],\n",
       "         [168, 190, 226],\n",
       "         [164, 189, 223]],\n",
       " \n",
       "        [[177, 200, 232],\n",
       "         [177, 200, 232],\n",
       "         [180, 203, 235],\n",
       "         ...,\n",
       "         [170, 192, 226],\n",
       "         [169, 191, 227],\n",
       "         [167, 189, 224]],\n",
       " \n",
       "        [[181, 202, 234],\n",
       "         [182, 203, 235],\n",
       "         [183, 204, 236],\n",
       "         ...,\n",
       "         [169, 191, 226],\n",
       "         [170, 192, 228],\n",
       "         [171, 191, 226]]], dtype=uint8),\n",
       " array([[[ 46,  53,  70],\n",
       "         [ 43,  50,  66],\n",
       "         [ 48,  55,  70],\n",
       "         ...,\n",
       "         [ 99, 100, 138],\n",
       "         [101, 101, 137],\n",
       "         [103, 103, 139]],\n",
       " \n",
       "        [[ 44,  51,  67],\n",
       "         [ 41,  46,  61],\n",
       "         [ 36,  41,  55],\n",
       "         ...,\n",
       "         [ 97,  98, 136],\n",
       "         [100,  99, 138],\n",
       "         [ 99,  98, 136]],\n",
       " \n",
       "        [[ 42,  46,  61],\n",
       "         [ 31,  37,  49],\n",
       "         [ 27,  29,  40],\n",
       "         ...,\n",
       "         [ 90,  90, 130],\n",
       "         [ 90,  91, 131],\n",
       "         [ 96,  98, 137]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 13,  19,  30],\n",
       "         [ 21,  26,  41],\n",
       "         [ 25,  32,  50],\n",
       "         ...,\n",
       "         [ 39,  44,  65],\n",
       "         [ 39,  44,  65],\n",
       "         [ 34,  39,  60]],\n",
       " \n",
       "        [[ 11,  17,  28],\n",
       "         [ 19,  24,  39],\n",
       "         [ 21,  28,  46],\n",
       "         ...,\n",
       "         [ 36,  41,  63],\n",
       "         [ 36,  41,  62],\n",
       "         [ 31,  36,  57]],\n",
       " \n",
       "        [[  9,  14,  25],\n",
       "         [ 15,  20,  33],\n",
       "         [ 18,  25,  42],\n",
       "         ...,\n",
       "         [ 34,  38,  59],\n",
       "         [ 34,  39,  60],\n",
       "         [ 28,  33,  54]]], dtype=uint8),\n",
       " array([[[149, 188, 226],\n",
       "         [153, 191, 228],\n",
       "         [156, 191, 227],\n",
       "         ...,\n",
       "         [187, 215, 249],\n",
       "         [186, 214, 248],\n",
       "         [183, 211, 245]],\n",
       " \n",
       "        [[149, 188, 227],\n",
       "         [151, 189, 226],\n",
       "         [154, 189, 225],\n",
       "         ...,\n",
       "         [183, 213, 248],\n",
       "         [181, 211, 246],\n",
       "         [180, 210, 245]],\n",
       " \n",
       "        [[150, 189, 227],\n",
       "         [154, 191, 229],\n",
       "         [156, 191, 227],\n",
       "         ...,\n",
       "         [177, 210, 246],\n",
       "         [176, 209, 245],\n",
       "         [176, 209, 245]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[170, 206, 241],\n",
       "         [171, 208, 243],\n",
       "         [172, 208, 246],\n",
       "         ...,\n",
       "         [169, 209, 250],\n",
       "         [172, 210, 252],\n",
       "         [175, 211, 253]],\n",
       " \n",
       "        [[166, 202, 238],\n",
       "         [169, 204, 245],\n",
       "         [169, 204, 245],\n",
       "         ...,\n",
       "         [171, 210, 249],\n",
       "         [177, 212, 252],\n",
       "         [175, 210, 250]],\n",
       " \n",
       "        [[164, 200, 238],\n",
       "         [166, 201, 240],\n",
       "         [166, 200, 243],\n",
       "         ...,\n",
       "         [175, 212, 250],\n",
       "         [177, 213, 251],\n",
       "         [175, 210, 248]]], dtype=uint8),\n",
       " array([[[172, 206, 240],\n",
       "         [170, 205, 241],\n",
       "         [167, 203, 241],\n",
       "         ...,\n",
       "         [ 80, 108, 143],\n",
       "         [ 74, 102, 136],\n",
       "         [ 63,  91, 127]],\n",
       " \n",
       "        [[167, 204, 240],\n",
       "         [167, 203, 239],\n",
       "         [166, 202, 239],\n",
       "         ...,\n",
       "         [ 93, 121, 155],\n",
       "         [ 74, 102, 136],\n",
       "         [ 68,  96, 131]],\n",
       " \n",
       "        [[163, 200, 238],\n",
       "         [162, 198, 237],\n",
       "         [160, 196, 236],\n",
       "         ...,\n",
       "         [103, 132, 162],\n",
       "         [ 81, 109, 140],\n",
       "         [ 71,  99, 133]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 133, 187],\n",
       "         [ 97, 133, 187],\n",
       "         [109, 141, 195],\n",
       "         ...,\n",
       "         [104, 137, 183],\n",
       "         [ 98, 131, 176],\n",
       "         [ 92, 127, 168]],\n",
       " \n",
       "        [[ 94, 132, 186],\n",
       "         [101, 137, 191],\n",
       "         [104, 137, 191],\n",
       "         ...,\n",
       "         [103, 136, 181],\n",
       "         [ 97, 129, 175],\n",
       "         [ 91, 126, 167]],\n",
       " \n",
       "        [[ 93, 131, 182],\n",
       "         [104, 140, 194],\n",
       "         [102, 137, 191],\n",
       "         ...,\n",
       "         [103, 135, 183],\n",
       "         [ 97, 131, 175],\n",
       "         [ 90, 124, 168]]], dtype=uint8),\n",
       " array([[[197, 207, 231],\n",
       "         [204, 214, 239],\n",
       "         [206, 216, 240],\n",
       "         ...,\n",
       "         [229, 236, 254],\n",
       "         [230, 238, 255],\n",
       "         [230, 238, 255]],\n",
       " \n",
       "        [[197, 208, 230],\n",
       "         [203, 214, 236],\n",
       "         [205, 216, 238],\n",
       "         ...,\n",
       "         [226, 236, 254],\n",
       "         [228, 238, 255],\n",
       "         [228, 238, 255]],\n",
       " \n",
       "        [[197, 207, 230],\n",
       "         [200, 211, 234],\n",
       "         [206, 216, 239],\n",
       "         ...,\n",
       "         [229, 238, 255],\n",
       "         [229, 238, 255],\n",
       "         [229, 238, 255]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[184, 210, 246],\n",
       "         [189, 211, 247],\n",
       "         [193, 212, 249],\n",
       "         ...,\n",
       "         [220, 233, 253],\n",
       "         [229, 239, 255],\n",
       "         [233, 241, 255]],\n",
       " \n",
       "        [[184, 210, 246],\n",
       "         [189, 211, 247],\n",
       "         [193, 212, 249],\n",
       "         ...,\n",
       "         [220, 233, 253],\n",
       "         [229, 240, 255],\n",
       "         [233, 241, 255]],\n",
       " \n",
       "        [[184, 210, 246],\n",
       "         [189, 211, 247],\n",
       "         [193, 212, 249],\n",
       "         ...,\n",
       "         [220, 233, 251],\n",
       "         [226, 236, 253],\n",
       "         [231, 240, 254]]], dtype=uint8),\n",
       " array([[[226, 233, 252],\n",
       "         [229, 236, 255],\n",
       "         [228, 235, 254],\n",
       "         ...,\n",
       "         [157, 178, 207],\n",
       "         [147, 166, 200],\n",
       "         [150, 169, 205]],\n",
       " \n",
       "        [[225, 233, 251],\n",
       "         [227, 234, 253],\n",
       "         [227, 234, 253],\n",
       "         ...,\n",
       "         [156, 177, 206],\n",
       "         [144, 163, 198],\n",
       "         [148, 167, 202]],\n",
       " \n",
       "        [[224, 234, 252],\n",
       "         [226, 236, 254],\n",
       "         [225, 234, 252],\n",
       "         ...,\n",
       "         [155, 175, 206],\n",
       "         [141, 160, 195],\n",
       "         [146, 165, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[180, 201, 234],\n",
       "         [182, 200, 233],\n",
       "         [197, 209, 238],\n",
       "         ...,\n",
       "         [193, 213, 245],\n",
       "         [190, 211, 243],\n",
       "         [187, 208, 240]],\n",
       " \n",
       "        [[185, 205, 238],\n",
       "         [181, 199, 232],\n",
       "         [195, 206, 235],\n",
       "         ...,\n",
       "         [191, 210, 243],\n",
       "         [189, 209, 244],\n",
       "         [186, 205, 241]],\n",
       " \n",
       "        [[185, 205, 238],\n",
       "         [183, 201, 234],\n",
       "         [196, 207, 236],\n",
       "         ...,\n",
       "         [192, 211, 247],\n",
       "         [189, 208, 245],\n",
       "         [187, 206, 243]]], dtype=uint8),\n",
       " array([[[ 99, 115, 138],\n",
       "         [108, 125, 152],\n",
       "         [125, 142, 171],\n",
       "         ...,\n",
       "         [183, 199, 228],\n",
       "         [184, 200, 229],\n",
       "         [186, 200, 229]],\n",
       " \n",
       "        [[101, 116, 139],\n",
       "         [111, 126, 152],\n",
       "         [127, 143, 172],\n",
       "         ...,\n",
       "         [182, 198, 227],\n",
       "         [181, 197, 226],\n",
       "         [185, 199, 228]],\n",
       " \n",
       "        [[ 96, 109, 133],\n",
       "         [ 97, 110, 136],\n",
       "         [109, 123, 153],\n",
       "         ...,\n",
       "         [182, 196, 224],\n",
       "         [181, 197, 224],\n",
       "         [181, 198, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 178, 211],\n",
       "         [166, 185, 218],\n",
       "         [170, 187, 220],\n",
       "         ...,\n",
       "         [141, 159, 196],\n",
       "         [143, 161, 198],\n",
       "         [116, 134, 171]],\n",
       " \n",
       "        [[154, 174, 205],\n",
       "         [161, 181, 212],\n",
       "         [178, 195, 227],\n",
       "         ...,\n",
       "         [139, 157, 194],\n",
       "         [140, 158, 195],\n",
       "         [124, 142, 179]],\n",
       " \n",
       "        [[155, 175, 206],\n",
       "         [162, 182, 213],\n",
       "         [178, 196, 227],\n",
       "         ...,\n",
       "         [139, 157, 194],\n",
       "         [140, 158, 195],\n",
       "         [123, 142, 178]]], dtype=uint8),\n",
       " array([[[179, 196, 215],\n",
       "         [181, 195, 215],\n",
       "         [182, 197, 217],\n",
       "         ...,\n",
       "         [152, 169, 207],\n",
       "         [143, 160, 202],\n",
       "         [121, 141, 186]],\n",
       " \n",
       "        [[178, 195, 214],\n",
       "         [179, 193, 215],\n",
       "         [179, 193, 215],\n",
       "         ...,\n",
       "         [146, 164, 201],\n",
       "         [131, 148, 191],\n",
       "         [117, 137, 183]],\n",
       " \n",
       "        [[176, 194, 215],\n",
       "         [176, 192, 215],\n",
       "         [176, 192, 215],\n",
       "         ...,\n",
       "         [139, 155, 196],\n",
       "         [122, 140, 182],\n",
       "         [125, 145, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[180, 194, 213],\n",
       "         [176, 190, 212],\n",
       "         [177, 191, 213],\n",
       "         ...,\n",
       "         [186, 194, 224],\n",
       "         [192, 200, 229],\n",
       "         [189, 199, 224]],\n",
       " \n",
       "        [[181, 195, 214],\n",
       "         [177, 191, 215],\n",
       "         [178, 192, 215],\n",
       "         ...,\n",
       "         [185, 193, 224],\n",
       "         [193, 201, 231],\n",
       "         [188, 197, 224]],\n",
       " \n",
       "        [[180, 195, 214],\n",
       "         [180, 194, 213],\n",
       "         [181, 194, 215],\n",
       "         ...,\n",
       "         [186, 195, 228],\n",
       "         [192, 201, 233],\n",
       "         [185, 195, 225]]], dtype=uint8),\n",
       " array([[[102, 141, 217],\n",
       "         [ 97, 139, 215],\n",
       "         [ 92, 138, 215],\n",
       "         ...,\n",
       "         [ 82, 110, 174],\n",
       "         [ 80, 107, 173],\n",
       "         [ 83, 110, 177]],\n",
       " \n",
       "        [[ 90, 131, 212],\n",
       "         [ 86, 131, 211],\n",
       "         [ 80, 128, 207],\n",
       "         ...,\n",
       "         [137, 163, 209],\n",
       "         [122, 146, 199],\n",
       "         [106, 128, 187]],\n",
       " \n",
       "        [[ 85, 131, 204],\n",
       "         [ 79, 128, 200],\n",
       "         [ 71, 122, 193],\n",
       "         ...,\n",
       "         [160, 183, 217],\n",
       "         [151, 173, 214],\n",
       "         [135, 156, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[130, 138, 164],\n",
       "         [142, 145, 169],\n",
       "         [144, 143, 164],\n",
       "         ...,\n",
       "         [138, 148, 200],\n",
       "         [104, 117, 156],\n",
       "         [131, 143, 190]],\n",
       " \n",
       "        [[133, 144, 172],\n",
       "         [148, 153, 180],\n",
       "         [148, 149, 174],\n",
       "         ...,\n",
       "         [140, 151, 203],\n",
       "         [132, 144, 191],\n",
       "         [139, 151, 198]],\n",
       " \n",
       "        [[123, 135, 169],\n",
       "         [144, 152, 182],\n",
       "         [136, 140, 168],\n",
       "         ...,\n",
       "         [151, 155, 204],\n",
       "         [147, 151, 200],\n",
       "         [144, 148, 197]]], dtype=uint8),\n",
       " array([[[ 68,  85, 128],\n",
       "         [ 63,  80, 124],\n",
       "         [ 60,  73, 117],\n",
       "         ...,\n",
       "         [ 18,  28,  62],\n",
       "         [ 18,  28,  62],\n",
       "         [ 20,  30,  64]],\n",
       " \n",
       "        [[ 68,  85, 128],\n",
       "         [ 62,  80, 122],\n",
       "         [ 64,  81, 123],\n",
       "         ...,\n",
       "         [ 18,  29,  62],\n",
       "         [ 18,  29,  62],\n",
       "         [ 22,  32,  65]],\n",
       " \n",
       "        [[ 64,  82, 124],\n",
       "         [ 62,  80, 122],\n",
       "         [ 61,  80, 122],\n",
       "         ...,\n",
       "         [ 19,  30,  63],\n",
       "         [ 20,  30,  63],\n",
       "         [ 21,  31,  64]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 140, 205],\n",
       "         [120, 138, 198],\n",
       "         [134, 149, 208],\n",
       "         ...,\n",
       "         [101, 119, 182],\n",
       "         [ 94, 112, 175],\n",
       "         [ 97, 118, 180]],\n",
       " \n",
       "        [[122, 139, 203],\n",
       "         [124, 142, 202],\n",
       "         [134, 150, 209],\n",
       "         ...,\n",
       "         [ 98, 117, 178],\n",
       "         [ 97, 116, 177],\n",
       "         [ 96, 117, 177]],\n",
       " \n",
       "        [[121, 137, 202],\n",
       "         [128, 146, 206],\n",
       "         [133, 149, 208],\n",
       "         ...,\n",
       "         [ 98, 116, 179],\n",
       "         [100, 117, 181],\n",
       "         [ 92, 113, 175]]], dtype=uint8),\n",
       " array([[[212, 228, 252],\n",
       "         [211, 227, 254],\n",
       "         [205, 223, 252],\n",
       "         ...,\n",
       "         [141, 174, 219],\n",
       "         [143, 176, 220],\n",
       "         [143, 177, 218]],\n",
       " \n",
       "        [[207, 226, 252],\n",
       "         [204, 224, 253],\n",
       "         [197, 218, 254],\n",
       "         ...,\n",
       "         [140, 175, 220],\n",
       "         [142, 176, 220],\n",
       "         [142, 177, 218]],\n",
       " \n",
       "        [[204, 224, 253],\n",
       "         [201, 222, 253],\n",
       "         [191, 216, 254],\n",
       "         ...,\n",
       "         [124, 165, 208],\n",
       "         [144, 178, 221],\n",
       "         [154, 183, 226]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 185, 234],\n",
       "         [146, 183, 233],\n",
       "         [151, 187, 235],\n",
       "         ...,\n",
       "         [168, 200, 245],\n",
       "         [167, 201, 246],\n",
       "         [168, 201, 246]],\n",
       " \n",
       "        [[155, 189, 235],\n",
       "         [153, 187, 234],\n",
       "         [156, 188, 239],\n",
       "         ...,\n",
       "         [173, 203, 244],\n",
       "         [171, 203, 248],\n",
       "         [169, 200, 246]],\n",
       " \n",
       "        [[157, 191, 237],\n",
       "         [155, 189, 235],\n",
       "         [156, 189, 239],\n",
       "         ...,\n",
       "         [175, 204, 248],\n",
       "         [168, 199, 244],\n",
       "         [165, 197, 244]]], dtype=uint8),\n",
       " array([[[112, 120, 137],\n",
       "         [119, 127, 144],\n",
       "         [111, 118, 133],\n",
       "         ...,\n",
       "         [201, 198, 202],\n",
       "         [215, 212, 214],\n",
       "         [213, 211, 213]],\n",
       " \n",
       "        [[112, 121, 137],\n",
       "         [108, 116, 133],\n",
       "         [121, 126, 141],\n",
       "         ...,\n",
       "         [205, 201, 207],\n",
       "         [204, 202, 207],\n",
       "         [210, 209, 213]],\n",
       " \n",
       "        [[110, 117, 136],\n",
       "         [102, 109, 126],\n",
       "         [115, 119, 135],\n",
       "         ...,\n",
       "         [191, 187, 193],\n",
       "         [197, 196, 200],\n",
       "         [210, 209, 212]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[130, 135, 154],\n",
       "         [143, 147, 166],\n",
       "         [153, 155, 174],\n",
       "         ...,\n",
       "         [165, 169, 187],\n",
       "         [161, 165, 184],\n",
       "         [150, 153, 175]],\n",
       " \n",
       "        [[135, 139, 161],\n",
       "         [149, 152, 173],\n",
       "         [153, 154, 174],\n",
       "         ...,\n",
       "         [167, 169, 187],\n",
       "         [157, 158, 178],\n",
       "         [148, 149, 175]],\n",
       " \n",
       "        [[139, 143, 166],\n",
       "         [150, 152, 175],\n",
       "         [158, 159, 180],\n",
       "         ...,\n",
       "         [167, 171, 190],\n",
       "         [147, 150, 172],\n",
       "         [146, 148, 175]]], dtype=uint8),\n",
       " array([[[110, 109, 148],\n",
       "         [115, 116, 154],\n",
       "         [108, 111, 149],\n",
       "         ...,\n",
       "         [ 31,  36,  50],\n",
       "         [ 20,  25,  40],\n",
       "         [ 41,  45,  64]],\n",
       " \n",
       "        [[106, 107, 145],\n",
       "         [103, 104, 142],\n",
       "         [111, 114, 152],\n",
       "         ...,\n",
       "         [ 31,  34,  48],\n",
       "         [ 27,  31,  45],\n",
       "         [ 31,  33,  49]],\n",
       " \n",
       "        [[107, 110, 148],\n",
       "         [107, 109, 147],\n",
       "         [106, 108, 146],\n",
       "         ...,\n",
       "         [ 31,  34,  45],\n",
       "         [ 17,  20,  31],\n",
       "         [ 17,  19,  31]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  74, 103],\n",
       "         [ 70,  79, 107],\n",
       "         [ 71,  79, 108],\n",
       "         ...,\n",
       "         [ 67,  74, 109],\n",
       "         [ 65,  72, 105],\n",
       "         [ 61,  68,  95]],\n",
       " \n",
       "        [[ 68,  76, 106],\n",
       "         [ 64,  72, 102],\n",
       "         [ 71,  79, 109],\n",
       "         ...,\n",
       "         [ 66,  75, 106],\n",
       "         [ 63,  71, 100],\n",
       "         [ 59,  66,  93]],\n",
       " \n",
       "        [[ 64,  72, 102],\n",
       "         [ 69,  77, 107],\n",
       "         [ 69,  77, 107],\n",
       "         ...,\n",
       "         [ 65,  75, 106],\n",
       "         [ 63,  71, 100],\n",
       "         [ 56,  62,  90]]], dtype=uint8),\n",
       " array([[[227, 222, 225],\n",
       "         [221, 215, 218],\n",
       "         [217, 211, 216],\n",
       "         ...,\n",
       "         [107, 109, 129],\n",
       "         [116, 118, 140],\n",
       "         [ 99, 101, 125]],\n",
       " \n",
       "        [[222, 215, 222],\n",
       "         [210, 203, 209],\n",
       "         [213, 207, 213],\n",
       "         ...,\n",
       "         [ 99, 100, 121],\n",
       "         [111, 113, 136],\n",
       "         [100, 103, 127]],\n",
       " \n",
       "        [[213, 205, 216],\n",
       "         [211, 203, 213],\n",
       "         [207, 200, 207],\n",
       "         ...,\n",
       "         [ 98,  97, 117],\n",
       "         [111, 113, 136],\n",
       "         [ 96,  99, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 153, 181],\n",
       "         [148, 151, 181],\n",
       "         [145, 151, 183],\n",
       "         ...,\n",
       "         [156, 155, 181],\n",
       "         [152, 149, 175],\n",
       "         [149, 147, 170]],\n",
       " \n",
       "        [[154, 153, 180],\n",
       "         [150, 152, 182],\n",
       "         [148, 150, 183],\n",
       "         ...,\n",
       "         [162, 160, 189],\n",
       "         [152, 149, 176],\n",
       "         [147, 143, 169]],\n",
       " \n",
       "        [[162, 161, 188],\n",
       "         [157, 157, 187],\n",
       "         [150, 151, 185],\n",
       "         ...,\n",
       "         [158, 154, 183],\n",
       "         [152, 148, 176],\n",
       "         [146, 143, 169]]], dtype=uint8),\n",
       " array([[[ 40,  52,  67],\n",
       "         [ 70,  86, 107],\n",
       "         [ 83, 106, 131],\n",
       "         ...,\n",
       "         [171, 189, 210],\n",
       "         [177, 194, 215],\n",
       "         [178, 195, 216]],\n",
       " \n",
       "        [[ 46,  58,  73],\n",
       "         [ 75,  91, 112],\n",
       "         [ 86, 109, 134],\n",
       "         ...,\n",
       "         [166, 185, 206],\n",
       "         [168, 187, 208],\n",
       "         [167, 186, 207]],\n",
       " \n",
       "        [[ 50,  64,  80],\n",
       "         [ 80,  98, 119],\n",
       "         [ 90, 113, 139],\n",
       "         ...,\n",
       "         [158, 176, 199],\n",
       "         [168, 186, 209],\n",
       "         [168, 186, 209]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 172, 192],\n",
       "         [150, 174, 196],\n",
       "         [153, 179, 203],\n",
       "         ...,\n",
       "         [146, 171, 196],\n",
       "         [148, 173, 199],\n",
       "         [144, 169, 195]],\n",
       " \n",
       "        [[150, 174, 195],\n",
       "         [152, 176, 198],\n",
       "         [155, 181, 205],\n",
       "         ...,\n",
       "         [145, 170, 196],\n",
       "         [146, 171, 197],\n",
       "         [142, 167, 193]],\n",
       " \n",
       "        [[149, 172, 193],\n",
       "         [149, 173, 195],\n",
       "         [152, 178, 202],\n",
       "         ...,\n",
       "         [143, 168, 194],\n",
       "         [141, 166, 193],\n",
       "         [138, 163, 189]]], dtype=uint8),\n",
       " array([[[204, 216, 234],\n",
       "         [198, 212, 231],\n",
       "         [197, 211, 230],\n",
       "         ...,\n",
       "         [155, 176, 213],\n",
       "         [157, 178, 215],\n",
       "         [155, 176, 214]],\n",
       " \n",
       "        [[202, 215, 232],\n",
       "         [198, 212, 231],\n",
       "         [197, 211, 230],\n",
       "         ...,\n",
       "         [151, 173, 212],\n",
       "         [155, 175, 216],\n",
       "         [154, 175, 214]],\n",
       " \n",
       "        [[203, 217, 234],\n",
       "         [200, 214, 232],\n",
       "         [196, 210, 228],\n",
       "         ...,\n",
       "         [149, 173, 215],\n",
       "         [151, 175, 217],\n",
       "         [150, 172, 213]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[217, 225, 238],\n",
       "         [214, 224, 238],\n",
       "         [205, 220, 237],\n",
       "         ...,\n",
       "         [157, 179, 221],\n",
       "         [158, 180, 221],\n",
       "         [153, 177, 219]],\n",
       " \n",
       "        [[217, 226, 239],\n",
       "         [215, 225, 239],\n",
       "         [208, 223, 240],\n",
       "         ...,\n",
       "         [162, 186, 222],\n",
       "         [159, 183, 219],\n",
       "         [153, 180, 220]],\n",
       " \n",
       "        [[216, 224, 237],\n",
       "         [214, 224, 238],\n",
       "         [207, 222, 239],\n",
       "         ...,\n",
       "         [167, 190, 223],\n",
       "         [169, 192, 225],\n",
       "         [162, 187, 224]]], dtype=uint8),\n",
       " array([[[  0,   8,  21],\n",
       "         [  1,   9,  26],\n",
       "         [  2,  12,  29],\n",
       "         ...,\n",
       "         [ 95, 152, 203],\n",
       "         [ 97, 153, 208],\n",
       "         [ 98, 155, 205]],\n",
       " \n",
       "        [[  0,   7,  20],\n",
       "         [  1,   9,  22],\n",
       "         [  1,  11,  25],\n",
       "         ...,\n",
       "         [ 97, 154, 206],\n",
       "         [ 94, 151, 204],\n",
       "         [ 96, 153, 205]],\n",
       " \n",
       "        [[  0,   7,  22],\n",
       "         [  1,   8,  23],\n",
       "         [  1,  10,  24],\n",
       "         ...,\n",
       "         [ 95, 153, 205],\n",
       "         [ 94, 151, 203],\n",
       "         [ 95, 152, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[  4,  14,  32],\n",
       "         [  5,  19,  46],\n",
       "         [  7,  26,  62],\n",
       "         ...,\n",
       "         [  1,  12,  40],\n",
       "         [  1,  13,  37],\n",
       "         [  3,  13,  44]],\n",
       " \n",
       "        [[  4,  14,  32],\n",
       "         [  4,  19,  46],\n",
       "         [  5,  24,  61],\n",
       "         ...,\n",
       "         [  1,  10,  36],\n",
       "         [  0,  13,  33],\n",
       "         [  2,  12,  42]],\n",
       " \n",
       "        [[  5,  15,  32],\n",
       "         [  3,  17,  45],\n",
       "         [  4,  24,  61],\n",
       "         ...,\n",
       "         [  1,  11,  34],\n",
       "         [  1,  13,  32],\n",
       "         [  1,  10,  38]]], dtype=uint8),\n",
       " array([[[143, 174, 224],\n",
       "         [137, 169, 220],\n",
       "         [135, 168, 222],\n",
       "         ...,\n",
       "         [ 55,  79, 134],\n",
       "         [ 53,  80, 126],\n",
       "         [ 56,  79, 126]],\n",
       " \n",
       "        [[149, 180, 230],\n",
       "         [134, 167, 218],\n",
       "         [137, 170, 223],\n",
       "         ...,\n",
       "         [ 58,  84, 136],\n",
       "         [ 51,  78, 127],\n",
       "         [ 55,  80, 128]],\n",
       " \n",
       "        [[137, 170, 216],\n",
       "         [146, 180, 228],\n",
       "         [137, 171, 221],\n",
       "         ...,\n",
       "         [ 59,  85, 141],\n",
       "         [ 53,  82, 133],\n",
       "         [ 55,  82, 132]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  93, 163],\n",
       "         [ 52,  85, 149],\n",
       "         [ 59,  92, 155],\n",
       "         ...,\n",
       "         [ 73, 120, 176],\n",
       "         [ 69, 110, 165],\n",
       "         [ 68, 107, 162]],\n",
       " \n",
       "        [[ 55,  95, 165],\n",
       "         [ 41,  76, 140],\n",
       "         [ 57,  92, 155],\n",
       "         ...,\n",
       "         [ 64, 108, 166],\n",
       "         [ 66, 105, 160],\n",
       "         [ 61,  98, 154]],\n",
       " \n",
       "        [[ 62, 104, 172],\n",
       "         [ 46,  81, 145],\n",
       "         [ 54,  89, 152],\n",
       "         ...,\n",
       "         [ 66, 110, 170],\n",
       "         [ 64, 101, 158],\n",
       "         [ 63, 100, 157]]], dtype=uint8),\n",
       " array([[[ 77, 100, 126],\n",
       "         [ 87, 110, 136],\n",
       "         [ 93, 114, 145],\n",
       "         ...,\n",
       "         [156, 166, 196],\n",
       "         [162, 171, 202],\n",
       "         [160, 170, 200]],\n",
       " \n",
       "        [[ 77, 100, 126],\n",
       "         [ 87, 110, 136],\n",
       "         [ 96, 117, 148],\n",
       "         ...,\n",
       "         [139, 148, 180],\n",
       "         [149, 158, 191],\n",
       "         [152, 161, 195]],\n",
       " \n",
       "        [[ 73,  99, 130],\n",
       "         [ 88, 112, 143],\n",
       "         [ 97, 117, 149],\n",
       "         ...,\n",
       "         [131, 141, 173],\n",
       "         [144, 152, 190],\n",
       "         [144, 153, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 155, 179],\n",
       "         [141, 162, 186],\n",
       "         [145, 165, 189],\n",
       "         ...,\n",
       "         [115, 131, 172],\n",
       "         [117, 133, 175],\n",
       "         [114, 130, 171]],\n",
       " \n",
       "        [[133, 152, 179],\n",
       "         [142, 161, 188],\n",
       "         [153, 165, 193],\n",
       "         ...,\n",
       "         [110, 124, 172],\n",
       "         [116, 132, 175],\n",
       "         [117, 133, 175]],\n",
       " \n",
       "        [[132, 152, 180],\n",
       "         [142, 160, 188],\n",
       "         [153, 167, 195],\n",
       "         ...,\n",
       "         [108, 124, 168],\n",
       "         [113, 129, 172],\n",
       "         [118, 134, 175]]], dtype=uint8),\n",
       " array([[[208, 221, 245],\n",
       "         [207, 220, 244],\n",
       "         [209, 222, 246],\n",
       "         ...,\n",
       "         [146, 154, 173],\n",
       "         [156, 163, 178],\n",
       "         [145, 147, 159]],\n",
       " \n",
       "        [[201, 216, 243],\n",
       "         [201, 216, 242],\n",
       "         [201, 216, 242],\n",
       "         ...,\n",
       "         [148, 157, 174],\n",
       "         [160, 166, 181],\n",
       "         [154, 155, 167]],\n",
       " \n",
       "        [[198, 212, 240],\n",
       "         [198, 212, 240],\n",
       "         [195, 209, 238],\n",
       "         ...,\n",
       "         [150, 159, 175],\n",
       "         [164, 168, 183],\n",
       "         [172, 173, 186]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[207, 225, 253],\n",
       "         [199, 220, 251],\n",
       "         [176, 199, 231],\n",
       "         ...,\n",
       "         [186, 186, 198],\n",
       "         [134, 136, 141],\n",
       "         [ 64,  71,  78]],\n",
       " \n",
       "        [[204, 221, 248],\n",
       "         [199, 220, 249],\n",
       "         [186, 210, 245],\n",
       "         ...,\n",
       "         [205, 205, 217],\n",
       "         [117, 114, 118],\n",
       "         [135, 137, 151]],\n",
       " \n",
       "        [[204, 221, 246],\n",
       "         [198, 219, 251],\n",
       "         [186, 209, 243],\n",
       "         ...,\n",
       "         [212, 212, 224],\n",
       "         [153, 149, 155],\n",
       "         [ 88,  88,  99]]], dtype=uint8),\n",
       " array([[[129, 150, 205],\n",
       "         [133, 154, 209],\n",
       "         [152, 168, 221],\n",
       "         ...,\n",
       "         [187, 204, 244],\n",
       "         [198, 208, 246],\n",
       "         [203, 216, 253]],\n",
       " \n",
       "        [[136, 153, 209],\n",
       "         [136, 153, 209],\n",
       "         [133, 151, 197],\n",
       "         ...,\n",
       "         [182, 198, 241],\n",
       "         [188, 202, 244],\n",
       "         [198, 213, 253]],\n",
       " \n",
       "        [[122, 138, 194],\n",
       "         [110, 125, 181],\n",
       "         [ 88, 103, 141],\n",
       "         ...,\n",
       "         [176, 191, 237],\n",
       "         [185, 201, 244],\n",
       "         [188, 204, 246]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[175, 193, 240],\n",
       "         [175, 194, 240],\n",
       "         [171, 194, 240],\n",
       "         ...,\n",
       "         [179, 192, 240],\n",
       "         [178, 192, 240],\n",
       "         [174, 188, 236]],\n",
       " \n",
       "        [[177, 195, 242],\n",
       "         [173, 191, 238],\n",
       "         [172, 195, 240],\n",
       "         ...,\n",
       "         [176, 188, 236],\n",
       "         [179, 193, 241],\n",
       "         [170, 184, 232]],\n",
       " \n",
       "        [[178, 194, 240],\n",
       "         [178, 194, 240],\n",
       "         [181, 196, 242],\n",
       "         ...,\n",
       "         [173, 187, 235],\n",
       "         [170, 186, 234],\n",
       "         [166, 181, 231]]], dtype=uint8),\n",
       " array([[[153, 162, 198],\n",
       "         [153, 161, 199],\n",
       "         [152, 160, 199],\n",
       "         ...,\n",
       "         [117, 136, 161],\n",
       "         [ 89, 107, 125],\n",
       "         [ 52,  68,  79]],\n",
       " \n",
       "        [[153, 161, 198],\n",
       "         [149, 157, 195],\n",
       "         [146, 155, 193],\n",
       "         ...,\n",
       "         [119, 145, 167],\n",
       "         [ 90, 112, 130],\n",
       "         [ 51,  66,  80]],\n",
       " \n",
       "        [[149, 158, 194],\n",
       "         [138, 147, 185],\n",
       "         [141, 152, 190],\n",
       "         ...,\n",
       "         [123, 147, 169],\n",
       "         [ 98, 119, 137],\n",
       "         [ 57,  71,  85]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[211, 209, 233],\n",
       "         [210, 210, 232],\n",
       "         [199, 203, 229],\n",
       "         ...,\n",
       "         [148, 170, 195],\n",
       "         [148, 170, 191],\n",
       "         [135, 152, 170]],\n",
       " \n",
       "        [[209, 210, 233],\n",
       "         [212, 212, 233],\n",
       "         [201, 205, 229],\n",
       "         ...,\n",
       "         [150, 172, 196],\n",
       "         [155, 176, 198],\n",
       "         [143, 161, 178]],\n",
       " \n",
       "        [[203, 204, 231],\n",
       "         [210, 211, 233],\n",
       "         [208, 210, 232],\n",
       "         ...,\n",
       "         [153, 174, 199],\n",
       "         [154, 176, 197],\n",
       "         [148, 166, 184]]], dtype=uint8),\n",
       " array([[[ 79, 108, 166],\n",
       "         [ 70,  99, 155],\n",
       "         [ 76, 102, 154],\n",
       "         ...,\n",
       "         [167, 199, 250],\n",
       "         [170, 211, 253],\n",
       "         [172, 212, 254]],\n",
       " \n",
       "        [[ 81, 116, 175],\n",
       "         [ 75, 108, 167],\n",
       "         [ 74, 104, 162],\n",
       "         ...,\n",
       "         [160, 193, 242],\n",
       "         [163, 203, 249],\n",
       "         [169, 208, 254]],\n",
       " \n",
       "        [[ 85, 124, 186],\n",
       "         [ 80, 119, 180],\n",
       "         [ 75, 110, 173],\n",
       "         ...,\n",
       "         [151, 186, 229],\n",
       "         [154, 194, 245],\n",
       "         [166, 203, 253]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[158, 198, 251],\n",
       "         [148, 188, 241],\n",
       "         [138, 176, 231],\n",
       "         ...,\n",
       "         [161, 199, 251],\n",
       "         [162, 200, 252],\n",
       "         [168, 201, 251]],\n",
       " \n",
       "        [[162, 200, 254],\n",
       "         [161, 200, 254],\n",
       "         [150, 187, 240],\n",
       "         ...,\n",
       "         [165, 199, 252],\n",
       "         [167, 201, 254],\n",
       "         [170, 203, 253]],\n",
       " \n",
       "        [[167, 205, 255],\n",
       "         [162, 200, 253],\n",
       "         [164, 198, 245],\n",
       "         ...,\n",
       "         [167, 202, 252],\n",
       "         [167, 203, 252],\n",
       "         [170, 202, 252]]], dtype=uint8),\n",
       " array([[[ 67, 102, 113],\n",
       "         [ 83, 129, 145],\n",
       "         [ 87, 138, 153],\n",
       "         ...,\n",
       "         [178, 210, 244],\n",
       "         [178, 209, 245],\n",
       "         [178, 209, 244]],\n",
       " \n",
       "        [[ 71, 107, 120],\n",
       "         [ 80, 126, 143],\n",
       "         [ 86, 137, 154],\n",
       "         ...,\n",
       "         [185, 213, 243],\n",
       "         [183, 211, 243],\n",
       "         [183, 212, 243]],\n",
       " \n",
       "        [[ 74, 112, 126],\n",
       "         [ 78, 127, 145],\n",
       "         [ 81, 133, 151],\n",
       "         ...,\n",
       "         [189, 213, 242],\n",
       "         [189, 213, 241],\n",
       "         [189, 213, 241]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 163, 183],\n",
       "         [114, 165, 185],\n",
       "         [115, 165, 187],\n",
       "         ...,\n",
       "         [ 93, 138, 171],\n",
       "         [ 98, 143, 174],\n",
       "         [114, 158, 189]],\n",
       " \n",
       "        [[109, 160, 180],\n",
       "         [111, 162, 183],\n",
       "         [111, 162, 185],\n",
       "         ...,\n",
       "         [101, 147, 179],\n",
       "         [106, 152, 183],\n",
       "         [113, 159, 190]],\n",
       " \n",
       "        [[103, 156, 177],\n",
       "         [107, 159, 182],\n",
       "         [107, 159, 183],\n",
       "         ...,\n",
       "         [106, 155, 187],\n",
       "         [107, 156, 187],\n",
       "         [112, 161, 191]]], dtype=uint8),\n",
       " array([[[ 52,  56,  79],\n",
       "         [ 42,  51,  82],\n",
       "         [ 40,  54,  90],\n",
       "         ...,\n",
       "         [117, 152, 210],\n",
       "         [112, 145, 201],\n",
       "         [100, 136, 190]],\n",
       " \n",
       "        [[ 50,  55,  81],\n",
       "         [ 42,  53,  85],\n",
       "         [ 44,  57,  92],\n",
       "         ...,\n",
       "         [115, 151, 206],\n",
       "         [103, 137, 191],\n",
       "         [109, 145, 199]],\n",
       " \n",
       "        [[ 49,  57,  85],\n",
       "         [ 44,  54,  87],\n",
       "         [ 46,  57,  90],\n",
       "         ...,\n",
       "         [113, 150, 203],\n",
       "         [127, 161, 214],\n",
       "         [119, 155, 209]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 41,  56,  89],\n",
       "         [ 46,  62,  98],\n",
       "         [ 42,  61,  98],\n",
       "         ...,\n",
       "         [ 43,  63, 115],\n",
       "         [ 42,  65, 121],\n",
       "         [ 60,  93, 153]],\n",
       " \n",
       "        [[ 43,  57,  94],\n",
       "         [ 37,  53,  91],\n",
       "         [ 42,  60, 100],\n",
       "         ...,\n",
       "         [ 40,  59, 108],\n",
       "         [ 41,  70, 129],\n",
       "         [ 57,  88, 153]],\n",
       " \n",
       "        [[ 40,  55,  93],\n",
       "         [ 35,  52,  90],\n",
       "         [ 37,  55,  96],\n",
       "         ...,\n",
       "         [ 47,  67, 115],\n",
       "         [ 47,  77, 139],\n",
       "         [ 60,  92, 158]]], dtype=uint8),\n",
       " array([[[132, 177, 234],\n",
       "         [128, 171, 228],\n",
       "         [119, 161, 220],\n",
       "         ...,\n",
       "         [103, 148, 215],\n",
       "         [ 97, 143, 209],\n",
       "         [ 95, 143, 207]],\n",
       " \n",
       "        [[101, 148, 204],\n",
       "         [112, 156, 215],\n",
       "         [107, 151, 211],\n",
       "         ...,\n",
       "         [ 99, 144, 211],\n",
       "         [ 93, 139, 206],\n",
       "         [ 88, 136, 200]],\n",
       " \n",
       "        [[101, 150, 206],\n",
       "         [116, 164, 218],\n",
       "         [112, 157, 214],\n",
       "         ...,\n",
       "         [ 97, 142, 209],\n",
       "         [ 91, 136, 203],\n",
       "         [ 89, 136, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 173, 237],\n",
       "         [118, 165, 231],\n",
       "         [113, 159, 224],\n",
       "         ...,\n",
       "         [102, 146, 207],\n",
       "         [ 96, 142, 203],\n",
       "         [102, 150, 213]],\n",
       " \n",
       "        [[127, 172, 236],\n",
       "         [119, 167, 233],\n",
       "         [115, 160, 227],\n",
       "         ...,\n",
       "         [101, 146, 207],\n",
       "         [104, 148, 213],\n",
       "         [107, 152, 220]],\n",
       " \n",
       "        [[125, 171, 233],\n",
       "         [118, 165, 233],\n",
       "         [114, 158, 229],\n",
       "         ...,\n",
       "         [109, 154, 215],\n",
       "         [114, 157, 222],\n",
       "         [120, 161, 230]]], dtype=uint8),\n",
       " array([[[104, 135, 168],\n",
       "         [120, 148, 183],\n",
       "         [146, 171, 210],\n",
       "         ...,\n",
       "         [189, 208, 243],\n",
       "         [189, 208, 243],\n",
       "         [190, 209, 244]],\n",
       " \n",
       "        [[113, 141, 175],\n",
       "         [119, 147, 182],\n",
       "         [104, 128, 165],\n",
       "         ...,\n",
       "         [186, 204, 239],\n",
       "         [189, 206, 239],\n",
       "         [190, 207, 239]],\n",
       " \n",
       "        [[ 98, 124, 158],\n",
       "         [ 81, 107, 141],\n",
       "         [ 51,  76, 110],\n",
       "         ...,\n",
       "         [181, 199, 232],\n",
       "         [186, 202, 236],\n",
       "         [189, 204, 236]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  32,  38],\n",
       "         [ 46,  38,  48],\n",
       "         [ 64,  62,  77],\n",
       "         ...,\n",
       "         [ 48,  72, 113],\n",
       "         [115, 142, 179],\n",
       "         [180, 204, 239]],\n",
       " \n",
       "        [[ 53,  46,  57],\n",
       "         [ 35,  29,  46],\n",
       "         [ 32,  32,  54],\n",
       "         ...,\n",
       "         [120, 145, 185],\n",
       "         [178, 204, 241],\n",
       "         [186, 211, 247]],\n",
       " \n",
       "        [[ 52,  46,  62],\n",
       "         [ 37,  36,  59],\n",
       "         [ 20,  23,  54],\n",
       "         ...,\n",
       "         [191, 217, 248],\n",
       "         [190, 218, 250],\n",
       "         [174, 198, 234]]], dtype=uint8),\n",
       " array([[[ 11,  29,  47],\n",
       "         [ 14,  43,  75],\n",
       "         [ 15,  51,  92],\n",
       "         ...,\n",
       "         [122, 136, 175],\n",
       "         [126, 140, 179],\n",
       "         [126, 141, 180]],\n",
       " \n",
       "        [[ 15,  34,  54],\n",
       "         [ 18,  47,  80],\n",
       "         [ 14,  49,  92],\n",
       "         ...,\n",
       "         [128, 137, 180],\n",
       "         [130, 139, 182],\n",
       "         [128, 137, 180]],\n",
       " \n",
       "        [[ 16,  36,  61],\n",
       "         [ 22,  50,  86],\n",
       "         [ 13,  47,  90],\n",
       "         ...,\n",
       "         [122, 128, 172],\n",
       "         [122, 129, 173],\n",
       "         [129, 136, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 41,  71, 106],\n",
       "         [ 45,  76, 115],\n",
       "         [ 52,  84, 125],\n",
       "         ...,\n",
       "         [ 51,  82, 135],\n",
       "         [ 60,  88, 142],\n",
       "         [ 77, 103, 157]],\n",
       " \n",
       "        [[ 41,  71, 106],\n",
       "         [ 45,  76, 115],\n",
       "         [ 50,  82, 123],\n",
       "         ...,\n",
       "         [ 52,  83, 136],\n",
       "         [ 65,  93, 147],\n",
       "         [ 76, 102, 156]],\n",
       " \n",
       "        [[ 45,  74, 111],\n",
       "         [ 43,  74, 112],\n",
       "         [ 50,  82, 123],\n",
       "         ...,\n",
       "         [ 54,  86, 139],\n",
       "         [ 64,  92, 146],\n",
       "         [ 78, 104, 158]]], dtype=uint8),\n",
       " array([[[ 75,  92, 143],\n",
       "         [ 75,  91, 139],\n",
       "         [ 73,  88, 131],\n",
       "         ...,\n",
       "         [ 90,  82,  95],\n",
       "         [ 86,  81,  93],\n",
       "         [ 85,  81,  93]],\n",
       " \n",
       "        [[ 75,  89, 138],\n",
       "         [ 65,  81, 124],\n",
       "         [ 69,  79, 116],\n",
       "         ...,\n",
       "         [ 90,  82,  95],\n",
       "         [ 83,  78,  90],\n",
       "         [ 85,  81,  93]],\n",
       " \n",
       "        [[ 71,  85, 134],\n",
       "         [ 54,  70, 113],\n",
       "         [ 58,  68, 103],\n",
       "         ...,\n",
       "         [ 84,  80,  89],\n",
       "         [ 86,  82,  92],\n",
       "         [ 84,  80,  92]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98,  97, 123],\n",
       "         [ 92,  91, 117],\n",
       "         [ 87,  85, 111],\n",
       "         ...,\n",
       "         [ 94,  94, 112],\n",
       "         [ 93,  93, 112],\n",
       "         [ 91,  92, 112]],\n",
       " \n",
       "        [[ 98,  97, 123],\n",
       "         [ 95,  94, 120],\n",
       "         [ 90,  89, 115],\n",
       "         ...,\n",
       "         [ 94,  95, 116],\n",
       "         [ 94,  95, 115],\n",
       "         [ 93,  92, 113]],\n",
       " \n",
       "        [[ 96,  95, 121],\n",
       "         [ 96,  96, 120],\n",
       "         [ 93,  93, 117],\n",
       "         ...,\n",
       "         [ 97,  97, 122],\n",
       "         [ 95,  96, 118],\n",
       "         [ 92,  93, 113]]], dtype=uint8),\n",
       " array([[[103, 108, 139],\n",
       "         [100, 108, 138],\n",
       "         [107, 114, 147],\n",
       "         ...,\n",
       "         [ 83,  95, 134],\n",
       "         [ 87,  97, 137],\n",
       "         [ 88,  99, 141]],\n",
       " \n",
       "        [[105, 111, 141],\n",
       "         [105, 113, 142],\n",
       "         [118, 125, 155],\n",
       "         ...,\n",
       "         [ 82,  91, 128],\n",
       "         [ 92, 103, 141],\n",
       "         [ 83,  95, 135]],\n",
       " \n",
       "        [[110, 116, 146],\n",
       "         [112, 118, 147],\n",
       "         [115, 122, 148],\n",
       "         ...,\n",
       "         [ 71,  81, 111],\n",
       "         [ 77,  90, 126],\n",
       "         [ 78,  93, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 90, 113, 161],\n",
       "         [ 94, 116, 164],\n",
       "         [ 94, 117, 167],\n",
       "         ...,\n",
       "         [ 85, 104, 162],\n",
       "         [ 78, 101, 159],\n",
       "         [ 74,  97, 161]],\n",
       " \n",
       "        [[ 92, 115, 165],\n",
       "         [ 95, 118, 168],\n",
       "         [ 96, 119, 169],\n",
       "         ...,\n",
       "         [ 86, 107, 165],\n",
       "         [ 73,  96, 157],\n",
       "         [ 83, 106, 169]],\n",
       " \n",
       "        [[ 91, 114, 164],\n",
       "         [ 92, 115, 165],\n",
       "         [ 97, 120, 170],\n",
       "         ...,\n",
       "         [ 90, 111, 172],\n",
       "         [ 76, 100, 162],\n",
       "         [ 86, 110, 172]]], dtype=uint8),\n",
       " array([[[ 74,  93, 120],\n",
       "         [ 79, 100, 127],\n",
       "         [ 88, 109, 136],\n",
       "         ...,\n",
       "         [124, 158, 194],\n",
       "         [121, 155, 192],\n",
       "         [121, 154, 193]],\n",
       " \n",
       "        [[ 76,  96, 120],\n",
       "         [ 87, 106, 132],\n",
       "         [ 89, 109, 135],\n",
       "         ...,\n",
       "         [121, 154, 193],\n",
       "         [123, 156, 195],\n",
       "         [123, 156, 195]],\n",
       " \n",
       "        [[ 78,  99, 121],\n",
       "         [ 82, 104, 126],\n",
       "         [ 89, 110, 132],\n",
       "         ...,\n",
       "         [114, 147, 186],\n",
       "         [118, 151, 190],\n",
       "         [116, 149, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 120, 156],\n",
       "         [101, 126, 162],\n",
       "         [107, 133, 170],\n",
       "         ...,\n",
       "         [110, 139, 174],\n",
       "         [109, 136, 171],\n",
       "         [108, 134, 170]],\n",
       " \n",
       "        [[ 97, 120, 156],\n",
       "         [101, 124, 163],\n",
       "         [106, 128, 167],\n",
       "         ...,\n",
       "         [111, 138, 174],\n",
       "         [109, 135, 171],\n",
       "         [109, 136, 170]],\n",
       " \n",
       "        [[ 94, 118, 154],\n",
       "         [ 97, 120, 159],\n",
       "         [104, 126, 167],\n",
       "         ...,\n",
       "         [108, 134, 170],\n",
       "         [107, 134, 168],\n",
       "         [108, 136, 167]]], dtype=uint8),\n",
       " array([[[131, 158, 199],\n",
       "         [138, 166, 207],\n",
       "         [134, 165, 205],\n",
       "         ...,\n",
       "         [117, 148, 187],\n",
       "         [108, 139, 178],\n",
       "         [105, 135, 175]],\n",
       " \n",
       "        [[129, 161, 202],\n",
       "         [130, 162, 203],\n",
       "         [128, 164, 202],\n",
       "         ...,\n",
       "         [115, 146, 182],\n",
       "         [109, 140, 179],\n",
       "         [106, 137, 176]],\n",
       " \n",
       "        [[124, 159, 199],\n",
       "         [122, 156, 196],\n",
       "         [123, 156, 195],\n",
       "         ...,\n",
       "         [ 95, 117, 146],\n",
       "         [112, 138, 170],\n",
       "         [109, 136, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 160, 199],\n",
       "         [130, 163, 202],\n",
       "         [132, 165, 204],\n",
       "         ...,\n",
       "         [132, 160, 207],\n",
       "         [127, 157, 204],\n",
       "         [122, 152, 199]],\n",
       " \n",
       "        [[130, 163, 202],\n",
       "         [131, 164, 203],\n",
       "         [133, 166, 205],\n",
       "         ...,\n",
       "         [130, 160, 207],\n",
       "         [126, 156, 205],\n",
       "         [121, 151, 199]],\n",
       " \n",
       "        [[133, 166, 205],\n",
       "         [132, 165, 204],\n",
       "         [135, 168, 207],\n",
       "         ...,\n",
       "         [129, 159, 206],\n",
       "         [122, 152, 201],\n",
       "         [120, 150, 199]]], dtype=uint8),\n",
       " array([[[ 65, 102, 166],\n",
       "         [ 91, 132, 201],\n",
       "         [105, 147, 216],\n",
       "         ...,\n",
       "         [ 55,  90, 156],\n",
       "         [ 60,  98, 171],\n",
       "         [ 57,  95, 169]],\n",
       " \n",
       "        [[ 61, 100, 164],\n",
       "         [ 89, 131, 200],\n",
       "         [119, 161, 228],\n",
       "         ...,\n",
       "         [ 54,  89, 157],\n",
       "         [ 58,  97, 171],\n",
       "         [ 58,  98, 171]],\n",
       " \n",
       "        [[ 67, 106, 171],\n",
       "         [108, 150, 218],\n",
       "         [118, 153, 225],\n",
       "         ...,\n",
       "         [ 58,  98, 169],\n",
       "         [ 61, 101, 178],\n",
       "         [ 64, 107, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[140, 186, 254],\n",
       "         [148, 191, 254],\n",
       "         [147, 192, 253],\n",
       "         ...,\n",
       "         [139, 184, 255],\n",
       "         [131, 182, 253],\n",
       "         [134, 181, 253]],\n",
       " \n",
       "        [[141, 186, 255],\n",
       "         [147, 189, 254],\n",
       "         [153, 194, 255],\n",
       "         ...,\n",
       "         [141, 184, 254],\n",
       "         [135, 185, 254],\n",
       "         [136, 180, 253]],\n",
       " \n",
       "        [[139, 187, 255],\n",
       "         [148, 190, 254],\n",
       "         [153, 196, 254],\n",
       "         ...,\n",
       "         [142, 187, 255],\n",
       "         [135, 186, 253],\n",
       "         [135, 180, 253]]], dtype=uint8),\n",
       " array([[[176, 213, 235],\n",
       "         [181, 213, 236],\n",
       "         [184, 216, 239],\n",
       "         ...,\n",
       "         [118, 182, 217],\n",
       "         [121, 185, 216],\n",
       "         [115, 175, 211]],\n",
       " \n",
       "        [[175, 212, 234],\n",
       "         [180, 212, 235],\n",
       "         [182, 214, 237],\n",
       "         ...,\n",
       "         [116, 178, 217],\n",
       "         [119, 182, 216],\n",
       "         [116, 175, 213]],\n",
       " \n",
       "        [[174, 212, 234],\n",
       "         [178, 210, 234],\n",
       "         [180, 212, 236],\n",
       "         ...,\n",
       "         [112, 175, 214],\n",
       "         [121, 183, 219],\n",
       "         [116, 176, 216]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 171, 223],\n",
       "         [114, 174, 224],\n",
       "         [115, 176, 223],\n",
       "         ...,\n",
       "         [112, 172, 218],\n",
       "         [120, 181, 221],\n",
       "         [121, 180, 217]],\n",
       " \n",
       "        [[108, 167, 221],\n",
       "         [109, 170, 221],\n",
       "         [109, 171, 219],\n",
       "         ...,\n",
       "         [111, 171, 219],\n",
       "         [118, 178, 220],\n",
       "         [118, 177, 216]],\n",
       " \n",
       "        [[105, 165, 219],\n",
       "         [109, 170, 220],\n",
       "         [110, 172, 218],\n",
       "         ...,\n",
       "         [109, 167, 219],\n",
       "         [115, 174, 218],\n",
       "         [113, 170, 214]]], dtype=uint8),\n",
       " array([[[162, 165, 216],\n",
       "         [155, 161, 215],\n",
       "         [138, 147, 207],\n",
       "         ...,\n",
       "         [ 92,  96, 148],\n",
       "         [ 89,  93, 146],\n",
       "         [ 90,  94, 146]],\n",
       " \n",
       "        [[159, 163, 215],\n",
       "         [145, 152, 208],\n",
       "         [140, 151, 212],\n",
       "         ...,\n",
       "         [ 96, 100, 151],\n",
       "         [ 93,  97, 148],\n",
       "         [ 89,  93, 144]],\n",
       " \n",
       "        [[156, 163, 217],\n",
       "         [146, 156, 213],\n",
       "         [129, 142, 204],\n",
       "         ...,\n",
       "         [ 87,  91, 140],\n",
       "         [ 91,  95, 144],\n",
       "         [ 90,  94, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 131, 210],\n",
       "         [115, 117, 201],\n",
       "         [115, 117, 201],\n",
       "         ...,\n",
       "         [108, 121, 196],\n",
       "         [113, 125, 202],\n",
       "         [110, 122, 200]],\n",
       " \n",
       "        [[127, 131, 209],\n",
       "         [116, 118, 201],\n",
       "         [114, 117, 199],\n",
       "         ...,\n",
       "         [110, 123, 199],\n",
       "         [112, 124, 202],\n",
       "         [111, 123, 201]],\n",
       " \n",
       "        [[122, 126, 204],\n",
       "         [114, 118, 198],\n",
       "         [120, 124, 204],\n",
       "         ...,\n",
       "         [111, 123, 201],\n",
       "         [115, 126, 204],\n",
       "         [112, 124, 202]]], dtype=uint8),\n",
       " array([[[195, 205, 221],\n",
       "         [192, 202, 218],\n",
       "         [183, 195, 213],\n",
       "         ...,\n",
       "         [ 54,  53,  44],\n",
       "         [ 44,  43,  32],\n",
       "         [ 44,  40,  26]],\n",
       " \n",
       "        [[193, 204, 221],\n",
       "         [190, 201, 219],\n",
       "         [190, 200, 216],\n",
       "         ...,\n",
       "         [ 78,  80,  76],\n",
       "         [ 51,  51,  38],\n",
       "         [ 47,  43,  29]],\n",
       " \n",
       "        [[190, 201, 218],\n",
       "         [189, 200, 217],\n",
       "         [196, 205, 221],\n",
       "         ...,\n",
       "         [ 84,  87,  79],\n",
       "         [ 72,  65,  50],\n",
       "         [ 51,  45,  33]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 147, 175],\n",
       "         [130, 141, 163],\n",
       "         [128, 139, 159],\n",
       "         ...,\n",
       "         [145, 151, 164],\n",
       "         [143, 145, 153],\n",
       "         [148, 145, 143]],\n",
       " \n",
       "        [[135, 146, 173],\n",
       "         [130, 141, 163],\n",
       "         [129, 140, 160],\n",
       "         ...,\n",
       "         [142, 149, 166],\n",
       "         [146, 150, 157],\n",
       "         [153, 149, 146]],\n",
       " \n",
       "        [[136, 147, 172],\n",
       "         [128, 139, 161],\n",
       "         [126, 137, 157],\n",
       "         ...,\n",
       "         [148, 155, 170],\n",
       "         [153, 156, 166],\n",
       "         [149, 145, 141]]], dtype=uint8),\n",
       " array([[[159, 146, 123],\n",
       "         [149, 139, 122],\n",
       "         [195, 205, 216],\n",
       "         ...,\n",
       "         [199, 212, 230],\n",
       "         [190, 205, 224],\n",
       "         [182, 199, 223]],\n",
       " \n",
       "        [[160, 146, 126],\n",
       "         [149, 139, 123],\n",
       "         [189, 202, 212],\n",
       "         ...,\n",
       "         [194, 209, 227],\n",
       "         [190, 204, 226],\n",
       "         [179, 195, 221]],\n",
       " \n",
       "        [[154, 140, 117],\n",
       "         [156, 148, 136],\n",
       "         [184, 196, 204],\n",
       "         ...,\n",
       "         [182, 196, 217],\n",
       "         [186, 201, 223],\n",
       "         [180, 195, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[204, 223, 243],\n",
       "         [204, 224, 243],\n",
       "         [198, 216, 239],\n",
       "         ...,\n",
       "         [202, 223, 247],\n",
       "         [208, 228, 249],\n",
       "         [215, 233, 252]],\n",
       " \n",
       "        [[205, 224, 245],\n",
       "         [203, 221, 243],\n",
       "         [200, 218, 241],\n",
       "         ...,\n",
       "         [211, 231, 253],\n",
       "         [215, 232, 252],\n",
       "         [215, 232, 253]],\n",
       " \n",
       "        [[203, 226, 247],\n",
       "         [205, 225, 248],\n",
       "         [204, 221, 245],\n",
       "         ...,\n",
       "         [216, 234, 253],\n",
       "         [216, 234, 252],\n",
       "         [218, 235, 253]]], dtype=uint8),\n",
       " array([[[121, 128, 143],\n",
       "         [126, 133, 151],\n",
       "         [124, 134, 152],\n",
       "         ...,\n",
       "         [ 89, 104, 133],\n",
       "         [ 88, 104, 133],\n",
       "         [ 88, 104, 133]],\n",
       " \n",
       "        [[133, 141, 155],\n",
       "         [137, 145, 161],\n",
       "         [133, 143, 160],\n",
       "         ...,\n",
       "         [ 87, 101, 129],\n",
       "         [ 86, 100, 128],\n",
       "         [ 84, 100, 129]],\n",
       " \n",
       "        [[144, 154, 164],\n",
       "         [144, 153, 167],\n",
       "         [141, 150, 165],\n",
       "         ...,\n",
       "         [ 80,  94, 119],\n",
       "         [ 79,  92, 119],\n",
       "         [ 78,  93, 120]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 124, 149],\n",
       "         [111, 121, 145],\n",
       "         [106, 116, 140],\n",
       "         ...,\n",
       "         [ 87, 102, 135],\n",
       "         [ 87, 105, 136],\n",
       "         [ 86, 104, 136]],\n",
       " \n",
       "        [[116, 126, 150],\n",
       "         [114, 123, 150],\n",
       "         [110, 119, 146],\n",
       "         ...,\n",
       "         [ 90, 107, 138],\n",
       "         [ 91, 106, 138],\n",
       "         [ 91, 106, 138]],\n",
       " \n",
       "        [[116, 125, 151],\n",
       "         [114, 124, 151],\n",
       "         [110, 121, 149],\n",
       "         ...,\n",
       "         [ 91, 106, 138],\n",
       "         [ 92, 108, 139],\n",
       "         [ 91, 107, 139]]], dtype=uint8),\n",
       " array([[[ 80,  98, 126],\n",
       "         [ 77,  95, 122],\n",
       "         [ 71,  89, 114],\n",
       "         ...,\n",
       "         [149, 162, 185],\n",
       "         [150, 162, 186],\n",
       "         [108, 121, 134]],\n",
       " \n",
       "        [[ 75,  90, 116],\n",
       "         [ 69,  85, 108],\n",
       "         [ 65,  79,  99],\n",
       "         ...,\n",
       "         [140, 151, 171],\n",
       "         [141, 154, 176],\n",
       "         [111, 131, 145]],\n",
       " \n",
       "        [[ 73,  88, 110],\n",
       "         [ 68,  82, 102],\n",
       "         [ 64,  74,  90],\n",
       "         ...,\n",
       "         [111, 118, 127],\n",
       "         [142, 156, 176],\n",
       "         [127, 142, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[139, 159, 192],\n",
       "         [131, 154, 187],\n",
       "         [123, 145, 181],\n",
       "         ...,\n",
       "         [127, 142, 168],\n",
       "         [127, 142, 168],\n",
       "         [134, 150, 174]],\n",
       " \n",
       "        [[140, 161, 193],\n",
       "         [130, 155, 190],\n",
       "         [128, 149, 181],\n",
       "         ...,\n",
       "         [127, 143, 171],\n",
       "         [130, 145, 171],\n",
       "         [134, 149, 175]],\n",
       " \n",
       "        [[142, 160, 196],\n",
       "         [134, 156, 191],\n",
       "         [128, 151, 186],\n",
       "         ...,\n",
       "         [126, 140, 168],\n",
       "         [128, 144, 170],\n",
       "         [134, 149, 175]]], dtype=uint8),\n",
       " array([[[ 58,  61,  66],\n",
       "         [ 97, 110, 128],\n",
       "         [106, 130, 156],\n",
       "         ...,\n",
       "         [108, 142, 188],\n",
       "         [106, 140, 186],\n",
       "         [111, 145, 191]],\n",
       " \n",
       "        [[ 58,  61,  64],\n",
       "         [123, 138, 162],\n",
       "         [ 80,  89, 103],\n",
       "         ...,\n",
       "         [107, 140, 184],\n",
       "         [107, 141, 185],\n",
       "         [111, 144, 190]],\n",
       " \n",
       "        [[ 65,  67,  74],\n",
       "         [ 81,  95, 111],\n",
       "         [ 93, 105, 120],\n",
       "         ...,\n",
       "         [103, 138, 180],\n",
       "         [106, 139, 183],\n",
       "         [108, 142, 186]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 151, 192],\n",
       "         [117, 149, 189],\n",
       "         [111, 144, 187],\n",
       "         ...,\n",
       "         [100, 134, 180],\n",
       "         [107, 142, 188],\n",
       "         [116, 151, 195]],\n",
       " \n",
       "        [[118, 149, 191],\n",
       "         [117, 149, 191],\n",
       "         [113, 147, 189],\n",
       "         ...,\n",
       "         [106, 141, 186],\n",
       "         [116, 151, 195],\n",
       "         [120, 154, 198]],\n",
       " \n",
       "        [[119, 152, 195],\n",
       "         [115, 149, 192],\n",
       "         [114, 147, 191],\n",
       "         ...,\n",
       "         [112, 146, 192],\n",
       "         [120, 155, 199],\n",
       "         [122, 156, 199]]], dtype=uint8),\n",
       " array([[[ 96, 130, 173],\n",
       "         [ 97, 131, 173],\n",
       "         [ 92, 127, 167],\n",
       "         ...,\n",
       "         [113, 140, 167],\n",
       "         [111, 138, 165],\n",
       "         [111, 138, 164]],\n",
       " \n",
       "        [[ 89, 122, 162],\n",
       "         [ 86, 119, 158],\n",
       "         [ 87, 120, 156],\n",
       "         ...,\n",
       "         [110, 137, 164],\n",
       "         [109, 136, 163],\n",
       "         [111, 138, 165]],\n",
       " \n",
       "        [[ 79, 109, 145],\n",
       "         [ 79, 108, 145],\n",
       "         [ 72,  98, 134],\n",
       "         ...,\n",
       "         [102, 129, 155],\n",
       "         [111, 138, 164],\n",
       "         [113, 140, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 69,  91, 123],\n",
       "         [ 57,  74, 107],\n",
       "         [ 53,  68,  98],\n",
       "         ...,\n",
       "         [ 86, 110, 140],\n",
       "         [ 91, 114, 144],\n",
       "         [ 96, 118, 146]],\n",
       " \n",
       "        [[ 76, 101, 135],\n",
       "         [ 68,  89, 123],\n",
       "         [ 56,  74, 107],\n",
       "         ...,\n",
       "         [ 88, 112, 142],\n",
       "         [ 89, 113, 143],\n",
       "         [ 95, 116, 145]],\n",
       " \n",
       "        [[ 79, 106, 140],\n",
       "         [ 79, 106, 138],\n",
       "         [ 68,  89, 124],\n",
       "         ...,\n",
       "         [ 89, 113, 144],\n",
       "         [ 88, 112, 142],\n",
       "         [ 96, 117, 148]]], dtype=uint8),\n",
       " array([[[ 39,  55,  88],\n",
       "         [ 57,  95, 148],\n",
       "         [ 78, 119, 173],\n",
       "         ...,\n",
       "         [139, 179, 227],\n",
       "         [136, 176, 224],\n",
       "         [135, 175, 223]],\n",
       " \n",
       "        [[ 61,  88, 134],\n",
       "         [ 77, 120, 173],\n",
       "         [ 82, 128, 180],\n",
       "         ...,\n",
       "         [137, 177, 225],\n",
       "         [136, 176, 224],\n",
       "         [136, 176, 225]],\n",
       " \n",
       "        [[ 62,  91, 143],\n",
       "         [ 77, 119, 174],\n",
       "         [ 86, 129, 182],\n",
       "         ...,\n",
       "         [132, 173, 222],\n",
       "         [136, 176, 225],\n",
       "         [136, 177, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 133, 189],\n",
       "         [ 96, 143, 197],\n",
       "         [105, 152, 206],\n",
       "         ...,\n",
       "         [ 89, 139, 199],\n",
       "         [ 89, 139, 199],\n",
       "         [ 91, 141, 201]],\n",
       " \n",
       "        [[ 88, 131, 185],\n",
       "         [ 97, 143, 197],\n",
       "         [108, 155, 209],\n",
       "         ...,\n",
       "         [ 90, 140, 200],\n",
       "         [ 89, 139, 199],\n",
       "         [ 87, 137, 197]],\n",
       " \n",
       "        [[ 87, 131, 184],\n",
       "         [ 99, 145, 199],\n",
       "         [108, 155, 208],\n",
       "         ...,\n",
       "         [ 86, 136, 196],\n",
       "         [ 86, 137, 196],\n",
       "         [ 84, 133, 195]]], dtype=uint8),\n",
       " array([[[128, 168, 217],\n",
       "         [129, 169, 216],\n",
       "         [130, 170, 218],\n",
       "         ...,\n",
       "         [ 86, 121, 165],\n",
       "         [ 83, 116, 161],\n",
       "         [ 88, 121, 164]],\n",
       " \n",
       "        [[126, 166, 216],\n",
       "         [127, 167, 216],\n",
       "         [130, 170, 218],\n",
       "         ...,\n",
       "         [ 80, 112, 155],\n",
       "         [ 83, 115, 158],\n",
       "         [ 79, 111, 155]],\n",
       " \n",
       "        [[125, 165, 216],\n",
       "         [126, 166, 217],\n",
       "         [122, 162, 212],\n",
       "         ...,\n",
       "         [ 74, 104, 144],\n",
       "         [ 78, 107, 149],\n",
       "         [ 88, 118, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71, 118, 180],\n",
       "         [ 75, 122, 184],\n",
       "         [ 77, 124, 186],\n",
       "         ...,\n",
       "         [ 88, 132, 191],\n",
       "         [ 87, 127, 179],\n",
       "         [ 91, 124, 169]],\n",
       " \n",
       "        [[ 73, 120, 182],\n",
       "         [ 72, 119, 181],\n",
       "         [ 73, 120, 182],\n",
       "         ...,\n",
       "         [ 91, 133, 192],\n",
       "         [ 89, 127, 180],\n",
       "         [ 91, 124, 173]],\n",
       " \n",
       "        [[ 75, 122, 184],\n",
       "         [ 71, 118, 180],\n",
       "         [ 73, 121, 182],\n",
       "         ...,\n",
       "         [ 90, 130, 188],\n",
       "         [ 89, 126, 180],\n",
       "         [ 93, 127, 175]]], dtype=uint8),\n",
       " array([[[ 94, 106, 137],\n",
       "         [104, 117, 151],\n",
       "         [116, 132, 168],\n",
       "         ...,\n",
       "         [138, 158, 205],\n",
       "         [141, 161, 208],\n",
       "         [147, 165, 212]],\n",
       " \n",
       "        [[119, 131, 163],\n",
       "         [118, 133, 166],\n",
       "         [117, 131, 167],\n",
       "         ...,\n",
       "         [137, 157, 204],\n",
       "         [137, 157, 204],\n",
       "         [140, 159, 207]],\n",
       " \n",
       "        [[120, 132, 165],\n",
       "         [121, 136, 169],\n",
       "         [123, 139, 171],\n",
       "         ...,\n",
       "         [129, 152, 199],\n",
       "         [134, 154, 201],\n",
       "         [132, 152, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 149, 183],\n",
       "         [136, 153, 189],\n",
       "         [138, 156, 197],\n",
       "         ...,\n",
       "         [105, 126, 172],\n",
       "         [105, 128, 173],\n",
       "         [104, 127, 173]],\n",
       " \n",
       "        [[131, 146, 180],\n",
       "         [135, 153, 190],\n",
       "         [136, 155, 196],\n",
       "         ...,\n",
       "         [107, 128, 173],\n",
       "         [104, 127, 172],\n",
       "         [104, 127, 172]],\n",
       " \n",
       "        [[128, 142, 177],\n",
       "         [133, 149, 188],\n",
       "         [136, 155, 196],\n",
       "         ...,\n",
       "         [104, 125, 170],\n",
       "         [108, 129, 174],\n",
       "         [106, 127, 172]]], dtype=uint8),\n",
       " array([[[133, 133, 157],\n",
       "         [130, 130, 154],\n",
       "         [131, 129, 154],\n",
       "         ...,\n",
       "         [190, 176, 189],\n",
       "         [190, 177, 191],\n",
       "         [185, 175, 188]],\n",
       " \n",
       "        [[134, 135, 157],\n",
       "         [127, 127, 150],\n",
       "         [130, 130, 153],\n",
       "         ...,\n",
       "         [195, 180, 192],\n",
       "         [190, 177, 189],\n",
       "         [188, 175, 188]],\n",
       " \n",
       "        [[132, 133, 154],\n",
       "         [134, 135, 156],\n",
       "         [133, 133, 154],\n",
       "         ...,\n",
       "         [194, 178, 190],\n",
       "         [189, 175, 187],\n",
       "         [185, 173, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 146, 171],\n",
       "         [149, 145, 171],\n",
       "         [149, 144, 171],\n",
       "         ...,\n",
       "         [148, 147, 173],\n",
       "         [148, 146, 175],\n",
       "         [146, 144, 173]],\n",
       " \n",
       "        [[149, 146, 170],\n",
       "         [151, 146, 172],\n",
       "         [153, 146, 173],\n",
       "         ...,\n",
       "         [152, 151, 177],\n",
       "         [150, 148, 177],\n",
       "         [149, 147, 176]],\n",
       " \n",
       "        [[151, 147, 172],\n",
       "         [153, 146, 172],\n",
       "         [152, 145, 172],\n",
       "         ...,\n",
       "         [156, 155, 181],\n",
       "         [154, 152, 181],\n",
       "         [154, 152, 181]]], dtype=uint8),\n",
       " array([[[ 79,  86, 103],\n",
       "         [ 90,  99, 119],\n",
       "         [ 97, 105, 129],\n",
       "         ...,\n",
       "         [162, 166, 191],\n",
       "         [164, 168, 193],\n",
       "         [166, 171, 196]],\n",
       " \n",
       "        [[ 80,  88, 110],\n",
       "         [ 93, 102, 125],\n",
       "         [ 93, 103, 130],\n",
       "         ...,\n",
       "         [156, 157, 183],\n",
       "         [155, 159, 184],\n",
       "         [158, 162, 189]],\n",
       " \n",
       "        [[ 81,  89, 114],\n",
       "         [ 92, 102, 129],\n",
       "         [ 92, 103, 131],\n",
       "         ...,\n",
       "         [128, 128, 152],\n",
       "         [140, 142, 167],\n",
       "         [143, 146, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 100, 133],\n",
       "         [ 96, 104, 140],\n",
       "         [100, 108, 145],\n",
       "         ...,\n",
       "         [120, 126, 155],\n",
       "         [114, 120, 149],\n",
       "         [104, 112, 141]],\n",
       " \n",
       "        [[ 91, 100, 134],\n",
       "         [ 97, 104, 142],\n",
       "         [100, 107, 146],\n",
       "         ...,\n",
       "         [119, 125, 154],\n",
       "         [112, 119, 148],\n",
       "         [100, 108, 137]],\n",
       " \n",
       "        [[ 91,  99, 136],\n",
       "         [ 97, 104, 142],\n",
       "         [101, 108, 147],\n",
       "         ...,\n",
       "         [121, 127, 155],\n",
       "         [109, 116, 145],\n",
       "         [ 98, 106, 135]]], dtype=uint8),\n",
       " array([[[167, 163, 221],\n",
       "         [180, 174, 229],\n",
       "         [179, 172, 223],\n",
       "         ...,\n",
       "         [ 89,  85, 120],\n",
       "         [ 60,  61,  95],\n",
       "         [ 96,  99, 133]],\n",
       " \n",
       "        [[164, 161, 219],\n",
       "         [174, 168, 223],\n",
       "         [173, 166, 217],\n",
       "         ...,\n",
       "         [ 50,  46,  81],\n",
       "         [ 88,  88, 124],\n",
       "         [ 87,  89, 124]],\n",
       " \n",
       "        [[159, 157, 215],\n",
       "         [163, 158, 213],\n",
       "         [174, 169, 220],\n",
       "         ...,\n",
       "         [127, 124, 160],\n",
       "         [ 84,  84, 120],\n",
       "         [ 94,  95, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 126, 180],\n",
       "         [124, 128, 178],\n",
       "         [106, 111, 160],\n",
       "         ...,\n",
       "         [ 79,  92, 135],\n",
       "         [ 84,  94, 137],\n",
       "         [ 85,  94, 136]],\n",
       " \n",
       "        [[124, 127, 178],\n",
       "         [118, 122, 172],\n",
       "         [112, 118, 165],\n",
       "         ...,\n",
       "         [103, 115, 163],\n",
       "         [ 97, 110, 157],\n",
       "         [ 92, 103, 150]],\n",
       " \n",
       "        [[125, 128, 179],\n",
       "         [113, 118, 167],\n",
       "         [112, 118, 165],\n",
       "         ...,\n",
       "         [ 96, 108, 156],\n",
       "         [ 96, 108, 156],\n",
       "         [ 91, 104, 152]]], dtype=uint8),\n",
       " array([[[167, 184, 208],\n",
       "         [152, 175, 205],\n",
       "         [149, 171, 205],\n",
       "         ...,\n",
       "         [160, 179, 226],\n",
       "         [176, 194, 233],\n",
       "         [195, 209, 237]],\n",
       " \n",
       "        [[169, 187, 208],\n",
       "         [164, 183, 208],\n",
       "         [143, 167, 202],\n",
       "         ...,\n",
       "         [146, 164, 211],\n",
       "         [164, 182, 227],\n",
       "         [181, 199, 235]],\n",
       " \n",
       "        [[167, 187, 207],\n",
       "         [166, 184, 207],\n",
       "         [140, 164, 199],\n",
       "         ...,\n",
       "         [117, 138, 184],\n",
       "         [166, 186, 223],\n",
       "         [178, 198, 232]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 171, 218],\n",
       "         [153, 177, 220],\n",
       "         [153, 178, 224],\n",
       "         ...,\n",
       "         [143, 168, 219],\n",
       "         [142, 165, 215],\n",
       "         [139, 162, 214]],\n",
       " \n",
       "        [[152, 175, 220],\n",
       "         [152, 176, 221],\n",
       "         [157, 181, 224],\n",
       "         ...,\n",
       "         [144, 167, 218],\n",
       "         [145, 168, 215],\n",
       "         [140, 161, 216]],\n",
       " \n",
       "        [[148, 174, 217],\n",
       "         [147, 174, 221],\n",
       "         [155, 178, 224],\n",
       "         ...,\n",
       "         [144, 167, 219],\n",
       "         [142, 164, 214],\n",
       "         [141, 161, 216]]], dtype=uint8),\n",
       " array([[[157, 193, 220],\n",
       "         [150, 187, 219],\n",
       "         [136, 177, 218],\n",
       "         ...,\n",
       "         [196, 211, 240],\n",
       "         [183, 207, 236],\n",
       "         [171, 204, 232]],\n",
       " \n",
       "        [[151, 189, 223],\n",
       "         [142, 179, 218],\n",
       "         [138, 177, 218],\n",
       "         ...,\n",
       "         [195, 213, 243],\n",
       "         [181, 207, 238],\n",
       "         [171, 204, 232]],\n",
       " \n",
       "        [[128, 171, 212],\n",
       "         [128, 171, 211],\n",
       "         [119, 166, 209],\n",
       "         ...,\n",
       "         [191, 211, 240],\n",
       "         [176, 204, 234],\n",
       "         [180, 205, 234]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[213, 225, 244],\n",
       "         [214, 226, 245],\n",
       "         [216, 227, 245],\n",
       "         ...,\n",
       "         [215, 226, 245],\n",
       "         [215, 225, 245],\n",
       "         [211, 226, 245]],\n",
       " \n",
       "        [[210, 223, 245],\n",
       "         [211, 224, 246],\n",
       "         [213, 225, 245],\n",
       "         ...,\n",
       "         [214, 228, 246],\n",
       "         [212, 226, 245],\n",
       "         [210, 224, 246]],\n",
       " \n",
       "        [[209, 221, 245],\n",
       "         [209, 221, 245],\n",
       "         [211, 224, 245],\n",
       "         ...,\n",
       "         [213, 227, 245],\n",
       "         [211, 226, 245],\n",
       "         [205, 224, 245]]], dtype=uint8),\n",
       " array([[[154, 174, 221],\n",
       "         [152, 172, 219],\n",
       "         [154, 174, 221],\n",
       "         ...,\n",
       "         [119, 137, 174],\n",
       "         [ 99, 113, 150],\n",
       "         [ 86,  96, 127]],\n",
       " \n",
       "        [[152, 173, 219],\n",
       "         [153, 173, 220],\n",
       "         [154, 174, 221],\n",
       "         ...,\n",
       "         [122, 140, 177],\n",
       "         [109, 126, 163],\n",
       "         [ 88, 100, 133]],\n",
       " \n",
       "        [[152, 173, 218],\n",
       "         [153, 173, 220],\n",
       "         [154, 174, 221],\n",
       "         ...,\n",
       "         [120, 138, 175],\n",
       "         [115, 133, 170],\n",
       "         [102, 115, 150]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 152, 196],\n",
       "         [124, 147, 192],\n",
       "         [122, 145, 191],\n",
       "         ...,\n",
       "         [124, 145, 188],\n",
       "         [130, 149, 186],\n",
       "         [133, 149, 184]],\n",
       " \n",
       "        [[129, 151, 196],\n",
       "         [129, 151, 196],\n",
       "         [123, 146, 193],\n",
       "         ...,\n",
       "         [123, 144, 189],\n",
       "         [132, 151, 191],\n",
       "         [131, 147, 181]],\n",
       " \n",
       "        [[129, 152, 197],\n",
       "         [130, 152, 197],\n",
       "         [131, 153, 198],\n",
       "         ...,\n",
       "         [126, 147, 192],\n",
       "         [135, 153, 193],\n",
       "         [133, 148, 184]]], dtype=uint8),\n",
       " array([[[ 21,  28,  38],\n",
       "         [ 40,  57,  77],\n",
       "         [ 40,  58,  82],\n",
       "         ...,\n",
       "         [ 60,  80, 114],\n",
       "         [ 57,  78, 113],\n",
       "         [ 56,  77, 111]],\n",
       " \n",
       "        [[ 26,  39,  50],\n",
       "         [ 37,  55,  78],\n",
       "         [ 40,  60,  85],\n",
       "         ...,\n",
       "         [ 59,  79, 114],\n",
       "         [ 58,  78, 112],\n",
       "         [ 56,  77, 109]],\n",
       " \n",
       "        [[ 44,  60,  80],\n",
       "         [ 54,  71,  97],\n",
       "         [ 48,  68,  93],\n",
       "         ...,\n",
       "         [ 59,  79, 114],\n",
       "         [ 61,  79, 112],\n",
       "         [ 58,  77, 110]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  88, 114],\n",
       "         [ 62,  83, 110],\n",
       "         [ 61,  82, 110],\n",
       "         ...,\n",
       "         [ 35,  58,  90],\n",
       "         [ 33,  56,  88],\n",
       "         [ 34,  58,  91]],\n",
       " \n",
       "        [[ 64,  83, 107],\n",
       "         [ 63,  82, 109],\n",
       "         [ 62,  83, 110],\n",
       "         ...,\n",
       "         [ 34,  57,  89],\n",
       "         [ 33,  56,  88],\n",
       "         [ 37,  61,  94]],\n",
       " \n",
       "        [[ 58,  78, 100],\n",
       "         [ 66,  85, 112],\n",
       "         [ 63,  84, 111],\n",
       "         ...,\n",
       "         [ 34,  57,  89],\n",
       "         [ 35,  58,  91],\n",
       "         [ 39,  64,  98]]], dtype=uint8),\n",
       " array([[[ 47,  67, 102],\n",
       "         [ 48,  68, 103],\n",
       "         [ 47,  67, 102],\n",
       "         ...,\n",
       "         [ 23,  28,  44],\n",
       "         [ 20,  24,  33],\n",
       "         [ 13,  17,  20]],\n",
       " \n",
       "        [[ 48,  68, 103],\n",
       "         [ 51,  71, 106],\n",
       "         [ 50,  70, 105],\n",
       "         ...,\n",
       "         [ 26,  32,  51],\n",
       "         [ 24,  29,  44],\n",
       "         [ 23,  26,  34]],\n",
       " \n",
       "        [[ 48,  68, 103],\n",
       "         [ 50,  70, 105],\n",
       "         [ 49,  69, 104],\n",
       "         ...,\n",
       "         [ 30,  40,  58],\n",
       "         [ 29,  36,  53],\n",
       "         [ 27,  34,  47]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 32,  52,  85],\n",
       "         [ 28,  43,  75],\n",
       "         [ 26,  40,  67],\n",
       "         ...,\n",
       "         [ 30,  45,  71],\n",
       "         [ 37,  51,  71],\n",
       "         [ 48,  60,  73]],\n",
       " \n",
       "        [[ 33,  52,  85],\n",
       "         [ 30,  47,  78],\n",
       "         [ 27,  41,  69],\n",
       "         ...,\n",
       "         [ 30,  46,  72],\n",
       "         [ 36,  50,  72],\n",
       "         [ 48,  60,  73]],\n",
       " \n",
       "        [[ 35,  54,  87],\n",
       "         [ 31,  48,  79],\n",
       "         [ 27,  41,  69],\n",
       "         ...,\n",
       "         [ 30,  46,  72],\n",
       "         [ 36,  50,  72],\n",
       "         [ 49,  59,  73]]], dtype=uint8),\n",
       " array([[[109, 117, 131],\n",
       "         [117, 126, 136],\n",
       "         [132, 138, 150],\n",
       "         ...,\n",
       "         [125, 135, 165],\n",
       "         [126, 136, 167],\n",
       "         [125, 136, 167]],\n",
       " \n",
       "        [[116, 122, 135],\n",
       "         [120, 128, 138],\n",
       "         [127, 132, 141],\n",
       "         ...,\n",
       "         [120, 131, 160],\n",
       "         [121, 132, 162],\n",
       "         [120, 130, 163]],\n",
       " \n",
       "        [[104, 109, 120],\n",
       "         [109, 113, 124],\n",
       "         [119, 122, 128],\n",
       "         ...,\n",
       "         [108, 118, 148],\n",
       "         [115, 125, 155],\n",
       "         [121, 130, 162]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[157, 163, 177],\n",
       "         [157, 162, 176],\n",
       "         [156, 162, 177],\n",
       "         ...,\n",
       "         [ 74,  74,  90],\n",
       "         [ 68,  68,  82],\n",
       "         [ 82,  82,  94]],\n",
       " \n",
       "        [[158, 163, 179],\n",
       "         [162, 167, 182],\n",
       "         [162, 167, 181],\n",
       "         ...,\n",
       "         [ 92,  93, 112],\n",
       "         [ 93,  95, 113],\n",
       "         [ 55,  55,  66]],\n",
       " \n",
       "        [[156, 163, 179],\n",
       "         [162, 169, 184],\n",
       "         [163, 168, 186],\n",
       "         ...,\n",
       "         [103, 109, 130],\n",
       "         [101, 105, 126],\n",
       "         [ 88,  92, 110]]], dtype=uint8),\n",
       " array([[[134, 137, 168],\n",
       "         [133, 136, 167],\n",
       "         [133, 136, 167],\n",
       "         ...,\n",
       "         [ 89, 105, 133],\n",
       "         [ 88, 104, 133],\n",
       "         [ 85,  99, 128]],\n",
       " \n",
       "        [[131, 134, 165],\n",
       "         [124, 127, 158],\n",
       "         [121, 126, 156],\n",
       "         ...,\n",
       "         [ 89, 106, 133],\n",
       "         [ 92, 106, 134],\n",
       "         [ 89, 104, 131]],\n",
       " \n",
       "        [[109, 114, 145],\n",
       "         [111, 117, 148],\n",
       "         [ 96, 101, 133],\n",
       "         ...,\n",
       "         [ 86,  99, 125],\n",
       "         [ 90, 106, 132],\n",
       "         [ 89, 105, 130]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 145, 166],\n",
       "         [ 97, 108, 145],\n",
       "         [103, 115, 151],\n",
       "         ...,\n",
       "         [107, 121, 150],\n",
       "         [102, 116, 144],\n",
       "         [135, 135, 151]],\n",
       " \n",
       "        [[ 38,  44,  66],\n",
       "         [137, 145, 168],\n",
       "         [100, 110, 149],\n",
       "         ...,\n",
       "         [110, 124, 155],\n",
       "         [115, 124, 149],\n",
       "         [202, 194, 194]],\n",
       " \n",
       "        [[ 65,  74, 108],\n",
       "         [ 75,  81, 101],\n",
       "         [127, 135, 161],\n",
       "         ...,\n",
       "         [112, 123, 151],\n",
       "         [200, 188, 185],\n",
       "         [136, 129, 137]]], dtype=uint8),\n",
       " array([[[ 66,  78,  96],\n",
       "         [ 82,  95, 113],\n",
       "         [ 95, 111, 128],\n",
       "         ...,\n",
       "         [162, 183, 184],\n",
       "         [160, 181, 183],\n",
       "         [165, 186, 187]],\n",
       " \n",
       "        [[ 67,  78,  96],\n",
       "         [ 81,  95, 111],\n",
       "         [ 99, 115, 131],\n",
       "         ...,\n",
       "         [155, 176, 177],\n",
       "         [159, 180, 182],\n",
       "         [159, 180, 182]],\n",
       " \n",
       "        [[ 72,  84, 101],\n",
       "         [ 83,  98, 114],\n",
       "         [ 95, 110, 126],\n",
       "         ...,\n",
       "         [147, 167, 169],\n",
       "         [150, 171, 174],\n",
       "         [152, 175, 178]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[102, 131, 152],\n",
       "         [103, 133, 152],\n",
       "         [102, 132, 151],\n",
       "         ...,\n",
       "         [104, 127, 139],\n",
       "         [102, 128, 143],\n",
       "         [ 99, 125, 141]],\n",
       " \n",
       "        [[104, 133, 154],\n",
       "         [104, 134, 153],\n",
       "         [106, 136, 155],\n",
       "         ...,\n",
       "         [112, 136, 148],\n",
       "         [105, 132, 146],\n",
       "         [104, 130, 145]],\n",
       " \n",
       "        [[105, 135, 154],\n",
       "         [106, 136, 154],\n",
       "         [105, 137, 156],\n",
       "         ...,\n",
       "         [112, 138, 152],\n",
       "         [111, 137, 153],\n",
       "         [106, 132, 149]]], dtype=uint8),\n",
       " array([[[191, 202, 199],\n",
       "         [190, 201, 198],\n",
       "         [193, 204, 201],\n",
       "         ...,\n",
       "         [115, 130, 138],\n",
       "         [114, 129, 138],\n",
       "         [109, 124, 133]],\n",
       " \n",
       "        [[187, 199, 196],\n",
       "         [185, 196, 193],\n",
       "         [186, 199, 195],\n",
       "         ...,\n",
       "         [108, 122, 130],\n",
       "         [113, 128, 136],\n",
       "         [111, 126, 135]],\n",
       " \n",
       "        [[181, 195, 193],\n",
       "         [179, 193, 191],\n",
       "         [176, 190, 188],\n",
       "         ...,\n",
       "         [ 88, 101, 109],\n",
       "         [105, 118, 126],\n",
       "         [112, 125, 135]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[106, 132, 144],\n",
       "         [105, 130, 142],\n",
       "         [103, 130, 141],\n",
       "         ...,\n",
       "         [132, 159, 172],\n",
       "         [131, 160, 172],\n",
       "         [132, 161, 172]],\n",
       " \n",
       "        [[110, 136, 148],\n",
       "         [109, 135, 147],\n",
       "         [107, 135, 146],\n",
       "         ...,\n",
       "         [134, 162, 173],\n",
       "         [135, 163, 174],\n",
       "         [134, 162, 173]],\n",
       " \n",
       "        [[114, 140, 152],\n",
       "         [113, 140, 151],\n",
       "         [111, 139, 150],\n",
       "         ...,\n",
       "         [139, 165, 177],\n",
       "         [137, 163, 175],\n",
       "         [136, 163, 175]]], dtype=uint8),\n",
       " array([[[171, 175, 200],\n",
       "         [170, 173, 201],\n",
       "         [172, 175, 202],\n",
       "         ...,\n",
       "         [107, 114, 130],\n",
       "         [ 89,  95, 105],\n",
       "         [ 60,  68,  75]],\n",
       " \n",
       "        [[171, 175, 200],\n",
       "         [172, 177, 202],\n",
       "         [171, 175, 200],\n",
       "         ...,\n",
       "         [105, 115, 131],\n",
       "         [ 91,  99, 110],\n",
       "         [ 64,  71,  79]],\n",
       " \n",
       "        [[168, 172, 196],\n",
       "         [171, 175, 200],\n",
       "         [170, 174, 199],\n",
       "         ...,\n",
       "         [109, 122, 140],\n",
       "         [100, 109, 122],\n",
       "         [ 68,  77,  86]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[150, 157, 197],\n",
       "         [149, 157, 195],\n",
       "         [148, 157, 191],\n",
       "         ...,\n",
       "         [145, 159, 201],\n",
       "         [146, 158, 198],\n",
       "         [145, 157, 197]],\n",
       " \n",
       "        [[153, 159, 198],\n",
       "         [151, 158, 197],\n",
       "         [145, 154, 192],\n",
       "         ...,\n",
       "         [146, 157, 199],\n",
       "         [143, 156, 198],\n",
       "         [142, 155, 197]],\n",
       " \n",
       "        [[153, 158, 197],\n",
       "         [153, 160, 199],\n",
       "         [149, 158, 196],\n",
       "         ...,\n",
       "         [143, 153, 198],\n",
       "         [145, 154, 197],\n",
       "         [142, 151, 195]]], dtype=uint8),\n",
       " array([[[ 83, 116, 135],\n",
       "         [100, 138, 153],\n",
       "         [132, 163, 178],\n",
       "         ...,\n",
       "         [192, 221, 218],\n",
       "         [196, 224, 221],\n",
       "         [198, 225, 222]],\n",
       " \n",
       "        [[ 82, 116, 133],\n",
       "         [105, 142, 155],\n",
       "         [133, 163, 179],\n",
       "         ...,\n",
       "         [188, 219, 216],\n",
       "         [191, 220, 216],\n",
       "         [194, 223, 220]],\n",
       " \n",
       "        [[ 95, 130, 144],\n",
       "         [106, 143, 157],\n",
       "         [122, 158, 168],\n",
       "         ...,\n",
       "         [177, 213, 208],\n",
       "         [182, 216, 214],\n",
       "         [186, 218, 216]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 177, 191],\n",
       "         [126, 177, 194],\n",
       "         [127, 178, 194],\n",
       "         ...,\n",
       "         [133, 178, 190],\n",
       "         [130, 173, 188],\n",
       "         [127, 169, 186]],\n",
       " \n",
       "        [[127, 178, 192],\n",
       "         [130, 180, 197],\n",
       "         [129, 181, 197],\n",
       "         ...,\n",
       "         [135, 180, 191],\n",
       "         [132, 176, 189],\n",
       "         [127, 171, 187]],\n",
       " \n",
       "        [[130, 180, 196],\n",
       "         [130, 181, 197],\n",
       "         [131, 183, 199],\n",
       "         ...,\n",
       "         [136, 180, 193],\n",
       "         [132, 176, 189],\n",
       "         [130, 174, 191]]], dtype=uint8),\n",
       " array([[[215, 232, 229],\n",
       "         [216, 233, 230],\n",
       "         [214, 231, 228],\n",
       "         ...,\n",
       "         [151, 181, 182],\n",
       "         [147, 176, 180],\n",
       "         [140, 169, 173]],\n",
       " \n",
       "        [[209, 229, 225],\n",
       "         [210, 229, 226],\n",
       "         [211, 230, 227],\n",
       "         ...,\n",
       "         [132, 163, 164],\n",
       "         [141, 170, 174],\n",
       "         [139, 170, 173]],\n",
       " \n",
       "        [[205, 227, 222],\n",
       "         [205, 227, 222],\n",
       "         [201, 224, 217],\n",
       "         ...,\n",
       "         [105, 137, 139],\n",
       "         [132, 161, 164],\n",
       "         [141, 170, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 170, 179],\n",
       "         [126, 169, 178],\n",
       "         [126, 169, 178],\n",
       "         ...,\n",
       "         [160, 203, 207],\n",
       "         [158, 203, 206],\n",
       "         [161, 205, 206]],\n",
       " \n",
       "        [[135, 179, 186],\n",
       "         [128, 174, 181],\n",
       "         [130, 176, 183],\n",
       "         ...,\n",
       "         [161, 206, 206],\n",
       "         [162, 206, 207],\n",
       "         [163, 207, 208]],\n",
       " \n",
       "        [[136, 181, 185],\n",
       "         [134, 180, 187],\n",
       "         [134, 180, 187],\n",
       "         ...,\n",
       "         [168, 209, 212],\n",
       "         [165, 209, 210],\n",
       "         [165, 209, 210]]], dtype=uint8),\n",
       " array([[[ 37,  37,  32],\n",
       "         [ 46,  50,  49],\n",
       "         [ 51,  56,  57],\n",
       "         ...,\n",
       "         [ 67,  82, 101],\n",
       "         [ 79,  93, 115],\n",
       "         [ 69,  83, 105]],\n",
       " \n",
       "        [[ 44,  45,  43],\n",
       "         [ 47,  52,  51],\n",
       "         [ 53,  58,  59],\n",
       "         ...,\n",
       "         [ 65,  79,  98],\n",
       "         [ 72,  86, 108],\n",
       "         [ 63,  77,  99]],\n",
       " \n",
       "        [[ 46,  50,  48],\n",
       "         [ 50,  55,  54],\n",
       "         [ 53,  58,  58],\n",
       "         ...,\n",
       "         [ 61,  75,  94],\n",
       "         [ 62,  77,  96],\n",
       "         [ 60,  74,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  45,  50],\n",
       "         [ 44,  47,  53],\n",
       "         [ 43,  46,  55],\n",
       "         ...,\n",
       "         [ 39,  49,  73],\n",
       "         [ 30,  40,  64],\n",
       "         [ 30,  37,  62]],\n",
       " \n",
       "        [[ 43,  47,  51],\n",
       "         [ 46,  49,  54],\n",
       "         [ 46,  49,  57],\n",
       "         ...,\n",
       "         [ 35,  44,  69],\n",
       "         [ 28,  38,  62],\n",
       "         [ 34,  41,  66]],\n",
       " \n",
       "        [[ 49,  52,  56],\n",
       "         [ 48,  52,  57],\n",
       "         [ 48,  53,  62],\n",
       "         ...,\n",
       "         [ 35,  46,  70],\n",
       "         [ 32,  40,  65],\n",
       "         [ 37,  44,  69]]], dtype=uint8),\n",
       " array([[[200, 209, 244],\n",
       "         [199, 207, 244],\n",
       "         [197, 204, 243],\n",
       "         ...,\n",
       "         [130, 142, 193],\n",
       "         [136, 149, 196],\n",
       "         [138, 153, 196]],\n",
       " \n",
       "        [[198, 206, 243],\n",
       "         [197, 204, 242],\n",
       "         [194, 201, 241],\n",
       "         ...,\n",
       "         [131, 143, 197],\n",
       "         [137, 151, 200],\n",
       "         [142, 157, 204]],\n",
       " \n",
       "        [[196, 203, 242],\n",
       "         [195, 201, 242],\n",
       "         [192, 198, 241],\n",
       "         ...,\n",
       "         [126, 139, 197],\n",
       "         [130, 145, 197],\n",
       "         [140, 156, 205]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[205, 205, 246],\n",
       "         [201, 202, 245],\n",
       "         [197, 201, 245],\n",
       "         ...,\n",
       "         [184, 188, 232],\n",
       "         [189, 191, 233],\n",
       "         [194, 197, 237]],\n",
       " \n",
       "        [[206, 205, 246],\n",
       "         [202, 202, 245],\n",
       "         [197, 199, 244],\n",
       "         ...,\n",
       "         [187, 191, 235],\n",
       "         [190, 191, 234],\n",
       "         [196, 197, 237]],\n",
       " \n",
       "        [[205, 204, 245],\n",
       "         [202, 202, 245],\n",
       "         [197, 199, 243],\n",
       "         ...,\n",
       "         [185, 189, 233],\n",
       "         [188, 190, 232],\n",
       "         [196, 197, 237]]], dtype=uint8),\n",
       " array([[[ 86, 105, 131],\n",
       "         [ 93, 114, 135],\n",
       "         [101, 120, 140],\n",
       "         ...,\n",
       "         [135, 156, 167],\n",
       "         [118, 142, 154],\n",
       "         [101, 126, 137]],\n",
       " \n",
       "        [[ 77,  99, 124],\n",
       "         [ 83, 105, 130],\n",
       "         [ 83, 103, 124],\n",
       "         ...,\n",
       "         [135, 157, 168],\n",
       "         [124, 149, 159],\n",
       "         [104, 129, 141]],\n",
       " \n",
       "        [[ 59,  80, 107],\n",
       "         [ 73,  96, 120],\n",
       "         [ 70,  91, 113],\n",
       "         ...,\n",
       "         [131, 153, 164],\n",
       "         [121, 146, 157],\n",
       "         [101, 127, 138]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[176, 187, 196],\n",
       "         [129, 155, 173],\n",
       "         [117, 142, 162],\n",
       "         ...,\n",
       "         [112, 120, 133],\n",
       "         [125, 137, 149],\n",
       "         [130, 146, 160]],\n",
       " \n",
       "        [[179, 185, 194],\n",
       "         [138, 160, 176],\n",
       "         [130, 154, 174],\n",
       "         ...,\n",
       "         [122, 131, 144],\n",
       "         [134, 144, 157],\n",
       "         [133, 150, 163]],\n",
       " \n",
       "        [[191, 198, 205],\n",
       "         [143, 163, 179],\n",
       "         [134, 159, 179],\n",
       "         ...,\n",
       "         [135, 144, 157],\n",
       "         [135, 144, 157],\n",
       "         [138, 155, 168]]], dtype=uint8),\n",
       " array([[[ 48,  50,  51],\n",
       "         [ 60,  65,  68],\n",
       "         [ 65,  70,  77],\n",
       "         ...,\n",
       "         [ 91, 108, 134],\n",
       "         [108, 125, 152],\n",
       "         [ 99, 116, 142]],\n",
       " \n",
       "        [[ 55,  60,  60],\n",
       "         [ 62,  68,  71],\n",
       "         [ 63,  71,  77],\n",
       "         ...,\n",
       "         [ 80,  98, 123],\n",
       "         [ 88, 105, 132],\n",
       "         [ 89, 105, 134]],\n",
       " \n",
       "        [[ 55,  61,  62],\n",
       "         [ 64,  71,  74],\n",
       "         [ 60,  69,  74],\n",
       "         ...,\n",
       "         [ 74,  91, 117],\n",
       "         [ 81,  99, 126],\n",
       "         [ 80,  97, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  60,  68],\n",
       "         [ 52,  59,  70],\n",
       "         [ 51,  60,  70],\n",
       "         ...,\n",
       "         [ 42,  58,  88],\n",
       "         [ 35,  50,  79],\n",
       "         [ 38,  49,  77]],\n",
       " \n",
       "        [[ 58,  64,  72],\n",
       "         [ 55,  62,  73],\n",
       "         [ 55,  66,  76],\n",
       "         ...,\n",
       "         [ 37,  52,  80],\n",
       "         [ 39,  49,  79],\n",
       "         [ 39,  50,  82]],\n",
       " \n",
       "        [[ 57,  62,  71],\n",
       "         [ 51,  60,  72],\n",
       "         [ 51,  63,  76],\n",
       "         ...,\n",
       "         [ 37,  50,  78],\n",
       "         [ 36,  48,  76],\n",
       "         [ 37,  47,  74]]], dtype=uint8),\n",
       " array([[[121, 136, 166],\n",
       "         [128, 143, 171],\n",
       "         [131, 147, 173],\n",
       "         ...,\n",
       "         [143, 168, 188],\n",
       "         [123, 150, 170],\n",
       "         [ 96, 124, 140]],\n",
       " \n",
       "        [[117, 134, 164],\n",
       "         [122, 138, 167],\n",
       "         [124, 141, 168],\n",
       "         ...,\n",
       "         [138, 162, 183],\n",
       "         [124, 153, 173],\n",
       "         [103, 132, 150]],\n",
       " \n",
       "        [[104, 125, 157],\n",
       "         [118, 138, 170],\n",
       "         [120, 142, 170],\n",
       "         ...,\n",
       "         [137, 163, 180],\n",
       "         [125, 154, 173],\n",
       "         [105, 137, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[185, 192, 207],\n",
       "         [191, 200, 216],\n",
       "         [140, 169, 194],\n",
       "         ...,\n",
       "         [127, 134, 153],\n",
       "         [125, 136, 156],\n",
       "         [138, 152, 173]],\n",
       " \n",
       "        [[179, 186, 200],\n",
       "         [197, 202, 214],\n",
       "         [149, 172, 194],\n",
       "         ...,\n",
       "         [131, 138, 157],\n",
       "         [131, 142, 162],\n",
       "         [146, 160, 181]],\n",
       " \n",
       "        [[195, 202, 216],\n",
       "         [203, 208, 219],\n",
       "         [160, 177, 196],\n",
       "         ...,\n",
       "         [137, 146, 166],\n",
       "         [147, 157, 176],\n",
       "         [151, 165, 185]]], dtype=uint8),\n",
       " array([[[ 26,  28,  31],\n",
       "         [ 92, 106, 117],\n",
       "         [ 90, 108, 119],\n",
       "         ...,\n",
       "         [116, 140, 169],\n",
       "         [109, 136, 166],\n",
       "         [ 99, 126, 156]],\n",
       " \n",
       "        [[ 28,  31,  35],\n",
       "         [104, 115, 126],\n",
       "         [102, 115, 127],\n",
       "         ...,\n",
       "         [ 99, 124, 156],\n",
       "         [ 98, 126, 157],\n",
       "         [ 92, 120, 151]],\n",
       " \n",
       "        [[ 24,  25,  29],\n",
       "         [100, 109, 118],\n",
       "         [107, 116, 126],\n",
       "         ...,\n",
       "         [ 90, 115, 146],\n",
       "         [ 87, 113, 145],\n",
       "         [ 86, 114, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[131, 146, 159],\n",
       "         [122, 140, 156],\n",
       "         [113, 136, 152],\n",
       "         ...,\n",
       "         [106, 134, 167],\n",
       "         [110, 140, 169],\n",
       "         [124, 152, 182]],\n",
       " \n",
       "        [[133, 148, 161],\n",
       "         [123, 141, 157],\n",
       "         [114, 139, 155],\n",
       "         ...,\n",
       "         [104, 133, 165],\n",
       "         [115, 144, 173],\n",
       "         [132, 160, 190]],\n",
       " \n",
       "        [[131, 148, 160],\n",
       "         [124, 142, 157],\n",
       "         [113, 137, 154],\n",
       "         ...,\n",
       "         [110, 138, 169],\n",
       "         [129, 157, 187],\n",
       "         [134, 163, 190]]], dtype=uint8),\n",
       " array([[[145, 168, 192],\n",
       "         [136, 161, 181],\n",
       "         [140, 165, 184],\n",
       "         ...,\n",
       "         [ 92, 120, 142],\n",
       "         [ 86, 114, 134],\n",
       "         [ 75, 100, 120]],\n",
       " \n",
       "        [[125, 148, 175],\n",
       "         [124, 147, 173],\n",
       "         [119, 143, 167],\n",
       "         ...,\n",
       "         [104, 131, 152],\n",
       "         [ 91, 118, 138],\n",
       "         [ 72,  97, 117]],\n",
       " \n",
       "        [[115, 137, 166],\n",
       "         [108, 131, 157],\n",
       "         [105, 127, 152],\n",
       "         ...,\n",
       "         [111, 138, 155],\n",
       "         [ 94, 119, 139],\n",
       "         [ 76, 101, 121]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[141, 165, 195],\n",
       "         [130, 152, 180],\n",
       "         [114, 135, 164],\n",
       "         ...,\n",
       "         [189, 212, 228],\n",
       "         [185, 209, 225],\n",
       "         [173, 198, 214]],\n",
       " \n",
       "        [[144, 168, 198],\n",
       "         [132, 154, 182],\n",
       "         [127, 148, 174],\n",
       "         ...,\n",
       "         [189, 212, 228],\n",
       "         [183, 207, 223],\n",
       "         [164, 189, 205]],\n",
       " \n",
       "        [[149, 171, 202],\n",
       "         [135, 157, 186],\n",
       "         [131, 154, 180],\n",
       "         ...,\n",
       "         [182, 207, 224],\n",
       "         [169, 196, 211],\n",
       "         [165, 192, 208]]], dtype=uint8),\n",
       " array([[[ 97, 111, 121],\n",
       "         [119, 147, 158],\n",
       "         [140, 164, 178],\n",
       "         ...,\n",
       "         [124, 154, 186],\n",
       "         [123, 155, 189],\n",
       "         [113, 147, 182]],\n",
       " \n",
       "        [[ 93, 108, 116],\n",
       "         [122, 143, 153],\n",
       "         [151, 169, 181],\n",
       "         ...,\n",
       "         [115, 141, 180],\n",
       "         [113, 143, 180],\n",
       "         [109, 142, 180]],\n",
       " \n",
       "        [[103, 113, 118],\n",
       "         [135, 149, 158],\n",
       "         [157, 168, 177],\n",
       "         ...,\n",
       "         [115, 142, 178],\n",
       "         [115, 142, 179],\n",
       "         [109, 139, 176]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 180, 190],\n",
       "         [157, 174, 186],\n",
       "         [147, 171, 187],\n",
       "         ...,\n",
       "         [125, 156, 185],\n",
       "         [119, 156, 186],\n",
       "         [124, 161, 190]],\n",
       " \n",
       "        [[169, 181, 192],\n",
       "         [156, 175, 186],\n",
       "         [147, 174, 187],\n",
       "         ...,\n",
       "         [123, 158, 187],\n",
       "         [123, 158, 188],\n",
       "         [126, 162, 192]],\n",
       " \n",
       "        [[168, 181, 189],\n",
       "         [158, 176, 188],\n",
       "         [147, 173, 187],\n",
       "         ...,\n",
       "         [125, 161, 191],\n",
       "         [130, 165, 195],\n",
       "         [132, 167, 195]]], dtype=uint8),\n",
       " array([[[ 53,  70,  88],\n",
       "         [ 58,  75,  95],\n",
       "         [ 62,  78, 101],\n",
       "         ...,\n",
       "         [143, 176, 221],\n",
       "         [143, 176, 221],\n",
       "         [144, 177, 222]],\n",
       " \n",
       "        [[ 52,  72,  89],\n",
       "         [ 55,  75,  93],\n",
       "         [ 60,  79, 100],\n",
       "         ...,\n",
       "         [142, 175, 220],\n",
       "         [145, 178, 223],\n",
       "         [150, 181, 226]],\n",
       " \n",
       "        [[ 54,  74,  92],\n",
       "         [ 56,  76,  94],\n",
       "         [ 56,  76,  95],\n",
       "         ...,\n",
       "         [144, 176, 221],\n",
       "         [146, 179, 224],\n",
       "         [152, 181, 226]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 58,  77,  98],\n",
       "         [ 65,  84, 106],\n",
       "         [ 72,  90, 112],\n",
       "         ...,\n",
       "         [ 73,  88, 106],\n",
       "         [ 82,  98, 133],\n",
       "         [ 90, 111, 149]],\n",
       " \n",
       "        [[ 57,  76,  97],\n",
       "         [ 64,  83, 105],\n",
       "         [ 72,  90, 113],\n",
       "         ...,\n",
       "         [ 80,  97, 118],\n",
       "         [ 84, 102, 136],\n",
       "         [ 89, 110, 148]],\n",
       " \n",
       "        [[ 55,  74,  95],\n",
       "         [ 62,  81, 103],\n",
       "         [ 72,  90, 113],\n",
       "         ...,\n",
       "         [ 84, 102, 128],\n",
       "         [ 80, 102, 135],\n",
       "         [ 87, 107, 145]]], dtype=uint8),\n",
       " array([[[174, 196, 212],\n",
       "         [178, 200, 215],\n",
       "         [156, 183, 200],\n",
       "         ...,\n",
       "         [110, 146, 166],\n",
       "         [ 85, 122, 146],\n",
       "         [ 55,  86, 101]],\n",
       " \n",
       "        [[159, 189, 206],\n",
       "         [151, 178, 198],\n",
       "         [149, 176, 196],\n",
       "         ...,\n",
       "         [105, 142, 163],\n",
       "         [ 84, 121, 144],\n",
       "         [ 63,  95, 114]],\n",
       " \n",
       "        [[142, 171, 193],\n",
       "         [139, 167, 190],\n",
       "         [134, 161, 185],\n",
       "         ...,\n",
       "         [114, 151, 168],\n",
       "         [ 93, 132, 152],\n",
       "         [ 63,  94, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 170, 199],\n",
       "         [100, 127, 163],\n",
       "         [ 89, 121, 156],\n",
       "         ...,\n",
       "         [203, 219, 231],\n",
       "         [200, 218, 229],\n",
       "         [196, 214, 225]],\n",
       " \n",
       "        [[157, 181, 207],\n",
       "         [131, 154, 186],\n",
       "         [ 96, 129, 162],\n",
       "         ...,\n",
       "         [216, 226, 236],\n",
       "         [206, 220, 232],\n",
       "         [194, 212, 223]],\n",
       " \n",
       "        [[165, 189, 213],\n",
       "         [145, 171, 196],\n",
       "         [113, 139, 172],\n",
       "         ...,\n",
       "         [216, 226, 236],\n",
       "         [200, 217, 230],\n",
       "         [197, 216, 227]]], dtype=uint8),\n",
       " array([[[107, 110, 114],\n",
       "         [114, 117, 121],\n",
       "         [110, 115, 118],\n",
       "         ...,\n",
       "         [ 82,  88, 108],\n",
       "         [ 88,  95, 118],\n",
       "         [ 77,  89, 113]],\n",
       " \n",
       "        [[106, 109, 113],\n",
       "         [115, 118, 122],\n",
       "         [114, 119, 122],\n",
       "         ...,\n",
       "         [ 75,  81, 100],\n",
       "         [ 86,  92, 114],\n",
       "         [ 80,  91, 114]],\n",
       " \n",
       "        [[112, 115, 119],\n",
       "         [111, 116, 119],\n",
       "         [119, 124, 127],\n",
       "         ...,\n",
       "         [ 75,  80, 100],\n",
       "         [ 82,  89, 109],\n",
       "         [ 84,  92, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 83,  92, 101],\n",
       "         [ 73,  82,  91],\n",
       "         [ 80,  89,  99],\n",
       "         ...,\n",
       "         [ 23,  30,  39],\n",
       "         [ 27,  31,  40],\n",
       "         [ 31,  33,  43]],\n",
       " \n",
       "        [[ 85,  94, 103],\n",
       "         [ 85,  94, 103],\n",
       "         [ 70,  79,  89],\n",
       "         ...,\n",
       "         [ 24,  30,  41],\n",
       "         [ 23,  26,  38],\n",
       "         [ 32,  34,  45]],\n",
       " \n",
       "        [[ 89,  96, 105],\n",
       "         [ 97, 106, 116],\n",
       "         [ 91, 100, 110],\n",
       "         ...,\n",
       "         [ 21,  27,  39],\n",
       "         [ 17,  21,  32],\n",
       "         [ 29,  33,  44]]], dtype=uint8),\n",
       " array([[[109, 120, 139],\n",
       "         [126, 133, 153],\n",
       "         [134, 138, 156],\n",
       "         ...,\n",
       "         [144, 158, 176],\n",
       "         [148, 164, 181],\n",
       "         [142, 157, 176]],\n",
       " \n",
       "        [[111, 121, 141],\n",
       "         [116, 122, 142],\n",
       "         [130, 134, 152],\n",
       "         ...,\n",
       "         [145, 159, 177],\n",
       "         [147, 163, 180],\n",
       "         [138, 154, 173]],\n",
       " \n",
       "        [[102, 110, 133],\n",
       "         [108, 115, 134],\n",
       "         [114, 120, 139],\n",
       "         ...,\n",
       "         [147, 161, 178],\n",
       "         [145, 159, 177],\n",
       "         [147, 161, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 140, 150],\n",
       "         [142, 133, 143],\n",
       "         [127, 119, 126],\n",
       "         ...,\n",
       "         [152, 152, 167],\n",
       "         [172, 176, 190],\n",
       "         [178, 186, 203]],\n",
       " \n",
       "        [[130, 122, 133],\n",
       "         [132, 123, 133],\n",
       "         [146, 138, 145],\n",
       "         ...,\n",
       "         [171, 172, 186],\n",
       "         [185, 189, 203],\n",
       "         [171, 179, 196]],\n",
       " \n",
       "        [[124, 118, 131],\n",
       "         [131, 123, 134],\n",
       "         [171, 162, 172],\n",
       "         ...,\n",
       "         [175, 176, 190],\n",
       "         [172, 176, 190],\n",
       "         [172, 182, 199]]], dtype=uint8),\n",
       " array([[[ 99, 133, 151],\n",
       "         [105, 135, 156],\n",
       "         [ 94, 130, 154],\n",
       "         ...,\n",
       "         [120, 159, 191],\n",
       "         [154, 187, 209],\n",
       "         [160, 188, 204]],\n",
       " \n",
       "        [[103, 136, 156],\n",
       "         [111, 143, 163],\n",
       "         [ 95, 130, 154],\n",
       "         ...,\n",
       "         [109, 151, 187],\n",
       "         [131, 167, 196],\n",
       "         [133, 172, 195]],\n",
       " \n",
       "        [[105, 137, 156],\n",
       "         [113, 147, 166],\n",
       "         [ 94, 134, 157],\n",
       "         ...,\n",
       "         [103, 145, 183],\n",
       "         [102, 149, 185],\n",
       "         [111, 155, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71, 116, 149],\n",
       "         [ 52,  97, 133],\n",
       "         [ 29,  73, 108],\n",
       "         ...,\n",
       "         [ 12,  25,  51],\n",
       "         [ 18,  39,  80],\n",
       "         [ 92, 136, 175]],\n",
       " \n",
       "        [[ 96, 136, 165],\n",
       "         [ 75, 121, 154],\n",
       "         [ 72, 116, 153],\n",
       "         ...,\n",
       "         [  2,  13,  38],\n",
       "         [ 62,  96, 142],\n",
       "         [ 86, 134, 174]],\n",
       " \n",
       "        [[ 94, 134, 161],\n",
       "         [ 84, 128, 156],\n",
       "         [ 86, 129, 161],\n",
       "         ...,\n",
       "         [ 33,  55,  94],\n",
       "         [ 72, 105, 156],\n",
       "         [ 78, 123, 168]]], dtype=uint8),\n",
       " array([[[ 80, 124, 178],\n",
       "         [ 78, 122, 175],\n",
       "         [ 76, 121, 172],\n",
       "         ...,\n",
       "         [166, 190, 207],\n",
       "         [165, 189, 205],\n",
       "         [151, 176, 190]],\n",
       " \n",
       "        [[ 67, 109, 168],\n",
       "         [ 65, 107, 165],\n",
       "         [ 71, 115, 170],\n",
       "         ...,\n",
       "         [164, 193, 213],\n",
       "         [150, 180, 198],\n",
       "         [160, 190, 207]],\n",
       " \n",
       "        [[ 53,  94, 157],\n",
       "         [ 55,  96, 159],\n",
       "         [ 60, 101, 161],\n",
       "         ...,\n",
       "         [123, 150, 176],\n",
       "         [159, 187, 211],\n",
       "         [153, 182, 203]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[228, 238, 237],\n",
       "         [232, 241, 239],\n",
       "         [234, 241, 237],\n",
       "         ...,\n",
       "         [223, 231, 231],\n",
       "         [220, 230, 230],\n",
       "         [221, 233, 233]],\n",
       " \n",
       "        [[226, 237, 236],\n",
       "         [231, 239, 237],\n",
       "         [233, 240, 236],\n",
       "         ...,\n",
       "         [228, 236, 236],\n",
       "         [224, 235, 235],\n",
       "         [223, 235, 235]],\n",
       " \n",
       "        [[225, 235, 234],\n",
       "         [229, 238, 236],\n",
       "         [232, 239, 235],\n",
       "         ...,\n",
       "         [230, 238, 238],\n",
       "         [226, 236, 236],\n",
       "         [223, 235, 235]]], dtype=uint8),\n",
       " array([[[110, 145, 176],\n",
       "         [130, 152, 183],\n",
       "         [125, 151, 178],\n",
       "         ...,\n",
       "         [178, 198, 210],\n",
       "         [147, 179, 200],\n",
       "         [149, 182, 203]],\n",
       " \n",
       "        [[ 79, 120, 162],\n",
       "         [120, 150, 181],\n",
       "         [127, 154, 181],\n",
       "         ...,\n",
       "         [170, 194, 206],\n",
       "         [154, 184, 202],\n",
       "         [149, 179, 199]],\n",
       " \n",
       "        [[ 81, 120, 164],\n",
       "         [ 94, 135, 171],\n",
       "         [ 94, 130, 168],\n",
       "         ...,\n",
       "         [156, 183, 198],\n",
       "         [155, 182, 198],\n",
       "         [151, 180, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 124, 161],\n",
       "         [152, 166, 188],\n",
       "         [151, 163, 181],\n",
       "         ...,\n",
       "         [189, 195, 202],\n",
       "         [219, 215, 224],\n",
       "         [208, 208, 217]],\n",
       " \n",
       "        [[106, 133, 169],\n",
       "         [123, 148, 177],\n",
       "         [156, 171, 191],\n",
       "         ...,\n",
       "         [199, 201, 208],\n",
       "         [213, 214, 222],\n",
       "         [209, 209, 219]],\n",
       " \n",
       "        [[115, 143, 178],\n",
       "         [129, 152, 184],\n",
       "         [147, 163, 189],\n",
       "         ...,\n",
       "         [213, 210, 219],\n",
       "         [224, 220, 227],\n",
       "         [221, 217, 225]]], dtype=uint8),\n",
       " array([[[120, 135, 146],\n",
       "         [160, 177, 189],\n",
       "         [176, 191, 203],\n",
       "         ...,\n",
       "         [205, 214, 223],\n",
       "         [196, 208, 216],\n",
       "         [183, 199, 208]],\n",
       " \n",
       "        [[139, 155, 168],\n",
       "         [170, 186, 198],\n",
       "         [172, 184, 195],\n",
       "         ...,\n",
       "         [193, 202, 211],\n",
       "         [189, 200, 208],\n",
       "         [174, 190, 199]],\n",
       " \n",
       "        [[149, 165, 177],\n",
       "         [158, 173, 184],\n",
       "         [166, 179, 188],\n",
       "         ...,\n",
       "         [176, 187, 195],\n",
       "         [180, 193, 201],\n",
       "         [175, 189, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 198, 214],\n",
       "         [170, 185, 202],\n",
       "         [170, 184, 202],\n",
       "         ...,\n",
       "         [127, 152, 177],\n",
       "         [133, 159, 185],\n",
       "         [135, 161, 190]],\n",
       " \n",
       "        [[180, 195, 211],\n",
       "         [176, 191, 208],\n",
       "         [177, 192, 208],\n",
       "         ...,\n",
       "         [134, 158, 183],\n",
       "         [136, 162, 188],\n",
       "         [148, 172, 200]],\n",
       " \n",
       "        [[180, 196, 209],\n",
       "         [177, 191, 209],\n",
       "         [179, 193, 211],\n",
       "         ...,\n",
       "         [143, 169, 194],\n",
       "         [146, 173, 199],\n",
       "         [163, 187, 213]]], dtype=uint8),\n",
       " array([[[130, 150, 167],\n",
       "         [129, 147, 164],\n",
       "         [126, 144, 161],\n",
       "         ...,\n",
       "         [ 35,  36,  38],\n",
       "         [  8,   5,   7],\n",
       "         [  9,   6,   6]],\n",
       " \n",
       "        [[128, 147, 164],\n",
       "         [125, 143, 160],\n",
       "         [126, 142, 158],\n",
       "         ...,\n",
       "         [ 44,  44,  47],\n",
       "         [ 10,   8,  10],\n",
       "         [  9,   7,   7]],\n",
       " \n",
       "        [[124, 143, 160],\n",
       "         [124, 141, 157],\n",
       "         [107, 123, 137],\n",
       "         ...,\n",
       "         [ 47,  48,  51],\n",
       "         [ 10,  10,  11],\n",
       "         [  8,   6,   6]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 57,  74, 100],\n",
       "         [ 48,  64,  91],\n",
       "         [ 37,  54,  80],\n",
       "         ...,\n",
       "         [ 72,  89, 107],\n",
       "         [ 67,  82, 101],\n",
       "         [ 68,  82, 101]],\n",
       " \n",
       "        [[ 66,  82, 106],\n",
       "         [ 54,  69,  95],\n",
       "         [ 48,  65,  91],\n",
       "         ...,\n",
       "         [ 70,  92, 111],\n",
       "         [ 65,  82, 101],\n",
       "         [ 62,  77,  96]],\n",
       " \n",
       "        [[ 71,  87, 110],\n",
       "         [ 51,  66,  93],\n",
       "         [ 53,  70,  96],\n",
       "         ...,\n",
       "         [ 75,  98, 120],\n",
       "         [ 71,  89, 110],\n",
       "         [ 55,  70,  89]]], dtype=uint8),\n",
       " array([[[118, 128, 151],\n",
       "         [121, 129, 152],\n",
       "         [128, 137, 158],\n",
       "         ...,\n",
       "         [180, 189, 198],\n",
       "         [195, 201, 207],\n",
       "         [195, 199, 198]],\n",
       " \n",
       "        [[118, 130, 152],\n",
       "         [127, 135, 158],\n",
       "         [140, 148, 170],\n",
       "         ...,\n",
       "         [169, 178, 187],\n",
       "         [172, 181, 189],\n",
       "         [172, 181, 186]],\n",
       " \n",
       "        [[116, 132, 155],\n",
       "         [120, 134, 156],\n",
       "         [129, 142, 163],\n",
       "         ...,\n",
       "         [150, 160, 165],\n",
       "         [153, 162, 168],\n",
       "         [155, 164, 171]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[160, 172, 199],\n",
       "         [159, 174, 200],\n",
       "         [161, 176, 202],\n",
       "         ...,\n",
       "         [178, 178, 181],\n",
       "         [178, 180, 184],\n",
       "         [158, 166, 170]],\n",
       " \n",
       "        [[183, 196, 219],\n",
       "         [171, 184, 209],\n",
       "         [167, 181, 204],\n",
       "         ...,\n",
       "         [205, 203, 204],\n",
       "         [180, 183, 187],\n",
       "         [163, 171, 174]],\n",
       " \n",
       "        [[185, 196, 219],\n",
       "         [181, 194, 216],\n",
       "         [165, 179, 202],\n",
       "         ...,\n",
       "         [192, 191, 194],\n",
       "         [172, 177, 183],\n",
       "         [166, 176, 182]]], dtype=uint8),\n",
       " array([[[254, 254, 250],\n",
       "         [247, 247, 239],\n",
       "         [201, 200, 190],\n",
       "         ...,\n",
       "         [ 83,  70,  72],\n",
       "         [ 82,  69,  71],\n",
       "         [ 80,  70,  71]],\n",
       " \n",
       "        [[254, 255, 249],\n",
       "         [202, 202, 190],\n",
       "         [170, 168, 154],\n",
       "         ...,\n",
       "         [ 80,  67,  69],\n",
       "         [ 77,  63,  66],\n",
       "         [ 79,  68,  70]],\n",
       " \n",
       "        [[237, 237, 228],\n",
       "         [185, 181, 167],\n",
       "         [166, 161, 147],\n",
       "         ...,\n",
       "         [ 77,  66,  68],\n",
       "         [ 73,  61,  63],\n",
       "         [ 73,  62,  64]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 180, 169],\n",
       "         [175, 181, 169],\n",
       "         [186, 193, 180],\n",
       "         ...,\n",
       "         [ 75,  77,  75],\n",
       "         [165, 168, 163],\n",
       "         [215, 218, 216]],\n",
       " \n",
       "        [[189, 196, 185],\n",
       "         [191, 198, 186],\n",
       "         [202, 209, 196],\n",
       "         ...,\n",
       "         [143, 144, 142],\n",
       "         [197, 202, 197],\n",
       "         [206, 210, 205]],\n",
       " \n",
       "        [[188, 196, 185],\n",
       "         [194, 200, 190],\n",
       "         [184, 191, 179],\n",
       "         ...,\n",
       "         [200, 203, 201],\n",
       "         [204, 208, 203],\n",
       "         [212, 217, 212]]], dtype=uint8),\n",
       " array([[[132, 157, 203],\n",
       "         [141, 162, 207],\n",
       "         [140, 161, 206],\n",
       "         ...,\n",
       "         [ 86, 118, 167],\n",
       "         [ 85, 117, 166],\n",
       "         [ 78, 108, 158]],\n",
       " \n",
       "        [[133, 158, 202],\n",
       "         [135, 161, 205],\n",
       "         [138, 160, 202],\n",
       "         ...,\n",
       "         [ 89, 122, 169],\n",
       "         [ 84, 117, 166],\n",
       "         [ 74, 107, 156]],\n",
       " \n",
       "        [[131, 156, 200],\n",
       "         [128, 153, 197],\n",
       "         [137, 159, 201],\n",
       "         ...,\n",
       "         [ 93, 126, 171],\n",
       "         [ 87, 121, 166],\n",
       "         [ 75, 107, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 165, 209],\n",
       "         [136, 164, 207],\n",
       "         [139, 167, 208],\n",
       "         ...,\n",
       "         [115, 143, 186],\n",
       "         [112, 138, 187],\n",
       "         [103, 132, 181]],\n",
       " \n",
       "        [[138, 167, 211],\n",
       "         [141, 168, 212],\n",
       "         [144, 172, 213],\n",
       "         ...,\n",
       "         [123, 151, 195],\n",
       "         [113, 142, 191],\n",
       "         [111, 141, 190]],\n",
       " \n",
       "        [[140, 168, 209],\n",
       "         [141, 169, 210],\n",
       "         [146, 174, 215],\n",
       "         ...,\n",
       "         [121, 147, 196],\n",
       "         [116, 146, 191],\n",
       "         [111, 141, 190]]], dtype=uint8),\n",
       " array([[[128, 122, 117],\n",
       "         [122, 116, 111],\n",
       "         [123, 116, 112],\n",
       "         ...,\n",
       "         [181, 165, 158],\n",
       "         [152, 136, 129],\n",
       "         [121, 105,  99]],\n",
       " \n",
       "        [[116, 109, 107],\n",
       "         [111, 104, 102],\n",
       "         [120, 112, 110],\n",
       "         ...,\n",
       "         [184, 168, 162],\n",
       "         [156, 141, 135],\n",
       "         [123, 108, 102]],\n",
       " \n",
       "        [[ 99,  92,  92],\n",
       "         [104,  97,  98],\n",
       "         [101,  94,  94],\n",
       "         ...,\n",
       "         [184, 168, 162],\n",
       "         [153, 139, 133],\n",
       "         [129, 115, 109]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 110, 132],\n",
       "         [ 92,  98, 121],\n",
       "         [ 87,  91, 116],\n",
       "         ...,\n",
       "         [ 83,  81, 103],\n",
       "         [ 68,  67,  89],\n",
       "         [101,  98, 119]],\n",
       " \n",
       "        [[103, 113, 135],\n",
       "         [103, 109, 132],\n",
       "         [ 92,  95, 120],\n",
       "         ...,\n",
       "         [ 72,  74,  98],\n",
       "         [ 65,  67,  91],\n",
       "         [ 73,  73,  97]],\n",
       " \n",
       "        [[104, 114, 138],\n",
       "         [104, 110, 133],\n",
       "         [103, 108, 133],\n",
       "         ...,\n",
       "         [ 57,  61,  85],\n",
       "         [ 70,  72,  96],\n",
       "         [ 68,  69,  90]]], dtype=uint8),\n",
       " array([[[ 60,  64,  74],\n",
       "         [ 61,  67,  81],\n",
       "         [ 63,  69,  84],\n",
       "         ...,\n",
       "         [ 65,  73, 102],\n",
       "         [ 71,  78, 107],\n",
       "         [ 68,  79, 110]],\n",
       " \n",
       "        [[ 63,  66,  80],\n",
       "         [ 61,  67,  80],\n",
       "         [ 61,  67,  82],\n",
       "         ...,\n",
       "         [ 63,  73,  99],\n",
       "         [ 64,  73, 100],\n",
       "         [ 64,  74, 102]],\n",
       " \n",
       "        [[ 63,  69,  82],\n",
       "         [ 60,  67,  81],\n",
       "         [ 61,  69,  84],\n",
       "         ...,\n",
       "         [ 61,  67,  90],\n",
       "         [ 60,  66,  91],\n",
       "         [ 61,  69,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  72,  91],\n",
       "         [ 61,  69,  89],\n",
       "         [ 59,  66,  86],\n",
       "         ...,\n",
       "         [ 48,  60,  90],\n",
       "         [ 52,  63,  93],\n",
       "         [ 53,  64,  94]],\n",
       " \n",
       "        [[ 65,  73,  91],\n",
       "         [ 64,  71,  91],\n",
       "         [ 58,  66,  89],\n",
       "         ...,\n",
       "         [ 51,  62,  92],\n",
       "         [ 51,  62,  92],\n",
       "         [ 52,  63,  93]],\n",
       " \n",
       "        [[ 65,  74,  93],\n",
       "         [ 62,  70,  93],\n",
       "         [ 60,  67,  91],\n",
       "         ...,\n",
       "         [ 52,  64,  95],\n",
       "         [ 53,  64,  94],\n",
       "         [ 53,  64,  94]]], dtype=uint8),\n",
       " array([[[118, 124, 153],\n",
       "         [122, 125, 154],\n",
       "         [127, 129, 158],\n",
       "         ...,\n",
       "         [122, 115, 120],\n",
       "         [116, 107, 110],\n",
       "         [114, 107, 110]],\n",
       " \n",
       "        [[114, 120, 149],\n",
       "         [117, 121, 150],\n",
       "         [117, 121, 146],\n",
       "         ...,\n",
       "         [132, 128, 135],\n",
       "         [113, 106, 108],\n",
       "         [112, 103, 106]],\n",
       " \n",
       "        [[109, 117, 145],\n",
       "         [112, 116, 145],\n",
       "         [110, 114, 142],\n",
       "         ...,\n",
       "         [149, 147, 154],\n",
       "         [110, 104, 107],\n",
       "         [112, 103, 106]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 181, 203],\n",
       "         [180, 178, 198],\n",
       "         [176, 172, 190],\n",
       "         ...,\n",
       "         [191, 190, 200],\n",
       "         [200, 199, 210],\n",
       "         [202, 200, 213]],\n",
       " \n",
       "        [[183, 184, 205],\n",
       "         [188, 187, 207],\n",
       "         [180, 178, 196],\n",
       "         ...,\n",
       "         [202, 201, 211],\n",
       "         [202, 201, 212],\n",
       "         [208, 206, 218]],\n",
       " \n",
       "        [[183, 186, 210],\n",
       "         [186, 186, 207],\n",
       "         [187, 185, 205],\n",
       "         ...,\n",
       "         [207, 206, 216],\n",
       "         [208, 207, 217],\n",
       "         [209, 207, 219]]], dtype=uint8),\n",
       " array([[[ 54,  55,  61],\n",
       "         [120, 133, 146],\n",
       "         [130, 149, 164],\n",
       "         ...,\n",
       "         [197, 198, 208],\n",
       "         [199, 200, 210],\n",
       "         [199, 200, 210]],\n",
       " \n",
       "        [[ 66,  72,  82],\n",
       "         [129, 145, 158],\n",
       "         [130, 147, 159],\n",
       "         ...,\n",
       "         [196, 196, 202],\n",
       "         [199, 199, 205],\n",
       "         [199, 197, 206]],\n",
       " \n",
       "        [[ 86,  94, 105],\n",
       "         [129, 145, 158],\n",
       "         [129, 147, 159],\n",
       "         ...,\n",
       "         [190, 189, 195],\n",
       "         [194, 194, 200],\n",
       "         [198, 197, 205]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 162, 179],\n",
       "         [143, 160, 179],\n",
       "         [140, 159, 178],\n",
       "         ...,\n",
       "         [157, 173, 189],\n",
       "         [157, 173, 191],\n",
       "         [158, 173, 192]],\n",
       " \n",
       "        [[145, 163, 180],\n",
       "         [145, 162, 181],\n",
       "         [143, 161, 181],\n",
       "         ...,\n",
       "         [158, 174, 191],\n",
       "         [158, 173, 191],\n",
       "         [158, 173, 192]],\n",
       " \n",
       "        [[145, 165, 182],\n",
       "         [145, 164, 182],\n",
       "         [145, 165, 183],\n",
       "         ...,\n",
       "         [158, 174, 192],\n",
       "         [160, 175, 194],\n",
       "         [160, 175, 194]]], dtype=uint8),\n",
       " array([[[199, 201, 211],\n",
       "         [200, 201, 211],\n",
       "         [201, 202, 212],\n",
       "         ...,\n",
       "         [166, 183, 196],\n",
       "         [151, 167, 183],\n",
       "         [139, 154, 170]],\n",
       " \n",
       "        [[200, 202, 212],\n",
       "         [201, 202, 212],\n",
       "         [201, 202, 212],\n",
       "         ...,\n",
       "         [170, 186, 199],\n",
       "         [158, 174, 190],\n",
       "         [143, 159, 175]],\n",
       " \n",
       "        [[202, 201, 210],\n",
       "         [204, 202, 209],\n",
       "         [203, 202, 210],\n",
       "         ...,\n",
       "         [172, 187, 199],\n",
       "         [162, 179, 192],\n",
       "         [147, 164, 177]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 150, 173],\n",
       "         [134, 150, 173],\n",
       "         [137, 154, 174],\n",
       "         ...,\n",
       "         [188, 197, 210],\n",
       "         [191, 200, 213],\n",
       "         [192, 202, 214]],\n",
       " \n",
       "        [[140, 154, 177],\n",
       "         [136, 153, 174],\n",
       "         [140, 157, 178],\n",
       "         ...,\n",
       "         [192, 204, 215],\n",
       "         [196, 205, 218],\n",
       "         [196, 205, 218]],\n",
       " \n",
       "        [[144, 159, 178],\n",
       "         [139, 156, 177],\n",
       "         [141, 158, 179],\n",
       "         ...,\n",
       "         [199, 208, 220],\n",
       "         [199, 208, 221],\n",
       "         [199, 208, 221]]], dtype=uint8),\n",
       " array([[[138, 147, 164],\n",
       "         [135, 143, 160],\n",
       "         [138, 146, 163],\n",
       "         ...,\n",
       "         [101, 111, 129],\n",
       "         [ 97, 107, 125],\n",
       "         [ 99, 109, 127]],\n",
       " \n",
       "        [[132, 140, 157],\n",
       "         [129, 137, 154],\n",
       "         [131, 139, 156],\n",
       "         ...,\n",
       "         [108, 120, 138],\n",
       "         [103, 116, 134],\n",
       "         [103, 116, 134]],\n",
       " \n",
       "        [[136, 144, 161],\n",
       "         [135, 143, 160],\n",
       "         [135, 143, 160],\n",
       "         ...,\n",
       "         [112, 127, 144],\n",
       "         [108, 123, 141],\n",
       "         [103, 119, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 121, 138],\n",
       "         [109, 123, 141],\n",
       "         [107, 118, 136],\n",
       "         ...,\n",
       "         [133, 136, 151],\n",
       "         [112, 118, 133],\n",
       "         [114, 120, 135]],\n",
       " \n",
       "        [[106, 119, 137],\n",
       "         [113, 124, 142],\n",
       "         [116, 124, 143],\n",
       "         ...,\n",
       "         [124, 127, 142],\n",
       "         [119, 124, 139],\n",
       "         [109, 116, 132]],\n",
       " \n",
       "        [[107, 119, 137],\n",
       "         [108, 118, 136],\n",
       "         [113, 120, 139],\n",
       "         ...,\n",
       "         [125, 128, 143],\n",
       "         [117, 122, 138],\n",
       "         [104, 111, 129]]], dtype=uint8),\n",
       " array([[[ 88, 112, 122],\n",
       "         [ 91, 115, 126],\n",
       "         [ 87, 112, 122],\n",
       "         ...,\n",
       "         [ 79, 108, 138],\n",
       "         [ 79, 109, 140],\n",
       "         [ 80, 109, 140]],\n",
       " \n",
       "        [[ 83, 107, 111],\n",
       "         [ 79, 105, 113],\n",
       "         [ 80, 109, 118],\n",
       "         ...,\n",
       "         [ 76, 105, 135],\n",
       "         [ 79, 108, 138],\n",
       "         [ 79, 108, 138]],\n",
       " \n",
       "        [[ 70,  94,  95],\n",
       "         [ 75, 101, 105],\n",
       "         [ 69,  97, 101],\n",
       "         ...,\n",
       "         [ 83, 108, 136],\n",
       "         [ 85, 110, 139],\n",
       "         [ 83, 110, 140]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 115, 141],\n",
       "         [ 84, 111, 138],\n",
       "         [ 77, 107, 131],\n",
       "         ...,\n",
       "         [ 57,  81, 111],\n",
       "         [ 63,  87, 117],\n",
       "         [ 62,  86, 116]],\n",
       " \n",
       "        [[ 91, 117, 145],\n",
       "         [ 86, 113, 140],\n",
       "         [ 82, 110, 139],\n",
       "         ...,\n",
       "         [ 66,  91, 121],\n",
       "         [ 65,  89, 119],\n",
       "         [ 69,  94, 124]],\n",
       " \n",
       "        [[ 88, 117, 146],\n",
       "         [ 86, 114, 144],\n",
       "         [ 83, 114, 143],\n",
       "         ...,\n",
       "         [ 66,  90, 120],\n",
       "         [ 73,  96, 126],\n",
       "         [ 72,  97, 127]]], dtype=uint8),\n",
       " array([[[ 96, 134, 162],\n",
       "         [113, 145, 174],\n",
       "         [108, 140, 169],\n",
       "         ...,\n",
       "         [168, 201, 206],\n",
       "         [189, 220, 225],\n",
       "         [151, 186, 187]],\n",
       " \n",
       "        [[ 95, 133, 161],\n",
       "         [108, 139, 168],\n",
       "         [108, 140, 169],\n",
       "         ...,\n",
       "         [162, 197, 206],\n",
       "         [179, 212, 217],\n",
       "         [185, 217, 222]],\n",
       " \n",
       "        [[101, 134, 163],\n",
       "         [104, 136, 165],\n",
       "         [102, 134, 163],\n",
       "         ...,\n",
       "         [148, 183, 193],\n",
       "         [160, 196, 201],\n",
       "         [181, 214, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[122, 161, 183],\n",
       "         [126, 165, 187],\n",
       "         [124, 165, 187],\n",
       "         ...,\n",
       "         [149, 184, 205],\n",
       "         [154, 194, 210],\n",
       "         [169, 205, 219]],\n",
       " \n",
       "        [[122, 159, 181],\n",
       "         [130, 167, 189],\n",
       "         [129, 166, 188],\n",
       "         ...,\n",
       "         [152, 187, 208],\n",
       "         [154, 191, 210],\n",
       "         [163, 202, 216]],\n",
       " \n",
       "        [[122, 156, 180],\n",
       "         [127, 164, 186],\n",
       "         [130, 167, 189],\n",
       "         ...,\n",
       "         [153, 187, 210],\n",
       "         [155, 190, 213],\n",
       "         [160, 198, 216]]], dtype=uint8),\n",
       " array([[[ 69,  78,  88],\n",
       "         [ 75,  81,  91],\n",
       "         [ 83,  89, 100],\n",
       "         ...,\n",
       "         [ 87,  87, 106],\n",
       "         [ 87,  86, 106],\n",
       "         [ 88,  87, 105]],\n",
       " \n",
       "        [[ 60,  68,  78],\n",
       "         [ 75,  79,  88],\n",
       "         [ 78,  84,  91],\n",
       "         ...,\n",
       "         [ 79,  78,  98],\n",
       "         [ 89,  88, 108],\n",
       "         [ 85,  85, 102]],\n",
       " \n",
       "        [[ 67,  73,  80],\n",
       "         [ 71,  73,  81],\n",
       "         [ 72,  74,  82],\n",
       "         ...,\n",
       "         [ 79,  79,  94],\n",
       "         [ 91,  90, 105],\n",
       "         [ 87,  89, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 50,  66,  82],\n",
       "         [ 47,  63,  78],\n",
       "         [ 43,  57,  70],\n",
       "         ...,\n",
       "         [ 50,  52,  60],\n",
       "         [ 66,  63,  72],\n",
       "         [ 76,  71,  80]],\n",
       " \n",
       "        [[ 53,  69,  86],\n",
       "         [ 46,  64,  82],\n",
       "         [ 47,  62,  80],\n",
       "         ...,\n",
       "         [ 65,  64,  73],\n",
       "         [ 89,  88,  97],\n",
       "         [ 78,  75,  84]],\n",
       " \n",
       "        [[ 52,  71,  85],\n",
       "         [ 52,  70,  87],\n",
       "         [ 53,  68,  87],\n",
       "         ...,\n",
       "         [ 89,  85,  94],\n",
       "         [ 95,  95, 103],\n",
       "         [ 73,  74,  84]]], dtype=uint8),\n",
       " array([[[110, 109, 129],\n",
       "         [104, 106, 123],\n",
       "         [104, 106, 124],\n",
       "         ...,\n",
       "         [ 93, 101, 119],\n",
       "         [ 97, 106, 119],\n",
       "         [ 94, 103, 117]],\n",
       " \n",
       "        [[102, 101, 121],\n",
       "         [102, 104, 121],\n",
       "         [104, 107, 125],\n",
       "         ...,\n",
       "         [ 91,  98, 113],\n",
       "         [ 90,  99, 113],\n",
       "         [ 96, 105, 118]],\n",
       " \n",
       "        [[107, 106, 126],\n",
       "         [107, 109, 127],\n",
       "         [104, 106, 126],\n",
       "         ...,\n",
       "         [ 91,  97, 109],\n",
       "         [ 89,  96, 108],\n",
       "         [ 92, 100, 110]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72,  83, 105],\n",
       "         [ 66,  80,  99],\n",
       "         [ 73,  86, 105],\n",
       "         ...,\n",
       "         [102, 111, 125],\n",
       "         [ 96, 107, 121],\n",
       "         [ 94, 115, 127]],\n",
       " \n",
       "        [[ 73,  87, 109],\n",
       "         [ 68,  82, 101],\n",
       "         [ 67,  81, 103],\n",
       "         ...,\n",
       "         [109, 118, 131],\n",
       "         [106, 117, 131],\n",
       "         [ 94, 114, 127]],\n",
       " \n",
       "        [[ 76,  89, 112],\n",
       "         [ 67,  80, 102],\n",
       "         [ 69,  82, 104],\n",
       "         ...,\n",
       "         [108, 118, 132],\n",
       "         [104, 116, 130],\n",
       "         [ 99, 117, 129]]], dtype=uint8),\n",
       " array([[[ 62, 124, 177],\n",
       "         [ 64, 128, 176],\n",
       "         [ 61, 129, 169],\n",
       "         ...,\n",
       "         [127, 188, 233],\n",
       "         [128, 187, 235],\n",
       "         [123, 181, 230]],\n",
       " \n",
       "        [[ 59, 122, 179],\n",
       "         [ 59, 125, 174],\n",
       "         [ 65, 132, 172],\n",
       "         ...,\n",
       "         [121, 183, 228],\n",
       "         [122, 180, 228],\n",
       "         [122, 180, 229]],\n",
       " \n",
       "        [[ 60, 119, 179],\n",
       "         [ 59, 122, 171],\n",
       "         [ 61, 122, 160],\n",
       "         ...,\n",
       "         [122, 183, 228],\n",
       "         [116, 176, 225],\n",
       "         [110, 170, 219]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 113, 162],\n",
       "         [ 69, 112, 161],\n",
       "         [ 68, 112, 164],\n",
       "         ...,\n",
       "         [ 72, 136, 188],\n",
       "         [ 71, 135, 191],\n",
       "         [ 85, 146, 198]],\n",
       " \n",
       "        [[ 53,  93, 145],\n",
       "         [ 83, 127, 180],\n",
       "         [ 78, 126, 178],\n",
       "         ...,\n",
       "         [ 75, 140, 192],\n",
       "         [ 74, 137, 191],\n",
       "         [ 98, 157, 208]],\n",
       " \n",
       "        [[ 74, 113, 167],\n",
       "         [ 82, 126, 180],\n",
       "         [ 87, 133, 187],\n",
       "         ...,\n",
       "         [ 72, 136, 190],\n",
       "         [ 68, 129, 183],\n",
       "         [ 96, 155, 204]]], dtype=uint8),\n",
       " array([[[121, 145, 191],\n",
       "         [120, 145, 189],\n",
       "         [119, 144, 188],\n",
       "         ...,\n",
       "         [ 65,  85, 113],\n",
       "         [ 64,  83, 110],\n",
       "         [ 62,  82, 107]],\n",
       " \n",
       "        [[119, 144, 188],\n",
       "         [120, 145, 189],\n",
       "         [121, 146, 190],\n",
       "         ...,\n",
       "         [ 66,  87, 114],\n",
       "         [ 62,  80, 109],\n",
       "         [ 61,  83, 105]],\n",
       " \n",
       "        [[121, 144, 189],\n",
       "         [121, 145, 187],\n",
       "         [120, 145, 187],\n",
       "         ...,\n",
       "         [ 69,  90, 117],\n",
       "         [ 65,  79, 112],\n",
       "         [ 65,  82, 108]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 84, 107, 153],\n",
       "         [ 73,  97, 143],\n",
       "         [ 73,  94, 139],\n",
       "         ...,\n",
       "         [ 70,  91, 128],\n",
       "         [ 73,  96, 132],\n",
       "         [ 71,  96, 130]],\n",
       " \n",
       "        [[ 85, 108, 154],\n",
       "         [ 72,  96, 142],\n",
       "         [ 71,  93, 138],\n",
       "         ...,\n",
       "         [ 73,  95, 136],\n",
       "         [ 75,  99, 137],\n",
       "         [ 73,  99, 134]],\n",
       " \n",
       "        [[ 86, 109, 155],\n",
       "         [ 75,  99, 145],\n",
       "         [ 73,  96, 142],\n",
       "         ...,\n",
       "         [ 87, 110, 151],\n",
       "         [ 83, 105, 146],\n",
       "         [ 77, 102, 141]]], dtype=uint8),\n",
       " array([[[ 30,  60,  83],\n",
       "         [ 23,  70, 102],\n",
       "         [ 30,  76, 110],\n",
       "         ...,\n",
       "         [ 58,  84, 120],\n",
       "         [ 60,  86, 122],\n",
       "         [ 63,  89, 125]],\n",
       " \n",
       "        [[ 28,  59,  83],\n",
       "         [ 30,  74, 109],\n",
       "         [ 34,  81, 114],\n",
       "         ...,\n",
       "         [ 56,  82, 118],\n",
       "         [ 51,  79, 114],\n",
       "         [ 62,  88, 125]],\n",
       " \n",
       "        [[ 24,  57,  82],\n",
       "         [ 32,  81, 113],\n",
       "         [ 33,  83, 115],\n",
       "         ...,\n",
       "         [ 43,  69, 105],\n",
       "         [ 47,  75, 112],\n",
       "         [ 59,  85, 121]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 32,  86, 118],\n",
       "         [ 27,  81, 119],\n",
       "         [ 24,  71, 115],\n",
       "         ...,\n",
       "         [  1,  33,  86],\n",
       "         [  4,  38,  93],\n",
       "         [  7,  45, 103]],\n",
       " \n",
       "        [[ 30,  86, 119],\n",
       "         [ 24,  77, 116],\n",
       "         [ 25,  73, 117],\n",
       "         ...,\n",
       "         [  4,  35,  90],\n",
       "         [  4,  38, 100],\n",
       "         [  9,  48, 106]],\n",
       " \n",
       "        [[ 32,  87, 118],\n",
       "         [ 26,  79, 119],\n",
       "         [ 25,  74, 116],\n",
       "         ...,\n",
       "         [  4,  39,  94],\n",
       "         [  8,  45, 104],\n",
       "         [  7,  50, 107]]], dtype=uint8),\n",
       " array([[[132, 136, 151],\n",
       "         [136, 139, 157],\n",
       "         [146, 147, 160],\n",
       "         ...,\n",
       "         [141, 156, 174],\n",
       "         [131, 154, 170],\n",
       "         [116, 140, 155]],\n",
       " \n",
       "        [[142, 149, 163],\n",
       "         [127, 135, 152],\n",
       "         [133, 135, 149],\n",
       "         ...,\n",
       "         [142, 158, 171],\n",
       "         [136, 162, 175],\n",
       "         [122, 147, 161]],\n",
       " \n",
       "        [[126, 133, 148],\n",
       "         [120, 127, 142],\n",
       "         [134, 136, 152],\n",
       "         ...,\n",
       "         [128, 139, 150],\n",
       "         [146, 164, 178],\n",
       "         [127, 148, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 126, 148],\n",
       "         [133, 125, 145],\n",
       "         [135, 123, 138],\n",
       "         ...,\n",
       "         [137, 144, 159],\n",
       "         [143, 151, 169],\n",
       "         [141, 153, 171]],\n",
       " \n",
       "        [[132, 130, 151],\n",
       "         [139, 134, 155],\n",
       "         [146, 135, 154],\n",
       "         ...,\n",
       "         [147, 153, 168],\n",
       "         [147, 155, 173],\n",
       "         [141, 154, 172]],\n",
       " \n",
       "        [[127, 130, 153],\n",
       "         [134, 131, 151],\n",
       "         [152, 144, 165],\n",
       "         ...,\n",
       "         [153, 157, 171],\n",
       "         [154, 158, 176],\n",
       "         [144, 155, 174]]], dtype=uint8),\n",
       " array([[[ 21,  29,  42],\n",
       "         [ 19,  28,  38],\n",
       "         [ 27,  35,  49],\n",
       "         ...,\n",
       "         [112, 148, 186],\n",
       "         [132, 167, 206],\n",
       "         [128, 166, 204]],\n",
       " \n",
       "        [[ 16,  24,  37],\n",
       "         [  8,  17,  28],\n",
       "         [ 19,  27,  42],\n",
       "         ...,\n",
       "         [ 98, 137, 176],\n",
       "         [120, 158, 199],\n",
       "         [122, 161, 201]],\n",
       " \n",
       "        [[ 29,  34,  45],\n",
       "         [ 20,  28,  38],\n",
       "         [ 37,  44,  58],\n",
       "         ...,\n",
       "         [ 91, 128, 171],\n",
       "         [106, 144, 185],\n",
       "         [116, 153, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 45,  67,  96],\n",
       "         [ 47,  73, 103],\n",
       "         [ 46,  73, 107],\n",
       "         ...,\n",
       "         [ 90, 126, 166],\n",
       "         [ 75, 112, 155],\n",
       "         [ 75, 114, 159]],\n",
       " \n",
       "        [[ 45,  67,  95],\n",
       "         [ 49,  74, 105],\n",
       "         [ 47,  75, 106],\n",
       "         ...,\n",
       "         [ 80, 114, 157],\n",
       "         [ 78, 115, 159],\n",
       "         [ 72, 115, 161]],\n",
       " \n",
       "        [[ 44,  66,  95],\n",
       "         [ 48,  74, 105],\n",
       "         [ 49,  77, 110],\n",
       "         ...,\n",
       "         [ 74, 112, 156],\n",
       "         [ 76, 117, 162],\n",
       "         [ 74, 118, 166]]], dtype=uint8),\n",
       " array([[[146, 185, 222],\n",
       "         [120, 163, 202],\n",
       "         [132, 173, 213],\n",
       "         ...,\n",
       "         [ 12,  15,  25],\n",
       "         [  6,   9,  14],\n",
       "         [  1,   4,   8]],\n",
       " \n",
       "        [[139, 180, 219],\n",
       "         [123, 166, 209],\n",
       "         [120, 163, 206],\n",
       "         ...,\n",
       "         [ 16,  19,  31],\n",
       "         [  8,  11,  15],\n",
       "         [  3,   6,  10]],\n",
       " \n",
       "        [[128, 170, 212],\n",
       "         [123, 170, 211],\n",
       "         [115, 163, 203],\n",
       "         ...,\n",
       "         [ 22,  28,  41],\n",
       "         [ 14,  17,  21],\n",
       "         [  1,   4,   8]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 115, 165],\n",
       "         [ 71, 116, 163],\n",
       "         [ 72, 119, 166],\n",
       "         ...,\n",
       "         [ 69,  99, 135],\n",
       "         [ 59,  87, 119],\n",
       "         [ 49,  73, 101]],\n",
       " \n",
       "        [[ 73, 116, 166],\n",
       "         [ 72, 117, 164],\n",
       "         [ 73, 122, 168],\n",
       "         ...,\n",
       "         [ 70, 102, 138],\n",
       "         [ 61,  90, 122],\n",
       "         [ 51,  77, 105]],\n",
       " \n",
       "        [[ 73, 117, 167],\n",
       "         [ 75, 120, 167],\n",
       "         [ 73, 122, 168],\n",
       "         ...,\n",
       "         [ 72, 105, 141],\n",
       "         [ 62,  94, 127],\n",
       "         [ 52,  80, 111]]], dtype=uint8),\n",
       " array([[[ 85,  94, 107],\n",
       "         [126, 135, 148],\n",
       "         [151, 160, 173],\n",
       "         ...,\n",
       "         [ 83, 102, 129],\n",
       "         [ 71,  90, 117],\n",
       "         [ 77,  96, 123]],\n",
       " \n",
       "        [[112, 121, 134],\n",
       "         [143, 152, 165],\n",
       "         [166, 175, 188],\n",
       "         ...,\n",
       "         [ 64,  83, 110],\n",
       "         [ 62,  81, 108],\n",
       "         [ 66,  85, 112]],\n",
       " \n",
       "        [[119, 130, 144],\n",
       "         [146, 158, 171],\n",
       "         [161, 174, 188],\n",
       "         ...,\n",
       "         [ 55,  72, 100],\n",
       "         [ 56,  72, 101],\n",
       "         [ 56,  71, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 120, 134],\n",
       "         [122, 130, 143],\n",
       "         [124, 128, 143],\n",
       "         ...,\n",
       "         [111, 133, 159],\n",
       "         [122, 143, 169],\n",
       "         [115, 136, 162]],\n",
       " \n",
       "        [[121, 130, 144],\n",
       "         [129, 138, 151],\n",
       "         [135, 144, 158],\n",
       "         ...,\n",
       "         [110, 131, 157],\n",
       "         [117, 141, 166],\n",
       "         [136, 162, 186]],\n",
       " \n",
       "        [[124, 135, 155],\n",
       "         [130, 142, 164],\n",
       "         [130, 142, 164],\n",
       "         ...,\n",
       "         [101, 124, 150],\n",
       "         [116, 142, 168],\n",
       "         [141, 168, 193]]], dtype=uint8),\n",
       " array([[[213, 228, 245],\n",
       "         [211, 227, 243],\n",
       "         [212, 228, 244],\n",
       "         ...,\n",
       "         [175, 191, 233],\n",
       "         [173, 189, 231],\n",
       "         [169, 185, 227]],\n",
       " \n",
       "        [[202, 222, 244],\n",
       "         [201, 220, 243],\n",
       "         [202, 221, 244],\n",
       "         ...,\n",
       "         [174, 190, 232],\n",
       "         [171, 187, 229],\n",
       "         [168, 184, 226]],\n",
       " \n",
       "        [[194, 214, 245],\n",
       "         [196, 216, 246],\n",
       "         [194, 214, 245],\n",
       "         ...,\n",
       "         [133, 149, 191],\n",
       "         [144, 160, 202],\n",
       "         [153, 169, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[189, 209, 241],\n",
       "         [192, 212, 242],\n",
       "         [193, 214, 242],\n",
       "         ...,\n",
       "         [177, 200, 238],\n",
       "         [172, 196, 238],\n",
       "         [168, 191, 236]],\n",
       " \n",
       "        [[187, 206, 240],\n",
       "         [189, 208, 241],\n",
       "         [191, 211, 242],\n",
       "         ...,\n",
       "         [173, 198, 238],\n",
       "         [168, 192, 236],\n",
       "         [165, 188, 233]],\n",
       " \n",
       "        [[186, 205, 240],\n",
       "         [188, 207, 242],\n",
       "         [190, 209, 242],\n",
       "         ...,\n",
       "         [168, 194, 235],\n",
       "         [164, 188, 232],\n",
       "         [161, 184, 229]]], dtype=uint8),\n",
       " array([[[ 32,  56,  87],\n",
       "         [ 30,  54,  90],\n",
       "         [ 28,  56,  91],\n",
       "         ...,\n",
       "         [140, 177, 211],\n",
       "         [141, 179, 213],\n",
       "         [135, 174, 212]],\n",
       " \n",
       "        [[ 34,  58,  88],\n",
       "         [ 28,  55,  89],\n",
       "         [ 24,  54,  87],\n",
       "         ...,\n",
       "         [140, 178, 211],\n",
       "         [136, 173, 208],\n",
       "         [134, 176, 213]],\n",
       " \n",
       "        [[ 33,  57,  87],\n",
       "         [ 25,  50,  86],\n",
       "         [ 24,  52,  87],\n",
       "         ...,\n",
       "         [134, 175, 210],\n",
       "         [130, 171, 208],\n",
       "         [127, 171, 208]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  85, 124],\n",
       "         [ 57,  87, 127],\n",
       "         [ 59,  89, 129],\n",
       "         ...,\n",
       "         [ 74, 118, 166],\n",
       "         [ 74, 120, 168],\n",
       "         [ 75, 124, 170]],\n",
       " \n",
       "        [[ 51,  83, 124],\n",
       "         [ 53,  83, 124],\n",
       "         [ 59,  89, 130],\n",
       "         ...,\n",
       "         [ 78, 120, 169],\n",
       "         [ 75, 121, 169],\n",
       "         [ 78, 127, 173]],\n",
       " \n",
       "        [[ 47,  83, 121],\n",
       "         [ 52,  86, 129],\n",
       "         [ 61,  95, 138],\n",
       "         ...,\n",
       "         [ 80, 125, 173],\n",
       "         [ 79, 125, 174],\n",
       "         [ 80, 129, 175]]], dtype=uint8),\n",
       " array([[[136, 178, 213],\n",
       "         [138, 180, 214],\n",
       "         [136, 176, 210],\n",
       "         ...,\n",
       "         [ 35,  62,  97],\n",
       "         [ 36,  58,  90],\n",
       "         [ 29,  50,  77]],\n",
       " \n",
       "        [[128, 173, 210],\n",
       "         [135, 177, 212],\n",
       "         [133, 176, 213],\n",
       "         ...,\n",
       "         [ 36,  62,  97],\n",
       "         [ 34,  56,  88],\n",
       "         [ 30,  51,  78]],\n",
       " \n",
       "        [[125, 169, 206],\n",
       "         [130, 173, 210],\n",
       "         [125, 171, 209],\n",
       "         ...,\n",
       "         [ 30,  58,  92],\n",
       "         [ 28,  50,  81],\n",
       "         [ 25,  46,  72]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  99, 146],\n",
       "         [ 50,  94, 141],\n",
       "         [ 54,  96, 139],\n",
       "         ...,\n",
       "         [ 53,  75, 107],\n",
       "         [ 57,  78, 110],\n",
       "         [ 54,  75, 106]],\n",
       " \n",
       "        [[ 58, 103, 150],\n",
       "         [ 51,  95, 141],\n",
       "         [ 53,  96, 139],\n",
       "         ...,\n",
       "         [ 48,  75, 110],\n",
       "         [ 52,  77, 111],\n",
       "         [ 54,  76, 109]],\n",
       " \n",
       "        [[ 62, 107, 154],\n",
       "         [ 52,  95, 142],\n",
       "         [ 55,  97, 140],\n",
       "         ...,\n",
       "         [ 45,  73, 108],\n",
       "         [ 48,  76, 111],\n",
       "         [ 50,  75, 110]]], dtype=uint8),\n",
       " array([[[ 36,  47,  79],\n",
       "         [ 41,  53,  92],\n",
       "         [ 31,  36,  84],\n",
       "         ...,\n",
       "         [ 99, 140, 187],\n",
       "         [114, 155, 204],\n",
       "         [114, 156, 201]],\n",
       " \n",
       "        [[ 28,  41,  69],\n",
       "         [ 38,  52,  89],\n",
       "         [ 31,  38,  78],\n",
       "         ...,\n",
       "         [111, 150, 194],\n",
       "         [102, 141, 186],\n",
       "         [117, 156, 201]],\n",
       " \n",
       "        [[ 26,  41,  66],\n",
       "         [ 36,  50,  83],\n",
       "         [ 29,  38,  72],\n",
       "         ...,\n",
       "         [124, 158, 199],\n",
       "         [126, 159, 202],\n",
       "         [113, 146, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  66,  94],\n",
       "         [ 46,  70, 102],\n",
       "         [ 45,  75, 110],\n",
       "         ...,\n",
       "         [ 74, 115, 164],\n",
       "         [ 74, 115, 164],\n",
       "         [ 75, 117, 165]],\n",
       " \n",
       "        [[ 44,  62,  90],\n",
       "         [ 47,  71, 104],\n",
       "         [ 47,  77, 112],\n",
       "         ...,\n",
       "         [ 75, 118, 167],\n",
       "         [ 76, 119, 168],\n",
       "         [ 78, 121, 172]],\n",
       " \n",
       "        [[ 38,  57,  87],\n",
       "         [ 49,  73, 108],\n",
       "         [ 47,  78, 114],\n",
       "         ...,\n",
       "         [ 78, 118, 170],\n",
       "         [ 81, 121, 173],\n",
       "         [ 80, 125, 176]]], dtype=uint8),\n",
       " array([[[157, 185, 230],\n",
       "         [158, 189, 234],\n",
       "         [158, 190, 235],\n",
       "         ...,\n",
       "         [108, 145, 193],\n",
       "         [105, 142, 187],\n",
       "         [106, 142, 187]],\n",
       " \n",
       "        [[157, 187, 232],\n",
       "         [159, 190, 235],\n",
       "         [162, 191, 236],\n",
       "         ...,\n",
       "         [108, 145, 193],\n",
       "         [105, 141, 187],\n",
       "         [105, 141, 187]],\n",
       " \n",
       "        [[155, 186, 231],\n",
       "         [163, 191, 236],\n",
       "         [168, 194, 240],\n",
       "         ...,\n",
       "         [116, 148, 197],\n",
       "         [106, 140, 188],\n",
       "         [105, 139, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 167, 214],\n",
       "         [136, 158, 206],\n",
       "         [136, 156, 207],\n",
       "         ...,\n",
       "         [123, 159, 207],\n",
       "         [122, 157, 206],\n",
       "         [121, 155, 204]],\n",
       " \n",
       "        [[141, 170, 214],\n",
       "         [143, 167, 213],\n",
       "         [142, 163, 214],\n",
       "         ...,\n",
       "         [122, 158, 206],\n",
       "         [123, 156, 206],\n",
       "         [120, 153, 203]],\n",
       " \n",
       "        [[143, 172, 217],\n",
       "         [148, 173, 220],\n",
       "         [147, 170, 220],\n",
       "         ...,\n",
       "         [122, 158, 206],\n",
       "         [122, 155, 205],\n",
       "         [119, 152, 202]]], dtype=uint8),\n",
       " array([[[128, 157, 210],\n",
       "         [126, 157, 206],\n",
       "         [ 90, 113, 169],\n",
       "         ...,\n",
       "         [ 54,  63,  98],\n",
       "         [ 46,  51,  80],\n",
       "         [ 29,  29,  47]],\n",
       " \n",
       "        [[113, 145, 195],\n",
       "         [131, 164, 211],\n",
       "         [ 90, 116, 170],\n",
       "         ...,\n",
       "         [ 50,  58,  92],\n",
       "         [ 42,  47,  74],\n",
       "         [ 32,  32,  50]],\n",
       " \n",
       "        [[ 97, 125, 175],\n",
       "         [109, 136, 182],\n",
       "         [ 96, 121, 169],\n",
       "         ...,\n",
       "         [ 44,  47,  79],\n",
       "         [ 41,  44,  71],\n",
       "         [ 27,  28,  47]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 76, 112, 157],\n",
       "         [ 75, 110, 153],\n",
       "         [ 74, 109, 153],\n",
       "         ...,\n",
       "         [ 57,  86, 122],\n",
       "         [ 54,  80, 115],\n",
       "         [ 50,  73, 105]],\n",
       " \n",
       "        [[ 79, 115, 161],\n",
       "         [ 79, 113, 159],\n",
       "         [ 76, 112, 157],\n",
       "         ...,\n",
       "         [ 55,  86, 121],\n",
       "         [ 57,  84, 118],\n",
       "         [ 55,  78, 110]],\n",
       " \n",
       "        [[ 82, 118, 164],\n",
       "         [ 82, 118, 164],\n",
       "         [ 84, 117, 163],\n",
       "         ...,\n",
       "         [ 55,  84, 122],\n",
       "         [ 58,  85, 120],\n",
       "         [ 58,  81, 114]]], dtype=uint8),\n",
       " array([[[ 64,  50,  67],\n",
       "         [ 60,  61,  88],\n",
       "         [170, 176, 203],\n",
       "         ...,\n",
       "         [165, 167, 224],\n",
       "         [174, 177, 228],\n",
       "         [176, 180, 231]],\n",
       " \n",
       "        [[ 65,  55,  67],\n",
       "         [ 70,  69,  97],\n",
       "         [173, 177, 205],\n",
       "         ...,\n",
       "         [160, 164, 222],\n",
       "         [166, 172, 227],\n",
       "         [171, 177, 230]],\n",
       " \n",
       "        [[ 64,  53,  65],\n",
       "         [ 84,  85, 113],\n",
       "         [175, 179, 207],\n",
       "         ...,\n",
       "         [157, 163, 221],\n",
       "         [163, 170, 227],\n",
       "         [169, 174, 229]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 185, 211],\n",
       "         [193, 198, 222],\n",
       "         [198, 202, 230],\n",
       "         ...,\n",
       "         [212, 207, 236],\n",
       "         [212, 208, 237],\n",
       "         [213, 209, 238]],\n",
       " \n",
       "        [[177, 177, 202],\n",
       "         [189, 196, 222],\n",
       "         [195, 200, 229],\n",
       "         ...,\n",
       "         [214, 210, 239],\n",
       "         [213, 209, 238],\n",
       "         [211, 209, 238]],\n",
       " \n",
       "        [[163, 164, 187],\n",
       "         [185, 194, 220],\n",
       "         [192, 198, 227],\n",
       "         ...,\n",
       "         [213, 208, 238],\n",
       "         [213, 209, 238],\n",
       "         [210, 208, 238]]], dtype=uint8),\n",
       " array([[[186, 190, 241],\n",
       "         [185, 190, 239],\n",
       "         [183, 188, 238],\n",
       "         ...,\n",
       "         [125, 136, 165],\n",
       "         [104, 115, 143],\n",
       "         [ 34,  36,  48]],\n",
       " \n",
       "        [[186, 191, 240],\n",
       "         [186, 191, 240],\n",
       "         [182, 186, 237],\n",
       "         ...,\n",
       "         [115, 124, 152],\n",
       "         [111, 120, 149],\n",
       "         [ 46,  46,  58]],\n",
       " \n",
       "        [[186, 191, 240],\n",
       "         [185, 189, 240],\n",
       "         [178, 184, 237],\n",
       "         ...,\n",
       "         [102, 110, 137],\n",
       "         [113, 120, 151],\n",
       "         [ 46,  47,  62]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 157, 219],\n",
       "         [130, 151, 213],\n",
       "         [130, 148, 211],\n",
       "         ...,\n",
       "         [130, 143, 181],\n",
       "         [121, 131, 168],\n",
       "         [101, 110, 132]],\n",
       " \n",
       "        [[138, 157, 220],\n",
       "         [130, 151, 213],\n",
       "         [130, 150, 212],\n",
       "         ...,\n",
       "         [130, 142, 181],\n",
       "         [120, 132, 166],\n",
       "         [ 97, 104, 126]],\n",
       " \n",
       "        [[140, 158, 221],\n",
       "         [132, 153, 215],\n",
       "         [130, 151, 214],\n",
       "         ...,\n",
       "         [130, 142, 182],\n",
       "         [123, 136, 167],\n",
       "         [ 96, 100, 118]]], dtype=uint8),\n",
       " array([[[ 29,  65,  90],\n",
       "         [ 29,  70,  99],\n",
       "         [ 32,  73, 101],\n",
       "         ...,\n",
       "         [ 43,  82, 116],\n",
       "         [ 41,  79, 114],\n",
       "         [ 38,  78, 113]],\n",
       " \n",
       "        [[ 30,  67,  95],\n",
       "         [ 29,  69, 101],\n",
       "         [ 35,  73, 105],\n",
       "         ...,\n",
       "         [ 46,  84, 119],\n",
       "         [ 46,  84, 119],\n",
       "         [ 42,  80, 115]],\n",
       " \n",
       "        [[ 26,  62,  91],\n",
       "         [ 33,  71, 104],\n",
       "         [ 37,  75, 107],\n",
       "         ...,\n",
       "         [ 44,  82, 117],\n",
       "         [ 43,  81, 116],\n",
       "         [ 42,  80, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  86, 115],\n",
       "         [ 44,  90, 122],\n",
       "         [ 45,  92, 125],\n",
       "         ...,\n",
       "         [ 45,  86, 125],\n",
       "         [ 43,  84, 123],\n",
       "         [ 45,  86, 125]],\n",
       " \n",
       "        [[ 49,  91, 120],\n",
       "         [ 46,  91, 123],\n",
       "         [ 45,  92, 125],\n",
       "         ...,\n",
       "         [ 45,  86, 125],\n",
       "         [ 42,  83, 122],\n",
       "         [ 44,  85, 124]],\n",
       " \n",
       "        [[ 49,  88, 120],\n",
       "         [ 49,  91, 124],\n",
       "         [ 50,  93, 126],\n",
       "         ...,\n",
       "         [ 43,  83, 125],\n",
       "         [ 42,  83, 122],\n",
       "         [ 45,  85, 127]]], dtype=uint8),\n",
       " array([[[ 42,  74, 109],\n",
       "         [ 41,  73, 108],\n",
       "         [ 41,  73, 108],\n",
       "         ...,\n",
       "         [ 19,  49,  75],\n",
       "         [ 18,  48,  74],\n",
       "         [ 13,  41,  61]],\n",
       " \n",
       "        [[ 43,  75, 111],\n",
       "         [ 42,  74, 110],\n",
       "         [ 41,  73, 109],\n",
       "         ...,\n",
       "         [ 22,  51,  78],\n",
       "         [ 19,  47,  73],\n",
       "         [ 17,  45,  66]],\n",
       " \n",
       "        [[ 43,  75, 111],\n",
       "         [ 43,  75, 111],\n",
       "         [ 43,  75, 111],\n",
       "         ...,\n",
       "         [ 22,  48,  75],\n",
       "         [ 24,  48,  75],\n",
       "         [ 21,  45,  71]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 34,  72, 107],\n",
       "         [ 31,  69, 103],\n",
       "         [ 30,  67, 101],\n",
       "         ...,\n",
       "         [ 41,  76, 106],\n",
       "         [ 35,  72, 100],\n",
       "         [ 36,  71,  97]],\n",
       " \n",
       "        [[ 37,  73, 109],\n",
       "         [ 31,  68, 102],\n",
       "         [ 31,  67, 101],\n",
       "         ...,\n",
       "         [ 38,  74, 104],\n",
       "         [ 35,  72, 100],\n",
       "         [ 36,  71,  97]],\n",
       " \n",
       "        [[ 40,  76, 112],\n",
       "         [ 35,  72, 106],\n",
       "         [ 33,  69, 103],\n",
       "         ...,\n",
       "         [ 36,  73, 103],\n",
       "         [ 36,  73, 101],\n",
       "         [ 36,  71,  97]]], dtype=uint8),\n",
       " array([[[ 70,  78, 104],\n",
       "         [ 75,  86, 117],\n",
       "         [ 77,  93, 125],\n",
       "         ...,\n",
       "         [129, 164, 207],\n",
       "         [130, 165, 208],\n",
       "         [128, 163, 206]],\n",
       " \n",
       "        [[ 70,  79, 105],\n",
       "         [ 74,  85, 116],\n",
       "         [ 72,  88, 121],\n",
       "         ...,\n",
       "         [130, 164, 207],\n",
       "         [131, 166, 209],\n",
       "         [129, 163, 206]],\n",
       " \n",
       "        [[ 76,  84, 112],\n",
       "         [ 76,  88, 117],\n",
       "         [ 76,  92, 124],\n",
       "         ...,\n",
       "         [132, 167, 207],\n",
       "         [131, 167, 207],\n",
       "         [131, 166, 206]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 67,  99, 135],\n",
       "         [ 68, 100, 139],\n",
       "         [ 65,  99, 138],\n",
       "         ...,\n",
       "         [ 74, 110, 156],\n",
       "         [ 71, 107, 153],\n",
       "         [ 71, 110, 155]],\n",
       " \n",
       "        [[ 71, 103, 138],\n",
       "         [ 70, 102, 141],\n",
       "         [ 71, 105, 144],\n",
       "         ...,\n",
       "         [ 70, 106, 152],\n",
       "         [ 67, 103, 149],\n",
       "         [ 68, 107, 152]],\n",
       " \n",
       "        [[ 73, 105, 141],\n",
       "         [ 71, 104, 143],\n",
       "         [ 71, 106, 147],\n",
       "         ...,\n",
       "         [ 63,  99, 144],\n",
       "         [ 64, 100, 146],\n",
       "         [ 69, 108, 153]]], dtype=uint8),\n",
       " array([[[131, 163, 204],\n",
       "         [132, 164, 205],\n",
       "         [132, 164, 205],\n",
       "         ...,\n",
       "         [ 54,  58,  81],\n",
       "         [ 54,  56,  71],\n",
       "         [ 44,  43,  50]],\n",
       " \n",
       "        [[133, 165, 206],\n",
       "         [138, 169, 210],\n",
       "         [135, 165, 206],\n",
       "         ...,\n",
       "         [ 53,  58,  79],\n",
       "         [ 56,  58,  73],\n",
       "         [ 51,  50,  61]],\n",
       " \n",
       "        [[136, 166, 207],\n",
       "         [138, 169, 208],\n",
       "         [132, 163, 202],\n",
       "         ...,\n",
       "         [ 56,  60,  82],\n",
       "         [ 56,  58,  74],\n",
       "         [ 52,  51,  62]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  84, 130],\n",
       "         [ 63,  88, 132],\n",
       "         [ 68,  93, 136],\n",
       "         ...,\n",
       "         [ 61,  85, 123],\n",
       "         [ 61,  79, 116],\n",
       "         [ 65,  79, 111]],\n",
       " \n",
       "        [[ 57,  82, 128],\n",
       "         [ 57,  83, 126],\n",
       "         [ 63,  88, 132],\n",
       "         ...,\n",
       "         [ 61,  85, 122],\n",
       "         [ 61,  79, 116],\n",
       "         [ 61,  75, 108]],\n",
       " \n",
       "        [[ 52,  81, 126],\n",
       "         [ 53,  80, 124],\n",
       "         [ 59,  85, 129],\n",
       "         ...,\n",
       "         [ 62,  85, 123],\n",
       "         [ 61,  79, 116],\n",
       "         [ 61,  75, 107]]], dtype=uint8),\n",
       " array([[[  9,  10,  12],\n",
       "         [ 10,  10,  14],\n",
       "         [ 11,  14,  21],\n",
       "         ...,\n",
       "         [125, 180, 227],\n",
       "         [133, 184, 233],\n",
       "         [137, 190, 238]],\n",
       " \n",
       "        [[  8,   9,  11],\n",
       "         [ 11,  11,  16],\n",
       "         [ 11,  13,  23],\n",
       "         ...,\n",
       "         [119, 177, 228],\n",
       "         [129, 184, 236],\n",
       "         [131, 186, 240]],\n",
       " \n",
       "        [[  8,   9,  12],\n",
       "         [ 12,  12,  17],\n",
       "         [ 11,  14,  23],\n",
       "         ...,\n",
       "         [120, 177, 227],\n",
       "         [124, 180, 231],\n",
       "         [129, 185, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 13,  15,  28],\n",
       "         [ 14,  29,  51],\n",
       "         [ 17,  37,  70],\n",
       "         ...,\n",
       "         [ 50, 105, 152],\n",
       "         [ 56, 109, 155],\n",
       "         [ 61, 117, 165]],\n",
       " \n",
       "        [[ 13,  18,  32],\n",
       "         [ 12,  30,  54],\n",
       "         [ 18,  38,  75],\n",
       "         ...,\n",
       "         [ 52, 107, 154],\n",
       "         [ 54, 108, 154],\n",
       "         [ 59, 115, 164]],\n",
       " \n",
       "        [[ 15,  20,  35],\n",
       "         [ 14,  31,  58],\n",
       "         [ 20,  44,  81],\n",
       "         ...,\n",
       "         [ 52, 106, 153],\n",
       "         [ 51, 104, 151],\n",
       "         [ 56, 113, 162]]], dtype=uint8),\n",
       " array([[[ 49,  77, 113],\n",
       "         [ 55,  86, 125],\n",
       "         [ 57,  86, 131],\n",
       "         ...,\n",
       "         [ 75, 105, 165],\n",
       "         [ 70, 101, 159],\n",
       "         [ 68, 101, 158]],\n",
       " \n",
       "        [[ 56,  81, 118],\n",
       "         [ 61,  90, 129],\n",
       "         [ 56,  86, 130],\n",
       "         ...,\n",
       "         [ 74, 102, 162],\n",
       "         [ 71, 101, 160],\n",
       "         [ 71, 101, 160]],\n",
       " \n",
       "        [[ 57,  80, 118],\n",
       "         [ 51,  79, 119],\n",
       "         [ 58,  87, 131],\n",
       "         ...,\n",
       "         [ 74, 103, 163],\n",
       "         [ 73, 101, 162],\n",
       "         [ 71, 101, 161]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 60,  94, 148],\n",
       "         [ 65,  99, 154],\n",
       "         [ 57,  90, 146],\n",
       "         ...,\n",
       "         [ 52,  82, 140],\n",
       "         [ 49,  79, 138],\n",
       "         [ 52,  81, 140]],\n",
       " \n",
       "        [[ 62,  95, 151],\n",
       "         [ 66,  99, 156],\n",
       "         [ 67,  98, 158],\n",
       "         ...,\n",
       "         [ 52,  82, 141],\n",
       "         [ 50,  79, 139],\n",
       "         [ 49,  77, 139]],\n",
       " \n",
       "        [[ 66,  99, 155],\n",
       "         [ 64,  93, 153],\n",
       "         [ 68,  96, 157],\n",
       "         ...,\n",
       "         [ 53,  80, 141],\n",
       "         [ 53,  81, 142],\n",
       "         [ 52,  79, 143]]], dtype=uint8),\n",
       " array([[[ 67,  97, 162],\n",
       "         [ 71, 101, 167],\n",
       "         [ 63,  94, 159],\n",
       "         ...,\n",
       "         [ 65,  92, 136],\n",
       "         [ 56,  84, 126],\n",
       "         [ 55,  83, 122]],\n",
       " \n",
       "        [[ 66,  95, 161],\n",
       "         [ 65,  98, 164],\n",
       "         [ 66,  98, 163],\n",
       "         ...,\n",
       "         [ 67,  94, 138],\n",
       "         [ 61,  89, 131],\n",
       "         [ 54,  80, 120]],\n",
       " \n",
       "        [[ 60,  88, 155],\n",
       "         [ 67,  97, 163],\n",
       "         [ 66,  98, 163],\n",
       "         ...,\n",
       "         [ 64,  90, 134],\n",
       "         [ 63,  88, 131],\n",
       "         [ 56,  82, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 86, 113, 174],\n",
       "         [ 73,  99, 159],\n",
       "         [ 55,  81, 141],\n",
       "         ...,\n",
       "         [ 70, 104, 163],\n",
       "         [ 70, 105, 162],\n",
       "         [ 73, 108, 162]],\n",
       " \n",
       "        [[ 91, 119, 179],\n",
       "         [ 93, 118, 180],\n",
       "         [ 66,  91, 152],\n",
       "         ...,\n",
       "         [ 70, 105, 164],\n",
       "         [ 70, 104, 162],\n",
       "         [ 71, 106, 162]],\n",
       " \n",
       "        [[ 85, 113, 174],\n",
       "         [ 81, 106, 168],\n",
       "         [ 71,  96, 159],\n",
       "         ...,\n",
       "         [ 71, 107, 167],\n",
       "         [ 69, 106, 164],\n",
       "         [ 64, 101, 157]]], dtype=uint8),\n",
       " array([[[146, 144, 144],\n",
       "         [146, 144, 144],\n",
       "         [146, 144, 145],\n",
       "         ...,\n",
       "         [ 83,  90,  93],\n",
       "         [ 81,  88,  91],\n",
       "         [ 79,  86,  89]],\n",
       " \n",
       "        [[148, 143, 145],\n",
       "         [148, 143, 145],\n",
       "         [145, 140, 142],\n",
       "         ...,\n",
       "         [ 83,  90,  93],\n",
       "         [ 82,  89,  92],\n",
       "         [ 80,  87,  90]],\n",
       " \n",
       "        [[145, 140, 142],\n",
       "         [142, 137, 139],\n",
       "         [140, 135, 137],\n",
       "         ...,\n",
       "         [ 84,  92,  92],\n",
       "         [ 83,  91,  91],\n",
       "         [ 81,  89,  89]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 120, 126],\n",
       "         [119, 117, 123],\n",
       "         [114, 113, 122],\n",
       "         ...,\n",
       "         [ 91, 100, 100],\n",
       "         [ 92, 101,  99],\n",
       "         [ 92,  99,  96]],\n",
       " \n",
       "        [[119, 118, 124],\n",
       "         [120, 118, 124],\n",
       "         [116, 114, 124],\n",
       "         ...,\n",
       "         [ 93, 103, 103],\n",
       "         [ 89,  99,  97],\n",
       "         [ 89,  98,  94]],\n",
       " \n",
       "        [[116, 114, 120],\n",
       "         [117, 115, 121],\n",
       "         [116, 115, 124],\n",
       "         ...,\n",
       "         [ 96, 103, 103],\n",
       "         [ 92, 101, 100],\n",
       "         [ 86,  97,  95]]], dtype=uint8),\n",
       " array([[[150, 184, 244],\n",
       "         [155, 184, 245],\n",
       "         [162, 190, 250],\n",
       "         ...,\n",
       "         [180, 207, 253],\n",
       "         [182, 209, 254],\n",
       "         [179, 206, 253]],\n",
       " \n",
       "        [[146, 180, 240],\n",
       "         [152, 181, 243],\n",
       "         [162, 190, 250],\n",
       "         ...,\n",
       "         [175, 203, 252],\n",
       "         [179, 207, 254],\n",
       "         [177, 204, 253]],\n",
       " \n",
       "        [[143, 177, 236],\n",
       "         [149, 178, 239],\n",
       "         [161, 189, 249],\n",
       "         ...,\n",
       "         [169, 200, 252],\n",
       "         [170, 201, 253],\n",
       "         [173, 201, 253]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[172, 204, 252],\n",
       "         [172, 204, 255],\n",
       "         [173, 204, 255],\n",
       "         ...,\n",
       "         [156, 179, 251],\n",
       "         [153, 176, 252],\n",
       "         [158, 183, 254]],\n",
       " \n",
       "        [[169, 200, 253],\n",
       "         [173, 205, 254],\n",
       "         [176, 209, 255],\n",
       "         ...,\n",
       "         [153, 176, 250],\n",
       "         [154, 177, 252],\n",
       "         [165, 190, 255]],\n",
       " \n",
       "        [[170, 200, 254],\n",
       "         [173, 205, 254],\n",
       "         [175, 208, 254],\n",
       "         ...,\n",
       "         [153, 176, 251],\n",
       "         [154, 177, 252],\n",
       "         [156, 181, 252]]], dtype=uint8),\n",
       " array([[[ 14,   5,   8],\n",
       "         [ 44,  54,  91],\n",
       "         [ 62,  72, 119],\n",
       "         ...,\n",
       "         [127, 143, 203],\n",
       "         [130, 144, 206],\n",
       "         [141, 151, 213]],\n",
       " \n",
       "        [[ 16,   6,   9],\n",
       "         [ 51,  56,  96],\n",
       "         [ 62,  66, 109],\n",
       "         ...,\n",
       "         [118, 136, 201],\n",
       "         [116, 133, 199],\n",
       "         [112, 131, 199]],\n",
       " \n",
       "        [[ 13,   7,  10],\n",
       "         [ 59,  64, 103],\n",
       "         [ 32,  31,  56],\n",
       "         ...,\n",
       "         [107, 128, 193],\n",
       "         [106, 126, 197],\n",
       "         [107, 125, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87, 107, 164],\n",
       "         [ 89, 113, 176],\n",
       "         [ 96, 125, 187],\n",
       "         ...,\n",
       "         [110, 138, 205],\n",
       "         [101, 132, 203],\n",
       "         [101, 129, 200]],\n",
       " \n",
       "        [[ 86, 105, 162],\n",
       "         [ 90, 114, 177],\n",
       "         [ 94, 122, 187],\n",
       "         ...,\n",
       "         [110, 137, 204],\n",
       "         [104, 131, 203],\n",
       "         [104, 132, 203]],\n",
       " \n",
       "        [[ 86, 105, 163],\n",
       "         [ 86, 111, 174],\n",
       "         [ 93, 121, 186],\n",
       "         ...,\n",
       "         [110, 137, 204],\n",
       "         [103, 132, 203],\n",
       "         [105, 132, 203]]], dtype=uint8),\n",
       " array([[[109, 134, 198],\n",
       "         [105, 132, 194],\n",
       "         [104, 132, 193],\n",
       "         ...,\n",
       "         [ 36,  34,  55],\n",
       "         [ 42,  38,  65],\n",
       "         [ 49,  45,  76]],\n",
       " \n",
       "        [[ 97, 123, 189],\n",
       "         [ 99, 125, 190],\n",
       "         [100, 127, 191],\n",
       "         ...,\n",
       "         [ 25,  21,  35],\n",
       "         [ 32,  31,  48],\n",
       "         [ 34,  32,  48]],\n",
       " \n",
       "        [[ 96, 122, 188],\n",
       "         [ 92, 118, 184],\n",
       "         [ 85, 111, 177],\n",
       "         ...,\n",
       "         [ 24,  16,  29],\n",
       "         [ 23,  19,  34],\n",
       "         [ 25,  21,  36]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[114, 142, 203],\n",
       "         [112, 140, 201],\n",
       "         [112, 138, 198],\n",
       "         ...,\n",
       "         [146, 168, 216],\n",
       "         [145, 168, 214],\n",
       "         [143, 166, 212]],\n",
       " \n",
       "        [[116, 144, 205],\n",
       "         [115, 143, 204],\n",
       "         [117, 143, 203],\n",
       "         ...,\n",
       "         [148, 171, 217],\n",
       "         [147, 170, 216],\n",
       "         [146, 169, 215]],\n",
       " \n",
       "        [[119, 145, 205],\n",
       "         [118, 145, 205],\n",
       "         [119, 147, 204],\n",
       "         ...,\n",
       "         [146, 172, 219],\n",
       "         [144, 171, 216],\n",
       "         [146, 169, 215]]], dtype=uint8),\n",
       " array([[[156, 174, 195],\n",
       "         [161, 178, 199],\n",
       "         [163, 179, 202],\n",
       "         ...,\n",
       "         [159, 180, 211],\n",
       "         [157, 178, 209],\n",
       "         [154, 174, 209]],\n",
       " \n",
       "        [[160, 177, 198],\n",
       "         [161, 178, 199],\n",
       "         [164, 178, 200],\n",
       "         ...,\n",
       "         [152, 173, 205],\n",
       "         [152, 173, 207],\n",
       "         [146, 167, 201]],\n",
       " \n",
       "        [[162, 180, 201],\n",
       "         [162, 179, 200],\n",
       "         [163, 178, 197],\n",
       "         ...,\n",
       "         [139, 160, 191],\n",
       "         [146, 166, 201],\n",
       "         [144, 163, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[173, 191, 214],\n",
       "         [177, 195, 218],\n",
       "         [180, 198, 222],\n",
       "         ...,\n",
       "         [180, 201, 233],\n",
       "         [180, 201, 233],\n",
       "         [183, 204, 236]],\n",
       " \n",
       "        [[173, 191, 214],\n",
       "         [177, 195, 218],\n",
       "         [181, 198, 224],\n",
       "         ...,\n",
       "         [179, 200, 232],\n",
       "         [180, 201, 233],\n",
       "         [184, 205, 237]],\n",
       " \n",
       "        [[173, 191, 214],\n",
       "         [178, 196, 219],\n",
       "         [178, 195, 221],\n",
       "         ...,\n",
       "         [179, 200, 232],\n",
       "         [181, 203, 234],\n",
       "         [188, 209, 241]]], dtype=uint8),\n",
       " array([[[142, 164, 200],\n",
       "         [134, 156, 193],\n",
       "         [133, 154, 192],\n",
       "         ...,\n",
       "         [ 87, 102, 136],\n",
       "         [ 92, 106, 142],\n",
       "         [ 99, 113, 149]],\n",
       " \n",
       "        [[132, 154, 190],\n",
       "         [132, 153, 190],\n",
       "         [126, 147, 185],\n",
       "         ...,\n",
       "         [ 81,  95, 125],\n",
       "         [ 89, 103, 136],\n",
       "         [ 94, 108, 140]],\n",
       " \n",
       "        [[126, 148, 184],\n",
       "         [127, 149, 186],\n",
       "         [119, 140, 178],\n",
       "         ...,\n",
       "         [ 53,  66,  92],\n",
       "         [ 71,  85, 114],\n",
       "         [ 86, 100, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 119, 167],\n",
       "         [ 90, 112, 160],\n",
       "         [ 87, 109, 157],\n",
       "         ...,\n",
       "         [102, 124, 166],\n",
       "         [103, 124, 163],\n",
       "         [104, 125, 160]],\n",
       " \n",
       "        [[100, 122, 170],\n",
       "         [ 93, 115, 163],\n",
       "         [ 90, 112, 160],\n",
       "         ...,\n",
       "         [104, 126, 168],\n",
       "         [106, 125, 167],\n",
       "         [103, 122, 159]],\n",
       " \n",
       "        [[106, 129, 177],\n",
       "         [ 95, 117, 166],\n",
       "         [ 94, 116, 165],\n",
       "         ...,\n",
       "         [102, 124, 166],\n",
       "         [105, 123, 164],\n",
       "         [103, 122, 159]]], dtype=uint8),\n",
       " array([[[136, 154, 178],\n",
       "         [139, 158, 184],\n",
       "         [140, 159, 186],\n",
       "         ...,\n",
       "         [133, 152, 200],\n",
       "         [139, 159, 206],\n",
       "         [145, 165, 212]],\n",
       " \n",
       "        [[140, 157, 183],\n",
       "         [139, 158, 185],\n",
       "         [140, 159, 186],\n",
       "         ...,\n",
       "         [134, 152, 198],\n",
       "         [142, 160, 206],\n",
       "         [140, 159, 204]],\n",
       " \n",
       "        [[139, 156, 183],\n",
       "         [141, 158, 185],\n",
       "         [140, 160, 185],\n",
       "         ...,\n",
       "         [133, 152, 197],\n",
       "         [133, 152, 197],\n",
       "         [138, 153, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 157, 192],\n",
       "         [130, 153, 191],\n",
       "         [130, 152, 192],\n",
       "         ...,\n",
       "         [107, 133, 173],\n",
       "         [110, 136, 176],\n",
       "         [114, 140, 180]],\n",
       " \n",
       "        [[135, 160, 194],\n",
       "         [132, 158, 194],\n",
       "         [130, 155, 195],\n",
       "         ...,\n",
       "         [118, 144, 181],\n",
       "         [120, 146, 183],\n",
       "         [123, 149, 186]],\n",
       " \n",
       "        [[137, 164, 198],\n",
       "         [136, 162, 198],\n",
       "         [133, 160, 197],\n",
       "         ...,\n",
       "         [123, 147, 183],\n",
       "         [126, 150, 186],\n",
       "         [128, 152, 188]]], dtype=uint8),\n",
       " array([[[142, 161, 206],\n",
       "         [149, 168, 211],\n",
       "         [147, 165, 206],\n",
       "         ...,\n",
       "         [165, 182, 209],\n",
       "         [161, 178, 204],\n",
       "         [155, 173, 198]],\n",
       " \n",
       "        [[141, 161, 208],\n",
       "         [143, 162, 208],\n",
       "         [146, 165, 208],\n",
       "         ...,\n",
       "         [171, 188, 215],\n",
       "         [169, 186, 213],\n",
       "         [161, 180, 205]],\n",
       " \n",
       "        [[134, 155, 205],\n",
       "         [137, 157, 205],\n",
       "         [142, 161, 207],\n",
       "         ...,\n",
       "         [176, 191, 218],\n",
       "         [167, 184, 210],\n",
       "         [156, 176, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 149, 193],\n",
       "         [102, 128, 174],\n",
       "         [101, 126, 176],\n",
       "         ...,\n",
       "         [202, 218, 244],\n",
       "         [201, 218, 239],\n",
       "         [193, 214, 233]],\n",
       " \n",
       "        [[145, 172, 209],\n",
       "         [106, 132, 176],\n",
       "         [103, 129, 176],\n",
       "         ...,\n",
       "         [200, 215, 240],\n",
       "         [197, 215, 238],\n",
       "         [193, 214, 236]],\n",
       " \n",
       "        [[168, 193, 228],\n",
       "         [121, 147, 188],\n",
       "         [100, 129, 174],\n",
       "         ...,\n",
       "         [189, 203, 231],\n",
       "         [190, 207, 233],\n",
       "         [185, 206, 232]]], dtype=uint8),\n",
       " array([[[ 25,  29,  47],\n",
       "         [ 25,  30,  49],\n",
       "         [ 26,  32,  51],\n",
       "         ...,\n",
       "         [ 64,  76, 132],\n",
       "         [ 68,  81, 141],\n",
       "         [ 80,  94, 151]],\n",
       " \n",
       "        [[ 25,  29,  47],\n",
       "         [ 25,  30,  48],\n",
       "         [ 24,  30,  49],\n",
       "         ...,\n",
       "         [ 60,  72, 128],\n",
       "         [ 69,  80, 140],\n",
       "         [ 79,  91, 150]],\n",
       " \n",
       "        [[ 26,  31,  46],\n",
       "         [ 26,  31,  49],\n",
       "         [ 24,  30,  49],\n",
       "         ...,\n",
       "         [ 59,  72, 125],\n",
       "         [ 65,  75, 134],\n",
       "         [ 73,  85, 144]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 29,  37,  61],\n",
       "         [ 32,  41,  68],\n",
       "         [ 34,  44,  75],\n",
       "         ...,\n",
       "         [ 20,  25,  52],\n",
       "         [ 21,  25,  53],\n",
       "         [ 24,  28,  56]],\n",
       " \n",
       "        [[ 27,  32,  57],\n",
       "         [ 30,  37,  65],\n",
       "         [ 33,  43,  73],\n",
       "         ...,\n",
       "         [ 21,  25,  53],\n",
       "         [ 21,  25,  53],\n",
       "         [ 25,  29,  57]],\n",
       " \n",
       "        [[ 28,  33,  58],\n",
       "         [ 30,  38,  65],\n",
       "         [ 31,  42,  72],\n",
       "         ...,\n",
       "         [ 21,  25,  53],\n",
       "         [ 21,  25,  53],\n",
       "         [ 25,  29,  57]]], dtype=uint8),\n",
       " array([[[ 61,  78, 141],\n",
       "         [ 70,  85, 147],\n",
       "         [ 83,  95, 154],\n",
       "         ...,\n",
       "         [ 83, 101, 153],\n",
       "         [ 82, 101, 152],\n",
       "         [ 80, 101, 152]],\n",
       " \n",
       "        [[ 62,  79, 142],\n",
       "         [ 80,  93, 155],\n",
       "         [ 94, 105, 164],\n",
       "         ...,\n",
       "         [ 86, 106, 158],\n",
       "         [ 84, 103, 154],\n",
       "         [ 80, 102, 153]],\n",
       " \n",
       "        [[ 67,  81, 143],\n",
       "         [ 82,  95, 154],\n",
       "         [ 90, 102, 159],\n",
       "         ...,\n",
       "         [ 87, 108, 160],\n",
       "         [ 84, 105, 156],\n",
       "         [ 78, 100, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 109, 178],\n",
       "         [ 86, 110, 178],\n",
       "         [ 84, 109, 175],\n",
       "         ...,\n",
       "         [ 84, 102, 170],\n",
       "         [ 85, 102, 168],\n",
       "         [ 86, 102, 166]],\n",
       " \n",
       "        [[ 85, 107, 179],\n",
       "         [ 89, 112, 180],\n",
       "         [ 88, 114, 180],\n",
       "         ...,\n",
       "         [ 78,  94, 165],\n",
       "         [ 80,  97, 164],\n",
       "         [ 92, 109, 173]],\n",
       " \n",
       "        [[ 81, 100, 173],\n",
       "         [ 89, 110, 178],\n",
       "         [ 92, 116, 182],\n",
       "         ...,\n",
       "         [ 81,  99, 169],\n",
       "         [ 89, 106, 173],\n",
       "         [100, 117, 180]]], dtype=uint8),\n",
       " array([[[157, 206, 252],\n",
       "         [153, 201, 249],\n",
       "         [147, 195, 242],\n",
       "         ...,\n",
       "         [ 44,  68, 108],\n",
       "         [ 32,  58,  93],\n",
       "         [ 22,  36,  68]],\n",
       " \n",
       "        [[157, 206, 254],\n",
       "         [152, 199, 250],\n",
       "         [153, 200, 247],\n",
       "         ...,\n",
       "         [ 65, 101, 144],\n",
       "         [ 56,  96, 138],\n",
       "         [ 60,  98, 140]],\n",
       " \n",
       "        [[158, 207, 252],\n",
       "         [154, 203, 250],\n",
       "         [142, 192, 239],\n",
       "         ...,\n",
       "         [ 93, 136, 178],\n",
       "         [ 86, 127, 170],\n",
       "         [ 75, 115, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 165, 216],\n",
       "         [101, 156, 207],\n",
       "         [ 85, 143, 193],\n",
       "         ...,\n",
       "         [ 34,  57,  99],\n",
       "         [ 23,  50,  94],\n",
       "         [ 29,  53,  97]],\n",
       " \n",
       "        [[114, 167, 218],\n",
       "         [108, 159, 209],\n",
       "         [ 96, 151, 202],\n",
       "         ...,\n",
       "         [ 30,  62, 107],\n",
       "         [ 31,  68, 114],\n",
       "         [ 33,  66, 115]],\n",
       " \n",
       "        [[113, 169, 221],\n",
       "         [111, 162, 212],\n",
       "         [102, 155, 206],\n",
       "         ...,\n",
       "         [ 41,  82, 130],\n",
       "         [ 37,  78, 126],\n",
       "         [ 33,  77, 124]]], dtype=uint8),\n",
       " array([[[ 32,  29,  53],\n",
       "         [ 71,  83, 130],\n",
       "         [118, 133, 181],\n",
       "         ...,\n",
       "         [163, 173, 220],\n",
       "         [168, 178, 225],\n",
       "         [164, 175, 219]],\n",
       " \n",
       "        [[ 31,  29,  66],\n",
       "         [ 87,  96, 152],\n",
       "         [126, 139, 187],\n",
       "         ...,\n",
       "         [158, 170, 217],\n",
       "         [162, 174, 221],\n",
       "         [155, 168, 214]],\n",
       " \n",
       "        [[ 38,  38,  77],\n",
       "         [107, 118, 169],\n",
       "         [128, 142, 190],\n",
       "         ...,\n",
       "         [148, 162, 210],\n",
       "         [148, 162, 210],\n",
       "         [149, 163, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87,  83, 123],\n",
       "         [143, 159, 198],\n",
       "         [148, 164, 206],\n",
       "         ...,\n",
       "         [153, 168, 217],\n",
       "         [154, 171, 220],\n",
       "         [168, 183, 232]],\n",
       " \n",
       "        [[ 88,  82, 126],\n",
       "         [143, 159, 199],\n",
       "         [149, 165, 207],\n",
       "         ...,\n",
       "         [155, 172, 220],\n",
       "         [157, 175, 223],\n",
       "         [170, 185, 234]],\n",
       " \n",
       "        [[ 77,  76, 119],\n",
       "         [143, 159, 199],\n",
       "         [151, 167, 209],\n",
       "         ...,\n",
       "         [157, 175, 222],\n",
       "         [161, 179, 226],\n",
       "         [171, 187, 234]]], dtype=uint8),\n",
       " array([[[175, 201, 254],\n",
       "         [170, 197, 250],\n",
       "         [172, 198, 252],\n",
       "         ...,\n",
       "         [131, 180, 245],\n",
       "         [126, 176, 242],\n",
       "         [119, 169, 235]],\n",
       " \n",
       "        [[172, 197, 253],\n",
       "         [172, 197, 253],\n",
       "         [169, 196, 251],\n",
       "         ...,\n",
       "         [128, 177, 240],\n",
       "         [125, 173, 237],\n",
       "         [126, 174, 238]],\n",
       " \n",
       "        [[173, 199, 254],\n",
       "         [172, 199, 253],\n",
       "         [167, 196, 252],\n",
       "         ...,\n",
       "         [116, 163, 225],\n",
       "         [133, 180, 243],\n",
       "         [126, 173, 236]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 155, 236],\n",
       "         [120, 163, 244],\n",
       "         [117, 159, 239],\n",
       "         ...,\n",
       "         [137, 177, 251],\n",
       "         [140, 181, 255],\n",
       "         [136, 178, 253]],\n",
       " \n",
       "        [[117, 160, 239],\n",
       "         [115, 157, 240],\n",
       "         [120, 160, 244],\n",
       "         ...,\n",
       "         [139, 180, 252],\n",
       "         [136, 177, 251],\n",
       "         [130, 172, 245]],\n",
       " \n",
       "        [[117, 159, 237],\n",
       "         [110, 151, 235],\n",
       "         [114, 152, 241],\n",
       "         ...,\n",
       "         [143, 183, 255],\n",
       "         [142, 184, 254],\n",
       "         [139, 181, 251]]], dtype=uint8),\n",
       " array([[[159, 172, 216],\n",
       "         [153, 165, 209],\n",
       "         [152, 165, 209],\n",
       "         ...,\n",
       "         [ 82, 105, 151],\n",
       "         [ 62,  85, 127],\n",
       "         [ 35,  52,  73]],\n",
       " \n",
       "        [[153, 168, 213],\n",
       "         [147, 162, 207],\n",
       "         [140, 155, 201],\n",
       "         ...,\n",
       "         [ 91, 115, 156],\n",
       "         [ 80, 102, 144],\n",
       "         [ 50,  67,  93]],\n",
       " \n",
       "        [[152, 166, 213],\n",
       "         [145, 160, 207],\n",
       "         [127, 143, 186],\n",
       "         ...,\n",
       "         [ 94, 118, 160],\n",
       "         [ 91, 113, 154],\n",
       "         [ 64,  82, 112]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 138, 198],\n",
       "         [112, 140, 200],\n",
       "         [113, 142, 200],\n",
       "         ...,\n",
       "         [111, 137, 183],\n",
       "         [118, 142, 177],\n",
       "         [127, 147, 178]],\n",
       " \n",
       "        [[115, 142, 200],\n",
       "         [115, 142, 199],\n",
       "         [112, 142, 197],\n",
       "         ...,\n",
       "         [111, 138, 183],\n",
       "         [120, 141, 177],\n",
       "         [131, 151, 182]],\n",
       " \n",
       "        [[119, 146, 203],\n",
       "         [118, 145, 202],\n",
       "         [114, 144, 199],\n",
       "         ...,\n",
       "         [107, 133, 178],\n",
       "         [119, 140, 175],\n",
       "         [131, 151, 182]]], dtype=uint8),\n",
       " array([[[ 40,  62,  97],\n",
       "         [ 47,  70, 106],\n",
       "         [ 40,  64, 100],\n",
       "         ...,\n",
       "         [ 69, 101, 141],\n",
       "         [ 68, 100, 140],\n",
       "         [ 67,  99, 140]],\n",
       " \n",
       "        [[ 41,  65,  97],\n",
       "         [ 45,  69, 104],\n",
       "         [ 43,  68, 104],\n",
       "         ...,\n",
       "         [ 68,  99, 140],\n",
       "         [ 69, 101, 140],\n",
       "         [ 67,  99, 138]],\n",
       " \n",
       "        [[ 43,  68, 100],\n",
       "         [ 46,  71, 104],\n",
       "         [ 46,  70, 106],\n",
       "         ...,\n",
       "         [ 69, 100, 139],\n",
       "         [ 73, 102, 142],\n",
       "         [ 71,  99, 140]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72, 104, 140],\n",
       "         [ 71, 104, 141],\n",
       "         [ 69, 102, 141],\n",
       "         ...,\n",
       "         [ 61,  91, 126],\n",
       "         [ 60,  91, 126],\n",
       "         [ 58,  90, 126]],\n",
       " \n",
       "        [[ 72, 103, 142],\n",
       "         [ 73, 104, 143],\n",
       "         [ 72, 102, 143],\n",
       "         ...,\n",
       "         [ 65,  97, 134],\n",
       "         [ 64,  95, 133],\n",
       "         [ 61,  92, 131]],\n",
       " \n",
       "        [[ 76, 107, 146],\n",
       "         [ 78, 109, 148],\n",
       "         [ 78, 108, 149],\n",
       "         ...,\n",
       "         [ 71, 103, 139],\n",
       "         [ 69, 100, 139],\n",
       "         [ 65,  95, 136]]], dtype=uint8),\n",
       " array([[[ 74, 103, 142],\n",
       "         [ 75, 104, 142],\n",
       "         [ 73, 102, 139],\n",
       "         ...,\n",
       "         [ 44,  63,  96],\n",
       "         [ 42,  60,  89],\n",
       "         [ 46,  61,  87]],\n",
       " \n",
       "        [[ 68,  97, 135],\n",
       "         [ 72, 100, 137],\n",
       "         [ 75, 102, 138],\n",
       "         ...,\n",
       "         [ 52,  72, 103],\n",
       "         [ 44,  62,  90],\n",
       "         [ 49,  64,  89]],\n",
       " \n",
       "        [[ 66,  94, 129],\n",
       "         [ 70,  96, 132],\n",
       "         [ 72,  99, 133],\n",
       "         ...,\n",
       "         [ 60,  79, 107],\n",
       "         [ 50,  69,  95],\n",
       "         [ 54,  68,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75, 100, 142],\n",
       "         [ 73, 101, 141],\n",
       "         [ 70, 101, 139],\n",
       "         ...,\n",
       "         [ 79, 117, 151],\n",
       "         [ 78, 115, 149],\n",
       "         [ 76, 111, 145]],\n",
       " \n",
       "        [[ 79, 104, 146],\n",
       "         [ 77, 106, 146],\n",
       "         [ 76, 107, 146],\n",
       "         ...,\n",
       "         [ 79, 118, 153],\n",
       "         [ 80, 118, 153],\n",
       "         [ 73, 111, 145]],\n",
       " \n",
       "        [[ 81, 109, 150],\n",
       "         [ 83, 113, 154],\n",
       "         [ 81, 113, 154],\n",
       "         ...,\n",
       "         [ 79, 121, 156],\n",
       "         [ 79, 120, 155],\n",
       "         [ 73, 113, 146]]], dtype=uint8),\n",
       " array([[[180, 188, 196],\n",
       "         [249, 253, 252],\n",
       "         [251, 253, 253],\n",
       "         ...,\n",
       "         [130, 146, 163],\n",
       "         [128, 144, 161],\n",
       "         [116, 133, 152]],\n",
       " \n",
       "        [[210, 217, 223],\n",
       "         [250, 254, 253],\n",
       "         [251, 254, 252],\n",
       "         ...,\n",
       "         [127, 143, 160],\n",
       "         [121, 138, 156],\n",
       "         [111, 129, 153]],\n",
       " \n",
       "        [[227, 233, 235],\n",
       "         [251, 254, 252],\n",
       "         [252, 255, 253],\n",
       "         ...,\n",
       "         [109, 127, 148],\n",
       "         [103, 127, 148],\n",
       "         [ 97, 119, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[251, 254, 252],\n",
       "         [251, 254, 252],\n",
       "         [252, 255, 253],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255]],\n",
       " \n",
       "        [[252, 255, 253],\n",
       "         [251, 254, 252],\n",
       "         [251, 254, 252],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255]],\n",
       " \n",
       "        [[252, 255, 253],\n",
       "         [251, 254, 252],\n",
       "         [251, 254, 252],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255]]], dtype=uint8),\n",
       " array([[[ 93, 111, 134],\n",
       "         [ 92, 110, 133],\n",
       "         [ 88, 108, 133],\n",
       "         ...,\n",
       "         [ 37,  36,  40],\n",
       "         [ 32,  28,  29],\n",
       "         [ 27,  22,  21]],\n",
       " \n",
       "        [[ 84, 104, 127],\n",
       "         [ 81, 103, 125],\n",
       "         [ 80, 102, 125],\n",
       "         ...,\n",
       "         [ 43,  38,  40],\n",
       "         [ 31,  27,  27],\n",
       "         [ 25,  20,  19]],\n",
       " \n",
       "        [[ 86, 104, 129],\n",
       "         [ 76, 100, 124],\n",
       "         [ 71,  94, 118],\n",
       "         ...,\n",
       "         [ 48,  46,  46],\n",
       "         [ 31,  27,  26],\n",
       "         [ 25,  21,  20]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74,  79, 107],\n",
       "         [ 75,  76,  97],\n",
       "         [ 68,  72,  90],\n",
       "         ...,\n",
       "         [ 87,  93, 107],\n",
       "         [ 81,  90, 103],\n",
       "         [ 69,  85,  99]],\n",
       " \n",
       "        [[ 73,  79, 106],\n",
       "         [ 75,  78,  99],\n",
       "         [ 70,  74,  92],\n",
       "         ...,\n",
       "         [ 90,  95, 113],\n",
       "         [ 80,  89, 103],\n",
       "         [ 70,  85,  98]],\n",
       " \n",
       "        [[ 73,  77, 107],\n",
       "         [ 70,  73,  99],\n",
       "         [ 72,  74,  99],\n",
       "         ...,\n",
       "         [ 88,  94, 114],\n",
       "         [ 78,  87, 101],\n",
       "         [ 67,  81,  94]]], dtype=uint8),\n",
       " array([[[165, 170, 185],\n",
       "         [166, 171, 186],\n",
       "         [165, 170, 185],\n",
       "         ...,\n",
       "         [167, 170, 191],\n",
       "         [170, 173, 194],\n",
       "         [172, 175, 196]],\n",
       " \n",
       "        [[166, 171, 186],\n",
       "         [170, 176, 190],\n",
       "         [165, 170, 185],\n",
       "         ...,\n",
       "         [161, 162, 182],\n",
       "         [166, 167, 187],\n",
       "         [169, 172, 193]],\n",
       " \n",
       "        [[172, 175, 190],\n",
       "         [172, 175, 190],\n",
       "         [165, 168, 183],\n",
       "         ...,\n",
       "         [154, 154, 171],\n",
       "         [160, 159, 179],\n",
       "         [163, 161, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[188, 192, 210],\n",
       "         [188, 193, 211],\n",
       "         [186, 192, 211],\n",
       "         ...,\n",
       "         [176, 183, 203],\n",
       "         [176, 181, 203],\n",
       "         [175, 179, 203]],\n",
       " \n",
       "        [[192, 197, 213],\n",
       "         [194, 198, 216],\n",
       "         [190, 196, 215],\n",
       "         ...,\n",
       "         [181, 187, 210],\n",
       "         [182, 186, 210],\n",
       "         [177, 181, 206]],\n",
       " \n",
       "        [[197, 199, 216],\n",
       "         [195, 199, 217],\n",
       "         [191, 197, 215],\n",
       "         ...,\n",
       "         [183, 189, 212],\n",
       "         [183, 189, 212],\n",
       "         [180, 184, 207]]], dtype=uint8),\n",
       " array([[[187, 188, 214],\n",
       "         [188, 190, 214],\n",
       "         [191, 192, 213],\n",
       "         ...,\n",
       "         [146, 153, 178],\n",
       "         [140, 145, 168],\n",
       "         [108, 108, 129]],\n",
       " \n",
       "        [[178, 180, 204],\n",
       "         [178, 180, 202],\n",
       "         [187, 188, 209],\n",
       "         ...,\n",
       "         [153, 160, 182],\n",
       "         [142, 150, 172],\n",
       "         [111, 115, 135]],\n",
       " \n",
       "        [[175, 177, 200],\n",
       "         [174, 175, 196],\n",
       "         [181, 183, 203],\n",
       "         ...,\n",
       "         [158, 164, 183],\n",
       "         [144, 152, 174],\n",
       "         [115, 121, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[173, 179, 209],\n",
       "         [174, 179, 210],\n",
       "         [176, 180, 209],\n",
       "         ...,\n",
       "         [229, 232, 239],\n",
       "         [231, 234, 240],\n",
       "         [226, 229, 235]],\n",
       " \n",
       "        [[177, 185, 215],\n",
       "         [178, 186, 216],\n",
       "         [186, 190, 219],\n",
       "         ...,\n",
       "         [235, 238, 242],\n",
       "         [233, 237, 241],\n",
       "         [228, 232, 237]],\n",
       " \n",
       "        [[183, 191, 221],\n",
       "         [183, 192, 220],\n",
       "         [187, 193, 220],\n",
       "         ...,\n",
       "         [237, 240, 244],\n",
       "         [234, 239, 242],\n",
       "         [227, 233, 240]]], dtype=uint8),\n",
       " array([[[14, 16, 27],\n",
       "         [14, 16, 27],\n",
       "         [16, 18, 29],\n",
       "         ...,\n",
       "         [50, 51, 72],\n",
       "         [51, 53, 77],\n",
       "         [53, 57, 81]],\n",
       " \n",
       "        [[14, 16, 27],\n",
       "         [14, 16, 27],\n",
       "         [16, 18, 29],\n",
       "         ...,\n",
       "         [48, 51, 71],\n",
       "         [49, 53, 76],\n",
       "         [49, 53, 77]],\n",
       " \n",
       "        [[15, 17, 28],\n",
       "         [15, 17, 28],\n",
       "         [16, 18, 29],\n",
       "         ...,\n",
       "         [48, 51, 71],\n",
       "         [49, 54, 75],\n",
       "         [50, 54, 78]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[32, 38, 56],\n",
       "         [36, 42, 61],\n",
       "         [34, 40, 59],\n",
       "         ...,\n",
       "         [24, 24, 38],\n",
       "         [25, 25, 39],\n",
       "         [20, 20, 34]],\n",
       " \n",
       "        [[35, 39, 57],\n",
       "         [39, 44, 63],\n",
       "         [39, 44, 65],\n",
       "         ...,\n",
       "         [24, 23, 39],\n",
       "         [23, 22, 38],\n",
       "         [20, 19, 35]],\n",
       " \n",
       "        [[26, 28, 47],\n",
       "         [40, 45, 64],\n",
       "         [39, 45, 65],\n",
       "         ...,\n",
       "         [24, 24, 40],\n",
       "         [21, 21, 37],\n",
       "         [21, 21, 37]]], dtype=uint8),\n",
       " array([[[ 65,  67,  99],\n",
       "         [ 68,  70, 102],\n",
       "         [ 76,  78, 110],\n",
       "         ...,\n",
       "         [130, 134, 159],\n",
       "         [121, 126, 151],\n",
       "         [121, 128, 153]],\n",
       " \n",
       "        [[ 64,  67,  95],\n",
       "         [ 68,  71,  99],\n",
       "         [ 72,  75, 103],\n",
       "         ...,\n",
       "         [138, 140, 166],\n",
       "         [126, 131, 156],\n",
       "         [115, 120, 145]],\n",
       " \n",
       "        [[ 64,  68,  93],\n",
       "         [ 66,  69,  95],\n",
       "         [ 71,  75, 100],\n",
       "         ...,\n",
       "         [133, 134, 159],\n",
       "         [131, 132, 157],\n",
       "         [129, 131, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 157, 187],\n",
       "         [142, 142, 173],\n",
       "         [131, 131, 166],\n",
       "         ...,\n",
       "         [141, 147, 176],\n",
       "         [146, 150, 178],\n",
       "         [149, 154, 179]],\n",
       " \n",
       "        [[153, 157, 186],\n",
       "         [150, 152, 183],\n",
       "         [149, 150, 184],\n",
       "         ...,\n",
       "         [144, 148, 177],\n",
       "         [149, 153, 180],\n",
       "         [150, 154, 179]],\n",
       " \n",
       "        [[154, 161, 190],\n",
       "         [159, 163, 193],\n",
       "         [155, 158, 191],\n",
       "         ...,\n",
       "         [146, 150, 178],\n",
       "         [150, 154, 180],\n",
       "         [151, 155, 180]]], dtype=uint8),\n",
       " array([[[106, 116, 150],\n",
       "         [102, 112, 146],\n",
       "         [ 98, 108, 142],\n",
       "         ...,\n",
       "         [102, 112, 142],\n",
       "         [ 99, 112, 143],\n",
       "         [159, 169, 181]],\n",
       " \n",
       "        [[106, 115, 149],\n",
       "         [101, 111, 145],\n",
       "         [ 97, 107, 141],\n",
       "         ...,\n",
       "         [112, 122, 152],\n",
       "         [102, 117, 149],\n",
       "         [159, 169, 183]],\n",
       " \n",
       "        [[105, 115, 148],\n",
       "         [100, 110, 144],\n",
       "         [ 97, 107, 141],\n",
       "         ...,\n",
       "         [108, 119, 151],\n",
       "         [102, 117, 149],\n",
       "         [160, 169, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 131, 163],\n",
       "         [123, 134, 166],\n",
       "         [126, 137, 167],\n",
       "         ...,\n",
       "         [119, 129, 165],\n",
       "         [116, 128, 164],\n",
       "         [169, 179, 196]],\n",
       " \n",
       "        [[122, 131, 165],\n",
       "         [120, 131, 163],\n",
       "         [123, 133, 165],\n",
       "         ...,\n",
       "         [120, 129, 166],\n",
       "         [119, 130, 166],\n",
       "         [173, 180, 197]],\n",
       " \n",
       "        [[121, 131, 166],\n",
       "         [119, 129, 163],\n",
       "         [122, 131, 165],\n",
       "         ...,\n",
       "         [121, 129, 167],\n",
       "         [120, 131, 167],\n",
       "         [173, 180, 198]]], dtype=uint8),\n",
       " array([[[132, 141, 145],\n",
       "         [135, 144, 149],\n",
       "         [133, 140, 149],\n",
       "         ...,\n",
       "         [173, 173, 186],\n",
       "         [173, 172, 189],\n",
       "         [174, 173, 190]],\n",
       " \n",
       "        [[137, 144, 146],\n",
       "         [127, 134, 139],\n",
       "         [111, 117, 124],\n",
       "         ...,\n",
       "         [172, 172, 184],\n",
       "         [173, 172, 187],\n",
       "         [175, 174, 190]],\n",
       " \n",
       "        [[112, 118, 121],\n",
       "         [105, 109, 114],\n",
       "         [111, 114, 122],\n",
       "         ...,\n",
       "         [171, 171, 183],\n",
       "         [172, 172, 186],\n",
       "         [174, 174, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 155, 161],\n",
       "         [141, 149, 156],\n",
       "         [147, 154, 163],\n",
       "         ...,\n",
       "         [136, 146, 164],\n",
       "         [132, 142, 159],\n",
       "         [135, 145, 162]],\n",
       " \n",
       "        [[147, 156, 161],\n",
       "         [149, 157, 164],\n",
       "         [149, 156, 165],\n",
       "         ...,\n",
       "         [137, 144, 163],\n",
       "         [138, 146, 163],\n",
       "         [146, 155, 171]],\n",
       " \n",
       "        [[149, 156, 162],\n",
       "         [151, 157, 165],\n",
       "         [151, 156, 165],\n",
       "         ...,\n",
       "         [137, 144, 161],\n",
       "         [142, 149, 164],\n",
       "         [149, 156, 173]]], dtype=uint8),\n",
       " array([[[ 57,  63,  86],\n",
       "         [ 57,  65,  88],\n",
       "         [ 58,  66,  89],\n",
       "         ...,\n",
       "         [ 75,  97, 121],\n",
       "         [ 74,  95, 121],\n",
       "         [ 72,  93, 120]],\n",
       " \n",
       "        [[ 58,  63,  87],\n",
       "         [ 56,  64,  87],\n",
       "         [ 57,  65,  88],\n",
       "         ...,\n",
       "         [ 75,  97, 122],\n",
       "         [ 73,  95, 120],\n",
       "         [ 73,  94, 121]],\n",
       " \n",
       "        [[ 58,  64,  87],\n",
       "         [ 58,  66,  89],\n",
       "         [ 59,  66,  89],\n",
       "         ...,\n",
       "         [ 74,  96, 121],\n",
       "         [ 71,  94, 119],\n",
       "         [ 71,  95, 119]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 64,  91, 125],\n",
       "         [ 66,  91, 125],\n",
       "         [ 66,  91, 125],\n",
       "         ...,\n",
       "         [ 84, 109, 142],\n",
       "         [ 80, 105, 139],\n",
       "         [ 76, 101, 133]],\n",
       " \n",
       "        [[ 67,  94, 128],\n",
       "         [ 69,  94, 128],\n",
       "         [ 69,  94, 128],\n",
       "         ...,\n",
       "         [ 80, 105, 138],\n",
       "         [ 78, 103, 137],\n",
       "         [ 75, 100, 132]],\n",
       " \n",
       "        [[ 69,  94, 128],\n",
       "         [ 69,  94, 128],\n",
       "         [ 69,  94, 128],\n",
       "         ...,\n",
       "         [ 77, 102, 136],\n",
       "         [ 77, 102, 134],\n",
       "         [ 74,  99, 131]]], dtype=uint8),\n",
       " array([[[ 20,  27,  41],\n",
       "         [ 32,  42,  59],\n",
       "         [ 38,  47,  67],\n",
       "         ...,\n",
       "         [ 46,  55,  93],\n",
       "         [ 44,  52,  91],\n",
       "         [ 41,  50,  88]],\n",
       " \n",
       "        [[ 21,  29,  45],\n",
       "         [ 34,  43,  62],\n",
       "         [ 39,  49,  67],\n",
       "         ...,\n",
       "         [ 46,  55,  93],\n",
       "         [ 44,  53,  91],\n",
       "         [ 44,  53,  91]],\n",
       " \n",
       "        [[ 25,  35,  50],\n",
       "         [ 33,  43,  61],\n",
       "         [ 41,  50,  68],\n",
       "         ...,\n",
       "         [ 45,  54,  92],\n",
       "         [ 46,  55,  93],\n",
       "         [ 44,  53,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 29,  36,  49],\n",
       "         [ 41,  52,  72],\n",
       "         [ 45,  56,  78],\n",
       "         ...,\n",
       "         [ 49,  60,  90],\n",
       "         [ 56,  67,  97],\n",
       "         [ 61,  72, 102]],\n",
       " \n",
       "        [[ 28,  35,  48],\n",
       "         [ 39,  50,  70],\n",
       "         [ 48,  59,  81],\n",
       "         ...,\n",
       "         [ 55,  66,  96],\n",
       "         [ 59,  70, 100],\n",
       "         [ 59,  70, 100]],\n",
       " \n",
       "        [[ 24,  31,  43],\n",
       "         [ 42,  52,  72],\n",
       "         [ 48,  58,  82],\n",
       "         ...,\n",
       "         [ 54,  65,  95],\n",
       "         [ 57,  68,  98],\n",
       "         [ 58,  69,  99]]], dtype=uint8),\n",
       " array([[[146, 150, 165],\n",
       "         [149, 153, 168],\n",
       "         [149, 152, 169],\n",
       "         ...,\n",
       "         [126, 140, 159],\n",
       "         [121, 135, 154],\n",
       "         [109, 120, 138]],\n",
       " \n",
       "        [[146, 149, 164],\n",
       "         [149, 152, 167],\n",
       "         [149, 151, 168],\n",
       "         ...,\n",
       "         [125, 139, 158],\n",
       "         [122, 136, 155],\n",
       "         [111, 122, 139]],\n",
       " \n",
       "        [[146, 147, 163],\n",
       "         [146, 151, 166],\n",
       "         [144, 151, 167],\n",
       "         ...,\n",
       "         [127, 138, 158],\n",
       "         [123, 134, 154],\n",
       "         [110, 121, 140]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 135, 168],\n",
       "         [111, 129, 162],\n",
       "         [112, 130, 162],\n",
       "         ...,\n",
       "         [116, 139, 165],\n",
       "         [117, 140, 166],\n",
       "         [116, 137, 164]],\n",
       " \n",
       "        [[117, 136, 169],\n",
       "         [112, 131, 164],\n",
       "         [108, 128, 160],\n",
       "         ...,\n",
       "         [118, 141, 167],\n",
       "         [117, 140, 166],\n",
       "         [117, 138, 165]],\n",
       " \n",
       "        [[118, 137, 170],\n",
       "         [113, 132, 165],\n",
       "         [111, 130, 162],\n",
       "         ...,\n",
       "         [118, 141, 167],\n",
       "         [118, 141, 167],\n",
       "         [119, 140, 166]]], dtype=uint8),\n",
       " array([[[ 62,  64,  92],\n",
       "         [ 67,  73, 102],\n",
       "         [ 68,  74, 103],\n",
       "         ...,\n",
       "         [ 35,  47,  95],\n",
       "         [ 35,  49,  97],\n",
       "         [ 34,  49,  96]],\n",
       " \n",
       "        [[ 71,  73, 100],\n",
       "         [ 72,  78, 107],\n",
       "         [ 70,  75, 104],\n",
       "         ...,\n",
       "         [ 34,  48,  97],\n",
       "         [ 36,  52, 100],\n",
       "         [ 34,  50,  98]],\n",
       " \n",
       "        [[ 71,  73, 101],\n",
       "         [ 73,  79, 108],\n",
       "         [ 71,  77, 106],\n",
       "         ...,\n",
       "         [ 32,  46,  95],\n",
       "         [ 35,  50,  99],\n",
       "         [ 36,  51, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 58,  62,  80],\n",
       "         [ 68,  78, 108],\n",
       "         [ 63,  73, 103],\n",
       "         ...,\n",
       "         [ 42,  51,  81],\n",
       "         [ 44,  54,  84],\n",
       "         [ 41,  51,  81]],\n",
       " \n",
       "        [[ 48,  54,  73],\n",
       "         [ 74,  82, 107],\n",
       "         [ 70,  80, 109],\n",
       "         ...,\n",
       "         [ 45,  53,  84],\n",
       "         [ 47,  57,  87],\n",
       "         [ 45,  55,  85]],\n",
       " \n",
       "        [[ 52,  58,  80],\n",
       "         [ 70,  78, 105],\n",
       "         [ 71,  81, 110],\n",
       "         ...,\n",
       "         [ 47,  57,  87],\n",
       "         [ 46,  56,  86],\n",
       "         [ 46,  56,  86]]], dtype=uint8),\n",
       " array([[[140, 147, 163],\n",
       "         [143, 150, 162],\n",
       "         [152, 158, 166],\n",
       "         ...,\n",
       "         [176, 182, 201],\n",
       "         [180, 184, 206],\n",
       "         [181, 185, 209]],\n",
       " \n",
       "        [[138, 146, 159],\n",
       "         [147, 155, 164],\n",
       "         [166, 172, 178],\n",
       "         ...,\n",
       "         [169, 171, 192],\n",
       "         [168, 171, 194],\n",
       "         [169, 174, 198]],\n",
       " \n",
       "        [[139, 149, 156],\n",
       "         [150, 158, 163],\n",
       "         [153, 158, 162],\n",
       "         ...,\n",
       "         [162, 161, 182],\n",
       "         [162, 165, 188],\n",
       "         [168, 174, 197]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[162, 173, 193],\n",
       "         [163, 174, 195],\n",
       "         [162, 173, 195],\n",
       "         ...,\n",
       "         [162, 172, 196],\n",
       "         [172, 181, 203],\n",
       "         [178, 187, 207]],\n",
       " \n",
       "        [[161, 173, 194],\n",
       "         [163, 175, 196],\n",
       "         [161, 173, 195],\n",
       "         ...,\n",
       "         [165, 175, 198],\n",
       "         [174, 184, 205],\n",
       "         [180, 188, 208]],\n",
       " \n",
       "        [[161, 174, 196],\n",
       "         [163, 176, 198],\n",
       "         [161, 174, 196],\n",
       "         ...,\n",
       "         [168, 178, 201],\n",
       "         [176, 184, 205],\n",
       "         [179, 186, 206]]], dtype=uint8),\n",
       " array([[[171, 174, 195],\n",
       "         [170, 174, 193],\n",
       "         [172, 175, 193],\n",
       "         ...,\n",
       "         [199, 201, 210],\n",
       "         [204, 206, 217],\n",
       "         [187, 190, 204]],\n",
       " \n",
       "        [[163, 166, 185],\n",
       "         [157, 161, 179],\n",
       "         [152, 155, 169],\n",
       "         ...,\n",
       "         [198, 199, 205],\n",
       "         [197, 199, 209],\n",
       "         [196, 198, 210]],\n",
       " \n",
       "        [[152, 154, 172],\n",
       "         [139, 141, 157],\n",
       "         [120, 122, 135],\n",
       "         ...,\n",
       "         [178, 176, 179],\n",
       "         [179, 179, 185],\n",
       "         [202, 203, 212]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 141, 178],\n",
       "         [117, 127, 161],\n",
       "         [113, 124, 156],\n",
       "         ...,\n",
       "         [144, 153, 186],\n",
       "         [152, 162, 192],\n",
       "         [150, 160, 188]],\n",
       " \n",
       "        [[147, 159, 193],\n",
       "         [123, 135, 169],\n",
       "         [122, 134, 169],\n",
       "         ...,\n",
       "         [148, 157, 190],\n",
       "         [151, 160, 192],\n",
       "         [152, 162, 191]],\n",
       " \n",
       "        [[155, 168, 199],\n",
       "         [130, 142, 176],\n",
       "         [134, 146, 184],\n",
       "         ...,\n",
       "         [151, 160, 195],\n",
       "         [151, 162, 194],\n",
       "         [154, 165, 194]]], dtype=uint8),\n",
       " array([[[ 33,  48,  97],\n",
       "         [ 32,  47,  97],\n",
       "         [ 30,  45,  95],\n",
       "         ...,\n",
       "         [ 12,  15,  29],\n",
       "         [  9,  16,  26],\n",
       "         [  8,  11,  20]],\n",
       " \n",
       "        [[ 34,  48, 100],\n",
       "         [ 35,  49, 101],\n",
       "         [ 33,  47,  99],\n",
       "         ...,\n",
       "         [ 12,  15,  29],\n",
       "         [  9,  15,  25],\n",
       "         [  8,  12,  21]],\n",
       " \n",
       "        [[ 35,  49, 101],\n",
       "         [ 35,  49, 101],\n",
       "         [ 33,  47,  99],\n",
       "         ...,\n",
       "         [ 14,  17,  31],\n",
       "         [ 10,  17,  27],\n",
       "         [ 10,  14,  22]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[  3,   8,  29],\n",
       "         [  5,  10,  31],\n",
       "         [  5,  10,  31],\n",
       "         ...,\n",
       "         [  9,  17,  34],\n",
       "         [  9,  18,  32],\n",
       "         [  9,  15,  27]],\n",
       " \n",
       "        [[  4,   9,  30],\n",
       "         [  6,  11,  32],\n",
       "         [  7,  12,  33],\n",
       "         ...,\n",
       "         [  9,  17,  34],\n",
       "         [ 10,  19,  33],\n",
       "         [ 11,  17,  29]],\n",
       " \n",
       "        [[  4,  10,  29],\n",
       "         [  4,  10,  30],\n",
       "         [  5,  11,  31],\n",
       "         ...,\n",
       "         [ 11,  18,  36],\n",
       "         [ 11,  20,  35],\n",
       "         [ 11,  19,  33]]], dtype=uint8),\n",
       " array([[[ 71,  63,  55],\n",
       "         [ 99, 110, 118],\n",
       "         [117, 138, 156],\n",
       "         ...,\n",
       "         [186, 192, 200],\n",
       "         [169, 177, 185],\n",
       "         [163, 172, 181]],\n",
       " \n",
       "        [[ 87,  84,  80],\n",
       "         [116, 131, 144],\n",
       "         [132, 153, 173],\n",
       "         ...,\n",
       "         [179, 186, 198],\n",
       "         [185, 191, 202],\n",
       "         [174, 182, 195]],\n",
       " \n",
       "        [[ 95,  96,  96],\n",
       "         [127, 143, 159],\n",
       "         [130, 151, 172],\n",
       "         ...,\n",
       "         [178, 187, 201],\n",
       "         [180, 189, 202],\n",
       "         [173, 181, 196]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[157, 170, 180],\n",
       "         [155, 170, 189],\n",
       "         [156, 173, 192],\n",
       "         ...,\n",
       "         [158, 177, 204],\n",
       "         [142, 160, 191],\n",
       "         [113, 131, 162]],\n",
       " \n",
       "        [[159, 168, 179],\n",
       "         [153, 169, 187],\n",
       "         [155, 172, 191],\n",
       "         ...,\n",
       "         [157, 177, 204],\n",
       "         [143, 162, 192],\n",
       "         [115, 132, 164]],\n",
       " \n",
       "        [[158, 168, 175],\n",
       "         [154, 170, 186],\n",
       "         [153, 170, 190],\n",
       "         ...,\n",
       "         [163, 182, 209],\n",
       "         [140, 158, 188],\n",
       "         [112, 131, 164]]], dtype=uint8),\n",
       " array([[[162, 173, 193],\n",
       "         [161, 175, 194],\n",
       "         [158, 172, 190],\n",
       "         ...,\n",
       "         [ 67,  74,  93],\n",
       "         [ 65,  74,  88],\n",
       "         [ 56,  65,  79]],\n",
       " \n",
       "        [[162, 173, 193],\n",
       "         [162, 176, 195],\n",
       "         [162, 176, 194],\n",
       "         ...,\n",
       "         [ 65,  73,  90],\n",
       "         [ 65,  74,  88],\n",
       "         [ 64,  73,  86]],\n",
       " \n",
       "        [[162, 173, 193],\n",
       "         [161, 175, 194],\n",
       "         [159, 173, 191],\n",
       "         ...,\n",
       "         [ 62,  71,  85],\n",
       "         [ 64,  73,  86],\n",
       "         [ 58,  67,  81]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 43,  52,  72],\n",
       "         [ 42,  55,  74],\n",
       "         [ 69,  84, 104],\n",
       "         ...,\n",
       "         [ 44,  50,  49],\n",
       "         [ 27,  33,  31],\n",
       "         [ 47,  53,  50]],\n",
       " \n",
       "        [[ 44,  53,  73],\n",
       "         [ 43,  55,  75],\n",
       "         [ 64,  79,  99],\n",
       "         ...,\n",
       "         [ 46,  52,  50],\n",
       "         [ 28,  35,  32],\n",
       "         [ 32,  39,  36]],\n",
       " \n",
       "        [[ 43,  54,  74],\n",
       "         [ 41,  55,  74],\n",
       "         [ 61,  76,  96],\n",
       "         ...,\n",
       "         [ 40,  47,  45],\n",
       "         [ 54,  61,  58],\n",
       "         [ 44,  53,  49]]], dtype=uint8),\n",
       " array([[[ 12,  12,  24],\n",
       "         [ 11,  14,  26],\n",
       "         [ 12,  15,  29],\n",
       "         ...,\n",
       "         [ 59,  63, 114],\n",
       "         [ 57,  61, 112],\n",
       "         [ 55,  59, 110]],\n",
       " \n",
       "        [[ 12,  12,  24],\n",
       "         [ 11,  14,  26],\n",
       "         [ 12,  15,  29],\n",
       "         ...,\n",
       "         [ 57,  63, 116],\n",
       "         [ 57,  63, 116],\n",
       "         [ 55,  61, 114]],\n",
       " \n",
       "        [[ 13,  13,  25],\n",
       "         [ 11,  13,  25],\n",
       "         [ 12,  15,  29],\n",
       "         ...,\n",
       "         [ 56,  63, 118],\n",
       "         [ 58,  65, 120],\n",
       "         [ 54,  61, 116]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 22,  24,  40],\n",
       "         [ 25,  24,  45],\n",
       "         [ 25,  27,  49],\n",
       "         ...,\n",
       "         [ 37,  37,  77],\n",
       "         [ 42,  44,  96],\n",
       "         [ 60,  61, 121]],\n",
       " \n",
       "        [[ 24,  27,  43],\n",
       "         [ 25,  27,  47],\n",
       "         [ 23,  26,  50],\n",
       "         ...,\n",
       "         [ 38,  37,  80],\n",
       "         [ 42,  43,  98],\n",
       "         [ 58,  58, 120]],\n",
       " \n",
       "        [[ 25,  26,  42],\n",
       "         [ 23,  26,  48],\n",
       "         [ 22,  26,  50],\n",
       "         ...,\n",
       "         [ 35,  32,  78],\n",
       "         [ 47,  47, 105],\n",
       "         [ 64,  64, 128]]], dtype=uint8),\n",
       " array([[[167, 166, 185],\n",
       "         [166, 164, 184],\n",
       "         [164, 163, 183],\n",
       "         ...,\n",
       "         [126, 135, 145],\n",
       "         [123, 132, 141],\n",
       "         [117, 125, 135]],\n",
       " \n",
       "        [[166, 164, 184],\n",
       "         [164, 162, 182],\n",
       "         [155, 154, 173],\n",
       "         ...,\n",
       "         [116, 125, 135],\n",
       "         [115, 124, 133],\n",
       "         [110, 119, 128]],\n",
       " \n",
       "        [[161, 159, 179],\n",
       "         [154, 152, 172],\n",
       "         [145, 143, 163],\n",
       "         ...,\n",
       "         [ 95, 102, 112],\n",
       "         [105, 112, 121],\n",
       "         [104, 111, 120]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 133, 154],\n",
       "         [121, 129, 149],\n",
       "         [114, 120, 138],\n",
       "         ...,\n",
       "         [131, 141, 151],\n",
       "         [130, 140, 150],\n",
       "         [131, 142, 151]],\n",
       " \n",
       "        [[118, 131, 153],\n",
       "         [124, 134, 156],\n",
       "         [120, 126, 147],\n",
       "         ...,\n",
       "         [136, 146, 156],\n",
       "         [133, 143, 153],\n",
       "         [132, 142, 152]],\n",
       " \n",
       "        [[118, 131, 156],\n",
       "         [121, 132, 157],\n",
       "         [122, 132, 155],\n",
       "         ...,\n",
       "         [138, 148, 158],\n",
       "         [136, 146, 156],\n",
       "         [135, 145, 155]]], dtype=uint8),\n",
       " array([[[147, 166, 200],\n",
       "         [139, 158, 195],\n",
       "         [139, 158, 196],\n",
       "         ...,\n",
       "         [197, 211, 229],\n",
       "         [194, 208, 227],\n",
       "         [191, 205, 225]],\n",
       " \n",
       "        [[123, 141, 179],\n",
       "         [118, 137, 179],\n",
       "         [117, 136, 180],\n",
       "         ...,\n",
       "         [197, 211, 229],\n",
       "         [195, 209, 228],\n",
       "         [192, 206, 225]],\n",
       " \n",
       "        [[115, 135, 176],\n",
       "         [107, 127, 172],\n",
       "         [104, 125, 172],\n",
       "         ...,\n",
       "         [197, 213, 229],\n",
       "         [195, 211, 228],\n",
       "         [192, 207, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[210, 223, 238],\n",
       "         [214, 226, 240],\n",
       "         [218, 227, 240],\n",
       "         ...,\n",
       "         [209, 218, 232],\n",
       "         [207, 216, 230],\n",
       "         [202, 212, 229]],\n",
       " \n",
       "        [[204, 219, 236],\n",
       "         [213, 225, 238],\n",
       "         [216, 227, 239],\n",
       "         ...,\n",
       "         [209, 217, 234],\n",
       "         [205, 214, 231],\n",
       "         [201, 211, 229]],\n",
       " \n",
       "        [[200, 215, 233],\n",
       "         [210, 223, 237],\n",
       "         [214, 225, 237],\n",
       "         ...,\n",
       "         [208, 215, 234],\n",
       "         [205, 212, 231],\n",
       "         [201, 210, 230]]], dtype=uint8),\n",
       " array([[[ 54,  59, 112],\n",
       "         [ 59,  63, 116],\n",
       "         [ 59,  63, 116],\n",
       "         ...,\n",
       "         [ 67,  71, 107],\n",
       "         [ 58,  62,  95],\n",
       "         [ 58,  59,  86]],\n",
       " \n",
       "        [[ 54,  59, 114],\n",
       "         [ 60,  66, 119],\n",
       "         [ 63,  67, 120],\n",
       "         ...,\n",
       "         [ 73,  76, 115],\n",
       "         [ 64,  68, 101],\n",
       "         [ 66,  66,  92]],\n",
       " \n",
       "        [[ 64,  67, 124],\n",
       "         [ 61,  66, 121],\n",
       "         [ 66,  72, 125],\n",
       "         ...,\n",
       "         [ 76,  78, 118],\n",
       "         [ 67,  69, 103],\n",
       "         [ 71,  70,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87,  87, 153],\n",
       "         [ 88,  88, 152],\n",
       "         [ 91,  93, 157],\n",
       "         ...,\n",
       "         [ 86,  91, 145],\n",
       "         [ 96, 101, 149],\n",
       "         [105, 107, 152]],\n",
       " \n",
       "        [[ 88,  87, 154],\n",
       "         [ 87,  87, 151],\n",
       "         [ 90,  92, 156],\n",
       "         ...,\n",
       "         [ 86,  91, 146],\n",
       "         [ 97, 100, 150],\n",
       "         [114, 115, 157]],\n",
       " \n",
       "        [[ 88,  87, 155],\n",
       "         [ 84,  84, 149],\n",
       "         [ 87,  89, 153],\n",
       "         ...,\n",
       "         [ 99, 105, 158],\n",
       "         [107, 110, 159],\n",
       "         [118, 117, 158]]], dtype=uint8),\n",
       " array([[[ 57,  54,  51],\n",
       "         [ 58,  57,  58],\n",
       "         [ 79,  89, 102],\n",
       "         ...,\n",
       "         [ 91, 122, 173],\n",
       "         [ 91, 122, 173],\n",
       "         [ 94, 122, 173]],\n",
       " \n",
       "        [[ 56,  54,  51],\n",
       "         [ 54,  55,  55],\n",
       "         [ 79,  94, 109],\n",
       "         ...,\n",
       "         [ 96, 125, 176],\n",
       "         [ 95, 124, 175],\n",
       "         [ 97, 124, 175]],\n",
       " \n",
       "        [[ 57,  55,  52],\n",
       "         [ 53,  57,  57],\n",
       "         [ 83, 103, 119],\n",
       "         ...,\n",
       "         [ 96, 123, 174],\n",
       "         [ 97, 124, 175],\n",
       "         [ 95, 122, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 126, 147],\n",
       "         [ 95, 121, 147],\n",
       "         [ 91, 115, 146],\n",
       "         ...,\n",
       "         [ 68,  86, 132],\n",
       "         [ 78,  95, 142],\n",
       "         [ 83, 103, 155]],\n",
       " \n",
       "        [[101, 125, 148],\n",
       "         [ 95, 122, 147],\n",
       "         [ 90, 115, 147],\n",
       "         ...,\n",
       "         [ 73,  89, 136],\n",
       "         [ 81,  97, 144],\n",
       "         [ 84, 104, 155]],\n",
       " \n",
       "        [[ 99, 124, 146],\n",
       "         [ 91, 119, 144],\n",
       "         [ 90, 118, 149],\n",
       "         ...,\n",
       "         [ 74,  92, 139],\n",
       "         [ 83, 100, 147],\n",
       "         [ 85, 105, 156]]], dtype=uint8),\n",
       " array([[[ 97, 130, 179],\n",
       "         [100, 133, 182],\n",
       "         [100, 133, 182],\n",
       "         ...,\n",
       "         [171, 178, 188],\n",
       "         [154, 166, 180],\n",
       "         [141, 154, 169]],\n",
       " \n",
       "        [[ 98, 131, 180],\n",
       "         [ 99, 132, 181],\n",
       "         [ 97, 130, 179],\n",
       "         ...,\n",
       "         [173, 179, 189],\n",
       "         [163, 176, 189],\n",
       "         [142, 155, 169]],\n",
       " \n",
       "        [[ 98, 131, 180],\n",
       "         [ 96, 129, 178],\n",
       "         [102, 133, 182],\n",
       "         ...,\n",
       "         [179, 186, 195],\n",
       "         [171, 183, 196],\n",
       "         [153, 167, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 79, 102, 147],\n",
       "         [ 73,  90, 136],\n",
       "         [ 67,  81, 129],\n",
       "         ...,\n",
       "         [185, 192, 204],\n",
       "         [179, 189, 202],\n",
       "         [169, 183, 195]],\n",
       " \n",
       "        [[ 86, 109, 155],\n",
       "         [ 78,  96, 143],\n",
       "         [ 70,  87, 134],\n",
       "         ...,\n",
       "         [183, 189, 199],\n",
       "         [179, 189, 202],\n",
       "         [173, 185, 197]],\n",
       " \n",
       "        [[ 92, 113, 159],\n",
       "         [ 80, 102, 148],\n",
       "         [ 72,  93, 140],\n",
       "         ...,\n",
       "         [187, 196, 205],\n",
       "         [178, 191, 203],\n",
       "         [170, 185, 197]]], dtype=uint8),\n",
       " array([[[ 54,  81, 115],\n",
       "         [ 52,  82, 117],\n",
       "         [ 49,  78, 115],\n",
       "         ...,\n",
       "         [ 69, 106, 150],\n",
       "         [ 74, 112, 154],\n",
       "         [ 70, 108, 150]],\n",
       " \n",
       "        [[ 53,  81, 115],\n",
       "         [ 49,  79, 114],\n",
       "         [ 47,  77, 112],\n",
       "         ...,\n",
       "         [ 73, 109, 153],\n",
       "         [ 75, 109, 155],\n",
       "         [ 72, 107, 153]],\n",
       " \n",
       "        [[ 52,  80, 113],\n",
       "         [ 51,  78, 113],\n",
       "         [ 47,  77, 111],\n",
       "         ...,\n",
       "         [ 72, 105, 151],\n",
       "         [ 74, 107, 153],\n",
       "         [ 75, 109, 155]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70, 100, 141],\n",
       "         [ 67,  98, 139],\n",
       "         [ 68,  99, 140],\n",
       "         ...,\n",
       "         [ 43,  68, 108],\n",
       "         [ 50,  74, 119],\n",
       "         [ 55,  79, 126]],\n",
       " \n",
       "        [[ 68, 103, 143],\n",
       "         [ 67, 102, 142],\n",
       "         [ 66, 101, 141],\n",
       "         ...,\n",
       "         [ 52,  77, 120],\n",
       "         [ 58,  84, 130],\n",
       "         [ 59,  85, 133]],\n",
       " \n",
       "        [[ 67, 104, 143],\n",
       "         [ 69, 104, 145],\n",
       "         [ 66, 102, 142],\n",
       "         ...,\n",
       "         [ 52,  79, 123],\n",
       "         [ 56,  84, 131],\n",
       "         [ 56,  85, 134]]], dtype=uint8),\n",
       " array([[[ 79, 112, 157],\n",
       "         [ 81, 111, 156],\n",
       "         [ 81, 110, 155],\n",
       "         ...,\n",
       "         [ 49,  78, 108],\n",
       "         [ 47,  77, 104],\n",
       "         [ 44,  74, 101]],\n",
       " \n",
       "        [[ 81, 113, 157],\n",
       "         [ 81, 112, 156],\n",
       "         [ 82, 111, 155],\n",
       "         ...,\n",
       "         [ 47,  78, 109],\n",
       "         [ 46,  76, 103],\n",
       "         [ 47,  76, 100]],\n",
       " \n",
       "        [[ 81, 112, 155],\n",
       "         [ 80, 109, 153],\n",
       "         [ 78, 105, 149],\n",
       "         ...,\n",
       "         [ 52,  81, 112],\n",
       "         [ 50,  80, 108],\n",
       "         [ 47,  78, 102]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 57,  85, 129],\n",
       "         [ 47,  75, 117],\n",
       "         [ 47,  73, 114],\n",
       "         ...,\n",
       "         [ 58,  93, 133],\n",
       "         [ 59,  95, 134],\n",
       "         [ 67, 104, 143]],\n",
       " \n",
       "        [[ 57,  87, 134],\n",
       "         [ 54,  84, 129],\n",
       "         [ 56,  83, 128],\n",
       "         ...,\n",
       "         [ 61,  96, 136],\n",
       "         [ 61,  97, 137],\n",
       "         [ 63,  99, 139]],\n",
       " \n",
       "        [[ 58,  88, 134],\n",
       "         [ 60,  89, 136],\n",
       "         [ 60,  88, 135],\n",
       "         ...,\n",
       "         [ 70, 106, 145],\n",
       "         [ 69, 105, 145],\n",
       "         [ 68, 104, 144]]], dtype=uint8),\n",
       " array([[[148, 155, 170],\n",
       "         [158, 171, 194],\n",
       "         [169, 184, 203],\n",
       "         ...,\n",
       "         [162, 181, 226],\n",
       "         [159, 178, 223],\n",
       "         [161, 179, 224]],\n",
       " \n",
       "        [[149, 156, 172],\n",
       "         [159, 171, 195],\n",
       "         [171, 185, 204],\n",
       "         ...,\n",
       "         [156, 175, 220],\n",
       "         [155, 175, 219],\n",
       "         [158, 175, 221]],\n",
       " \n",
       "        [[149, 155, 176],\n",
       "         [163, 176, 199],\n",
       "         [173, 187, 207],\n",
       "         ...,\n",
       "         [152, 168, 215],\n",
       "         [154, 170, 217],\n",
       "         [151, 167, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[156, 174, 205],\n",
       "         [161, 179, 210],\n",
       "         [167, 186, 213],\n",
       "         ...,\n",
       "         [147, 169, 217],\n",
       "         [148, 170, 218],\n",
       "         [154, 176, 223]],\n",
       " \n",
       "        [[159, 177, 206],\n",
       "         [166, 184, 211],\n",
       "         [177, 193, 221],\n",
       "         ...,\n",
       "         [147, 170, 218],\n",
       "         [150, 173, 221],\n",
       "         [155, 177, 225]],\n",
       " \n",
       "        [[161, 179, 210],\n",
       "         [170, 188, 217],\n",
       "         [178, 196, 225],\n",
       "         ...,\n",
       "         [149, 174, 220],\n",
       "         [152, 176, 222],\n",
       "         [157, 182, 228]]], dtype=uint8),\n",
       " array([[[159, 177, 219],\n",
       "         [160, 176, 222],\n",
       "         [156, 172, 218],\n",
       "         ...,\n",
       "         [110, 125, 152],\n",
       "         [108, 122, 149],\n",
       "         [104, 117, 141]],\n",
       " \n",
       "        [[159, 175, 220],\n",
       "         [152, 168, 215],\n",
       "         [151, 167, 214],\n",
       "         ...,\n",
       "         [111, 128, 156],\n",
       "         [112, 125, 151],\n",
       "         [109, 122, 148]],\n",
       " \n",
       "        [[149, 166, 213],\n",
       "         [148, 164, 211],\n",
       "         [147, 163, 210],\n",
       "         ...,\n",
       "         [112, 131, 161],\n",
       "         [113, 128, 157],\n",
       "         [109, 125, 150]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 151, 197],\n",
       "         [125, 144, 189],\n",
       "         [124, 140, 186],\n",
       "         ...,\n",
       "         [102, 121, 154],\n",
       "         [103, 119, 148],\n",
       "         [101, 116, 148]],\n",
       " \n",
       "        [[129, 152, 198],\n",
       "         [127, 146, 191],\n",
       "         [124, 140, 185],\n",
       "         ...,\n",
       "         [105, 124, 159],\n",
       "         [106, 121, 153],\n",
       "         [105, 120, 152]],\n",
       " \n",
       "        [[130, 153, 199],\n",
       "         [127, 146, 191],\n",
       "         [124, 141, 184],\n",
       "         ...,\n",
       "         [108, 127, 162],\n",
       "         [106, 125, 159],\n",
       "         [106, 123, 155]]], dtype=uint8),\n",
       " array([[[110,  89,  87],\n",
       "         [106,  86,  84],\n",
       "         [ 98,  81,  77],\n",
       "         ...,\n",
       "         [153, 156, 161],\n",
       "         [155, 158, 163],\n",
       "         [156, 160, 165]],\n",
       " \n",
       "        [[ 94,  75,  69],\n",
       "         [ 93,  72,  69],\n",
       "         [ 99,  81,  78],\n",
       "         ...,\n",
       "         [143, 147, 151],\n",
       "         [148, 151, 156],\n",
       "         [154, 158, 163]],\n",
       " \n",
       "        [[ 87,  65,  67],\n",
       "         [ 90,  69,  69],\n",
       "         [107,  90,  85],\n",
       "         ...,\n",
       "         [135, 140, 145],\n",
       "         [143, 146, 151],\n",
       "         [151, 154, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[162, 168, 166],\n",
       "         [156, 161, 162],\n",
       "         [143, 149, 158],\n",
       "         ...,\n",
       "         [ 93,  97, 121],\n",
       "         [ 98, 102, 129],\n",
       "         [106, 113, 134]],\n",
       " \n",
       "        [[164, 171, 170],\n",
       "         [150, 158, 161],\n",
       "         [144, 154, 161],\n",
       "         ...,\n",
       "         [ 98, 103, 128],\n",
       "         [108, 116, 137],\n",
       "         [102, 110, 130]],\n",
       " \n",
       "        [[160, 167, 169],\n",
       "         [151, 157, 165],\n",
       "         [143, 151, 162],\n",
       "         ...,\n",
       "         [113, 120, 145],\n",
       "         [107, 115, 137],\n",
       "         [111, 118, 138]]], dtype=uint8),\n",
       " array([[[156, 160, 165],\n",
       "         [155, 160, 165],\n",
       "         [151, 156, 161],\n",
       "         ...,\n",
       "         [ 53,  55,  67],\n",
       "         [ 44,  46,  54],\n",
       "         [ 29,  26,  34]],\n",
       " \n",
       "        [[156, 160, 165],\n",
       "         [155, 159, 164],\n",
       "         [154, 158, 163],\n",
       "         ...,\n",
       "         [ 57,  61,  73],\n",
       "         [ 38,  40,  47],\n",
       "         [ 24,  23,  28]],\n",
       " \n",
       "        [[156, 160, 165],\n",
       "         [152, 156, 161],\n",
       "         [146, 150, 156],\n",
       "         ...,\n",
       "         [ 61,  64,  75],\n",
       "         [ 37,  41,  45],\n",
       "         [ 24,  24,  28]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 100, 118],\n",
       "         [ 96, 106, 124],\n",
       "         [ 83,  90, 110],\n",
       "         ...,\n",
       "         [117, 127, 137],\n",
       "         [113, 124, 132],\n",
       "         [108, 118, 128]],\n",
       " \n",
       "        [[101, 111, 131],\n",
       "         [101, 110, 130],\n",
       "         [ 97, 106, 126],\n",
       "         ...,\n",
       "         [122, 134, 141],\n",
       "         [123, 134, 141],\n",
       "         [113, 123, 133]],\n",
       " \n",
       "        [[103, 113, 133],\n",
       "         [102, 113, 133],\n",
       "         [101, 112, 132],\n",
       "         ...,\n",
       "         [125, 136, 144],\n",
       "         [124, 135, 142],\n",
       "         [124, 136, 141]]], dtype=uint8),\n",
       " array([[[200, 217, 250],\n",
       "         [200, 216, 252],\n",
       "         [195, 211, 247],\n",
       "         ...,\n",
       "         [ 82, 106, 157],\n",
       "         [ 75,  99, 151],\n",
       "         [ 80, 103, 152]],\n",
       " \n",
       "        [[195, 214, 249],\n",
       "         [187, 206, 244],\n",
       "         [170, 189, 229],\n",
       "         ...,\n",
       "         [ 79, 103, 153],\n",
       "         [ 70,  93, 144],\n",
       "         [ 74,  97, 145]],\n",
       " \n",
       "        [[177, 199, 236],\n",
       "         [164, 186, 228],\n",
       "         [140, 162, 208],\n",
       "         ...,\n",
       "         [ 73,  96, 145],\n",
       "         [ 74,  96, 146],\n",
       "         [ 77, 100, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 144, 202],\n",
       "         [115, 139, 197],\n",
       "         [116, 140, 198],\n",
       "         ...,\n",
       "         [171, 195, 235],\n",
       "         [159, 187, 228],\n",
       "         [143, 174, 217]],\n",
       " \n",
       "        [[120, 144, 202],\n",
       "         [116, 140, 198],\n",
       "         [118, 142, 200],\n",
       "         ...,\n",
       "         [176, 198, 238],\n",
       "         [160, 187, 229],\n",
       "         [148, 177, 222]],\n",
       " \n",
       "        [[120, 144, 202],\n",
       "         [116, 140, 198],\n",
       "         [118, 142, 200],\n",
       "         ...,\n",
       "         [175, 196, 236],\n",
       "         [156, 181, 224],\n",
       "         [146, 172, 219]]], dtype=uint8),\n",
       " array([[[145, 150, 152],\n",
       "         [147, 152, 155],\n",
       "         [143, 147, 152],\n",
       "         ...,\n",
       "         [153, 154, 158],\n",
       "         [134, 137, 142],\n",
       "         [143, 145, 154]],\n",
       " \n",
       "        [[147, 152, 154],\n",
       "         [146, 151, 154],\n",
       "         [154, 159, 163],\n",
       "         ...,\n",
       "         [145, 146, 150],\n",
       "         [148, 151, 157],\n",
       "         [158, 161, 170]],\n",
       " \n",
       "        [[147, 151, 152],\n",
       "         [143, 148, 148],\n",
       "         [142, 146, 149],\n",
       "         ...,\n",
       "         [156, 159, 163],\n",
       "         [152, 155, 161],\n",
       "         [147, 151, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 157, 164],\n",
       "         [154, 160, 167],\n",
       "         [152, 159, 168],\n",
       "         ...,\n",
       "         [127, 140, 162],\n",
       "         [129, 143, 165],\n",
       "         [134, 144, 168]],\n",
       " \n",
       "        [[151, 157, 164],\n",
       "         [152, 158, 165],\n",
       "         [153, 160, 169],\n",
       "         ...,\n",
       "         [130, 142, 166],\n",
       "         [131, 144, 167],\n",
       "         [137, 147, 171]],\n",
       " \n",
       "        [[152, 158, 165],\n",
       "         [154, 160, 168],\n",
       "         [155, 162, 171],\n",
       "         ...,\n",
       "         [133, 145, 169],\n",
       "         [134, 146, 169],\n",
       "         [137, 148, 172]]], dtype=uint8),\n",
       " array([[[ 48,  40,  34],\n",
       "         [ 62,  61,  63],\n",
       "         [ 99, 110, 116],\n",
       "         ...,\n",
       "         [119, 138, 166],\n",
       "         [119, 138, 167],\n",
       "         [124, 142, 173]],\n",
       " \n",
       "        [[ 52,  46,  36],\n",
       "         [ 67,  68,  70],\n",
       "         [107, 116, 124],\n",
       "         ...,\n",
       "         [114, 136, 166],\n",
       "         [118, 138, 169],\n",
       "         [124, 143, 174]],\n",
       " \n",
       "        [[ 53,  44,  38],\n",
       "         [ 75,  79,  77],\n",
       "         [112, 119, 119],\n",
       "         ...,\n",
       "         [107, 128, 158],\n",
       "         [116, 135, 164],\n",
       "         [122, 138, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 128, 144],\n",
       "         [109, 129, 150],\n",
       "         [106, 128, 155],\n",
       "         ...,\n",
       "         [101, 120, 149],\n",
       "         [ 85, 109, 133],\n",
       "         [ 84, 105, 133]],\n",
       " \n",
       "        [[112, 128, 146],\n",
       "         [105, 126, 150],\n",
       "         [104, 125, 155],\n",
       "         ...,\n",
       "         [100, 123, 149],\n",
       "         [ 88, 109, 136],\n",
       "         [ 88, 107, 134]],\n",
       " \n",
       "        [[108, 124, 142],\n",
       "         [102, 123, 149],\n",
       "         [101, 122, 154],\n",
       "         ...,\n",
       "         [ 98, 121, 147],\n",
       "         [ 89, 110, 137],\n",
       "         [ 93, 112, 139]]], dtype=uint8),\n",
       " array([[[ 89,  90,  88],\n",
       "         [118, 118, 118],\n",
       "         [105, 105, 105],\n",
       "         ...,\n",
       "         [ 62,  72,  89],\n",
       "         [ 64,  74,  91],\n",
       "         [ 64,  73,  91]],\n",
       " \n",
       "        [[122, 124, 120],\n",
       "         [ 97,  98,  96],\n",
       "         [ 76,  77,  75],\n",
       "         ...,\n",
       "         [ 55,  66,  80],\n",
       "         [ 62,  72,  89],\n",
       "         [ 64,  74,  91]],\n",
       " \n",
       "        [[114, 114, 112],\n",
       "         [ 80,  78,  77],\n",
       "         [ 96,  95,  92],\n",
       "         ...,\n",
       "         [ 58,  69,  83],\n",
       "         [ 66,  76,  92],\n",
       "         [ 63,  75,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[102, 114, 142],\n",
       "         [ 96, 108, 136],\n",
       "         [ 96, 108, 136],\n",
       "         ...,\n",
       "         [140, 153, 175],\n",
       "         [135, 148, 170],\n",
       "         [128, 141, 163]],\n",
       " \n",
       "        [[102, 113, 143],\n",
       "         [ 99, 111, 141],\n",
       "         [ 97, 108, 138],\n",
       "         ...,\n",
       "         [127, 140, 162],\n",
       "         [127, 141, 163],\n",
       "         [128, 143, 164]],\n",
       " \n",
       "        [[104, 118, 147],\n",
       "         [101, 113, 143],\n",
       "         [ 97, 110, 139],\n",
       "         ...,\n",
       "         [124, 138, 160],\n",
       "         [129, 143, 165],\n",
       "         [130, 144, 163]]], dtype=uint8),\n",
       " array([[[ 53,  61,  74],\n",
       "         [ 56,  64,  77],\n",
       "         [ 66,  75,  88],\n",
       "         ...,\n",
       "         [148, 158, 176],\n",
       "         [143, 154, 170],\n",
       "         [154, 164, 178]],\n",
       " \n",
       "        [[ 50,  57,  70],\n",
       "         [ 56,  64,  77],\n",
       "         [ 66,  75,  88],\n",
       "         ...,\n",
       "         [134, 147, 164],\n",
       "         [139, 152, 169],\n",
       "         [143, 154, 168]],\n",
       " \n",
       "        [[ 49,  57,  71],\n",
       "         [ 54,  63,  77],\n",
       "         [ 60,  70,  81],\n",
       "         ...,\n",
       "         [129, 142, 158],\n",
       "         [136, 149, 165],\n",
       "         [140, 153, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  59,  73],\n",
       "         [ 58,  63,  79],\n",
       "         [ 63,  70,  85],\n",
       "         ...,\n",
       "         [ 70,  77,  94],\n",
       "         [ 68,  74,  93],\n",
       "         [ 70,  74,  95]],\n",
       " \n",
       "        [[ 55,  58,  69],\n",
       "         [ 56,  62,  76],\n",
       "         [ 64,  70,  83],\n",
       "         ...,\n",
       "         [ 69,  76,  93],\n",
       "         [ 70,  77,  94],\n",
       "         [ 72,  78,  97]],\n",
       " \n",
       "        [[ 56,  58,  70],\n",
       "         [ 59,  61,  76],\n",
       "         [ 60,  66,  79],\n",
       "         ...,\n",
       "         [ 69,  76,  93],\n",
       "         [ 70,  77,  94],\n",
       "         [ 73,  80,  99]]], dtype=uint8),\n",
       " array([[[ 39,  62,  74],\n",
       "         [ 50,  82, 104],\n",
       "         [ 64,  97, 123],\n",
       "         ...,\n",
       "         [ 73, 108, 148],\n",
       "         [ 73, 107, 147],\n",
       "         [ 72, 107, 147]],\n",
       " \n",
       "        [[ 41,  68,  82],\n",
       "         [ 56,  90, 112],\n",
       "         [ 61,  94, 120],\n",
       "         ...,\n",
       "         [ 75, 109, 151],\n",
       "         [ 73, 107, 150],\n",
       "         [ 75, 110, 153]],\n",
       " \n",
       "        [[ 54,  84, 103],\n",
       "         [ 63,  97, 121],\n",
       "         [ 63,  94, 121],\n",
       "         ...,\n",
       "         [ 76, 110, 153],\n",
       "         [ 75, 109, 152],\n",
       "         [ 75, 110, 153]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 114, 146],\n",
       "         [ 77, 121, 152],\n",
       "         [ 77, 121, 152],\n",
       "         ...,\n",
       "         [ 71, 110, 149],\n",
       "         [ 71, 111, 149],\n",
       "         [ 74, 112, 154]],\n",
       " \n",
       "        [[ 76, 120, 149],\n",
       "         [ 76, 120, 151],\n",
       "         [ 77, 121, 152],\n",
       "         ...,\n",
       "         [ 71, 110, 149],\n",
       "         [ 73, 111, 152],\n",
       "         [ 70, 110, 152]],\n",
       " \n",
       "        [[ 76, 118, 148],\n",
       "         [ 80, 121, 154],\n",
       "         [ 81, 122, 155],\n",
       "         ...,\n",
       "         [ 70, 109, 149],\n",
       "         [ 73, 111, 152],\n",
       "         [ 72, 112, 154]]], dtype=uint8),\n",
       " array([[[ 77, 113, 153],\n",
       "         [ 77, 112, 152],\n",
       "         [ 76, 111, 151],\n",
       "         ...,\n",
       "         [ 37,  53,  71],\n",
       "         [ 23,  35,  42],\n",
       "         [  4,  12,  15]],\n",
       " \n",
       "        [[ 77, 112, 152],\n",
       "         [ 76, 111, 151],\n",
       "         [ 75, 110, 150],\n",
       "         ...,\n",
       "         [ 36,  52,  70],\n",
       "         [ 25,  37,  44],\n",
       "         [  4,  12,  14]],\n",
       " \n",
       "        [[ 77, 112, 152],\n",
       "         [ 75, 110, 150],\n",
       "         [ 73, 108, 148],\n",
       "         ...,\n",
       "         [ 38,  57,  74],\n",
       "         [ 27,  41,  49],\n",
       "         [  6,  14,  19]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 109, 150],\n",
       "         [ 66, 101, 144],\n",
       "         [ 59,  93, 136],\n",
       "         ...,\n",
       "         [ 55,  88, 122],\n",
       "         [ 56,  81, 112],\n",
       "         [ 51,  76,  97]],\n",
       " \n",
       "        [[ 76, 112, 153],\n",
       "         [ 68, 103, 146],\n",
       "         [ 57,  92, 135],\n",
       "         ...,\n",
       "         [ 59,  90, 124],\n",
       "         [ 59,  84, 114],\n",
       "         [ 52,  79, 100]],\n",
       " \n",
       "        [[ 78, 113, 156],\n",
       "         [ 70, 105, 148],\n",
       "         [ 61,  95, 138],\n",
       "         ...,\n",
       "         [ 56,  86, 121],\n",
       "         [ 53,  79, 111],\n",
       "         [ 58,  82, 104]]], dtype=uint8),\n",
       " array([[[157, 167, 184],\n",
       "         [161, 171, 186],\n",
       "         [171, 180, 191],\n",
       "         ...,\n",
       "         [132, 139, 146],\n",
       "         [141, 151, 157],\n",
       "         [156, 168, 180]],\n",
       " \n",
       "        [[158, 166, 184],\n",
       "         [156, 164, 181],\n",
       "         [161, 169, 185],\n",
       "         ...,\n",
       "         [111, 115, 118],\n",
       "         [110, 116, 117],\n",
       "         [139, 150, 159]],\n",
       " \n",
       "        [[156, 166, 181],\n",
       "         [150, 160, 175],\n",
       "         [155, 164, 177],\n",
       "         ...,\n",
       "         [110, 114, 117],\n",
       "         [116, 120, 123],\n",
       "         [109, 116, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[178, 195, 215],\n",
       "         [179, 194, 214],\n",
       "         [174, 190, 208],\n",
       "         ...,\n",
       "         [201, 207, 214],\n",
       "         [198, 203, 212],\n",
       "         [193, 199, 209]],\n",
       " \n",
       "        [[185, 200, 220],\n",
       "         [181, 196, 214],\n",
       "         [175, 191, 211],\n",
       "         ...,\n",
       "         [200, 207, 213],\n",
       "         [190, 199, 209],\n",
       "         [173, 186, 202]],\n",
       " \n",
       "        [[186, 201, 221],\n",
       "         [183, 198, 217],\n",
       "         [174, 191, 210],\n",
       "         ...,\n",
       "         [201, 208, 212],\n",
       "         [186, 196, 207],\n",
       "         [169, 184, 200]]], dtype=uint8),\n",
       " array([[[134, 142, 159],\n",
       "         [142, 150, 165],\n",
       "         [148, 157, 171],\n",
       "         ...,\n",
       "         [196, 200, 224],\n",
       "         [195, 199, 224],\n",
       "         [193, 197, 222]],\n",
       " \n",
       "        [[143, 149, 168],\n",
       "         [144, 152, 169],\n",
       "         [154, 163, 178],\n",
       "         ...,\n",
       "         [195, 199, 224],\n",
       "         [194, 198, 223],\n",
       "         [193, 197, 222]],\n",
       " \n",
       "        [[149, 155, 174],\n",
       "         [149, 156, 173],\n",
       "         [159, 168, 182],\n",
       "         ...,\n",
       "         [188, 192, 220],\n",
       "         [188, 192, 220],\n",
       "         [189, 193, 221]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[201, 209, 222],\n",
       "         [191, 200, 216],\n",
       "         [174, 185, 205],\n",
       "         ...,\n",
       "         [142, 153, 183],\n",
       "         [145, 156, 186],\n",
       "         [156, 167, 196]],\n",
       " \n",
       "        [[198, 207, 220],\n",
       "         [194, 202, 219],\n",
       "         [181, 191, 209],\n",
       "         ...,\n",
       "         [152, 163, 195],\n",
       "         [158, 169, 197],\n",
       "         [168, 176, 204]],\n",
       " \n",
       "        [[198, 207, 221],\n",
       "         [195, 203, 220],\n",
       "         [186, 196, 214],\n",
       "         ...,\n",
       "         [159, 169, 200],\n",
       "         [169, 178, 207],\n",
       "         [172, 181, 206]]], dtype=uint8),\n",
       " array([[[190, 193, 221],\n",
       "         [191, 194, 222],\n",
       "         [192, 195, 223],\n",
       "         ...,\n",
       "         [141, 147, 170],\n",
       "         [132, 138, 158],\n",
       "         [114, 121, 135]],\n",
       " \n",
       "        [[186, 188, 218],\n",
       "         [187, 189, 219],\n",
       "         [190, 191, 222],\n",
       "         ...,\n",
       "         [147, 153, 176],\n",
       "         [132, 140, 160],\n",
       "         [118, 123, 141]],\n",
       " \n",
       "        [[185, 187, 217],\n",
       "         [184, 186, 216],\n",
       "         [185, 187, 217],\n",
       "         ...,\n",
       "         [148, 153, 176],\n",
       "         [136, 143, 163],\n",
       "         [125, 129, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[215, 222, 238],\n",
       "         [208, 215, 233],\n",
       "         [194, 202, 225],\n",
       "         ...,\n",
       "         [177, 186, 206],\n",
       "         [181, 188, 208],\n",
       "         [180, 185, 205]],\n",
       " \n",
       "        [[218, 223, 238],\n",
       "         [214, 221, 237],\n",
       "         [203, 210, 230],\n",
       "         ...,\n",
       "         [178, 186, 206],\n",
       "         [182, 188, 209],\n",
       "         [180, 186, 204]],\n",
       " \n",
       "        [[221, 226, 241],\n",
       "         [215, 221, 236],\n",
       "         [207, 215, 232],\n",
       "         ...,\n",
       "         [177, 186, 206],\n",
       "         [181, 186, 206],\n",
       "         [184, 189, 207]]], dtype=uint8),\n",
       " array([[[ 57,  78, 119],\n",
       "         [ 56,  78, 120],\n",
       "         [ 60,  83, 130],\n",
       "         ...,\n",
       "         [ 80, 110, 167],\n",
       "         [ 82, 113, 169],\n",
       "         [ 97, 127, 183]],\n",
       " \n",
       "        [[ 58,  80, 120],\n",
       "         [ 59,  81, 123],\n",
       "         [ 64,  88, 134],\n",
       "         ...,\n",
       "         [ 69,  99, 156],\n",
       "         [ 75, 105, 162],\n",
       "         [ 81, 114, 170]],\n",
       " \n",
       "        [[ 55,  80, 120],\n",
       "         [ 61,  84, 128],\n",
       "         [ 67,  90, 136],\n",
       "         ...,\n",
       "         [ 64,  94, 149],\n",
       "         [ 69,  99, 156],\n",
       "         [ 74, 104, 161]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  77, 115],\n",
       "         [ 63,  85, 121],\n",
       "         [ 66,  85, 122],\n",
       "         ...,\n",
       "         [ 77, 107, 165],\n",
       "         [ 74, 103, 162],\n",
       "         [ 60,  86, 143]],\n",
       " \n",
       "        [[ 59,  79, 119],\n",
       "         [ 71,  90, 132],\n",
       "         [ 74,  92, 133],\n",
       "         ...,\n",
       "         [ 75, 104, 165],\n",
       "         [ 70,  99, 159],\n",
       "         [ 56,  84, 143]],\n",
       " \n",
       "        [[ 58,  77, 117],\n",
       "         [ 72,  94, 136],\n",
       "         [ 73,  93, 134],\n",
       "         ...,\n",
       "         [ 73, 102, 163],\n",
       "         [ 66,  95, 155],\n",
       "         [ 56,  85, 143]]], dtype=uint8),\n",
       " array([[[ 99, 114, 147],\n",
       "         [108, 122, 154],\n",
       "         [116, 130, 159],\n",
       "         ...,\n",
       "         [157, 164, 184],\n",
       "         [156, 165, 185],\n",
       "         [156, 165, 185]],\n",
       " \n",
       "        [[102, 116, 149],\n",
       "         [110, 124, 156],\n",
       "         [116, 130, 160],\n",
       "         ...,\n",
       "         [153, 161, 183],\n",
       "         [156, 163, 185],\n",
       "         [156, 163, 185]],\n",
       " \n",
       "        [[102, 115, 147],\n",
       "         [111, 125, 157],\n",
       "         [119, 130, 161],\n",
       "         ...,\n",
       "         [151, 159, 182],\n",
       "         [154, 160, 183],\n",
       "         [154, 160, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 110, 146],\n",
       "         [106, 121, 155],\n",
       "         [115, 127, 161],\n",
       "         ...,\n",
       "         [130, 141, 169],\n",
       "         [128, 139, 167],\n",
       "         [124, 135, 163]],\n",
       " \n",
       "        [[ 93, 107, 143],\n",
       "         [103, 118, 152],\n",
       "         [113, 126, 159],\n",
       "         ...,\n",
       "         [129, 140, 168],\n",
       "         [126, 137, 165],\n",
       "         [123, 134, 162]],\n",
       " \n",
       "        [[ 90, 104, 140],\n",
       "         [102, 116, 151],\n",
       "         [111, 123, 157],\n",
       "         ...,\n",
       "         [126, 136, 166],\n",
       "         [123, 134, 163],\n",
       "         [122, 132, 162]]], dtype=uint8),\n",
       " array([[[ 89, 117, 173],\n",
       "         [ 88, 114, 170],\n",
       "         [ 86, 112, 167],\n",
       "         ...,\n",
       "         [101, 120, 147],\n",
       "         [105, 121, 147],\n",
       "         [107, 121, 143]],\n",
       " \n",
       "        [[ 79, 106, 162],\n",
       "         [ 76, 104, 158],\n",
       "         [ 82, 109, 163],\n",
       "         ...,\n",
       "         [ 96, 115, 142],\n",
       "         [101, 118, 141],\n",
       "         [105, 119, 141]],\n",
       " \n",
       "        [[ 81, 109, 161],\n",
       "         [ 69,  95, 149],\n",
       "         [ 69,  95, 149],\n",
       "         ...,\n",
       "         [ 93, 108, 134],\n",
       "         [ 96, 111, 134],\n",
       "         [100, 114, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 77, 101, 153],\n",
       "         [ 79, 102, 153],\n",
       "         [ 75, 100, 150],\n",
       "         ...,\n",
       "         [ 90, 105, 131],\n",
       "         [ 86,  99, 126],\n",
       "         [ 87, 103, 125]],\n",
       " \n",
       "        [[ 76, 100, 152],\n",
       "         [ 82, 105, 158],\n",
       "         [ 83, 108, 160],\n",
       "         ...,\n",
       "         [ 90, 104, 132],\n",
       "         [ 90, 104, 132],\n",
       "         [ 88, 103, 129]],\n",
       " \n",
       "        [[ 74, 100, 154],\n",
       "         [ 82, 110, 162],\n",
       "         [ 84, 111, 164],\n",
       "         ...,\n",
       "         [ 88, 104, 132],\n",
       "         [ 88, 105, 134],\n",
       "         [ 89, 107, 134]]], dtype=uint8),\n",
       " array([[[ 17,  19,  30],\n",
       "         [ 19,  20,  33],\n",
       "         [ 20,  21,  35],\n",
       "         ...,\n",
       "         [ 78,  89, 129],\n",
       "         [ 79,  89, 129],\n",
       "         [ 82,  92, 132]],\n",
       " \n",
       "        [[ 19,  21,  32],\n",
       "         [ 20,  21,  35],\n",
       "         [ 21,  22,  36],\n",
       "         ...,\n",
       "         [ 82,  92, 132],\n",
       "         [ 83,  93, 133],\n",
       "         [ 85,  95, 135]],\n",
       " \n",
       "        [[ 21,  23,  35],\n",
       "         [ 21,  22,  36],\n",
       "         [ 21,  22,  36],\n",
       "         ...,\n",
       "         [ 84,  94, 134],\n",
       "         [ 87,  97, 137],\n",
       "         [ 91, 101, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 25,  35,  53],\n",
       "         [ 26,  36,  55],\n",
       "         [ 29,  38,  59],\n",
       "         ...,\n",
       "         [ 27,  31,  55],\n",
       "         [ 28,  32,  56],\n",
       "         [ 29,  34,  57]],\n",
       " \n",
       "        [[ 24,  34,  52],\n",
       "         [ 28,  37,  56],\n",
       "         [ 30,  39,  60],\n",
       "         ...,\n",
       "         [ 28,  32,  56],\n",
       "         [ 28,  32,  56],\n",
       "         [ 29,  33,  57]],\n",
       " \n",
       "        [[ 24,  34,  52],\n",
       "         [ 28,  37,  56],\n",
       "         [ 32,  40,  62],\n",
       "         ...,\n",
       "         [ 27,  31,  55],\n",
       "         [ 26,  30,  54],\n",
       "         [ 27,  31,  55]]], dtype=uint8),\n",
       " array([[[178, 167, 186],\n",
       "         [178, 167, 187],\n",
       "         [175, 164, 184],\n",
       "         ...,\n",
       "         [ 96, 100, 129],\n",
       "         [ 93,  99, 129],\n",
       "         [ 88,  96, 125]],\n",
       " \n",
       "        [[175, 163, 180],\n",
       "         [175, 163, 181],\n",
       "         [172, 162, 179],\n",
       "         ...,\n",
       "         [ 99, 103, 131],\n",
       "         [ 97, 103, 132],\n",
       "         [ 88,  96, 125]],\n",
       " \n",
       "        [[172, 161, 177],\n",
       "         [171, 160, 176],\n",
       "         [171, 160, 176],\n",
       "         ...,\n",
       "         [ 92,  96, 121],\n",
       "         [ 88,  93, 121],\n",
       "         [ 79,  88, 116]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 117, 148],\n",
       "         [125, 122, 154],\n",
       "         [130, 125, 157],\n",
       "         ...,\n",
       "         [126, 122, 151],\n",
       "         [125, 121, 150],\n",
       "         [122, 118, 147]],\n",
       " \n",
       "        [[124, 123, 155],\n",
       "         [129, 126, 158],\n",
       "         [136, 131, 163],\n",
       "         ...,\n",
       "         [130, 126, 155],\n",
       "         [127, 123, 152],\n",
       "         [121, 117, 146]],\n",
       " \n",
       "        [[127, 126, 158],\n",
       "         [131, 128, 159],\n",
       "         [137, 133, 164],\n",
       "         ...,\n",
       "         [133, 129, 158],\n",
       "         [130, 125, 154],\n",
       "         [126, 121, 151]]], dtype=uint8),\n",
       " array([[[ 72, 105, 163],\n",
       "         [ 77, 107, 165],\n",
       "         [ 49,  77, 136],\n",
       "         ...,\n",
       "         [108, 143, 208],\n",
       "         [116, 147, 217],\n",
       "         [120, 148, 219]],\n",
       " \n",
       "        [[ 49,  80, 134],\n",
       "         [ 54,  83, 137],\n",
       "         [ 65,  91, 145],\n",
       "         ...,\n",
       "         [107, 139, 200],\n",
       "         [112, 143, 209],\n",
       "         [115, 144, 212]],\n",
       " \n",
       "        [[ 54,  81, 131],\n",
       "         [ 57,  83, 133],\n",
       "         [ 59,  81, 132],\n",
       "         ...,\n",
       "         [ 97, 127, 184],\n",
       "         [ 98, 129, 191],\n",
       "         [ 97, 130, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82, 116, 184],\n",
       "         [ 84, 119, 187],\n",
       "         [ 76, 115, 183],\n",
       "         ...,\n",
       "         [ 77, 116, 184],\n",
       "         [ 88, 126, 191],\n",
       "         [ 71, 108, 168]],\n",
       " \n",
       "        [[ 84, 117, 189],\n",
       "         [ 77, 118, 188],\n",
       "         [ 77, 119, 186],\n",
       "         ...,\n",
       "         [ 83, 121, 189],\n",
       "         [ 87, 127, 192],\n",
       "         [ 66, 105, 167]],\n",
       " \n",
       "        [[ 83, 116, 189],\n",
       "         [ 77, 118, 187],\n",
       "         [ 80, 122, 189],\n",
       "         ...,\n",
       "         [ 80, 119, 187],\n",
       "         [ 80, 119, 184],\n",
       "         [ 65, 103, 165]]], dtype=uint8),\n",
       " array([[[205, 217, 241],\n",
       "         [205, 216, 243],\n",
       "         [201, 214, 240],\n",
       "         ...,\n",
       "         [146, 171, 205],\n",
       "         [146, 169, 199],\n",
       "         [138, 162, 190]],\n",
       " \n",
       "        [[206, 216, 242],\n",
       "         [204, 215, 242],\n",
       "         [202, 212, 240],\n",
       "         ...,\n",
       "         [150, 173, 205],\n",
       "         [154, 175, 203],\n",
       "         [148, 169, 196]],\n",
       " \n",
       "        [[202, 214, 240],\n",
       "         [202, 213, 241],\n",
       "         [190, 205, 237],\n",
       "         ...,\n",
       "         [139, 163, 199],\n",
       "         [154, 176, 204],\n",
       "         [151, 172, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 169, 217],\n",
       "         [143, 168, 218],\n",
       "         [143, 165, 219],\n",
       "         ...,\n",
       "         [154, 179, 220],\n",
       "         [154, 178, 219],\n",
       "         [157, 182, 217]],\n",
       " \n",
       "        [[148, 169, 217],\n",
       "         [146, 169, 217],\n",
       "         [143, 166, 220],\n",
       "         ...,\n",
       "         [149, 173, 220],\n",
       "         [150, 175, 218],\n",
       "         [154, 179, 216]],\n",
       " \n",
       "        [[145, 168, 217],\n",
       "         [149, 171, 219],\n",
       "         [150, 172, 220],\n",
       "         ...,\n",
       "         [143, 168, 217],\n",
       "         [144, 168, 216],\n",
       "         [149, 174, 215]]], dtype=uint8),\n",
       " array([[[117, 134, 162],\n",
       "         [114, 130, 157],\n",
       "         [116, 130, 157],\n",
       "         ...,\n",
       "         [ 76,  79,  80],\n",
       "         [103, 106, 109],\n",
       "         [139, 139, 146]],\n",
       " \n",
       "        [[107, 127, 157],\n",
       "         [108, 126, 153],\n",
       "         [105, 123, 148],\n",
       "         ...,\n",
       "         [ 64,  63,  66],\n",
       "         [ 63,  63,  65],\n",
       "         [ 87,  87,  89]],\n",
       " \n",
       "        [[ 95, 107, 137],\n",
       "         [ 90, 103, 128],\n",
       "         [ 88, 102, 121],\n",
       "         ...,\n",
       "         [ 68,  72,  79],\n",
       "         [ 55,  58,  64],\n",
       "         [ 64,  66,  70]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 105, 134],\n",
       "         [ 93, 105, 133],\n",
       "         [ 93, 107, 135],\n",
       "         ...,\n",
       "         [ 90, 104, 133],\n",
       "         [ 97, 111, 139],\n",
       "         [103, 115, 143]],\n",
       " \n",
       "        [[ 92, 106, 135],\n",
       "         [ 94, 105, 134],\n",
       "         [ 96, 108, 136],\n",
       "         ...,\n",
       "         [ 92, 105, 139],\n",
       "         [ 95, 107, 140],\n",
       "         [100, 111, 142]],\n",
       " \n",
       "        [[ 93, 107, 136],\n",
       "         [ 94, 105, 134],\n",
       "         [ 97, 109, 137],\n",
       "         ...,\n",
       "         [ 93, 105, 143],\n",
       "         [ 94, 106, 142],\n",
       "         [ 98, 108, 141]]], dtype=uint8),\n",
       " array([[[ 95, 105, 145],\n",
       "         [100, 107, 147],\n",
       "         [104, 110, 151],\n",
       "         ...,\n",
       "         [109, 116, 143],\n",
       "         [ 90,  93, 115],\n",
       "         [ 44,  46,  55]],\n",
       " \n",
       "        [[ 95, 104, 143],\n",
       "         [100, 107, 148],\n",
       "         [105, 112, 153],\n",
       "         ...,\n",
       "         [110, 117, 141],\n",
       "         [ 94,  99, 122],\n",
       "         [ 48,  50,  61]],\n",
       " \n",
       "        [[ 98, 106, 146],\n",
       "         [101, 108, 148],\n",
       "         [105, 113, 153],\n",
       "         ...,\n",
       "         [117, 124, 144],\n",
       "         [100, 107, 129],\n",
       "         [ 52,  56,  68]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 131, 170],\n",
       "         [119, 135, 174],\n",
       "         [124, 140, 179],\n",
       "         ...,\n",
       "         [124, 134, 164],\n",
       "         [133, 144, 165],\n",
       "         [153, 162, 177]],\n",
       " \n",
       "        [[112, 129, 168],\n",
       "         [116, 132, 172],\n",
       "         [119, 135, 174],\n",
       "         ...,\n",
       "         [123, 133, 163],\n",
       "         [136, 145, 168],\n",
       "         [152, 161, 176]],\n",
       " \n",
       "        [[111, 127, 167],\n",
       "         [110, 127, 165],\n",
       "         [115, 132, 171],\n",
       "         ...,\n",
       "         [119, 128, 158],\n",
       "         [134, 142, 166],\n",
       "         [152, 161, 177]]], dtype=uint8),\n",
       " array([[[  2,   2,   3],\n",
       "         [  1,   2,   8],\n",
       "         [  5,   7,  18],\n",
       "         ...,\n",
       "         [ 54,  64, 104],\n",
       "         [ 55,  67, 109],\n",
       "         [ 62,  73, 116]],\n",
       " \n",
       "        [[  1,   2,   4],\n",
       "         [  3,   4,  14],\n",
       "         [  8,   8,  23],\n",
       "         ...,\n",
       "         [ 63,  70, 113],\n",
       "         [ 59,  71, 113],\n",
       "         [ 62,  76, 118]],\n",
       " \n",
       "        [[  0,   2,   7],\n",
       "         [  5,   7,  19],\n",
       "         [  9,   9,  26],\n",
       "         ...,\n",
       "         [ 65,  74, 117],\n",
       "         [ 63,  76, 118],\n",
       "         [ 64,  79, 119]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 20,  26,  49],\n",
       "         [ 22,  30,  53],\n",
       "         [ 25,  35,  57],\n",
       "         ...,\n",
       "         [ 15,  19,  44],\n",
       "         [ 16,  19,  47],\n",
       "         [ 19,  19,  49]],\n",
       " \n",
       "        [[ 20,  27,  47],\n",
       "         [ 22,  30,  53],\n",
       "         [ 25,  34,  58],\n",
       "         ...,\n",
       "         [ 15,  19,  44],\n",
       "         [ 15,  19,  44],\n",
       "         [ 19,  19,  49]],\n",
       " \n",
       "        [[ 21,  27,  50],\n",
       "         [ 22,  29,  53],\n",
       "         [ 24,  33,  59],\n",
       "         ...,\n",
       "         [ 15,  19,  44],\n",
       "         [ 14,  18,  43],\n",
       "         [ 21,  21,  49]]], dtype=uint8),\n",
       " array([[[ 75,  86, 131],\n",
       "         [ 79,  90, 134],\n",
       "         [ 76,  85, 132],\n",
       "         ...,\n",
       "         [ 68,  78, 117],\n",
       "         [ 52,  62,  95],\n",
       "         [ 41,  47,  66]],\n",
       " \n",
       "        [[ 81,  90, 137],\n",
       "         [ 85,  93, 140],\n",
       "         [ 83,  91, 138],\n",
       "         ...,\n",
       "         [ 70,  82, 121],\n",
       "         [ 53,  62,  97],\n",
       "         [ 46,  50,  72]],\n",
       " \n",
       "        [[ 83,  92, 137],\n",
       "         [ 86,  95, 139],\n",
       "         [ 87,  95, 140],\n",
       "         ...,\n",
       "         [ 68,  80, 121],\n",
       "         [ 57,  65, 102],\n",
       "         [ 48,  52,  74]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 141, 190],\n",
       "         [133, 142, 189],\n",
       "         [130, 139, 186],\n",
       "         ...,\n",
       "         [115, 129, 167],\n",
       "         [117, 129, 167],\n",
       "         [106, 118, 156]],\n",
       " \n",
       "        [[135, 142, 190],\n",
       "         [136, 144, 191],\n",
       "         [135, 143, 190],\n",
       "         ...,\n",
       "         [122, 133, 171],\n",
       "         [121, 132, 169],\n",
       "         [109, 121, 157]],\n",
       " \n",
       "        [[133, 142, 190],\n",
       "         [137, 145, 192],\n",
       "         [137, 145, 192],\n",
       "         ...,\n",
       "         [125, 134, 173],\n",
       "         [122, 132, 170],\n",
       "         [107, 119, 155]]], dtype=uint8),\n",
       " array([[[111, 127, 151],\n",
       "         [ 99, 119, 144],\n",
       "         [102, 121, 146],\n",
       "         ...,\n",
       "         [111, 127, 143],\n",
       "         [ 90, 106, 119],\n",
       "         [ 73,  89, 101]],\n",
       " \n",
       "        [[104, 120, 143],\n",
       "         [ 91, 108, 134],\n",
       "         [ 91, 109, 134],\n",
       "         ...,\n",
       "         [111, 129, 141],\n",
       "         [ 91, 107, 119],\n",
       "         [ 73,  89,  96]],\n",
       " \n",
       "        [[ 95, 110, 136],\n",
       "         [ 88, 105, 128],\n",
       "         [ 85, 103, 127],\n",
       "         ...,\n",
       "         [112, 134, 146],\n",
       "         [ 97, 111, 125],\n",
       "         [ 69,  84,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 116, 138],\n",
       "         [ 93, 111, 131],\n",
       "         [101, 115, 132],\n",
       "         ...,\n",
       "         [110, 126, 141],\n",
       "         [ 99, 115, 128],\n",
       "         [ 84,  98, 108]],\n",
       " \n",
       "        [[104, 130, 151],\n",
       "         [100, 121, 143],\n",
       "         [113, 127, 146],\n",
       "         ...,\n",
       "         [113, 129, 145],\n",
       "         [105, 119, 133],\n",
       "         [ 83,  96, 107]],\n",
       " \n",
       "        [[118, 142, 166],\n",
       "         [109, 130, 155],\n",
       "         [112, 132, 152],\n",
       "         ...,\n",
       "         [122, 138, 155],\n",
       "         [100, 115, 131],\n",
       "         [ 94, 103, 112]]], dtype=uint8),\n",
       " array([[[154, 164, 182],\n",
       "         [153, 162, 182],\n",
       "         [152, 160, 183],\n",
       "         ...,\n",
       "         [ 49,  67,  94],\n",
       "         [ 58,  76, 101],\n",
       "         [ 54,  71,  97]],\n",
       " \n",
       "        [[155, 162, 181],\n",
       "         [155, 160, 182],\n",
       "         [154, 159, 183],\n",
       "         ...,\n",
       "         [ 46,  63,  89],\n",
       "         [ 43,  60,  86],\n",
       "         [ 57,  74, 100]],\n",
       " \n",
       "        [[154, 160, 183],\n",
       "         [153, 159, 182],\n",
       "         [153, 157, 185],\n",
       "         ...,\n",
       "         [ 44,  61,  87],\n",
       "         [ 37,  55,  78],\n",
       "         [ 37,  55,  79]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 133, 166],\n",
       "         [112, 129, 162],\n",
       "         [111, 128, 161],\n",
       "         ...,\n",
       "         [124, 139, 169],\n",
       "         [119, 135, 164],\n",
       "         [115, 133, 162]],\n",
       " \n",
       "        [[117, 134, 168],\n",
       "         [113, 130, 163],\n",
       "         [111, 127, 160],\n",
       "         ...,\n",
       "         [125, 140, 172],\n",
       "         [119, 134, 166],\n",
       "         [113, 131, 162]],\n",
       " \n",
       "        [[120, 136, 167],\n",
       "         [113, 130, 163],\n",
       "         [107, 126, 159],\n",
       "         ...,\n",
       "         [124, 139, 168],\n",
       "         [120, 135, 167],\n",
       "         [111, 129, 160]]], dtype=uint8),\n",
       " array([[[ 37,  42,  45],\n",
       "         [ 52,  68,  79],\n",
       "         [ 87, 108, 130],\n",
       "         ...,\n",
       "         [174, 188, 216],\n",
       "         [171, 185, 213],\n",
       "         [174, 188, 216]],\n",
       " \n",
       "        [[ 39,  46,  54],\n",
       "         [ 68,  87, 102],\n",
       "         [ 94, 117, 139],\n",
       "         ...,\n",
       "         [174, 185, 215],\n",
       "         [173, 185, 215],\n",
       "         [174, 188, 216]],\n",
       " \n",
       "        [[ 46,  57,  71],\n",
       "         [ 86, 106, 130],\n",
       "         [102, 126, 150],\n",
       "         ...,\n",
       "         [166, 184, 213],\n",
       "         [168, 186, 214],\n",
       "         [171, 188, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[173, 194, 205],\n",
       "         [187, 208, 219],\n",
       "         [194, 214, 226],\n",
       "         ...,\n",
       "         [214, 225, 242],\n",
       "         [222, 230, 245],\n",
       "         [230, 237, 250]],\n",
       " \n",
       "        [[164, 187, 199],\n",
       "         [178, 200, 213],\n",
       "         [190, 209, 223],\n",
       "         ...,\n",
       "         [215, 226, 243],\n",
       "         [225, 233, 247],\n",
       "         [236, 241, 254]],\n",
       " \n",
       "        [[153, 176, 192],\n",
       "         [170, 193, 209],\n",
       "         [182, 201, 219],\n",
       "         ...,\n",
       "         [220, 230, 245],\n",
       "         [231, 239, 252],\n",
       "         [239, 244, 254]]], dtype=uint8),\n",
       " array([[[166, 183, 210],\n",
       "         [167, 181, 210],\n",
       "         [168, 182, 210],\n",
       "         ...,\n",
       "         [105, 130, 161],\n",
       "         [104, 129, 156],\n",
       "         [ 92, 113, 139]],\n",
       " \n",
       "        [[165, 182, 208],\n",
       "         [166, 181, 207],\n",
       "         [166, 181, 207],\n",
       "         ...,\n",
       "         [110, 133, 161],\n",
       "         [100, 125, 155],\n",
       "         [ 90, 111, 140]],\n",
       " \n",
       "        [[161, 178, 204],\n",
       "         [166, 181, 207],\n",
       "         [165, 180, 206],\n",
       "         ...,\n",
       "         [112, 136, 163],\n",
       "         [ 97, 122, 151],\n",
       "         [ 91, 113, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 200, 227],\n",
       "         [169, 186, 218],\n",
       "         [159, 176, 208],\n",
       "         ...,\n",
       "         [170, 190, 208],\n",
       "         [170, 187, 208],\n",
       "         [169, 185, 207]],\n",
       " \n",
       "        [[186, 200, 228],\n",
       "         [175, 191, 220],\n",
       "         [164, 181, 212],\n",
       "         ...,\n",
       "         [171, 190, 211],\n",
       "         [171, 188, 209],\n",
       "         [171, 188, 209]],\n",
       " \n",
       "        [[190, 206, 230],\n",
       "         [177, 194, 221],\n",
       "         [165, 182, 212],\n",
       "         ...,\n",
       "         [175, 192, 213],\n",
       "         [173, 190, 211],\n",
       "         [171, 188, 209]]], dtype=uint8),\n",
       " array([[[ 25,  35,  58],\n",
       "         [ 29,  39,  64],\n",
       "         [ 28,  38,  66],\n",
       "         ...,\n",
       "         [169, 191, 222],\n",
       "         [183, 208, 243],\n",
       "         [183, 213, 243]],\n",
       " \n",
       "        [[ 22,  34,  53],\n",
       "         [ 19,  29,  48],\n",
       "         [ 18,  26,  42],\n",
       "         ...,\n",
       "         [150, 186, 237],\n",
       "         [174, 202, 235],\n",
       "         [161, 189, 221]],\n",
       " \n",
       "        [[ 25,  32,  46],\n",
       "         [  7,  14,  27],\n",
       "         [ 14,  21,  36],\n",
       "         ...,\n",
       "         [164, 197, 243],\n",
       "         [157, 192, 238],\n",
       "         [157, 196, 238]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 45,  80, 143],\n",
       "         [ 47,  82, 146],\n",
       "         [ 43,  81, 146],\n",
       "         ...,\n",
       "         [ 77, 116, 182],\n",
       "         [ 77, 124, 195],\n",
       "         [ 71, 116, 188]],\n",
       " \n",
       "        [[ 43,  78, 141],\n",
       "         [ 49,  83, 146],\n",
       "         [ 51,  91, 156],\n",
       "         ...,\n",
       "         [ 71, 120, 191],\n",
       "         [ 78, 130, 201],\n",
       "         [ 71, 119, 191]],\n",
       " \n",
       "        [[ 42,  78, 142],\n",
       "         [ 48,  83, 148],\n",
       "         [ 51,  88, 155],\n",
       "         ...,\n",
       "         [ 76, 133, 204],\n",
       "         [ 81, 136, 208],\n",
       "         [ 80, 127, 200]]], dtype=uint8),\n",
       " array([[[164, 192, 235],\n",
       "         [130, 164, 219],\n",
       "         [137, 168, 224],\n",
       "         ...,\n",
       "         [ 39,  49,  63],\n",
       "         [ 38,  47,  64],\n",
       "         [ 38,  46,  59]],\n",
       " \n",
       "        [[161, 193, 234],\n",
       "         [151, 188, 229],\n",
       "         [121, 155, 215],\n",
       "         ...,\n",
       "         [ 48,  58,  73],\n",
       "         [ 38,  43,  57],\n",
       "         [ 33,  42,  53]],\n",
       " \n",
       "        [[172, 198, 229],\n",
       "         [140, 170, 216],\n",
       "         [140, 174, 232],\n",
       "         ...,\n",
       "         [ 52,  60,  72],\n",
       "         [ 47,  53,  64],\n",
       "         [ 35,  43,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75, 110, 176],\n",
       "         [ 72, 107, 171],\n",
       "         [ 73, 112, 180],\n",
       "         ...,\n",
       "         [ 56,  82, 132],\n",
       "         [ 52,  74, 119],\n",
       "         [ 56,  71, 102]],\n",
       " \n",
       "        [[ 78, 116, 184],\n",
       "         [ 77, 112, 176],\n",
       "         [ 76, 115, 183],\n",
       "         ...,\n",
       "         [ 56,  82, 132],\n",
       "         [ 53,  76, 122],\n",
       "         [ 55,  73, 105]],\n",
       " \n",
       "        [[ 83, 127, 196],\n",
       "         [ 79, 113, 179],\n",
       "         [ 83, 124, 189],\n",
       "         ...,\n",
       "         [ 57,  83, 133],\n",
       "         [ 53,  77, 121],\n",
       "         [ 53,  69, 103]]], dtype=uint8),\n",
       " array([[[ 20,  37,  58],\n",
       "         [ 18,  39,  63],\n",
       "         [ 16,  39,  65],\n",
       "         ...,\n",
       "         [ 38,  79, 127],\n",
       "         [ 38,  79, 126],\n",
       "         [ 37,  79, 126]],\n",
       " \n",
       "        [[ 23,  38,  64],\n",
       "         [ 18,  38,  65],\n",
       "         [ 17,  39,  67],\n",
       "         ...,\n",
       "         [ 38,  78, 126],\n",
       "         [ 39,  79, 127],\n",
       "         [ 40,  80, 128]],\n",
       " \n",
       "        [[ 20,  35,  63],\n",
       "         [ 18,  38,  66],\n",
       "         [ 20,  40,  68],\n",
       "         ...,\n",
       "         [ 42,  80, 128],\n",
       "         [ 40,  78, 126],\n",
       "         [ 43,  81, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 36,  73, 109],\n",
       "         [ 42,  81, 119],\n",
       "         [ 44,  82, 122],\n",
       "         ...,\n",
       "         [ 33,  64, 109],\n",
       "         [ 32,  64, 110],\n",
       "         [ 33,  66, 112]],\n",
       " \n",
       "        [[ 36,  74, 109],\n",
       "         [ 39,  78, 116],\n",
       "         [ 43,  82, 121],\n",
       "         ...,\n",
       "         [ 32,  65, 111],\n",
       "         [ 32,  65, 111],\n",
       "         [ 33,  66, 114]],\n",
       " \n",
       "        [[ 33,  72, 107],\n",
       "         [ 36,  79, 116],\n",
       "         [ 40,  82, 121],\n",
       "         ...,\n",
       "         [ 33,  66, 112],\n",
       "         [ 33,  66, 114],\n",
       "         [ 31,  64, 113]]], dtype=uint8),\n",
       " array([[[ 44,  80, 126],\n",
       "         [ 45,  81, 127],\n",
       "         [ 46,  83, 128],\n",
       "         ...,\n",
       "         [ 11,  33,  55],\n",
       "         [ 14,  29,  48],\n",
       "         [  5,  17,  29]],\n",
       " \n",
       "        [[ 46,  80, 126],\n",
       "         [ 46,  82, 128],\n",
       "         [ 47,  83, 129],\n",
       "         ...,\n",
       "         [ 13,  33,  56],\n",
       "         [ 14,  29,  49],\n",
       "         [  6,  17,  31]],\n",
       " \n",
       "        [[ 46,  80, 126],\n",
       "         [ 49,  83, 128],\n",
       "         [ 49,  84, 128],\n",
       "         ...,\n",
       "         [ 20,  37,  61],\n",
       "         [ 18,  32,  52],\n",
       "         [ 12,  22,  37]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 37,  76, 128],\n",
       "         [ 42,  76, 129],\n",
       "         [ 38,  73, 123],\n",
       "         ...,\n",
       "         [ 39,  82, 125],\n",
       "         [ 35,  78, 118],\n",
       "         [ 33,  72, 116]],\n",
       " \n",
       "        [[ 40,  77, 129],\n",
       "         [ 44,  77, 127],\n",
       "         [ 43,  76, 126],\n",
       "         ...,\n",
       "         [ 40,  83, 125],\n",
       "         [ 36,  79, 117],\n",
       "         [ 33,  70, 114]],\n",
       " \n",
       "        [[ 39,  75, 127],\n",
       "         [ 42,  77, 127],\n",
       "         [ 43,  76, 126],\n",
       "         ...,\n",
       "         [ 39,  82, 125],\n",
       "         [ 37,  79, 121],\n",
       "         [ 36,  73, 112]]], dtype=uint8),\n",
       " array([[[ 95, 122, 177],\n",
       "         [102, 122, 180],\n",
       "         [106, 122, 185],\n",
       "         ...,\n",
       "         [133, 146, 221],\n",
       "         [133, 146, 224],\n",
       "         [133, 146, 221]],\n",
       " \n",
       "        [[ 97, 122, 177],\n",
       "         [103, 121, 180],\n",
       "         [107, 122, 185],\n",
       "         ...,\n",
       "         [126, 139, 218],\n",
       "         [127, 140, 220],\n",
       "         [128, 142, 219]],\n",
       " \n",
       "        [[ 97, 122, 177],\n",
       "         [104, 122, 181],\n",
       "         [109, 122, 186],\n",
       "         ...,\n",
       "         [118, 131, 218],\n",
       "         [122, 137, 221],\n",
       "         [124, 139, 222]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 121, 186],\n",
       "         [105, 125, 190],\n",
       "         [108, 128, 193],\n",
       "         ...,\n",
       "         [128, 138, 214],\n",
       "         [115, 135, 214],\n",
       "         [119, 141, 219]],\n",
       " \n",
       "        [[103, 122, 189],\n",
       "         [105, 125, 191],\n",
       "         [107, 127, 193],\n",
       "         ...,\n",
       "         [128, 137, 218],\n",
       "         [107, 127, 209],\n",
       "         [114, 135, 217]],\n",
       " \n",
       "        [[ 99, 126, 190],\n",
       "         [ 99, 124, 190],\n",
       "         [ 99, 125, 191],\n",
       "         ...,\n",
       "         [110, 128, 215],\n",
       "         [106, 128, 214],\n",
       "         [107, 129, 214]]], dtype=uint8),\n",
       " array([[[114, 116, 110],\n",
       "         [114, 116, 110],\n",
       "         [116, 118, 112],\n",
       "         ...,\n",
       "         [ 99, 110, 114],\n",
       "         [103, 114, 118],\n",
       "         [102, 114, 119]],\n",
       " \n",
       "        [[112, 114, 108],\n",
       "         [113, 115, 109],\n",
       "         [116, 117, 112],\n",
       "         ...,\n",
       "         [ 97, 108, 112],\n",
       "         [ 99, 109, 116],\n",
       "         [ 99, 110, 115]],\n",
       " \n",
       "        [[114, 114, 108],\n",
       "         [117, 115, 110],\n",
       "         [122, 119, 114],\n",
       "         ...,\n",
       "         [ 91, 101, 104],\n",
       "         [ 91, 101, 105],\n",
       "         [ 97, 108, 112]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 133, 136],\n",
       "         [127, 137, 138],\n",
       "         [118, 129, 133],\n",
       "         ...,\n",
       "         [ 76,  92, 104],\n",
       "         [ 81,  97, 109],\n",
       "         [ 84,  99, 111]],\n",
       " \n",
       "        [[132, 142, 143],\n",
       "         [124, 136, 138],\n",
       "         [126, 137, 141],\n",
       "         ...,\n",
       "         [ 77,  93, 105],\n",
       "         [ 81,  95, 107],\n",
       "         [ 89, 101, 113]],\n",
       " \n",
       "        [[132, 144, 144],\n",
       "         [132, 144, 147],\n",
       "         [128, 138, 144],\n",
       "         ...,\n",
       "         [ 83,  99, 110],\n",
       "         [ 79,  94, 103],\n",
       "         [ 86,  97, 107]]], dtype=uint8),\n",
       " array([[[ 77, 100, 114],\n",
       "         [ 86, 112, 136],\n",
       "         [ 90, 118, 142],\n",
       "         ...,\n",
       "         [105, 136, 169],\n",
       "         [104, 135, 168],\n",
       "         [100, 133, 166]],\n",
       " \n",
       "        [[ 78, 102, 119],\n",
       "         [ 88, 114, 138],\n",
       "         [ 92, 120, 144],\n",
       "         ...,\n",
       "         [104, 135, 168],\n",
       "         [102, 133, 166],\n",
       "         [101, 132, 165]],\n",
       " \n",
       "        [[ 85, 109, 130],\n",
       "         [ 87, 115, 139],\n",
       "         [ 98, 126, 150],\n",
       "         ...,\n",
       "         [ 99, 130, 163],\n",
       "         [100, 131, 164],\n",
       "         [101, 132, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 144, 173],\n",
       "         [112, 144, 173],\n",
       "         [109, 141, 170],\n",
       "         ...,\n",
       "         [ 87, 125, 155],\n",
       "         [ 96, 134, 164],\n",
       "         [106, 144, 174]],\n",
       " \n",
       "        [[113, 145, 174],\n",
       "         [113, 145, 174],\n",
       "         [111, 143, 172],\n",
       "         ...,\n",
       "         [ 98, 136, 166],\n",
       "         [105, 143, 173],\n",
       "         [110, 148, 178]],\n",
       " \n",
       "        [[115, 147, 176],\n",
       "         [117, 149, 178],\n",
       "         [115, 147, 176],\n",
       "         ...,\n",
       "         [103, 142, 172],\n",
       "         [108, 146, 176],\n",
       "         [112, 150, 180]]], dtype=uint8),\n",
       " array([[[ 95, 131, 164],\n",
       "         [ 98, 133, 167],\n",
       "         [ 98, 133, 167],\n",
       "         ...,\n",
       "         [168, 198, 215],\n",
       "         [162, 190, 207],\n",
       "         [150, 177, 194]],\n",
       " \n",
       "        [[ 95, 130, 164],\n",
       "         [ 96, 131, 165],\n",
       "         [ 96, 131, 165],\n",
       "         ...,\n",
       "         [174, 204, 221],\n",
       "         [170, 198, 215],\n",
       "         [157, 184, 201]],\n",
       " \n",
       "        [[ 92, 127, 161],\n",
       "         [ 92, 127, 161],\n",
       "         [ 94, 129, 163],\n",
       "         ...,\n",
       "         [182, 211, 228],\n",
       "         [175, 203, 220],\n",
       "         [163, 191, 208]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 157, 183],\n",
       "         [ 67, 105, 140],\n",
       "         [ 97, 136, 168],\n",
       "         ...,\n",
       "         [180, 211, 232],\n",
       "         [181, 211, 232],\n",
       "         [177, 207, 226]],\n",
       " \n",
       "        [[117, 157, 183],\n",
       "         [ 49,  87, 121],\n",
       "         [ 90, 128, 161],\n",
       "         ...,\n",
       "         [181, 212, 233],\n",
       "         [183, 213, 234],\n",
       "         [178, 208, 227]],\n",
       " \n",
       "        [[123, 161, 190],\n",
       "         [ 61, 100, 133],\n",
       "         [ 93, 132, 164],\n",
       "         ...,\n",
       "         [190, 221, 242],\n",
       "         [186, 217, 238],\n",
       "         [182, 211, 232]]], dtype=uint8),\n",
       " array([[[141, 129, 149],\n",
       "         [136, 124, 144],\n",
       "         [127, 117, 138],\n",
       "         ...,\n",
       "         [ 40,  39,  47],\n",
       "         [ 34,  33,  42],\n",
       "         [ 27,  26,  35]],\n",
       " \n",
       "        [[142, 130, 148],\n",
       "         [132, 121, 141],\n",
       "         [120, 110, 130],\n",
       "         ...,\n",
       "         [ 36,  37,  42],\n",
       "         [ 31,  32,  37],\n",
       "         [ 32,  33,  38]],\n",
       " \n",
       "        [[140, 131, 147],\n",
       "         [129, 120, 138],\n",
       "         [123, 113, 131],\n",
       "         ...,\n",
       "         [ 32,  33,  37],\n",
       "         [ 27,  28,  33],\n",
       "         [ 25,  26,  29]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 23,  28,  37],\n",
       "         [ 29,  33,  44],\n",
       "         [ 32,  35,  50],\n",
       "         ...,\n",
       "         [ 55,  58,  73],\n",
       "         [ 50,  53,  68],\n",
       "         [ 44,  47,  62]],\n",
       " \n",
       "        [[ 23,  29,  40],\n",
       "         [ 29,  35,  48],\n",
       "         [ 34,  40,  53],\n",
       "         ...,\n",
       "         [ 57,  59,  77],\n",
       "         [ 52,  54,  72],\n",
       "         [ 50,  52,  70]],\n",
       " \n",
       "        [[ 22,  27,  42],\n",
       "         [ 30,  34,  50],\n",
       "         [ 35,  39,  57],\n",
       "         ...,\n",
       "         [ 58,  61,  76],\n",
       "         [ 56,  58,  74],\n",
       "         [ 53,  56,  71]]], dtype=uint8),\n",
       " array([[[17, 22, 24],\n",
       "         [19, 25, 31],\n",
       "         [22, 28, 33],\n",
       "         ...,\n",
       "         [26, 33, 60],\n",
       "         [27, 34, 61],\n",
       "         [26, 32, 60]],\n",
       " \n",
       "        [[19, 23, 27],\n",
       "         [23, 29, 34],\n",
       "         [25, 31, 36],\n",
       "         ...,\n",
       "         [26, 34, 60],\n",
       "         [26, 33, 60],\n",
       "         [25, 32, 60]],\n",
       " \n",
       "        [[23, 27, 32],\n",
       "         [24, 31, 36],\n",
       "         [26, 32, 37],\n",
       "         ...,\n",
       "         [29, 36, 63],\n",
       "         [29, 36, 63],\n",
       "         [24, 32, 59]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[33, 39, 51],\n",
       "         [29, 35, 46],\n",
       "         [28, 34, 45],\n",
       "         ...,\n",
       "         [29, 37, 50],\n",
       "         [31, 39, 52],\n",
       "         [31, 39, 52]],\n",
       " \n",
       "        [[32, 38, 52],\n",
       "         [30, 36, 50],\n",
       "         [32, 38, 52],\n",
       "         ...,\n",
       "         [32, 40, 53],\n",
       "         [29, 37, 50],\n",
       "         [29, 37, 50]],\n",
       " \n",
       "        [[29, 36, 50],\n",
       "         [31, 38, 52],\n",
       "         [31, 39, 53],\n",
       "         ...,\n",
       "         [29, 37, 50],\n",
       "         [28, 36, 49],\n",
       "         [28, 36, 49]]], dtype=uint8),\n",
       " array([[[ 46,  49,  77],\n",
       "         [ 48,  58,  87],\n",
       "         [ 50,  61,  90],\n",
       "         ...,\n",
       "         [139, 161, 184],\n",
       "         [105, 126, 158],\n",
       "         [137, 158, 183]],\n",
       " \n",
       "        [[ 47,  50,  76],\n",
       "         [ 46,  56,  84],\n",
       "         [ 47,  59,  83],\n",
       "         ...,\n",
       "         [120, 143, 167],\n",
       "         [ 92, 115, 149],\n",
       "         [119, 143, 174]],\n",
       " \n",
       "        [[ 45,  49,  73],\n",
       "         [ 48,  54,  79],\n",
       "         [ 38,  40,  54],\n",
       "         ...,\n",
       "         [ 85, 105, 132],\n",
       "         [ 81, 103, 135],\n",
       "         [101, 127, 157]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 81, 101, 143],\n",
       "         [ 85, 107, 148],\n",
       "         [ 85, 109, 149],\n",
       "         ...,\n",
       "         [ 79, 111, 154],\n",
       "         [ 73, 105, 148],\n",
       "         [ 68,  98, 143]],\n",
       " \n",
       "        [[ 87, 110, 151],\n",
       "         [ 91, 115, 157],\n",
       "         [ 90, 115, 156],\n",
       "         ...,\n",
       "         [ 82, 116, 159],\n",
       "         [ 77, 109, 152],\n",
       "         [ 70, 101, 147]],\n",
       " \n",
       "        [[ 88, 112, 153],\n",
       "         [ 93, 119, 159],\n",
       "         [ 95, 121, 159],\n",
       "         ...,\n",
       "         [ 82, 115, 160],\n",
       "         [ 75, 109, 153],\n",
       "         [ 70, 102, 147]]], dtype=uint8),\n",
       " array([[[182, 194, 208],\n",
       "         [160, 170, 183],\n",
       "         [182, 192, 206],\n",
       "         ...,\n",
       "         [ 47,  58,  76],\n",
       "         [ 32,  35,  40],\n",
       "         [ 12,   9,  14]],\n",
       " \n",
       "        [[157, 167, 182],\n",
       "         [148, 163, 180],\n",
       "         [152, 167, 182],\n",
       "         ...,\n",
       "         [ 44,  56,  75],\n",
       "         [ 29,  33,  39],\n",
       "         [ 13,  11,  13]],\n",
       " \n",
       "        [[147, 162, 182],\n",
       "         [142, 158, 176],\n",
       "         [134, 151, 168],\n",
       "         ...,\n",
       "         [ 48,  59,  82],\n",
       "         [ 29,  34,  41],\n",
       "         [ 12,  12,  15]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 148, 192],\n",
       "         [113, 148, 192],\n",
       "         [114, 152, 192],\n",
       "         ...,\n",
       "         [112, 148, 181],\n",
       "         [105, 139, 172],\n",
       "         [ 94, 124, 157]],\n",
       " \n",
       "        [[112, 147, 191],\n",
       "         [113, 148, 192],\n",
       "         [113, 151, 193],\n",
       "         ...,\n",
       "         [112, 147, 181],\n",
       "         [102, 137, 170],\n",
       "         [ 93, 121, 155]],\n",
       " \n",
       "        [[111, 146, 188],\n",
       "         [113, 148, 191],\n",
       "         [111, 148, 189],\n",
       "         ...,\n",
       "         [113, 148, 182],\n",
       "         [103, 137, 172],\n",
       "         [ 91, 119, 153]]], dtype=uint8),\n",
       " array([[[ 95,  97, 130],\n",
       "         [ 87,  92, 125],\n",
       "         [ 81,  85, 121],\n",
       "         ...,\n",
       "         [ 90, 116, 152],\n",
       "         [ 92, 119, 156],\n",
       "         [ 94, 120, 156]],\n",
       " \n",
       "        [[ 99, 101, 132],\n",
       "         [ 93,  95, 129],\n",
       "         [ 85,  88, 123],\n",
       "         ...,\n",
       "         [ 94, 121, 156],\n",
       "         [ 94, 121, 156],\n",
       "         [ 97, 122, 157]],\n",
       " \n",
       "        [[105, 103, 134],\n",
       "         [ 95,  96, 128],\n",
       "         [ 83,  85, 119],\n",
       "         ...,\n",
       "         [ 98, 121, 153],\n",
       "         [103, 127, 160],\n",
       "         [103, 127, 162]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 138, 169],\n",
       "         [128, 134, 167],\n",
       "         [118, 124, 157],\n",
       "         ...,\n",
       "         [ 60,  76, 119],\n",
       "         [ 63,  79, 126],\n",
       "         [ 65,  79, 129]],\n",
       " \n",
       "        [[140, 142, 173],\n",
       "         [123, 130, 163],\n",
       "         [120, 125, 158],\n",
       "         ...,\n",
       "         [ 63,  80, 126],\n",
       "         [ 66,  82, 131],\n",
       "         [ 64,  80, 130]],\n",
       " \n",
       "        [[138, 142, 173],\n",
       "         [128, 135, 168],\n",
       "         [121, 128, 160],\n",
       "         ...,\n",
       "         [ 65,  83, 129],\n",
       "         [ 67,  83, 133],\n",
       "         [ 68,  85, 135]]], dtype=uint8),\n",
       " array([[[ 92, 118, 155],\n",
       "         [ 95, 121, 157],\n",
       "         [ 90, 116, 153],\n",
       "         ...,\n",
       "         [ 64,  87, 128],\n",
       "         [ 68,  90, 128],\n",
       "         [ 66,  87, 123]],\n",
       " \n",
       "        [[ 95, 122, 157],\n",
       "         [ 98, 122, 157],\n",
       "         [ 91, 116, 150],\n",
       "         ...,\n",
       "         [ 66,  89, 127],\n",
       "         [ 68,  89, 127],\n",
       "         [ 68,  86, 123]],\n",
       " \n",
       "        [[ 98, 123, 156],\n",
       "         [ 97, 123, 156],\n",
       "         [ 95, 120, 152],\n",
       "         ...,\n",
       "         [ 68,  89, 127],\n",
       "         [ 68,  87, 125],\n",
       "         [ 68,  86, 123]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  90, 140],\n",
       "         [ 62,  86, 133],\n",
       "         [ 62,  86, 132],\n",
       "         ...,\n",
       "         [ 71,  97, 143],\n",
       "         [ 73,  99, 145],\n",
       "         [ 75, 101, 147]],\n",
       " \n",
       "        [[ 67,  91, 142],\n",
       "         [ 67,  90, 140],\n",
       "         [ 68,  91, 140],\n",
       "         ...,\n",
       "         [ 73,  99, 146],\n",
       "         [ 76, 102, 148],\n",
       "         [ 76, 102, 148]],\n",
       " \n",
       "        [[ 68,  93, 145],\n",
       "         [ 69,  94, 145],\n",
       "         [ 71,  95, 145],\n",
       "         ...,\n",
       "         [ 76, 102, 149],\n",
       "         [ 74, 103, 148],\n",
       "         [ 75, 104, 149]]], dtype=uint8),\n",
       " array([[[106,  91,  99],\n",
       "         [105,  90,  98],\n",
       "         [104,  90,  97],\n",
       "         ...,\n",
       "         [112, 100, 130],\n",
       "         [107,  94, 121],\n",
       "         [102,  90, 104]],\n",
       " \n",
       "        [[102,  88,  95],\n",
       "         [101,  87,  95],\n",
       "         [102,  87,  95],\n",
       "         ...,\n",
       "         [111,  98, 130],\n",
       "         [107,  94, 124],\n",
       "         [100,  88, 109]],\n",
       " \n",
       "        [[ 99,  86,  94],\n",
       "         [ 98,  85,  93],\n",
       "         [ 97,  84,  92],\n",
       "         ...,\n",
       "         [107,  96, 129],\n",
       "         [105,  94, 125],\n",
       "         [100,  87, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  56, 117],\n",
       "         [ 66,  55, 117],\n",
       "         [ 64,  53, 114],\n",
       "         ...,\n",
       "         [ 74,  65, 135],\n",
       "         [ 80,  70, 140],\n",
       "         [ 83,  74, 141]],\n",
       " \n",
       "        [[ 63,  55, 116],\n",
       "         [ 63,  54, 117],\n",
       "         [ 63,  54, 117],\n",
       "         ...,\n",
       "         [ 74,  65, 137],\n",
       "         [ 79,  70, 142],\n",
       "         [ 82,  74, 140]],\n",
       " \n",
       "        [[ 63,  55, 116],\n",
       "         [ 64,  55, 118],\n",
       "         [ 62,  53, 116],\n",
       "         ...,\n",
       "         [ 73,  64, 139],\n",
       "         [ 77,  67, 142],\n",
       "         [ 81,  74, 139]]], dtype=uint8),\n",
       " array([[[199, 201, 202],\n",
       "         [201, 200, 202],\n",
       "         [210, 207, 206],\n",
       "         ...,\n",
       "         [106,  92,  98],\n",
       "         [104,  91,  97],\n",
       "         [105,  91,  96]],\n",
       " \n",
       "        [[198, 200, 201],\n",
       "         [200, 199, 201],\n",
       "         [209, 208, 207],\n",
       "         ...,\n",
       "         [105,  91,  97],\n",
       "         [105,  92,  99],\n",
       "         [103,  90,  98]],\n",
       " \n",
       "        [[196, 199, 200],\n",
       "         [195, 196, 199],\n",
       "         [222, 223, 221],\n",
       "         ...,\n",
       "         [103,  88,  94],\n",
       "         [101,  89,  94],\n",
       "         [101,  88,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 198, 206],\n",
       "         [195, 194, 203],\n",
       "         [177, 175, 184],\n",
       "         ...,\n",
       "         [ 64,  57,  63],\n",
       "         [ 63,  57,  64],\n",
       "         [ 65,  58,  68]],\n",
       " \n",
       "        [[190, 195, 204],\n",
       "         [194, 193, 201],\n",
       "         [178, 177, 186],\n",
       "         ...,\n",
       "         [ 62,  57,  66],\n",
       "         [ 64,  58,  68],\n",
       "         [ 65,  58,  70]],\n",
       " \n",
       "        [[178, 184, 194],\n",
       "         [173, 174, 184],\n",
       "         [167, 166, 175],\n",
       "         ...,\n",
       "         [ 64,  57,  70],\n",
       "         [ 61,  56,  71],\n",
       "         [ 62,  58,  71]]], dtype=uint8),\n",
       " array([[[ 85,  83,  83],\n",
       "         [ 83,  87,  87],\n",
       "         [ 80,  87,  89],\n",
       "         ...,\n",
       "         [ 90, 112, 147],\n",
       "         [ 99, 119, 154],\n",
       "         [102, 118, 154]],\n",
       " \n",
       "        [[ 90,  90,  90],\n",
       "         [ 90,  94,  94],\n",
       "         [ 86,  94,  96],\n",
       "         ...,\n",
       "         [ 87, 112, 146],\n",
       "         [ 93, 115, 150],\n",
       "         [103, 122, 158]],\n",
       " \n",
       "        [[ 94,  96,  96],\n",
       "         [ 86,  91,  91],\n",
       "         [ 86,  97,  99],\n",
       "         ...,\n",
       "         [ 74, 100, 136],\n",
       "         [ 87, 111, 147],\n",
       "         [100, 122, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  83,  89],\n",
       "         [ 66,  77,  84],\n",
       "         [ 60,  70,  77],\n",
       "         ...,\n",
       "         [ 45,  57,  79],\n",
       "         [ 66,  83, 104],\n",
       "         [ 87, 111, 129]],\n",
       " \n",
       "        [[ 73,  85,  91],\n",
       "         [ 69,  80,  87],\n",
       "         [ 63,  73,  82],\n",
       "         ...,\n",
       "         [ 52,  68,  85],\n",
       "         [ 72,  93, 110],\n",
       "         [ 87, 111, 130]],\n",
       " \n",
       "        [[ 74,  87,  93],\n",
       "         [ 69,  82,  89],\n",
       "         [ 66,  77,  87],\n",
       "         ...,\n",
       "         [ 57,  74,  91],\n",
       "         [ 76,  97, 114],\n",
       "         [ 90, 114, 132]]], dtype=uint8),\n",
       " array([[[ 45,  62, 110],\n",
       "         [ 43,  64, 115],\n",
       "         [ 48,  70, 118],\n",
       "         ...,\n",
       "         [113, 139, 179],\n",
       "         [125, 150, 189],\n",
       "         [121, 148, 183]],\n",
       " \n",
       "        [[ 40,  57, 105],\n",
       "         [ 44,  63, 114],\n",
       "         [ 48,  70, 118],\n",
       "         ...,\n",
       "         [ 83, 111, 146],\n",
       "         [ 94, 122, 158],\n",
       "         [107, 137, 173]],\n",
       " \n",
       "        [[ 39,  54, 101],\n",
       "         [ 46,  64, 113],\n",
       "         [ 55,  75, 121],\n",
       "         ...,\n",
       "         [ 84, 107, 136],\n",
       "         [ 79, 107, 139],\n",
       "         [ 91, 124, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 80, 115, 168],\n",
       "         [ 79, 115, 166],\n",
       "         [ 79, 111, 166],\n",
       "         ...,\n",
       "         [ 63,  90, 150],\n",
       "         [ 62,  88, 150],\n",
       "         [ 58,  81, 143]],\n",
       " \n",
       "        [[ 83, 121, 175],\n",
       "         [ 86, 124, 178],\n",
       "         [ 79, 115, 170],\n",
       "         ...,\n",
       "         [ 62,  88, 150],\n",
       "         [ 62,  87, 147],\n",
       "         [ 54,  77, 139]],\n",
       " \n",
       "        [[ 85, 125, 178],\n",
       "         [ 85, 125, 178],\n",
       "         [ 83, 122, 176],\n",
       "         ...,\n",
       "         [ 63,  89, 150],\n",
       "         [ 58,  79, 140],\n",
       "         [ 55,  79, 139]]], dtype=uint8),\n",
       " array([[[127, 147, 173],\n",
       "         [137, 157, 183],\n",
       "         [142, 164, 189],\n",
       "         ...,\n",
       "         [ 75, 108, 147],\n",
       "         [ 72, 107, 147],\n",
       "         [ 68, 103, 143]],\n",
       " \n",
       "        [[110, 131, 156],\n",
       "         [123, 146, 171],\n",
       "         [105, 135, 160],\n",
       "         ...,\n",
       "         [ 62,  87, 122],\n",
       "         [ 70, 104, 144],\n",
       "         [ 71, 102, 143]],\n",
       " \n",
       "        [[ 89, 109, 135],\n",
       "         [ 66,  82, 108],\n",
       "         [101, 127, 152],\n",
       "         ...,\n",
       "         [ 51,  66,  84],\n",
       "         [ 53,  77, 106],\n",
       "         [ 66,  95, 133]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 138, 189],\n",
       "         [ 97, 140, 191],\n",
       "         [102, 144, 193],\n",
       "         ...,\n",
       "         [ 93, 138, 180],\n",
       "         [ 88, 131, 174],\n",
       "         [ 86, 128, 175]],\n",
       " \n",
       "        [[ 97, 140, 189],\n",
       "         [ 98, 141, 192],\n",
       "         [102, 144, 193],\n",
       "         ...,\n",
       "         [ 95, 137, 181],\n",
       "         [101, 142, 185],\n",
       "         [ 92, 134, 177]],\n",
       " \n",
       "        [[ 96, 139, 190],\n",
       "         [ 99, 141, 192],\n",
       "         [103, 144, 193],\n",
       "         ...,\n",
       "         [101, 146, 190],\n",
       "         [103, 146, 188],\n",
       "         [104, 148, 190]]], dtype=uint8),\n",
       " array([[[ 88, 123, 166],\n",
       "         [109, 144, 187],\n",
       "         [120, 155, 199],\n",
       "         ...,\n",
       "         [125, 157, 206],\n",
       "         [124, 155, 205],\n",
       "         [123, 154, 205]],\n",
       " \n",
       "        [[ 96, 131, 174],\n",
       "         [114, 149, 192],\n",
       "         [120, 155, 199],\n",
       "         ...,\n",
       "         [126, 158, 207],\n",
       "         [123, 155, 204],\n",
       "         [122, 153, 204]],\n",
       " \n",
       "        [[103, 138, 181],\n",
       "         [116, 151, 194],\n",
       "         [121, 156, 200],\n",
       "         ...,\n",
       "         [126, 158, 207],\n",
       "         [124, 155, 205],\n",
       "         [122, 153, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 156, 200],\n",
       "         [125, 160, 204],\n",
       "         [130, 164, 209],\n",
       "         ...,\n",
       "         [124, 153, 207],\n",
       "         [125, 153, 207],\n",
       "         [128, 154, 208]],\n",
       " \n",
       "        [[126, 157, 202],\n",
       "         [124, 159, 203],\n",
       "         [129, 164, 208],\n",
       "         ...,\n",
       "         [126, 152, 206],\n",
       "         [127, 153, 207],\n",
       "         [128, 153, 209]],\n",
       " \n",
       "        [[126, 157, 202],\n",
       "         [124, 159, 203],\n",
       "         [129, 164, 208],\n",
       "         ...,\n",
       "         [126, 152, 206],\n",
       "         [125, 151, 206],\n",
       "         [125, 150, 206]]], dtype=uint8),\n",
       " array([[[ 30,  32,  42],\n",
       "         [ 33,  37,  51],\n",
       "         [ 36,  40,  61],\n",
       "         ...,\n",
       "         [ 67,  93, 139],\n",
       "         [ 70,  94, 140],\n",
       "         [ 72,  96, 142]],\n",
       " \n",
       "        [[ 27,  30,  38],\n",
       "         [ 32,  36,  49],\n",
       "         [ 39,  43,  63],\n",
       "         ...,\n",
       "         [ 71,  97, 143],\n",
       "         [ 69,  93, 139],\n",
       "         [ 74,  98, 144]],\n",
       " \n",
       "        [[ 29,  32,  39],\n",
       "         [ 29,  33,  45],\n",
       "         [ 37,  41,  62],\n",
       "         ...,\n",
       "         [ 77, 102, 146],\n",
       "         [ 77, 100, 145],\n",
       "         [ 77, 100, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 55,  67, 120],\n",
       "         [ 51,  64, 120],\n",
       "         [ 51,  63, 120],\n",
       "         ...,\n",
       "         [ 59,  76, 132],\n",
       "         [ 57,  76, 131],\n",
       "         [ 61,  81, 136]],\n",
       " \n",
       "        [[ 56,  66, 123],\n",
       "         [ 51,  63, 121],\n",
       "         [ 52,  65, 123],\n",
       "         ...,\n",
       "         [ 59,  79, 135],\n",
       "         [ 60,  80, 135],\n",
       "         [ 65,  85, 140]],\n",
       " \n",
       "        [[ 59,  70, 126],\n",
       "         [ 54,  66, 124],\n",
       "         [ 52,  65, 123],\n",
       "         ...,\n",
       "         [ 66,  85, 142],\n",
       "         [ 67,  87, 142],\n",
       "         [ 66,  86, 141]]], dtype=uint8),\n",
       " array([[[ 71,  94, 139],\n",
       "         [ 71,  94, 139],\n",
       "         [ 72,  94, 139],\n",
       "         ...,\n",
       "         [ 60,  79, 114],\n",
       "         [ 56,  71, 102],\n",
       "         [ 52,  59,  74]],\n",
       " \n",
       "        [[ 70,  93, 138],\n",
       "         [ 70,  93, 138],\n",
       "         [ 70,  92, 137],\n",
       "         ...,\n",
       "         [ 61,  79, 117],\n",
       "         [ 55,  70, 100],\n",
       "         [ 52,  60,  73]],\n",
       " \n",
       "        [[ 71,  93, 135],\n",
       "         [ 71,  93, 135],\n",
       "         [ 74,  95, 138],\n",
       "         ...,\n",
       "         [ 63,  79, 116],\n",
       "         [ 57,  71, 101],\n",
       "         [ 42,  52,  67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 57,  77, 125],\n",
       "         [ 59,  79, 126],\n",
       "         [ 59,  79, 126],\n",
       "         ...,\n",
       "         [ 65,  88, 134],\n",
       "         [ 65,  86, 131],\n",
       "         [ 66,  85, 128]],\n",
       " \n",
       "        [[ 58,  78, 126],\n",
       "         [ 60,  80, 128],\n",
       "         [ 60,  81, 129],\n",
       "         ...,\n",
       "         [ 66,  89, 135],\n",
       "         [ 67,  88, 133],\n",
       "         [ 65,  86, 130]],\n",
       " \n",
       "        [[ 54,  73, 124],\n",
       "         [ 59,  78, 129],\n",
       "         [ 62,  81, 132],\n",
       "         ...,\n",
       "         [ 65,  88, 134],\n",
       "         [ 68,  89, 134],\n",
       "         [ 65,  86, 131]]], dtype=uint8),\n",
       " array([[[108,  93,  94],\n",
       "         [109,  93,  94],\n",
       "         [108,  92,  93],\n",
       "         ...,\n",
       "         [161, 153, 163],\n",
       "         [156, 145, 151],\n",
       "         [155, 141, 143]],\n",
       " \n",
       "        [[108,  92,  93],\n",
       "         [109,  93,  93],\n",
       "         [108,  93,  92],\n",
       "         ...,\n",
       "         [163, 155, 166],\n",
       "         [159, 149, 155],\n",
       "         [157, 144, 145]],\n",
       " \n",
       "        [[107,  92,  90],\n",
       "         [107,  92,  90],\n",
       "         [107,  92,  91],\n",
       "         ...,\n",
       "         [163, 155, 166],\n",
       "         [158, 149, 155],\n",
       "         [158, 143, 144]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[114, 103, 105],\n",
       "         [112, 101, 103],\n",
       "         [112, 101, 103],\n",
       "         ...,\n",
       "         [160, 152, 160],\n",
       "         [167, 159, 169],\n",
       "         [179, 173, 184]],\n",
       " \n",
       "        [[113, 104, 106],\n",
       "         [112, 103, 105],\n",
       "         [113, 103, 105],\n",
       "         ...,\n",
       "         [160, 152, 162],\n",
       "         [169, 163, 175],\n",
       "         [183, 176, 189]],\n",
       " \n",
       "        [[112, 103, 105],\n",
       "         [114, 104, 106],\n",
       "         [113, 103, 106],\n",
       "         ...,\n",
       "         [164, 155, 166],\n",
       "         [172, 164, 178],\n",
       "         [182, 177, 190]]], dtype=uint8),\n",
       " array([[[166, 150, 143],\n",
       "         [169, 154, 151],\n",
       "         [167, 157, 157],\n",
       "         ...,\n",
       "         [110,  95,  93],\n",
       "         [110,  95,  93],\n",
       "         [110,  95,  93]],\n",
       " \n",
       "        [[170, 155, 148],\n",
       "         [168, 152, 149],\n",
       "         [166, 157, 155],\n",
       "         ...,\n",
       "         [110,  96,  94],\n",
       "         [109,  94,  92],\n",
       "         [109,  94,  92]],\n",
       " \n",
       "        [[172, 156, 151],\n",
       "         [167, 152, 146],\n",
       "         [167, 157, 154],\n",
       "         ...,\n",
       "         [111,  96,  93],\n",
       "         [109,  95,  93],\n",
       "         [111,  96,  93]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[184, 183, 183],\n",
       "         [168, 162, 163],\n",
       "         [159, 147, 145],\n",
       "         ...,\n",
       "         [110,  97,  98],\n",
       "         [109,  96,  98],\n",
       "         [107,  94,  96]],\n",
       " \n",
       "        [[174, 172, 172],\n",
       "         [171, 166, 166],\n",
       "         [159, 148, 149],\n",
       "         ...,\n",
       "         [110,  97,  99],\n",
       "         [109,  96,  98],\n",
       "         [108,  95,  97]],\n",
       " \n",
       "        [[180, 178, 178],\n",
       "         [170, 166, 167],\n",
       "         [158, 147, 149],\n",
       "         ...,\n",
       "         [110,  97,  99],\n",
       "         [109,  96,  98],\n",
       "         [108,  95,  97]]], dtype=uint8),\n",
       " array([[[ 79,  78, 110],\n",
       "         [ 96, 100, 129],\n",
       "         [ 95, 100, 131],\n",
       "         ...,\n",
       "         [160, 168, 188],\n",
       "         [148, 159, 184],\n",
       "         [186, 190, 203]],\n",
       " \n",
       "        [[ 90,  88, 119],\n",
       "         [ 98, 102, 133],\n",
       "         [ 96,  99, 127],\n",
       "         ...,\n",
       "         [145, 156, 181],\n",
       "         [151, 162, 186],\n",
       "         [158, 166, 188]],\n",
       " \n",
       "        [[ 91,  91, 118],\n",
       "         [ 87,  89, 115],\n",
       "         [ 83,  84, 107],\n",
       "         ...,\n",
       "         [134, 146, 171],\n",
       "         [135, 148, 177],\n",
       "         [123, 141, 174]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 128, 157],\n",
       "         [111, 109, 139],\n",
       "         [ 89,  85, 116],\n",
       "         ...,\n",
       "         [ 99, 109, 141],\n",
       "         [ 98, 107, 139],\n",
       "         [ 99, 109, 139]],\n",
       " \n",
       "        [[130, 133, 163],\n",
       "         [113, 115, 143],\n",
       "         [130, 131, 152],\n",
       "         ...,\n",
       "         [ 99, 110, 142],\n",
       "         [125, 135, 159],\n",
       "         [ 95, 104, 136]],\n",
       " \n",
       "        [[132, 135, 165],\n",
       "         [143, 147, 174],\n",
       "         [138, 140, 160],\n",
       "         ...,\n",
       "         [ 95, 107, 143],\n",
       "         [100, 115, 146],\n",
       "         [ 95, 106, 135]]], dtype=uint8),\n",
       " array([[[150, 150, 166],\n",
       "         [147, 147, 163],\n",
       "         [155, 155, 171],\n",
       "         ...,\n",
       "         [103, 103, 120],\n",
       "         [112, 113, 131],\n",
       "         [119, 119, 139]],\n",
       " \n",
       "        [[160, 161, 175],\n",
       "         [155, 156, 169],\n",
       "         [146, 147, 161],\n",
       "         ...,\n",
       "         [ 97,  99, 113],\n",
       "         [103, 103, 119],\n",
       "         [114, 114, 132]],\n",
       " \n",
       "        [[153, 154, 168],\n",
       "         [153, 154, 168],\n",
       "         [153, 153, 166],\n",
       "         ...,\n",
       "         [ 98, 100, 109],\n",
       "         [ 97,  97, 109],\n",
       "         [105, 107, 123]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99,  98, 122],\n",
       "         [ 98,  99, 119],\n",
       "         [100,  99, 118],\n",
       "         ...,\n",
       "         [116, 120, 150],\n",
       "         [115, 118, 149],\n",
       "         [119, 123, 151]],\n",
       " \n",
       "        [[ 98,  99, 124],\n",
       "         [ 99,  98, 122],\n",
       "         [102, 103, 123],\n",
       "         ...,\n",
       "         [115, 118, 149],\n",
       "         [115, 118, 149],\n",
       "         [124, 127, 158]],\n",
       " \n",
       "        [[ 99,  97, 126],\n",
       "         [101, 102, 130],\n",
       "         [107, 107, 129],\n",
       "         ...,\n",
       "         [106, 109, 140],\n",
       "         [117, 120, 151],\n",
       "         [122, 125, 156]]], dtype=uint8),\n",
       " array([[[211, 196, 189],\n",
       "         [206, 190, 183],\n",
       "         [205, 188, 179],\n",
       "         ...,\n",
       "         [132, 107, 114],\n",
       "         [132, 105, 114],\n",
       "         [131, 105, 115]],\n",
       " \n",
       "        [[201, 191, 187],\n",
       "         [214, 202, 194],\n",
       "         [223, 211, 200],\n",
       "         ...,\n",
       "         [131, 105, 115],\n",
       "         [132, 105, 114],\n",
       "         [131, 105, 114]],\n",
       " \n",
       "        [[205, 197, 193],\n",
       "         [211, 200, 195],\n",
       "         [223, 212, 203],\n",
       "         ...,\n",
       "         [131, 105, 117],\n",
       "         [129, 104, 116],\n",
       "         [130, 104, 117]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 163, 175],\n",
       "         [161, 155, 167],\n",
       "         [156, 149, 156],\n",
       "         ...,\n",
       "         [114,  92,  92],\n",
       "         [134, 110, 110],\n",
       "         [163, 139, 133]],\n",
       " \n",
       "        [[156, 151, 163],\n",
       "         [164, 160, 169],\n",
       "         [142, 134, 144],\n",
       "         ...,\n",
       "         [131, 107, 109],\n",
       "         [161, 140, 136],\n",
       "         [192, 175, 162]],\n",
       " \n",
       "        [[167, 165, 172],\n",
       "         [166, 161, 169],\n",
       "         [126, 116, 132],\n",
       "         ...,\n",
       "         [146, 128, 127],\n",
       "         [178, 161, 154],\n",
       "         [189, 173, 167]]], dtype=uint8),\n",
       " array([[[135, 106, 115],\n",
       "         [135, 105, 114],\n",
       "         [133, 105, 114],\n",
       "         ...,\n",
       "         [141, 123, 140],\n",
       "         [144, 127, 141],\n",
       "         [145, 128, 141]],\n",
       " \n",
       "        [[133, 104, 113],\n",
       "         [133, 104, 113],\n",
       "         [134, 105, 114],\n",
       "         ...,\n",
       "         [144, 128, 144],\n",
       "         [142, 124, 141],\n",
       "         [144, 127, 141]],\n",
       " \n",
       "        [[131, 103, 111],\n",
       "         [130, 104, 112],\n",
       "         [130, 102, 111],\n",
       "         ...,\n",
       "         [149, 134, 147],\n",
       "         [142, 125, 143],\n",
       "         [143, 126, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98,  77, 118],\n",
       "         [ 97,  77, 120],\n",
       "         [ 99,  78, 123],\n",
       "         ...,\n",
       "         [120, 102, 138],\n",
       "         [138, 124, 153],\n",
       "         [124, 111, 154]],\n",
       " \n",
       "        [[ 99,  77, 124],\n",
       "         [ 98,  78, 127],\n",
       "         [ 99,  77, 129],\n",
       "         ...,\n",
       "         [109,  92, 143],\n",
       "         [110,  95, 143],\n",
       "         [127, 112, 155]],\n",
       " \n",
       "        [[ 98,  77, 125],\n",
       "         [100,  78, 130],\n",
       "         [ 98,  78, 132],\n",
       "         ...,\n",
       "         [108,  91, 143],\n",
       "         [120, 105, 150],\n",
       "         [127, 112, 156]]], dtype=uint8),\n",
       " array([[[ 85,  94, 131],\n",
       "         [ 72,  84, 120],\n",
       "         [ 67,  79, 114],\n",
       "         ...,\n",
       "         [139, 142, 167],\n",
       "         [139, 141, 164],\n",
       "         [136, 134, 154]],\n",
       " \n",
       "        [[ 64,  73, 110],\n",
       "         [ 58,  70, 106],\n",
       "         [ 60,  72, 107],\n",
       "         ...,\n",
       "         [143, 145, 169],\n",
       "         [141, 144, 165],\n",
       "         [145, 143, 163]],\n",
       " \n",
       "        [[ 66,  75, 112],\n",
       "         [ 59,  71, 107],\n",
       "         [ 68,  80, 115],\n",
       "         ...,\n",
       "         [137, 139, 160],\n",
       "         [143, 146, 167],\n",
       "         [148, 146, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 134, 174],\n",
       "         [120, 135, 174],\n",
       "         [109, 122, 161],\n",
       "         ...,\n",
       "         [131, 139, 167],\n",
       "         [138, 149, 178],\n",
       "         [142, 155, 179]],\n",
       " \n",
       "        [[111, 124, 165],\n",
       "         [121, 134, 174],\n",
       "         [103, 118, 157],\n",
       "         ...,\n",
       "         [138, 146, 175],\n",
       "         [139, 150, 178],\n",
       "         [144, 154, 179]],\n",
       " \n",
       "        [[131, 139, 179],\n",
       "         [128, 137, 180],\n",
       "         [124, 136, 178],\n",
       "         ...,\n",
       "         [140, 149, 178],\n",
       "         [147, 153, 182],\n",
       "         [152, 157, 182]]], dtype=uint8),\n",
       " array([[[117, 101, 111],\n",
       "         [117, 101, 112],\n",
       "         [112,  95, 105],\n",
       "         ...,\n",
       "         [148, 148, 163],\n",
       "         [147, 147, 161],\n",
       "         [148, 150, 165]],\n",
       " \n",
       "        [[123, 108, 120],\n",
       "         [120, 103, 116],\n",
       "         [111,  96, 108],\n",
       "         ...,\n",
       "         [144, 143, 159],\n",
       "         [152, 152, 166],\n",
       "         [155, 155, 169]],\n",
       " \n",
       "        [[129, 112, 128],\n",
       "         [125, 108, 123],\n",
       "         [117, 102, 116],\n",
       "         ...,\n",
       "         [146, 146, 161],\n",
       "         [152, 152, 165],\n",
       "         [152, 150, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 139, 160],\n",
       "         [136, 127, 151],\n",
       "         [134, 125, 148],\n",
       "         ...,\n",
       "         [ 87,  86, 121],\n",
       "         [ 87,  87, 121],\n",
       "         [ 79,  79, 115]],\n",
       " \n",
       "        [[142, 133, 155],\n",
       "         [138, 132, 154],\n",
       "         [137, 128, 154],\n",
       "         ...,\n",
       "         [ 90,  90, 126],\n",
       "         [ 86,  86, 122],\n",
       "         [ 82,  82, 118]],\n",
       " \n",
       "        [[143, 133, 155],\n",
       "         [143, 135, 157],\n",
       "         [137, 132, 156],\n",
       "         ...,\n",
       "         [ 96,  93, 129],\n",
       "         [ 88,  87, 123],\n",
       "         [ 86,  86, 122]]], dtype=uint8),\n",
       " array([[[ 30,  49,  81],\n",
       "         [ 46,  64, 101],\n",
       "         [ 51,  68, 106],\n",
       "         ...,\n",
       "         [156, 173, 212],\n",
       "         [161, 178, 218],\n",
       "         [162, 180, 217]],\n",
       " \n",
       "        [[ 30,  49,  81],\n",
       "         [ 44,  61,  98],\n",
       "         [ 38,  57,  95],\n",
       "         ...,\n",
       "         [150, 167, 207],\n",
       "         [153, 171, 209],\n",
       "         [157, 176, 213]],\n",
       " \n",
       "        [[ 31,  51,  83],\n",
       "         [ 38,  54,  91],\n",
       "         [ 43,  64, 101],\n",
       "         ...,\n",
       "         [145, 162, 201],\n",
       "         [148, 167, 205],\n",
       "         [153, 172, 210]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71,  98, 142],\n",
       "         [ 77, 106, 151],\n",
       "         [ 80, 108, 153],\n",
       "         ...,\n",
       "         [106, 137, 182],\n",
       "         [107, 138, 183],\n",
       "         [108, 137, 182]],\n",
       " \n",
       "        [[ 72,  99, 143],\n",
       "         [ 76, 102, 148],\n",
       "         [ 82, 110, 155],\n",
       "         ...,\n",
       "         [114, 143, 188],\n",
       "         [110, 141, 186],\n",
       "         [104, 135, 180]],\n",
       " \n",
       "        [[ 70,  97, 141],\n",
       "         [ 72,  98, 144],\n",
       "         [ 84, 112, 157],\n",
       "         ...,\n",
       "         [114, 143, 188],\n",
       "         [110, 141, 186],\n",
       "         [109, 140, 185]]], dtype=uint8),\n",
       " array([[[177, 180, 194],\n",
       "         [166, 172, 191],\n",
       "         [166, 170, 185],\n",
       "         ...,\n",
       "         [113, 125, 144],\n",
       "         [112, 124, 148],\n",
       "         [110, 124, 149]],\n",
       " \n",
       "        [[163, 167, 183],\n",
       "         [184, 189, 199],\n",
       "         [154, 160, 177],\n",
       "         ...,\n",
       "         [104, 110, 125],\n",
       "         [111, 123, 143],\n",
       "         [113, 126, 149]],\n",
       " \n",
       "        [[153, 161, 177],\n",
       "         [158, 168, 183],\n",
       "         [162, 170, 184],\n",
       "         ...,\n",
       "         [102, 104, 117],\n",
       "         [108, 116, 134],\n",
       "         [123, 133, 152]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[104, 116, 146],\n",
       "         [ 92, 105, 136],\n",
       "         [114, 129, 158],\n",
       "         ...,\n",
       "         [130, 145, 173],\n",
       "         [128, 147, 178],\n",
       "         [132, 150, 181]],\n",
       " \n",
       "        [[106, 120, 152],\n",
       "         [106, 121, 155],\n",
       "         [114, 129, 161],\n",
       "         ...,\n",
       "         [139, 154, 182],\n",
       "         [139, 156, 183],\n",
       "         [135, 153, 181]],\n",
       " \n",
       "        [[101, 118, 151],\n",
       "         [105, 124, 160],\n",
       "         [110, 128, 165],\n",
       "         ...,\n",
       "         [145, 158, 185],\n",
       "         [172, 183, 197],\n",
       "         [137, 150, 179]]], dtype=uint8),\n",
       " array([[[38, 42, 71],\n",
       "         [37, 41, 70],\n",
       "         [36, 40, 67],\n",
       "         ...,\n",
       "         [27, 29, 40],\n",
       "         [28, 30, 41],\n",
       "         [26, 28, 38]],\n",
       " \n",
       "        [[39, 42, 72],\n",
       "         [37, 41, 69],\n",
       "         [35, 40, 65],\n",
       "         ...,\n",
       "         [24, 27, 38],\n",
       "         [25, 27, 38],\n",
       "         [24, 26, 36]],\n",
       " \n",
       "        [[37, 41, 65],\n",
       "         [37, 40, 61],\n",
       "         [36, 38, 58],\n",
       "         ...,\n",
       "         [25, 26, 37],\n",
       "         [24, 26, 36],\n",
       "         [23, 24, 34]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[28, 35, 52],\n",
       "         [27, 34, 51],\n",
       "         [27, 34, 51],\n",
       "         ...,\n",
       "         [16, 16, 22],\n",
       "         [16, 16, 22],\n",
       "         [18, 18, 24]],\n",
       " \n",
       "        [[28, 35, 52],\n",
       "         [26, 33, 50],\n",
       "         [26, 33, 50],\n",
       "         ...,\n",
       "         [15, 15, 21],\n",
       "         [15, 15, 21],\n",
       "         [15, 15, 21]],\n",
       " \n",
       "        [[28, 33, 48],\n",
       "         [28, 33, 48],\n",
       "         [26, 31, 46],\n",
       "         ...,\n",
       "         [15, 15, 21],\n",
       "         [15, 15, 21],\n",
       "         [15, 15, 21]]], dtype=uint8),\n",
       " array([[[164, 178, 176],\n",
       "         [164, 178, 176],\n",
       "         [166, 180, 178],\n",
       "         ...,\n",
       "         [158, 174, 171],\n",
       "         [156, 173, 170],\n",
       "         [154, 171, 168]],\n",
       " \n",
       "        [[164, 178, 176],\n",
       "         [166, 180, 178],\n",
       "         [167, 181, 179],\n",
       "         ...,\n",
       "         [156, 172, 169],\n",
       "         [154, 171, 168],\n",
       "         [152, 169, 166]],\n",
       " \n",
       "        [[166, 180, 178],\n",
       "         [167, 181, 179],\n",
       "         [167, 181, 179],\n",
       "         ...,\n",
       "         [154, 170, 168],\n",
       "         [152, 169, 166],\n",
       "         [149, 166, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 208, 200],\n",
       "         [195, 209, 201],\n",
       "         [195, 209, 201],\n",
       "         ...,\n",
       "         [166, 180, 180],\n",
       "         [173, 187, 186],\n",
       "         [187, 199, 197]],\n",
       " \n",
       "        [[199, 210, 202],\n",
       "         [198, 209, 201],\n",
       "         [195, 206, 198],\n",
       "         ...,\n",
       "         [167, 181, 181],\n",
       "         [176, 191, 189],\n",
       "         [185, 197, 195]],\n",
       " \n",
       "        [[199, 210, 203],\n",
       "         [200, 209, 202],\n",
       "         [196, 204, 196],\n",
       "         ...,\n",
       "         [170, 183, 182],\n",
       "         [180, 192, 190],\n",
       "         [188, 199, 197]]], dtype=uint8),\n",
       " array([[[119, 134, 133],\n",
       "         [119, 134, 135],\n",
       "         [117, 132, 134],\n",
       "         ...,\n",
       "         [138, 143, 128],\n",
       "         [122, 127, 113],\n",
       "         [103, 107,  95]],\n",
       " \n",
       "        [[114, 128, 127],\n",
       "         [112, 127, 128],\n",
       "         [114, 129, 131],\n",
       "         ...,\n",
       "         [122, 127, 112],\n",
       "         [117, 122, 108],\n",
       "         [106, 110,  98]],\n",
       " \n",
       "        [[107, 119, 119],\n",
       "         [114, 127, 129],\n",
       "         [116, 129, 131],\n",
       "         ...,\n",
       "         [123, 125, 111],\n",
       "         [119, 123, 109],\n",
       "         [104, 108,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 200, 199],\n",
       "         [185, 193, 193],\n",
       "         [174, 182, 185],\n",
       "         ...,\n",
       "         [ 33,  32,  27],\n",
       "         [ 26,  22,  14],\n",
       "         [ 30,  25,  16]],\n",
       " \n",
       "        [[192, 200, 199],\n",
       "         [185, 193, 193],\n",
       "         [172, 181, 184],\n",
       "         ...,\n",
       "         [ 33,  31,  23],\n",
       "         [ 31,  26,  17],\n",
       "         [ 33,  26,  17]],\n",
       " \n",
       "        [[190, 198, 197],\n",
       "         [180, 190, 190],\n",
       "         [168, 180, 182],\n",
       "         ...,\n",
       "         [ 30,  28,  20],\n",
       "         [ 31,  26,  15],\n",
       "         [ 35,  28,  19]]], dtype=uint8),\n",
       " array([[[237, 251, 249],\n",
       "         [236, 250, 248],\n",
       "         [238, 252, 250],\n",
       "         ...,\n",
       "         [219, 243, 243],\n",
       "         [218, 241, 242],\n",
       "         [213, 238, 240]],\n",
       " \n",
       "        [[241, 254, 252],\n",
       "         [240, 253, 251],\n",
       "         [240, 253, 251],\n",
       "         ...,\n",
       "         [217, 241, 241],\n",
       "         [215, 238, 240],\n",
       "         [213, 236, 238]],\n",
       " \n",
       "        [[245, 253, 252],\n",
       "         [245, 253, 252],\n",
       "         [245, 253, 252],\n",
       "         ...,\n",
       "         [214, 237, 239],\n",
       "         [212, 235, 237],\n",
       "         [212, 233, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [249, 255, 254],\n",
       "         [250, 255, 254],\n",
       "         [251, 255, 254]],\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [252, 254, 254],\n",
       "         [250, 255, 254],\n",
       "         [250, 255, 254]],\n",
       " \n",
       "        [[252, 254, 254],\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254],\n",
       "         ...,\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254]]], dtype=uint8),\n",
       " array([[[195, 214, 217],\n",
       "         [196, 215, 220],\n",
       "         [196, 215, 220],\n",
       "         ...,\n",
       "         [101, 106,  92],\n",
       "         [ 96,  96,  75],\n",
       "         [101,  98,  77]],\n",
       " \n",
       "        [[191, 210, 213],\n",
       "         [193, 211, 216],\n",
       "         [193, 211, 217],\n",
       "         ...,\n",
       "         [ 92,  97,  84],\n",
       "         [ 98,  97,  78],\n",
       "         [101,  99,  77]],\n",
       " \n",
       "        [[186, 203, 206],\n",
       "         [188, 204, 210],\n",
       "         [190, 206, 212],\n",
       "         ...,\n",
       "         [ 99, 105,  91],\n",
       "         [ 87,  85,  67],\n",
       "         [100,  97,  75]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[251, 253, 253],\n",
       "         [248, 253, 252],\n",
       "         [242, 253, 251],\n",
       "         ...,\n",
       "         [118, 114,  88],\n",
       "         [136, 136, 106],\n",
       "         [127, 128,  97]],\n",
       " \n",
       "        [[250, 254, 253],\n",
       "         [247, 253, 252],\n",
       "         [239, 251, 250],\n",
       "         ...,\n",
       "         [112, 112,  85],\n",
       "         [126, 128,  99],\n",
       "         [137, 139, 110]],\n",
       " \n",
       "        [[251, 253, 253],\n",
       "         [247, 253, 252],\n",
       "         [239, 251, 252],\n",
       "         ...,\n",
       "         [118, 119,  94],\n",
       "         [137, 138, 111],\n",
       "         [136, 137, 113]]], dtype=uint8),\n",
       " array([[[123, 138, 140],\n",
       "         [134, 150, 149],\n",
       "         [135, 152, 150],\n",
       "         ...,\n",
       "         [121, 140, 143],\n",
       "         [121, 143, 145],\n",
       "         [120, 140, 141]],\n",
       " \n",
       "        [[137, 151, 153],\n",
       "         [136, 151, 153],\n",
       "         [138, 153, 155],\n",
       "         ...,\n",
       "         [125, 144, 147],\n",
       "         [123, 142, 145],\n",
       "         [119, 138, 141]],\n",
       " \n",
       "        [[141, 156, 158],\n",
       "         [141, 156, 158],\n",
       "         [142, 157, 159],\n",
       "         ...,\n",
       "         [126, 142, 146],\n",
       "         [123, 140, 143],\n",
       "         [120, 137, 140]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[177, 185, 184],\n",
       "         [179, 185, 184],\n",
       "         [182, 187, 185],\n",
       "         ...,\n",
       "         [163, 174, 172],\n",
       "         [181, 187, 186],\n",
       "         [181, 187, 185]],\n",
       " \n",
       "        [[178, 185, 184],\n",
       "         [182, 189, 186],\n",
       "         [186, 190, 188],\n",
       "         ...,\n",
       "         [169, 179, 177],\n",
       "         [181, 187, 186],\n",
       "         [182, 187, 186]],\n",
       " \n",
       "        [[180, 187, 184],\n",
       "         [185, 192, 187],\n",
       "         [191, 196, 191],\n",
       "         ...,\n",
       "         [173, 179, 178],\n",
       "         [182, 187, 186],\n",
       "         [186, 188, 188]]], dtype=uint8),\n",
       " array([[[116, 130, 158],\n",
       "         [118, 134, 163],\n",
       "         [114, 130, 161],\n",
       "         ...,\n",
       "         [129, 145, 187],\n",
       "         [131, 147, 188],\n",
       "         [134, 151, 189]],\n",
       " \n",
       "        [[114, 128, 156],\n",
       "         [115, 130, 159],\n",
       "         [111, 125, 157],\n",
       "         ...,\n",
       "         [122, 138, 183],\n",
       "         [121, 137, 183],\n",
       "         [124, 140, 184]],\n",
       " \n",
       "        [[114, 131, 158],\n",
       "         [110, 126, 155],\n",
       "         [112, 127, 159],\n",
       "         ...,\n",
       "         [123, 139, 182],\n",
       "         [121, 136, 182],\n",
       "         [122, 138, 181]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 92, 117, 157],\n",
       "         [ 95, 120, 160],\n",
       "         [ 99, 124, 164],\n",
       "         ...,\n",
       "         [107, 128, 173],\n",
       "         [ 94, 116, 165],\n",
       "         [ 76,  96, 153]],\n",
       " \n",
       "        [[ 98, 123, 163],\n",
       "         [ 96, 123, 163],\n",
       "         [ 98, 124, 164],\n",
       "         ...,\n",
       "         [103, 123, 170],\n",
       "         [ 87, 108, 159],\n",
       "         [ 73,  92, 147]],\n",
       " \n",
       "        [[101, 125, 167],\n",
       "         [103, 127, 169],\n",
       "         [105, 129, 171],\n",
       "         ...,\n",
       "         [100, 118, 166],\n",
       "         [ 90, 108, 161],\n",
       "         [ 76,  95, 149]]], dtype=uint8),\n",
       " array([[[122, 139, 179],\n",
       "         [112, 128, 171],\n",
       "         [117, 133, 176],\n",
       "         ...,\n",
       "         [109, 126, 165],\n",
       "         [112, 129, 168],\n",
       "         [115, 133, 170]],\n",
       " \n",
       "        [[117, 134, 175],\n",
       "         [109, 125, 167],\n",
       "         [108, 123, 168],\n",
       "         ...,\n",
       "         [ 93, 109, 148],\n",
       "         [105, 122, 161],\n",
       "         [110, 128, 165]],\n",
       " \n",
       "        [[113, 129, 172],\n",
       "         [100, 115, 160],\n",
       "         [ 95, 109, 157],\n",
       "         ...,\n",
       "         [ 97, 113, 152],\n",
       "         [105, 122, 161],\n",
       "         [111, 129, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 134, 189],\n",
       "         [105, 126, 182],\n",
       "         [109, 126, 181],\n",
       "         ...,\n",
       "         [116, 135, 182],\n",
       "         [113, 134, 179],\n",
       "         [112, 134, 178]],\n",
       " \n",
       "        [[119, 139, 194],\n",
       "         [120, 139, 191],\n",
       "         [117, 133, 186],\n",
       "         ...,\n",
       "         [113, 134, 179],\n",
       "         [116, 137, 182],\n",
       "         [117, 139, 181]],\n",
       " \n",
       "        [[116, 134, 187],\n",
       "         [126, 144, 193],\n",
       "         [127, 143, 193],\n",
       "         ...,\n",
       "         [123, 144, 189],\n",
       "         [124, 145, 190],\n",
       "         [120, 142, 184]]], dtype=uint8),\n",
       " array([[[ 79, 110, 163],\n",
       "         [ 85, 112, 166],\n",
       "         [ 82, 105, 160],\n",
       "         ...,\n",
       "         [ 77, 105, 166],\n",
       "         [ 58,  86, 147],\n",
       "         [ 85, 113, 174]],\n",
       " \n",
       "        [[ 67,  96, 151],\n",
       "         [ 74, 101, 158],\n",
       "         [ 68,  96, 152],\n",
       "         ...,\n",
       "         [ 70,  98, 163],\n",
       "         [ 83, 111, 175],\n",
       "         [ 91, 119, 184]],\n",
       " \n",
       "        [[ 83, 110, 168],\n",
       "         [ 93, 122, 180],\n",
       "         [ 86, 118, 175],\n",
       "         ...,\n",
       "         [ 72, 102, 171],\n",
       "         [ 69, 100, 168],\n",
       "         [ 94, 124, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 167, 236],\n",
       "         [133, 168, 233],\n",
       "         [130, 163, 232],\n",
       "         ...,\n",
       "         [127, 161, 240],\n",
       "         [125, 159, 236],\n",
       "         [126, 157, 238]],\n",
       " \n",
       "        [[135, 167, 237],\n",
       "         [132, 165, 234],\n",
       "         [131, 164, 233],\n",
       "         ...,\n",
       "         [122, 159, 239],\n",
       "         [125, 159, 239],\n",
       "         [128, 158, 239]],\n",
       " \n",
       "        [[135, 168, 237],\n",
       "         [134, 167, 236],\n",
       "         [134, 167, 236],\n",
       "         ...,\n",
       "         [120, 156, 236],\n",
       "         [123, 156, 236],\n",
       "         [125, 155, 236]]], dtype=uint8),\n",
       " array([[[130, 132, 142],\n",
       "         [113, 122, 131],\n",
       "         [114, 125, 133],\n",
       "         ...,\n",
       "         [130, 158, 171],\n",
       "         [127, 158, 169],\n",
       "         [124, 154, 166]],\n",
       " \n",
       "        [[126, 129, 139],\n",
       "         [111, 118, 127],\n",
       "         [ 96, 106, 115],\n",
       "         ...,\n",
       "         [110, 144, 158],\n",
       "         [110, 145, 159],\n",
       "         [121, 156, 170]],\n",
       " \n",
       "        [[111, 114, 124],\n",
       "         [ 95, 103, 112],\n",
       "         [ 80,  89,  98],\n",
       "         ...,\n",
       "         [ 98, 123, 141],\n",
       "         [109, 136, 153],\n",
       "         [121, 150, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 170, 187],\n",
       "         [137, 165, 182],\n",
       "         [142, 167, 184],\n",
       "         ...,\n",
       "         [111, 127, 154],\n",
       "         [ 99, 120, 147],\n",
       "         [110, 131, 158]],\n",
       " \n",
       "        [[150, 176, 192],\n",
       "         [147, 172, 188],\n",
       "         [148, 174, 190],\n",
       "         ...,\n",
       "         [113, 131, 158],\n",
       "         [103, 125, 152],\n",
       "         [109, 134, 160]],\n",
       " \n",
       "        [[152, 177, 193],\n",
       "         [149, 174, 190],\n",
       "         [152, 175, 191],\n",
       "         ...,\n",
       "         [110, 130, 157],\n",
       "         [105, 129, 155],\n",
       "         [111, 138, 164]]], dtype=uint8),\n",
       " array([[[ 86, 114, 155],\n",
       "         [ 90, 118, 159],\n",
       "         [ 86, 115, 157],\n",
       "         ...,\n",
       "         [148, 191, 224],\n",
       "         [148, 192, 225],\n",
       "         [146, 192, 223]],\n",
       " \n",
       "        [[ 80, 108, 146],\n",
       "         [ 81, 110, 147],\n",
       "         [ 86, 113, 151],\n",
       "         ...,\n",
       "         [139, 181, 217],\n",
       "         [140, 182, 217],\n",
       "         [139, 184, 217]],\n",
       " \n",
       "        [[ 69,  97, 130],\n",
       "         [ 68,  94, 127],\n",
       "         [ 73,  99, 133],\n",
       "         ...,\n",
       "         [130, 169, 211],\n",
       "         [135, 175, 216],\n",
       "         [141, 184, 223]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 119, 189],\n",
       "         [110, 133, 200],\n",
       "         [109, 134, 198],\n",
       "         ...,\n",
       "         [ 92, 127, 190],\n",
       "         [ 97, 130, 193],\n",
       "         [103, 135, 198]],\n",
       " \n",
       "        [[ 96, 118, 189],\n",
       "         [109, 131, 201],\n",
       "         [111, 134, 201],\n",
       "         ...,\n",
       "         [ 96, 131, 193],\n",
       "         [ 98, 133, 196],\n",
       "         [102, 138, 200]],\n",
       " \n",
       "        [[ 92, 118, 188],\n",
       "         [100, 127, 194],\n",
       "         [100, 126, 193],\n",
       "         ...,\n",
       "         [ 96, 132, 191],\n",
       "         [ 99, 137, 196],\n",
       "         [105, 142, 202]]], dtype=uint8),\n",
       " array([[[118, 131, 157],\n",
       "         [121, 134, 161],\n",
       "         [113, 129, 157],\n",
       "         ...,\n",
       "         [130, 146, 188],\n",
       "         [136, 152, 194],\n",
       "         [129, 145, 187]],\n",
       " \n",
       "        [[117, 130, 156],\n",
       "         [120, 132, 159],\n",
       "         [119, 131, 160],\n",
       "         ...,\n",
       "         [127, 143, 186],\n",
       "         [131, 147, 190],\n",
       "         [123, 139, 182]],\n",
       " \n",
       "        [[122, 135, 160],\n",
       "         [120, 132, 159],\n",
       "         [119, 130, 159],\n",
       "         ...,\n",
       "         [115, 130, 176],\n",
       "         [125, 140, 186],\n",
       "         [126, 141, 187]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[111, 131, 172],\n",
       "         [107, 127, 170],\n",
       "         [101, 123, 165],\n",
       "         ...,\n",
       "         [114, 128, 170],\n",
       "         [111, 125, 168],\n",
       "         [109, 122, 166]],\n",
       " \n",
       "        [[114, 134, 171],\n",
       "         [112, 130, 173],\n",
       "         [107, 129, 171],\n",
       "         ...,\n",
       "         [111, 125, 167],\n",
       "         [111, 124, 168],\n",
       "         [104, 117, 161]],\n",
       " \n",
       "        [[118, 137, 172],\n",
       "         [119, 136, 175],\n",
       "         [118, 134, 176],\n",
       "         ...,\n",
       "         [113, 124, 169],\n",
       "         [113, 126, 171],\n",
       "         [111, 124, 168]]], dtype=uint8),\n",
       " array([[[118, 135, 174],\n",
       "         [120, 137, 176],\n",
       "         [125, 144, 182],\n",
       "         ...,\n",
       "         [124, 144, 175],\n",
       "         [115, 134, 166],\n",
       "         [113, 132, 164]],\n",
       " \n",
       "        [[125, 142, 181],\n",
       "         [122, 138, 178],\n",
       "         [116, 134, 175],\n",
       "         ...,\n",
       "         [124, 139, 171],\n",
       "         [121, 138, 167],\n",
       "         [120, 136, 165]],\n",
       " \n",
       "        [[117, 134, 172],\n",
       "         [115, 132, 171],\n",
       "         [104, 121, 163],\n",
       "         ...,\n",
       "         [123, 141, 171],\n",
       "         [127, 144, 172],\n",
       "         [122, 138, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 152, 199],\n",
       "         [ 96, 117, 168],\n",
       "         [124, 143, 187],\n",
       "         ...,\n",
       "         [119, 140, 179],\n",
       "         [114, 133, 171],\n",
       "         [124, 143, 177]],\n",
       " \n",
       "        [[138, 154, 201],\n",
       "         [128, 147, 195],\n",
       "         [ 89, 109, 162],\n",
       "         ...,\n",
       "         [107, 129, 166],\n",
       "         [123, 142, 179],\n",
       "         [125, 145, 180]],\n",
       " \n",
       "        [[140, 154, 202],\n",
       "         [141, 155, 204],\n",
       "         [115, 131, 185],\n",
       "         ...,\n",
       "         [120, 141, 180],\n",
       "         [125, 144, 181],\n",
       "         [126, 145, 180]]], dtype=uint8),\n",
       " array([[[ 78, 102, 142],\n",
       "         [ 88, 111, 156],\n",
       "         [ 91, 115, 160],\n",
       "         ...,\n",
       "         [207, 216, 243],\n",
       "         [206, 216, 243],\n",
       "         [204, 213, 240]],\n",
       " \n",
       "        [[ 80, 102, 146],\n",
       "         [ 87, 110, 154],\n",
       "         [ 94, 116, 159],\n",
       "         ...,\n",
       "         [200, 209, 236],\n",
       "         [204, 213, 240],\n",
       "         [200, 209, 236]],\n",
       " \n",
       "        [[ 84, 107, 149],\n",
       "         [ 88, 112, 153],\n",
       "         [ 91, 113, 155],\n",
       "         ...,\n",
       "         [193, 204, 229],\n",
       "         [189, 201, 229],\n",
       "         [180, 194, 221]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 162, 201],\n",
       "         [136, 166, 203],\n",
       "         [138, 167, 206],\n",
       "         ...,\n",
       "         [151, 175, 217],\n",
       "         [149, 172, 214],\n",
       "         [150, 173, 214]],\n",
       " \n",
       "        [[135, 161, 202],\n",
       "         [139, 167, 206],\n",
       "         [143, 170, 210],\n",
       "         ...,\n",
       "         [152, 175, 215],\n",
       "         [152, 174, 216],\n",
       "         [152, 175, 217]],\n",
       " \n",
       "        [[137, 163, 202],\n",
       "         [145, 171, 208],\n",
       "         [146, 173, 212],\n",
       "         ...,\n",
       "         [153, 176, 215],\n",
       "         [155, 178, 218],\n",
       "         [153, 175, 217]]], dtype=uint8),\n",
       " array([[[181, 192, 221],\n",
       "         [174, 190, 220],\n",
       "         [170, 186, 218],\n",
       "         ...,\n",
       "         [ 77,  95, 140],\n",
       "         [ 61,  79, 118],\n",
       "         [ 34,  41,  67]],\n",
       " \n",
       "        [[172, 185, 217],\n",
       "         [164, 182, 213],\n",
       "         [162, 179, 211],\n",
       "         ...,\n",
       "         [ 78,  98, 140],\n",
       "         [ 58,  75, 114],\n",
       "         [ 32,  39,  62]],\n",
       " \n",
       "        [[165, 182, 212],\n",
       "         [158, 177, 208],\n",
       "         [149, 168, 204],\n",
       "         ...,\n",
       "         [ 76,  93, 136],\n",
       "         [ 59,  73, 110],\n",
       "         [ 32,  37,  60]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 149, 194],\n",
       "         [129, 150, 195],\n",
       "         [118, 142, 184],\n",
       "         ...,\n",
       "         [110, 135, 179],\n",
       "         [105, 126, 167],\n",
       "         [ 89, 101, 130]],\n",
       " \n",
       "        [[128, 150, 195],\n",
       "         [137, 156, 201],\n",
       "         [126, 148, 193],\n",
       "         ...,\n",
       "         [106, 134, 178],\n",
       "         [107, 127, 168],\n",
       "         [ 93, 104, 135]],\n",
       " \n",
       "        [[128, 150, 193],\n",
       "         [133, 155, 198],\n",
       "         [130, 151, 196],\n",
       "         ...,\n",
       "         [105, 130, 175],\n",
       "         [107, 126, 167],\n",
       "         [ 92, 102, 133]]], dtype=uint8),\n",
       " array([[[125, 139, 159],\n",
       "         [126, 142, 159],\n",
       "         [128, 143, 160],\n",
       "         ...,\n",
       "         [155, 181, 231],\n",
       "         [151, 178, 229],\n",
       "         [154, 180, 233]],\n",
       " \n",
       "        [[131, 145, 164],\n",
       "         [127, 141, 159],\n",
       "         [127, 142, 158],\n",
       "         ...,\n",
       "         [159, 184, 234],\n",
       "         [158, 185, 235],\n",
       "         [157, 184, 234]],\n",
       " \n",
       "        [[133, 147, 164],\n",
       "         [126, 141, 157],\n",
       "         [132, 147, 161],\n",
       "         ...,\n",
       "         [160, 184, 230],\n",
       "         [160, 186, 233],\n",
       "         [168, 194, 242]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 171, 199],\n",
       "         [154, 175, 206],\n",
       "         [155, 176, 208],\n",
       "         ...,\n",
       "         [144, 162, 203],\n",
       "         [133, 151, 192],\n",
       "         [130, 148, 189]],\n",
       " \n",
       "        [[151, 173, 202],\n",
       "         [157, 178, 210],\n",
       "         [160, 180, 215],\n",
       "         ...,\n",
       "         [146, 164, 205],\n",
       "         [136, 155, 194],\n",
       "         [130, 148, 189]],\n",
       " \n",
       "        [[156, 177, 207],\n",
       "         [159, 180, 212],\n",
       "         [162, 181, 217],\n",
       "         ...,\n",
       "         [147, 165, 207],\n",
       "         [135, 154, 192],\n",
       "         [128, 146, 187]]], dtype=uint8),\n",
       " array([[[154, 180, 226],\n",
       "         [146, 170, 216],\n",
       "         [143, 168, 212],\n",
       "         ...,\n",
       "         [ 95, 107, 135],\n",
       "         [ 86, 100, 128],\n",
       "         [ 80,  94, 123]],\n",
       " \n",
       "        [[157, 182, 226],\n",
       "         [150, 175, 217],\n",
       "         [135, 160, 200],\n",
       "         ...,\n",
       "         [ 92, 106, 133],\n",
       "         [ 92, 106, 134],\n",
       "         [ 86, 100, 129]],\n",
       " \n",
       "        [[150, 175, 215],\n",
       "         [154, 178, 216],\n",
       "         [147, 171, 207],\n",
       "         ...,\n",
       "         [ 76,  85, 106],\n",
       "         [ 89, 101, 125],\n",
       "         [ 82,  98, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 110, 152],\n",
       "         [ 89, 112, 155],\n",
       "         [ 93, 119, 164],\n",
       "         ...,\n",
       "         [110, 141, 186],\n",
       "         [106, 138, 180],\n",
       "         [104, 134, 176]],\n",
       " \n",
       "        [[ 89, 111, 153],\n",
       "         [ 91, 115, 157],\n",
       "         [ 97, 121, 165],\n",
       "         ...,\n",
       "         [113, 146, 191],\n",
       "         [104, 137, 180],\n",
       "         [103, 135, 177]],\n",
       " \n",
       "        [[ 85, 109, 151],\n",
       "         [ 90, 114, 156],\n",
       "         [ 98, 122, 166],\n",
       "         ...,\n",
       "         [113, 147, 193],\n",
       "         [107, 140, 185],\n",
       "         [106, 137, 182]]], dtype=uint8),\n",
       " array([[[183, 174, 171],\n",
       "         [185, 177, 175],\n",
       "         [176, 170, 170],\n",
       "         ...,\n",
       "         [ 95, 101, 124],\n",
       "         [ 92,  96, 123],\n",
       "         [ 90,  95, 123]],\n",
       " \n",
       "        [[186, 179, 176],\n",
       "         [182, 175, 174],\n",
       "         [176, 171, 170],\n",
       "         ...,\n",
       "         [ 97, 102, 126],\n",
       "         [ 94,  98, 126],\n",
       "         [ 88,  93, 122]],\n",
       " \n",
       "        [[188, 183, 181],\n",
       "         [181, 176, 175],\n",
       "         [175, 170, 170],\n",
       "         ...,\n",
       "         [ 92,  98, 121],\n",
       "         [ 88,  95, 121],\n",
       "         [ 85,  91, 119]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[250, 250, 250],\n",
       "         [252, 254, 252],\n",
       "         [251, 249, 245],\n",
       "         ...,\n",
       "         [149, 146, 162],\n",
       "         [154, 150, 169],\n",
       "         [155, 150, 171]],\n",
       " \n",
       "        [[252, 252, 252],\n",
       "         [252, 254, 253],\n",
       "         [251, 248, 247],\n",
       "         ...,\n",
       "         [159, 153, 170],\n",
       "         [161, 157, 176],\n",
       "         [154, 149, 170]],\n",
       " \n",
       "        [[253, 252, 254],\n",
       "         [253, 254, 254],\n",
       "         [250, 246, 247],\n",
       "         ...,\n",
       "         [167, 159, 176],\n",
       "         [160, 156, 175],\n",
       "         [153, 151, 171]]], dtype=uint8),\n",
       " array([[[ 74,  85, 105],\n",
       "         [ 73,  84, 106],\n",
       "         [ 73,  84, 106],\n",
       "         ...,\n",
       "         [ 69,  82, 103],\n",
       "         [ 66,  79, 100],\n",
       "         [ 62,  73,  93]],\n",
       " \n",
       "        [[ 71,  82, 104],\n",
       "         [ 66,  76,  99],\n",
       "         [ 70,  81, 103],\n",
       "         ...,\n",
       "         [ 70,  84, 102],\n",
       "         [ 70,  83, 101],\n",
       "         [ 66,  77,  97]],\n",
       " \n",
       "        [[ 66,  74,  97],\n",
       "         [ 61,  69,  92],\n",
       "         [ 60,  68,  91],\n",
       "         ...,\n",
       "         [ 71,  81,  99],\n",
       "         [ 70,  80, 101],\n",
       "         [ 69,  80, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 61,  73, 107],\n",
       "         [ 58,  70, 103],\n",
       "         [ 61,  72, 104],\n",
       "         ...,\n",
       "         [ 75,  91, 120],\n",
       "         [ 73,  88, 117],\n",
       "         [ 75,  90, 116]],\n",
       " \n",
       "        [[ 63,  75, 109],\n",
       "         [ 64,  75, 109],\n",
       "         [ 63,  74, 106],\n",
       "         ...,\n",
       "         [ 75,  91, 120],\n",
       "         [ 75,  91, 120],\n",
       "         [ 75,  90, 118]],\n",
       " \n",
       "        [[ 63,  75, 109],\n",
       "         [ 66,  76, 110],\n",
       "         [ 65,  76, 108],\n",
       "         ...,\n",
       "         [ 78,  94, 123],\n",
       "         [ 78,  94, 122],\n",
       "         [ 77,  94, 121]]], dtype=uint8),\n",
       " array([[[111, 107, 123],\n",
       "         [113, 106, 121],\n",
       "         [115, 107, 119],\n",
       "         ...,\n",
       "         [ 89,  81, 107],\n",
       "         [ 87,  79, 109],\n",
       "         [ 81,  74, 105]],\n",
       " \n",
       "        [[113, 106, 118],\n",
       "         [110, 102, 113],\n",
       "         [102,  93, 103],\n",
       "         ...,\n",
       "         [ 84,  77, 104],\n",
       "         [ 83,  75, 105],\n",
       "         [ 80,  73, 104]],\n",
       " \n",
       "        [[108,  99, 107],\n",
       "         [100,  89,  96],\n",
       "         [ 92,  81,  86],\n",
       "         ...,\n",
       "         [ 81,  73, 102],\n",
       "         [ 85,  77, 107],\n",
       "         [ 81,  75, 105]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 112, 130],\n",
       "         [118, 110, 129],\n",
       "         [119, 110, 129],\n",
       "         ...,\n",
       "         [ 86,  78, 105],\n",
       "         [ 91,  82, 112],\n",
       "         [ 93,  86, 116]],\n",
       " \n",
       "        [[121, 114, 133],\n",
       "         [121, 112, 132],\n",
       "         [124, 113, 133],\n",
       "         ...,\n",
       "         [ 92,  86, 112],\n",
       "         [ 94,  87, 114],\n",
       "         [ 96,  91, 119]],\n",
       " \n",
       "        [[121, 113, 133],\n",
       "         [125, 116, 136],\n",
       "         [128, 117, 137],\n",
       "         ...,\n",
       "         [ 98,  91, 117],\n",
       "         [ 95,  90, 117],\n",
       "         [ 98,  93, 121]]], dtype=uint8),\n",
       " array([[[66, 62, 97],\n",
       "         [62, 58, 93],\n",
       "         [62, 58, 93],\n",
       "         ...,\n",
       "         [50, 50, 74],\n",
       "         [49, 46, 72],\n",
       "         [47, 44, 69]],\n",
       " \n",
       "        [[64, 60, 95],\n",
       "         [63, 59, 94],\n",
       "         [63, 59, 94],\n",
       "         ...,\n",
       "         [51, 51, 75],\n",
       "         [49, 48, 74],\n",
       "         [48, 48, 73]],\n",
       " \n",
       "        [[67, 63, 98],\n",
       "         [60, 56, 90],\n",
       "         [61, 58, 90],\n",
       "         ...,\n",
       "         [57, 55, 77],\n",
       "         [51, 51, 75],\n",
       "         [52, 51, 77]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[54, 53, 93],\n",
       "         [51, 50, 89],\n",
       "         [45, 44, 83],\n",
       "         ...,\n",
       "         [55, 61, 95],\n",
       "         [51, 59, 89],\n",
       "         [50, 57, 88]],\n",
       " \n",
       "        [[56, 55, 94],\n",
       "         [50, 49, 88],\n",
       "         [47, 46, 84],\n",
       "         ...,\n",
       "         [57, 62, 97],\n",
       "         [53, 60, 93],\n",
       "         [51, 58, 89]],\n",
       " \n",
       "        [[55, 53, 93],\n",
       "         [53, 52, 91],\n",
       "         [49, 49, 85],\n",
       "         ...,\n",
       "         [59, 63, 98],\n",
       "         [59, 61, 95],\n",
       "         [58, 62, 95]]], dtype=uint8),\n",
       " array([[[106, 135, 179],\n",
       "         [106, 134, 178],\n",
       "         [107, 134, 176],\n",
       "         ...,\n",
       "         [ 96, 110, 139],\n",
       "         [ 80,  95, 121],\n",
       "         [ 62,  78, 101]],\n",
       " \n",
       "        [[106, 133, 177],\n",
       "         [101, 127, 171],\n",
       "         [100, 125, 168],\n",
       "         ...,\n",
       "         [ 97, 114, 142],\n",
       "         [ 83,  99, 126],\n",
       "         [ 63,  80, 106]],\n",
       " \n",
       "        [[108, 131, 176],\n",
       "         [ 97, 120, 164],\n",
       "         [ 94, 117, 160],\n",
       "         ...,\n",
       "         [100, 116, 145],\n",
       "         [ 86, 102, 131],\n",
       "         [ 65,  82, 110]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 112, 154],\n",
       "         [ 88, 107, 149],\n",
       "         [ 85, 104, 147],\n",
       "         ...,\n",
       "         [125, 140, 168],\n",
       "         [127, 139, 167],\n",
       "         [122, 134, 162]],\n",
       " \n",
       "        [[ 95, 112, 157],\n",
       "         [ 95, 111, 157],\n",
       "         [ 94, 110, 156],\n",
       "         ...,\n",
       "         [128, 140, 168],\n",
       "         [126, 138, 166],\n",
       "         [122, 134, 162]],\n",
       " \n",
       "        [[ 98, 114, 159],\n",
       "         [ 97, 113, 159],\n",
       "         [ 95, 111, 157],\n",
       "         ...,\n",
       "         [127, 139, 167],\n",
       "         [124, 136, 164],\n",
       "         [120, 132, 160]]], dtype=uint8),\n",
       " array([[[187, 206, 214],\n",
       "         [186, 202, 218],\n",
       "         [185, 200, 209],\n",
       "         ...,\n",
       "         [135, 150, 169],\n",
       "         [107, 121, 144],\n",
       "         [ 65,  77,  95]],\n",
       " \n",
       "        [[191, 210, 218],\n",
       "         [166, 182, 198],\n",
       "         [184, 200, 216],\n",
       "         ...,\n",
       "         [161, 176, 196],\n",
       "         [119, 133, 156],\n",
       "         [ 83,  91, 110]],\n",
       " \n",
       "        [[179, 195, 208],\n",
       "         [189, 205, 218],\n",
       "         [179, 198, 206],\n",
       "         ...,\n",
       "         [161, 175, 198],\n",
       "         [134, 148, 172],\n",
       "         [ 81,  91, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[213, 226, 240],\n",
       "         [208, 220, 238],\n",
       "         [192, 208, 231],\n",
       "         ...,\n",
       "         [120, 139, 167],\n",
       "         [111, 132, 159],\n",
       "         [104, 123, 156]],\n",
       " \n",
       "        [[214, 227, 241],\n",
       "         [206, 218, 236],\n",
       "         [197, 213, 230],\n",
       "         ...,\n",
       "         [122, 141, 169],\n",
       "         [113, 134, 162],\n",
       "         [105, 126, 154]],\n",
       " \n",
       "        [[212, 225, 239],\n",
       "         [208, 220, 238],\n",
       "         [194, 210, 227],\n",
       "         ...,\n",
       "         [120, 139, 168],\n",
       "         [113, 134, 162],\n",
       "         [102, 124, 152]]], dtype=uint8),\n",
       " array([[[ 65,  74, 104],\n",
       "         [ 64,  72, 102],\n",
       "         [ 65,  73, 103],\n",
       "         ...,\n",
       "         [ 43,  46,  57],\n",
       "         [ 46,  49,  59],\n",
       "         [ 46,  49,  60]],\n",
       " \n",
       "        [[ 65,  73, 106],\n",
       "         [ 65,  74, 104],\n",
       "         [ 65,  73, 103],\n",
       "         ...,\n",
       "         [ 35,  35,  47],\n",
       "         [ 44,  45,  54],\n",
       "         [ 44,  46,  55]],\n",
       " \n",
       "        [[ 66,  71, 102],\n",
       "         [ 63,  72, 102],\n",
       "         [ 64,  71, 100],\n",
       "         ...,\n",
       "         [ 23,  23,  30],\n",
       "         [ 29,  29,  36],\n",
       "         [ 31,  33,  43]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 48,  55,  83],\n",
       "         [ 44,  47,  77],\n",
       "         [ 41,  47,  75],\n",
       "         ...,\n",
       "         [ 55,  63,  84],\n",
       "         [ 54,  61,  80],\n",
       "         [ 56,  63,  80]],\n",
       " \n",
       "        [[ 47,  52,  83],\n",
       "         [ 44,  52,  82],\n",
       "         [ 42,  49,  77],\n",
       "         ...,\n",
       "         [ 55,  62,  85],\n",
       "         [ 56,  63,  82],\n",
       "         [ 58,  65,  81]],\n",
       " \n",
       "        [[ 50,  55,  86],\n",
       "         [ 46,  52,  82],\n",
       "         [ 45,  50,  79],\n",
       "         ...,\n",
       "         [ 55,  64,  85],\n",
       "         [ 56,  65,  84],\n",
       "         [ 59,  65,  82]]], dtype=uint8),\n",
       " array([[[23, 27, 42],\n",
       "         [21, 25, 36],\n",
       "         [24, 27, 37],\n",
       "         ...,\n",
       "         [53, 61, 95],\n",
       "         [54, 62, 96],\n",
       "         [53, 60, 94]],\n",
       " \n",
       "        [[23, 24, 39],\n",
       "         [25, 27, 38],\n",
       "         [22, 24, 32],\n",
       "         ...,\n",
       "         [54, 58, 91],\n",
       "         [54, 62, 95],\n",
       "         [55, 63, 95]],\n",
       " \n",
       "        [[23, 25, 37],\n",
       "         [18, 20, 29],\n",
       "         [19, 19, 28],\n",
       "         ...,\n",
       "         [52, 57, 89],\n",
       "         [53, 59, 91],\n",
       "         [55, 62, 95]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[36, 44, 72],\n",
       "         [37, 45, 72],\n",
       "         [36, 45, 72],\n",
       "         ...,\n",
       "         [26, 32, 65],\n",
       "         [25, 30, 64],\n",
       "         [28, 34, 68]],\n",
       " \n",
       "        [[35, 43, 71],\n",
       "         [39, 46, 73],\n",
       "         [38, 45, 74],\n",
       "         ...,\n",
       "         [29, 34, 67],\n",
       "         [26, 33, 67],\n",
       "         [27, 33, 69]],\n",
       " \n",
       "        [[33, 43, 72],\n",
       "         [39, 44, 75],\n",
       "         [43, 49, 80],\n",
       "         ...,\n",
       "         [28, 34, 68],\n",
       "         [29, 36, 71],\n",
       "         [30, 36, 73]]], dtype=uint8),\n",
       " array([[[ 18,  18,  26],\n",
       "         [ 33,  37,  53],\n",
       "         [ 50,  52,  67],\n",
       "         ...,\n",
       "         [161, 166, 186],\n",
       "         [165, 168, 189],\n",
       "         [171, 173, 193]],\n",
       " \n",
       "        [[ 21,  22,  30],\n",
       "         [ 39,  42,  57],\n",
       "         [ 57,  59,  72],\n",
       "         ...,\n",
       "         [161, 164, 186],\n",
       "         [164, 165, 187],\n",
       "         [165, 168, 188]],\n",
       " \n",
       "        [[ 15,  17,  25],\n",
       "         [ 38,  41,  54],\n",
       "         [ 53,  53,  66],\n",
       "         ...,\n",
       "         [151, 154, 177],\n",
       "         [159, 159, 183],\n",
       "         [161, 163, 187]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  74,  96],\n",
       "         [ 82,  91, 113],\n",
       "         [103, 110, 134],\n",
       "         ...,\n",
       "         [137, 139, 169],\n",
       "         [135, 137, 167],\n",
       "         [134, 138, 168]],\n",
       " \n",
       "        [[ 71,  78,  98],\n",
       "         [ 90,  97, 118],\n",
       "         [108, 114, 137],\n",
       "         ...,\n",
       "         [138, 141, 170],\n",
       "         [136, 138, 168],\n",
       "         [135, 138, 168]],\n",
       " \n",
       "        [[ 69,  75,  94],\n",
       "         [ 86,  94, 115],\n",
       "         [107, 116, 137],\n",
       "         ...,\n",
       "         [136, 140, 167],\n",
       "         [138, 140, 169],\n",
       "         [135, 138, 169]]], dtype=uint8),\n",
       " array([[[176, 177, 198],\n",
       "         [176, 179, 199],\n",
       "         [179, 180, 201],\n",
       "         ...,\n",
       "         [138, 147, 174],\n",
       "         [126, 133, 161],\n",
       "         [113, 126, 150]],\n",
       " \n",
       "        [[175, 177, 198],\n",
       "         [169, 171, 194],\n",
       "         [164, 165, 191],\n",
       "         ...,\n",
       "         [127, 133, 158],\n",
       "         [124, 132, 159],\n",
       "         [108, 117, 143]],\n",
       " \n",
       "        [[169, 171, 192],\n",
       "         [161, 165, 186],\n",
       "         [152, 154, 177],\n",
       "         ...,\n",
       "         [111, 112, 123],\n",
       "         [111, 114, 132],\n",
       "         [108, 114, 138]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 173, 208],\n",
       "         [166, 175, 208],\n",
       "         [168, 174, 204],\n",
       "         ...,\n",
       "         [163, 174, 203],\n",
       "         [162, 174, 202],\n",
       "         [154, 165, 195]],\n",
       " \n",
       "        [[170, 178, 211],\n",
       "         [169, 177, 208],\n",
       "         [170, 178, 207],\n",
       "         ...,\n",
       "         [165, 177, 205],\n",
       "         [161, 174, 201],\n",
       "         [154, 166, 196]],\n",
       " \n",
       "        [[175, 184, 216],\n",
       "         [170, 178, 211],\n",
       "         [169, 176, 207],\n",
       "         ...,\n",
       "         [169, 180, 208],\n",
       "         [163, 175, 203],\n",
       "         [155, 166, 197]]], dtype=uint8),\n",
       " array([[[ 45,  54,  71],\n",
       "         [ 47,  54,  73],\n",
       "         [ 47,  54,  73],\n",
       "         ...,\n",
       "         [ 84,  90, 101],\n",
       "         [ 84,  90, 101],\n",
       "         [ 86,  90, 101]],\n",
       " \n",
       "        [[ 45,  53,  70],\n",
       "         [ 46,  53,  72],\n",
       "         [ 46,  53,  72],\n",
       "         ...,\n",
       "         [ 85,  91, 102],\n",
       "         [ 85,  90, 101],\n",
       "         [ 86,  90, 101]],\n",
       " \n",
       "        [[ 45,  52,  68],\n",
       "         [ 46,  52,  70],\n",
       "         [ 46,  52,  71],\n",
       "         ...,\n",
       "         [ 85,  89, 100],\n",
       "         [ 86,  90, 102],\n",
       "         [ 86,  90, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  64,  84],\n",
       "         [ 55,  66,  86],\n",
       "         [ 56,  67,  89],\n",
       "         ...,\n",
       "         [ 63,  70,  90],\n",
       "         [ 62,  70,  90],\n",
       "         [ 62,  70,  93]],\n",
       " \n",
       "        [[ 54,  65,  85],\n",
       "         [ 56,  67,  87],\n",
       "         [ 57,  68,  90],\n",
       "         ...,\n",
       "         [ 64,  70,  90],\n",
       "         [ 65,  72,  92],\n",
       "         [ 66,  72,  94]],\n",
       " \n",
       "        [[ 56,  67,  87],\n",
       "         [ 57,  68,  88],\n",
       "         [ 58,  69,  91],\n",
       "         ...,\n",
       "         [ 64,  69,  90],\n",
       "         [ 67,  74,  94],\n",
       "         [ 69,  76,  95]]], dtype=uint8),\n",
       " array([[[ 85,  88, 102],\n",
       "         [ 86,  89, 103],\n",
       "         [ 85,  88, 102],\n",
       "         ...,\n",
       "         [ 47,  50,  64],\n",
       "         [ 44,  50,  63],\n",
       "         [ 43,  49,  62]],\n",
       " \n",
       "        [[ 84,  87, 101],\n",
       "         [ 84,  87, 101],\n",
       "         [ 84,  87, 101],\n",
       "         ...,\n",
       "         [ 46,  50,  61],\n",
       "         [ 44,  49,  62],\n",
       "         [ 42,  48,  61]],\n",
       " \n",
       "        [[ 80,  83,  97],\n",
       "         [ 79,  82,  96],\n",
       "         [ 77,  81,  94],\n",
       "         ...,\n",
       "         [ 48,  50,  60],\n",
       "         [ 46,  49,  60],\n",
       "         [ 44,  48,  59]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 60,  67,  87],\n",
       "         [ 59,  64,  85],\n",
       "         [ 60,  66,  85],\n",
       "         ...,\n",
       "         [ 59,  65,  84],\n",
       "         [ 55,  63,  79],\n",
       "         [ 54,  61,  78]],\n",
       " \n",
       "        [[ 62,  69,  89],\n",
       "         [ 61,  66,  87],\n",
       "         [ 60,  66,  85],\n",
       "         ...,\n",
       "         [ 60,  66,  85],\n",
       "         [ 58,  65,  82],\n",
       "         [ 56,  63,  80]],\n",
       " \n",
       "        [[ 64,  72,  92],\n",
       "         [ 62,  68,  87],\n",
       "         [ 60,  67,  84],\n",
       "         ...,\n",
       "         [ 61,  67,  86],\n",
       "         [ 60,  67,  84],\n",
       "         [ 57,  64,  81]]], dtype=uint8),\n",
       " array([[[ 81,  92, 112],\n",
       "         [ 81,  94, 113],\n",
       "         [ 84,  97, 116],\n",
       "         ...,\n",
       "         [142, 149, 165],\n",
       "         [142, 149, 165],\n",
       "         [142, 149, 166]],\n",
       " \n",
       "        [[ 80,  90, 110],\n",
       "         [ 83,  92, 112],\n",
       "         [ 86,  95, 113],\n",
       "         ...,\n",
       "         [139, 146, 163],\n",
       "         [140, 147, 164],\n",
       "         [142, 149, 166]],\n",
       " \n",
       "        [[ 82,  89, 107],\n",
       "         [ 82,  89, 107],\n",
       "         [ 79,  85, 102],\n",
       "         ...,\n",
       "         [136, 142, 161],\n",
       "         [138, 144, 163],\n",
       "         [140, 146, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[103, 116, 144],\n",
       "         [106, 119, 146],\n",
       "         [106, 121, 148],\n",
       "         ...,\n",
       "         [108, 119, 147],\n",
       "         [108, 120, 148],\n",
       "         [109, 121, 149]],\n",
       " \n",
       "        [[107, 118, 146],\n",
       "         [109, 121, 149],\n",
       "         [111, 123, 151],\n",
       "         ...,\n",
       "         [109, 120, 149],\n",
       "         [111, 123, 150],\n",
       "         [113, 125, 153]],\n",
       " \n",
       "        [[109, 121, 149],\n",
       "         [108, 121, 149],\n",
       "         [111, 123, 151],\n",
       "         ...,\n",
       "         [112, 123, 151],\n",
       "         [116, 128, 155],\n",
       "         [119, 131, 159]]], dtype=uint8),\n",
       " array([[[141, 148, 165],\n",
       "         [141, 148, 165],\n",
       "         [139, 145, 163],\n",
       "         ...,\n",
       "         [ 85,  89, 108],\n",
       "         [ 84,  88, 107],\n",
       "         [ 83,  87, 105]],\n",
       " \n",
       "        [[138, 145, 162],\n",
       "         [135, 142, 159],\n",
       "         [136, 142, 159],\n",
       "         ...,\n",
       "         [ 86,  89, 104],\n",
       "         [ 84,  88, 103],\n",
       "         [ 83,  86, 101]],\n",
       " \n",
       "        [[131, 138, 155],\n",
       "         [128, 135, 153],\n",
       "         [129, 132, 150],\n",
       "         ...,\n",
       "         [ 87,  89, 101],\n",
       "         [ 85,  87, 101],\n",
       "         [ 84,  86, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[106, 112, 140],\n",
       "         [104, 111, 136],\n",
       "         [106, 112, 136],\n",
       "         ...,\n",
       "         [100, 111, 138],\n",
       "         [100, 109, 136],\n",
       "         [ 97, 106, 133]],\n",
       " \n",
       "        [[109, 117, 144],\n",
       "         [105, 112, 137],\n",
       "         [104, 110, 134],\n",
       "         ...,\n",
       "         [105, 114, 141],\n",
       "         [103, 112, 139],\n",
       "         [100, 109, 136]],\n",
       " \n",
       "        [[112, 121, 147],\n",
       "         [108, 115, 140],\n",
       "         [106, 112, 136],\n",
       "         ...,\n",
       "         [107, 116, 143],\n",
       "         [105, 114, 141],\n",
       "         [103, 112, 139]]], dtype=uint8),\n",
       " array([[[149, 163, 191],\n",
       "         [150, 164, 192],\n",
       "         [149, 166, 193],\n",
       "         ...,\n",
       "         [220, 228, 252],\n",
       "         [220, 226, 251],\n",
       "         [218, 225, 250]],\n",
       " \n",
       "        [[150, 161, 191],\n",
       "         [148, 162, 190],\n",
       "         [149, 163, 191],\n",
       "         ...,\n",
       "         [226, 233, 253],\n",
       "         [225, 231, 254],\n",
       "         [224, 230, 253]],\n",
       " \n",
       "        [[147, 158, 186],\n",
       "         [147, 159, 187],\n",
       "         [147, 160, 188],\n",
       "         ...,\n",
       "         [227, 232, 253],\n",
       "         [227, 232, 253],\n",
       "         [227, 232, 253]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 184, 217],\n",
       "         [167, 186, 219],\n",
       "         [169, 188, 222],\n",
       "         ...,\n",
       "         [181, 193, 229],\n",
       "         [182, 194, 234],\n",
       "         [183, 198, 237]],\n",
       " \n",
       "        [[168, 185, 218],\n",
       "         [171, 188, 221],\n",
       "         [173, 190, 223],\n",
       "         ...,\n",
       "         [183, 195, 231],\n",
       "         [183, 195, 235],\n",
       "         [185, 199, 237]],\n",
       " \n",
       "        [[167, 186, 219],\n",
       "         [173, 190, 223],\n",
       "         [176, 193, 226],\n",
       "         ...,\n",
       "         [188, 197, 234],\n",
       "         [188, 201, 239],\n",
       "         [193, 205, 243]]], dtype=uint8),\n",
       " array([[[150, 159, 223],\n",
       "         [147, 156, 222],\n",
       "         [144, 152, 216],\n",
       "         ...,\n",
       "         [ 19,  25,  33],\n",
       "         [ 14,  22,  24],\n",
       "         [ 19,  27,  33]],\n",
       " \n",
       "        [[150, 159, 223],\n",
       "         [147, 156, 221],\n",
       "         [142, 151, 214],\n",
       "         ...,\n",
       "         [ 16,  24,  41],\n",
       "         [ 19,  29,  37],\n",
       "         [ 18,  26,  38]],\n",
       " \n",
       "        [[148, 157, 220],\n",
       "         [140, 148, 214],\n",
       "         [141, 150, 211],\n",
       "         ...,\n",
       "         [ 46,  58,  83],\n",
       "         [ 22,  33,  47],\n",
       "         [ 25,  35,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 149, 215],\n",
       "         [119, 150, 219],\n",
       "         [124, 154, 223],\n",
       "         ...,\n",
       "         [133, 152, 213],\n",
       "         [131, 154, 199],\n",
       "         [114, 127, 173]],\n",
       " \n",
       "        [[115, 147, 213],\n",
       "         [119, 150, 219],\n",
       "         [124, 154, 222],\n",
       "         ...,\n",
       "         [130, 150, 210],\n",
       "         [130, 153, 196],\n",
       "         [121, 134, 183]],\n",
       " \n",
       "        [[114, 146, 212],\n",
       "         [119, 149, 219],\n",
       "         [123, 152, 222],\n",
       "         ...,\n",
       "         [125, 151, 204],\n",
       "         [131, 152, 193],\n",
       "         [129, 143, 202]]], dtype=uint8),\n",
       " array([[[222, 227, 252],\n",
       "         [223, 228, 253],\n",
       "         [223, 228, 253],\n",
       "         ...,\n",
       "         [141, 151, 175],\n",
       "         [140, 148, 170],\n",
       "         [135, 144, 164]],\n",
       " \n",
       "        [[225, 229, 253],\n",
       "         [225, 229, 253],\n",
       "         [225, 229, 253],\n",
       "         ...,\n",
       "         [142, 150, 173],\n",
       "         [139, 147, 169],\n",
       "         [136, 145, 164]],\n",
       " \n",
       "        [[226, 230, 254],\n",
       "         [226, 230, 254],\n",
       "         [225, 229, 253],\n",
       "         ...,\n",
       "         [145, 151, 171],\n",
       "         [142, 149, 168],\n",
       "         [138, 145, 164]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[175, 184, 218],\n",
       "         [174, 183, 217],\n",
       "         [178, 186, 219],\n",
       "         ...,\n",
       "         [159, 170, 198],\n",
       "         [155, 166, 194],\n",
       "         [150, 161, 189]],\n",
       " \n",
       "        [[174, 183, 217],\n",
       "         [173, 182, 215],\n",
       "         [177, 185, 215],\n",
       "         ...,\n",
       "         [166, 176, 206],\n",
       "         [159, 170, 199],\n",
       "         [155, 166, 194]],\n",
       " \n",
       "        [[178, 187, 221],\n",
       "         [173, 182, 215],\n",
       "         [175, 183, 213],\n",
       "         ...,\n",
       "         [169, 179, 209],\n",
       "         [165, 176, 204],\n",
       "         [161, 172, 200]]], dtype=uint8),\n",
       " array([[[ 67,  89, 138],\n",
       "         [ 59,  80, 131],\n",
       "         [ 60,  79, 131],\n",
       "         ...,\n",
       "         [106, 130, 176],\n",
       "         [103, 128, 173],\n",
       "         [102, 127, 171]],\n",
       " \n",
       "        [[ 68,  95, 142],\n",
       "         [ 66,  92, 143],\n",
       "         [ 60,  84, 136],\n",
       "         ...,\n",
       "         [ 97, 121, 167],\n",
       "         [ 98, 121, 169],\n",
       "         [102, 126, 173]],\n",
       " \n",
       "        [[ 69, 102, 148],\n",
       "         [ 69, 100, 150],\n",
       "         [ 66,  95, 148],\n",
       "         ...,\n",
       "         [ 85, 109, 155],\n",
       "         [ 87, 110, 160],\n",
       "         [ 94, 117, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 138, 200],\n",
       "         [103, 139, 205],\n",
       "         [105, 139, 209],\n",
       "         ...,\n",
       "         [101, 130, 194],\n",
       "         [101, 131, 195],\n",
       "         [100, 131, 194]],\n",
       " \n",
       "        [[100, 137, 199],\n",
       "         [102, 137, 203],\n",
       "         [103, 137, 207],\n",
       "         ...,\n",
       "         [ 98, 123, 192],\n",
       "         [ 96, 124, 189],\n",
       "         [ 97, 125, 190]],\n",
       " \n",
       "        [[ 99, 136, 198],\n",
       "         [100, 135, 201],\n",
       "         [102, 136, 206],\n",
       "         ...,\n",
       "         [ 93, 117, 189],\n",
       "         [ 91, 118, 185],\n",
       "         [ 94, 121, 188]]], dtype=uint8),\n",
       " array([[[ 34,  43,  61],\n",
       "         [ 35,  45,  63],\n",
       "         [ 34,  44,  62],\n",
       "         ...,\n",
       "         [ 61,  78,  99],\n",
       "         [ 61,  78,  95],\n",
       "         [ 62,  78,  95]],\n",
       " \n",
       "        [[ 34,  44,  62],\n",
       "         [ 34,  44,  62],\n",
       "         [ 35,  45,  63],\n",
       "         ...,\n",
       "         [ 62,  79, 100],\n",
       "         [ 64,  81, 100],\n",
       "         [ 66,  81, 100]],\n",
       " \n",
       "        [[ 35,  45,  63],\n",
       "         [ 35,  45,  63],\n",
       "         [ 34,  44,  62],\n",
       "         ...,\n",
       "         [ 67,  84, 105],\n",
       "         [ 69,  84, 105],\n",
       "         [ 69,  84, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  77, 108],\n",
       "         [ 61,  76, 108],\n",
       "         [ 66,  80, 108],\n",
       "         ...,\n",
       "         [ 47,  64,  90],\n",
       "         [ 58,  75,  99],\n",
       "         [ 66,  82, 105]],\n",
       " \n",
       "        [[ 62,  78, 107],\n",
       "         [ 60,  76, 105],\n",
       "         [ 62,  78, 107],\n",
       "         ...,\n",
       "         [ 55,  72,  98],\n",
       "         [ 53,  70,  96],\n",
       "         [ 68,  85, 111]],\n",
       " \n",
       "        [[ 65,  79, 108],\n",
       "         [ 62,  75, 105],\n",
       "         [ 63,  76, 106],\n",
       "         ...,\n",
       "         [ 54,  71,  97],\n",
       "         [ 60,  77, 103],\n",
       "         [ 80,  97, 123]]], dtype=uint8),\n",
       " array([[[ 31,  45,  67],\n",
       "         [ 32,  49,  73],\n",
       "         [ 32,  52,  78],\n",
       "         ...,\n",
       "         [ 60,  79, 117],\n",
       "         [ 64,  83, 121],\n",
       "         [ 66,  85, 123]],\n",
       " \n",
       "        [[ 30,  43,  66],\n",
       "         [ 31,  48,  74],\n",
       "         [ 30,  51,  79],\n",
       "         ...,\n",
       "         [ 59,  78, 116],\n",
       "         [ 64,  83, 121],\n",
       "         [ 64,  83, 121]],\n",
       " \n",
       "        [[ 32,  45,  67],\n",
       "         [ 32,  48,  73],\n",
       "         [ 28,  47,  73],\n",
       "         ...,\n",
       "         [ 59,  78, 115],\n",
       "         [ 62,  81, 119],\n",
       "         [ 62,  81, 119]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  63,  95],\n",
       "         [ 44,  64,  97],\n",
       "         [ 45,  64,  97],\n",
       "         ...,\n",
       "         [ 32,  47,  79],\n",
       "         [ 34,  49,  81],\n",
       "         [ 31,  46,  78]],\n",
       " \n",
       "        [[ 44,  65,  97],\n",
       "         [ 41,  62,  94],\n",
       "         [ 45,  66,  98],\n",
       "         ...,\n",
       "         [ 35,  50,  82],\n",
       "         [ 33,  48,  80],\n",
       "         [ 31,  46,  78]],\n",
       " \n",
       "        [[ 48,  68, 103],\n",
       "         [ 48,  70, 105],\n",
       "         [ 49,  71, 106],\n",
       "         ...,\n",
       "         [ 38,  53,  85],\n",
       "         [ 37,  52,  84],\n",
       "         [ 37,  52,  84]]], dtype=uint8),\n",
       " array([[[ 74,  96, 134],\n",
       "         [ 77,  97, 135],\n",
       "         [ 75,  97, 136],\n",
       "         ...,\n",
       "         [ 31,  57,  91],\n",
       "         [ 31,  56,  88],\n",
       "         [ 29,  54,  86]],\n",
       " \n",
       "        [[ 77,  96, 133],\n",
       "         [ 78,  97, 134],\n",
       "         [ 75,  94, 131],\n",
       "         ...,\n",
       "         [ 32,  60,  91],\n",
       "         [ 30,  57,  88],\n",
       "         [ 30,  55,  86]],\n",
       " \n",
       "        [[ 72,  94, 129],\n",
       "         [ 74,  94, 129],\n",
       "         [ 72,  92, 127],\n",
       "         ...,\n",
       "         [ 30,  58,  89],\n",
       "         [ 31,  59,  90],\n",
       "         [ 31,  59,  90]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  77, 119],\n",
       "         [ 58,  80, 121],\n",
       "         [ 59,  80, 118],\n",
       "         ...,\n",
       "         [ 47,  70, 108],\n",
       "         [ 47,  70, 108],\n",
       "         [ 48,  71, 109]],\n",
       " \n",
       "        [[ 54,  75, 120],\n",
       "         [ 59,  81, 124],\n",
       "         [ 62,  83, 124],\n",
       "         ...,\n",
       "         [ 50,  73, 114],\n",
       "         [ 49,  74, 112],\n",
       "         [ 49,  72, 110]],\n",
       " \n",
       "        [[ 56,  79, 124],\n",
       "         [ 59,  82, 127],\n",
       "         [ 62,  85, 128],\n",
       "         ...,\n",
       "         [ 52,  81, 122],\n",
       "         [ 50,  80, 121],\n",
       "         [ 50,  76, 115]]], dtype=uint8),\n",
       " array([[[102, 130, 177],\n",
       "         [105, 133, 180],\n",
       "         [103, 131, 178],\n",
       "         ...,\n",
       "         [145, 163, 203],\n",
       "         [142, 161, 202],\n",
       "         [137, 158, 200]],\n",
       " \n",
       "        [[101, 129, 176],\n",
       "         [102, 130, 177],\n",
       "         [103, 131, 178],\n",
       "         ...,\n",
       "         [156, 174, 209],\n",
       "         [148, 167, 204],\n",
       "         [147, 166, 203]],\n",
       " \n",
       "        [[101, 127, 174],\n",
       "         [101, 127, 174],\n",
       "         [105, 133, 179],\n",
       "         ...,\n",
       "         [163, 178, 212],\n",
       "         [156, 172, 208],\n",
       "         [154, 171, 207]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 161, 206],\n",
       "         [137, 160, 205],\n",
       "         [140, 162, 204],\n",
       "         ...,\n",
       "         [132, 155, 203],\n",
       "         [133, 155, 203],\n",
       "         [136, 159, 207]],\n",
       " \n",
       "        [[146, 168, 210],\n",
       "         [146, 167, 209],\n",
       "         [146, 165, 208],\n",
       "         ...,\n",
       "         [132, 155, 203],\n",
       "         [133, 155, 203],\n",
       "         [136, 159, 207]],\n",
       " \n",
       "        [[150, 170, 213],\n",
       "         [151, 170, 213],\n",
       "         [150, 168, 211],\n",
       "         ...,\n",
       "         [131, 154, 202],\n",
       "         [132, 156, 204],\n",
       "         [137, 161, 209]]], dtype=uint8),\n",
       " array([[[158, 171, 209],\n",
       "         [153, 167, 207],\n",
       "         [152, 166, 207],\n",
       "         ...,\n",
       "         [ 48,  62,  91],\n",
       "         [ 46,  59,  87],\n",
       "         [ 39,  54,  81]],\n",
       " \n",
       "        [[160, 172, 209],\n",
       "         [156, 168, 208],\n",
       "         [156, 168, 208],\n",
       "         ...,\n",
       "         [ 46,  59,  88],\n",
       "         [ 45,  58,  85],\n",
       "         [ 42,  54,  82]],\n",
       " \n",
       "        [[160, 172, 209],\n",
       "         [159, 171, 210],\n",
       "         [154, 166, 206],\n",
       "         ...,\n",
       "         [ 47,  58,  88],\n",
       "         [ 46,  58,  86],\n",
       "         [ 43,  55,  83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  77, 121],\n",
       "         [ 67,  76, 120],\n",
       "         [ 68,  79, 125],\n",
       "         ...,\n",
       "         [ 92, 113, 161],\n",
       "         [ 83, 103, 150],\n",
       "         [ 82, 101, 146]],\n",
       " \n",
       "        [[ 66,  75, 118],\n",
       "         [ 66,  75, 119],\n",
       "         [ 64,  76, 121],\n",
       "         ...,\n",
       "         [ 93, 115, 162],\n",
       "         [ 86, 107, 154],\n",
       "         [ 84, 104, 148]],\n",
       " \n",
       "        [[ 63,  74, 116],\n",
       "         [ 64,  76, 118],\n",
       "         [ 64,  77, 121],\n",
       "         ...,\n",
       "         [ 91, 112, 159],\n",
       "         [ 91, 110, 157],\n",
       "         [ 82, 101, 147]]], dtype=uint8),\n",
       " array([[[ 19,  18,  16],\n",
       "         [ 47,  44,  38],\n",
       "         [ 33,  30,  26],\n",
       "         ...,\n",
       "         [ 43,  58,  67],\n",
       "         [ 52,  67,  80],\n",
       "         [ 51,  70,  84]],\n",
       " \n",
       "        [[ 29,  28,  24],\n",
       "         [ 29,  25,  22],\n",
       "         [ 27,  27,  25],\n",
       "         ...,\n",
       "         [ 33,  49,  58],\n",
       "         [ 43,  59,  71],\n",
       "         [ 47,  64,  76]],\n",
       " \n",
       "        [[ 64,  59,  52],\n",
       "         [ 88,  82,  73],\n",
       "         [  8,  10,  10],\n",
       "         ...,\n",
       "         [ 31,  46,  55],\n",
       "         [ 35,  52,  64],\n",
       "         [ 33,  50,  66]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 120, 140],\n",
       "         [135, 177, 210],\n",
       "         [153, 196, 234],\n",
       "         ...,\n",
       "         [172, 202, 244],\n",
       "         [176, 208, 247],\n",
       "         [171, 207, 246]],\n",
       " \n",
       "        [[ 95, 124, 144],\n",
       "         [124, 168, 202],\n",
       "         [141, 184, 226],\n",
       "         ...,\n",
       "         [171, 203, 245],\n",
       "         [149, 187, 232],\n",
       "         [145, 183, 230]],\n",
       " \n",
       "        [[ 99, 129, 150],\n",
       "         [116, 158, 191],\n",
       "         [140, 185, 222],\n",
       "         ...,\n",
       "         [125, 169, 221],\n",
       "         [143, 180, 229],\n",
       "         [136, 176, 225]]], dtype=uint8),\n",
       " array([[[254, 254, 254],\n",
       "         [243, 249, 249],\n",
       "         [253, 254, 254],\n",
       "         ...,\n",
       "         [ 45,  56,  62],\n",
       "         [ 31,  33,  33],\n",
       "         [ 22,  21,  20]],\n",
       " \n",
       "        [[219, 229, 228],\n",
       "         [205, 213, 215],\n",
       "         [203, 203, 204],\n",
       "         ...,\n",
       "         [ 55,  69,  80],\n",
       "         [ 18,  25,  28],\n",
       "         [ 20,  21,  21]],\n",
       " \n",
       "        [[154, 168, 168],\n",
       "         [150, 164, 169],\n",
       "         [167, 180, 189],\n",
       "         ...,\n",
       "         [ 66,  95, 114],\n",
       "         [ 22,  29,  33],\n",
       "         [ 10,  15,  15]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[182, 210, 241],\n",
       "         [169, 200, 228],\n",
       "         [182, 207, 235],\n",
       "         ...,\n",
       "         [131, 171, 200],\n",
       "         [119, 159, 185],\n",
       "         [107, 146, 170]],\n",
       " \n",
       "        [[178, 209, 240],\n",
       "         [165, 197, 232],\n",
       "         [166, 196, 231],\n",
       "         ...,\n",
       "         [130, 173, 201],\n",
       "         [116, 157, 184],\n",
       "         [103, 141, 165]],\n",
       " \n",
       "        [[162, 200, 235],\n",
       "         [166, 202, 236],\n",
       "         [169, 203, 238],\n",
       "         ...,\n",
       "         [129, 170, 203],\n",
       "         [119, 159, 187],\n",
       "         [ 97, 133, 157]]], dtype=uint8),\n",
       " array([[[45, 50, 80],\n",
       "         [51, 54, 85],\n",
       "         [45, 51, 79],\n",
       "         ...,\n",
       "         [18, 22, 46],\n",
       "         [18, 22, 46],\n",
       "         [14, 19, 41]],\n",
       " \n",
       "        [[39, 43, 67],\n",
       "         [37, 39, 63],\n",
       "         [32, 34, 58],\n",
       "         ...,\n",
       "         [20, 23, 48],\n",
       "         [17, 17, 41],\n",
       "         [16, 18, 39]],\n",
       " \n",
       "        [[33, 34, 57],\n",
       "         [29, 31, 50],\n",
       "         [23, 25, 45],\n",
       "         ...,\n",
       "         [21, 22, 47],\n",
       "         [19, 19, 43],\n",
       "         [15, 16, 37]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 5,  6, 15],\n",
       "         [26, 28, 50],\n",
       "         [42, 44, 74],\n",
       "         ...,\n",
       "         [39, 43, 71],\n",
       "         [37, 43, 67],\n",
       "         [36, 41, 66]],\n",
       " \n",
       "        [[ 9, 10, 21],\n",
       "         [18, 19, 34],\n",
       "         [42, 44, 73],\n",
       "         ...,\n",
       "         [37, 44, 71],\n",
       "         [36, 40, 67],\n",
       "         [37, 43, 62]],\n",
       " \n",
       "        [[60, 58, 70],\n",
       "         [10,  9, 26],\n",
       "         [33, 33, 56],\n",
       "         ...,\n",
       "         [33, 38, 70],\n",
       "         [34, 42, 69],\n",
       "         [24, 27, 45]]], dtype=uint8),\n",
       " array([[[ 64,  72, 109],\n",
       "         [ 72,  83, 124],\n",
       "         [ 74,  89, 133],\n",
       "         ...,\n",
       "         [ 92, 112, 160],\n",
       "         [ 90, 112, 160],\n",
       "         [ 90, 113, 161]],\n",
       " \n",
       "        [[ 69,  76, 112],\n",
       "         [ 77,  87, 125],\n",
       "         [ 75,  90, 130],\n",
       "         ...,\n",
       "         [ 87, 108, 155],\n",
       "         [ 87, 110, 157],\n",
       "         [ 87, 111, 157]],\n",
       " \n",
       "        [[ 65,  76, 110],\n",
       "         [ 73,  86, 119],\n",
       "         [ 75,  88, 119],\n",
       "         ...,\n",
       "         [ 84, 105, 150],\n",
       "         [ 83, 107, 153],\n",
       "         [ 84, 108, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 63,  79, 116],\n",
       "         [ 70,  87, 129],\n",
       "         [ 74,  93, 135],\n",
       "         ...,\n",
       "         [109, 130, 182],\n",
       "         [109, 129, 180],\n",
       "         [107, 124, 175]],\n",
       " \n",
       "        [[ 66,  82, 119],\n",
       "         [ 72,  89, 132],\n",
       "         [ 76,  95, 139],\n",
       "         ...,\n",
       "         [112, 133, 185],\n",
       "         [110, 131, 182],\n",
       "         [107, 124, 175]],\n",
       " \n",
       "        [[ 68,  82, 119],\n",
       "         [ 73,  89, 133],\n",
       "         [ 78,  97, 142],\n",
       "         ...,\n",
       "         [107, 128, 180],\n",
       "         [110, 130, 181],\n",
       "         [106, 122, 173]]], dtype=uint8),\n",
       " array([[[29, 48, 63],\n",
       "         [37, 60, 76],\n",
       "         [38, 58, 75],\n",
       "         ...,\n",
       "         [17, 39, 57],\n",
       "         [12, 34, 53],\n",
       "         [14, 36, 55]],\n",
       " \n",
       "        [[31, 45, 61],\n",
       "         [29, 46, 61],\n",
       "         [28, 46, 58],\n",
       "         ...,\n",
       "         [15, 36, 57],\n",
       "         [13, 34, 53],\n",
       "         [12, 32, 48]],\n",
       " \n",
       "        [[31, 45, 57],\n",
       "         [28, 42, 52],\n",
       "         [20, 35, 44],\n",
       "         ...,\n",
       "         [19, 40, 61],\n",
       "         [15, 36, 51],\n",
       "         [ 9, 25, 39]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 9, 15, 22],\n",
       "         [38, 53, 66],\n",
       "         [43, 59, 77],\n",
       "         ...,\n",
       "         [28, 47, 63],\n",
       "         [27, 45, 61],\n",
       "         [27, 45, 61]],\n",
       " \n",
       "        [[ 9, 15, 22],\n",
       "         [39, 47, 59],\n",
       "         [41, 53, 71],\n",
       "         ...,\n",
       "         [27, 44, 63],\n",
       "         [28, 47, 62],\n",
       "         [27, 46, 61]],\n",
       " \n",
       "        [[16, 23, 28],\n",
       "         [27, 34, 42],\n",
       "         [40, 50, 68],\n",
       "         ...,\n",
       "         [31, 49, 67],\n",
       "         [29, 48, 64],\n",
       "         [27, 45, 61]]], dtype=uint8),\n",
       " array([[[52, 74, 96],\n",
       "         [45, 67, 88],\n",
       "         [45, 61, 79],\n",
       "         ...,\n",
       "         [10, 20, 37],\n",
       "         [ 7, 17, 28],\n",
       "         [ 8, 18, 24]],\n",
       " \n",
       "        [[49, 65, 76],\n",
       "         [43, 56, 68],\n",
       "         [39, 49, 63],\n",
       "         ...,\n",
       "         [ 6, 17, 33],\n",
       "         [ 6, 18, 30],\n",
       "         [ 3, 12, 23]],\n",
       " \n",
       "        [[41, 51, 60],\n",
       "         [30, 40, 50],\n",
       "         [28, 38, 48],\n",
       "         ...,\n",
       "         [ 5, 18, 34],\n",
       "         [ 7, 17, 28],\n",
       "         [ 7, 13, 24]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[49, 45, 57],\n",
       "         [57, 53, 65],\n",
       "         [38, 44, 61],\n",
       "         ...,\n",
       "         [15, 37, 58],\n",
       "         [12, 32, 51],\n",
       "         [16, 32, 50]],\n",
       " \n",
       "        [[47, 44, 58],\n",
       "         [54, 50, 62],\n",
       "         [35, 42, 61],\n",
       "         ...,\n",
       "         [17, 36, 57],\n",
       "         [14, 33, 52],\n",
       "         [18, 32, 51]],\n",
       " \n",
       "        [[42, 38, 50],\n",
       "         [54, 48, 60],\n",
       "         [36, 41, 58],\n",
       "         ...,\n",
       "         [16, 34, 57],\n",
       "         [10, 32, 52],\n",
       "         [24, 36, 54]]], dtype=uint8),\n",
       " array([[[ 92, 113, 165],\n",
       "         [ 90, 111, 163],\n",
       "         [ 85, 106, 158],\n",
       "         ...,\n",
       "         [115, 141, 188],\n",
       "         [110, 136, 182],\n",
       "         [111, 136, 179]],\n",
       " \n",
       "        [[ 77,  98, 150],\n",
       "         [ 74,  95, 147],\n",
       "         [ 75,  96, 148],\n",
       "         ...,\n",
       "         [119, 145, 192],\n",
       "         [124, 150, 196],\n",
       "         [131, 158, 202]],\n",
       " \n",
       "        [[ 64,  85, 140],\n",
       "         [ 62,  83, 138],\n",
       "         [ 60,  81, 136],\n",
       "         ...,\n",
       "         [123, 149, 194],\n",
       "         [131, 160, 204],\n",
       "         [128, 158, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 190, 243],\n",
       "         [133, 167, 226],\n",
       "         [122, 153, 217],\n",
       "         ...,\n",
       "         [121, 159, 213],\n",
       "         [119, 157, 211],\n",
       "         [120, 158, 212]],\n",
       " \n",
       "        [[166, 198, 235],\n",
       "         [155, 188, 228],\n",
       "         [139, 171, 219],\n",
       "         ...,\n",
       "         [122, 156, 214],\n",
       "         [120, 156, 214],\n",
       "         [113, 150, 208]],\n",
       " \n",
       "        [[170, 202, 237],\n",
       "         [159, 192, 231],\n",
       "         [143, 175, 221],\n",
       "         ...,\n",
       "         [115, 150, 209],\n",
       "         [114, 151, 209],\n",
       "         [106, 144, 202]]], dtype=uint8),\n",
       " array([[[ 59,  78, 116],\n",
       "         [ 62,  85, 119],\n",
       "         [ 59,  83, 120],\n",
       "         ...,\n",
       "         [ 41,  51,  70],\n",
       "         [ 38,  50,  69],\n",
       "         [ 40,  51,  69]],\n",
       " \n",
       "        [[ 62,  81, 118],\n",
       "         [ 61,  83, 119],\n",
       "         [ 55,  83, 119],\n",
       "         ...,\n",
       "         [ 28,  37,  54],\n",
       "         [ 41,  51,  69],\n",
       "         [ 47,  59,  78]],\n",
       " \n",
       "        [[ 60,  81, 118],\n",
       "         [ 57,  80, 118],\n",
       "         [ 57,  79, 120],\n",
       "         ...,\n",
       "         [ 29,  41,  52],\n",
       "         [ 42,  56,  72],\n",
       "         [ 46,  59,  76]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74,  97, 129],\n",
       "         [ 76,  98, 130],\n",
       "         [ 73,  96, 127],\n",
       "         ...,\n",
       "         [ 27,  47,  72],\n",
       "         [ 30,  50,  75],\n",
       "         [ 32,  51,  77]],\n",
       " \n",
       "        [[ 74,  98, 131],\n",
       "         [ 75,  97, 132],\n",
       "         [ 76,  98, 133],\n",
       "         ...,\n",
       "         [ 32,  50,  76],\n",
       "         [ 35,  52,  78],\n",
       "         [ 32,  50,  76]],\n",
       " \n",
       "        [[ 73,  99, 130],\n",
       "         [ 73, 102, 138],\n",
       "         [ 73,  99, 135],\n",
       "         ...,\n",
       "         [ 37,  55,  80],\n",
       "         [ 41,  58,  84],\n",
       "         [ 38,  52,  75]]], dtype=uint8),\n",
       " array([[[ 89, 109, 142],\n",
       "         [101, 116, 143],\n",
       "         [110, 128, 155],\n",
       "         ...,\n",
       "         [166, 179, 183],\n",
       "         [ 70,  76,  76],\n",
       "         [ 56,  56,  52]],\n",
       " \n",
       "        [[ 83,  98, 122],\n",
       "         [ 99, 110, 133],\n",
       "         [ 99, 108, 129],\n",
       "         ...,\n",
       "         [187, 203, 209],\n",
       "         [112, 116, 119],\n",
       "         [ 74,  76,  71]],\n",
       " \n",
       "        [[ 89, 100, 122],\n",
       "         [ 92, 100, 122],\n",
       "         [ 84,  94, 107],\n",
       "         ...,\n",
       "         [184, 198, 204],\n",
       "         [119, 133, 140],\n",
       "         [ 63,  69,  68]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[177, 206, 229],\n",
       "         [165, 195, 220],\n",
       "         [158, 189, 209],\n",
       "         ...,\n",
       "         [146, 171, 192],\n",
       "         [168, 188, 203],\n",
       "         [175, 193, 207]],\n",
       " \n",
       "        [[166, 198, 223],\n",
       "         [167, 195, 221],\n",
       "         [175, 202, 220],\n",
       "         ...,\n",
       "         [172, 196, 212],\n",
       "         [173, 195, 208],\n",
       "         [220, 232, 238]],\n",
       " \n",
       "        [[197, 219, 239],\n",
       "         [185, 210, 231],\n",
       "         [173, 201, 222],\n",
       "         ...,\n",
       "         [153, 181, 201],\n",
       "         [187, 207, 219],\n",
       "         [177, 196, 211]]], dtype=uint8),\n",
       " array([[[ 30,  46,  53],\n",
       "         [ 38,  53,  63],\n",
       "         [ 45,  60,  69],\n",
       "         ...,\n",
       "         [129, 138, 141],\n",
       "         [156, 164, 163],\n",
       "         [140, 149, 149]],\n",
       " \n",
       "        [[ 34,  50,  57],\n",
       "         [ 38,  52,  61],\n",
       "         [ 39,  54,  63],\n",
       "         ...,\n",
       "         [111, 119, 123],\n",
       "         [126, 134, 135],\n",
       "         [129, 138, 138]],\n",
       " \n",
       "        [[ 35,  49,  58],\n",
       "         [ 35,  47,  57],\n",
       "         [ 34,  46,  56],\n",
       "         ...,\n",
       "         [ 91, 100, 104],\n",
       "         [105, 117, 120],\n",
       "         [111, 124, 125]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 12,  21,  30],\n",
       "         [ 10,  19,  29],\n",
       "         [  9,  21,  30],\n",
       "         ...,\n",
       "         [ 42,  61,  77],\n",
       "         [ 37,  54,  71],\n",
       "         [ 40,  56,  73]],\n",
       " \n",
       "        [[ 10,  22,  32],\n",
       "         [ 10,  22,  32],\n",
       "         [ 13,  24,  34],\n",
       "         ...,\n",
       "         [ 44,  60,  77],\n",
       "         [ 39,  56,  75],\n",
       "         [ 44,  60,  78]],\n",
       " \n",
       "        [[ 16,  26,  36],\n",
       "         [ 12,  23,  33],\n",
       "         [ 15,  25,  35],\n",
       "         ...,\n",
       "         [ 48,  64,  82],\n",
       "         [ 52,  68,  85],\n",
       "         [ 49,  65,  82]]], dtype=uint8),\n",
       " array([[[  4,   8,   7],\n",
       "         [ 42,  59,  73],\n",
       "         [ 93, 135, 165],\n",
       "         ...,\n",
       "         [167, 175, 200],\n",
       "         [165, 183, 203],\n",
       "         [158, 169, 187]],\n",
       " \n",
       "        [[ 18,  24,  24],\n",
       "         [ 69,  95, 114],\n",
       "         [104, 145, 176],\n",
       "         ...,\n",
       "         [117, 129, 146],\n",
       "         [135, 150, 170],\n",
       "         [128, 143, 161]],\n",
       " \n",
       "        [[ 25,  36,  44],\n",
       "         [ 86, 121, 146],\n",
       "         [107, 147, 179],\n",
       "         ...,\n",
       "         [110, 122, 139],\n",
       "         [133, 147, 164],\n",
       "         [126, 141, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 92, 135, 167],\n",
       "         [ 98, 149, 181],\n",
       "         [ 90, 142, 177],\n",
       "         ...,\n",
       "         [ 92, 139, 179],\n",
       "         [101, 146, 187],\n",
       "         [114, 153, 192]],\n",
       " \n",
       "        [[ 97, 142, 175],\n",
       "         [106, 154, 189],\n",
       "         [ 96, 145, 183],\n",
       "         ...,\n",
       "         [100, 149, 187],\n",
       "         [109, 154, 192],\n",
       "         [122, 164, 202]],\n",
       " \n",
       "        [[102, 149, 181],\n",
       "         [106, 155, 190],\n",
       "         [103, 155, 192],\n",
       "         ...,\n",
       "         [110, 158, 196],\n",
       "         [134, 175, 212],\n",
       "         [108, 149, 194]]], dtype=uint8),\n",
       " array([[[183, 192, 211],\n",
       "         [146, 159, 178],\n",
       "         [179, 186, 204],\n",
       "         ...,\n",
       "         [103, 140, 162],\n",
       "         [ 95, 126, 147],\n",
       "         [ 42,  58,  65]],\n",
       " \n",
       "        [[182, 191, 207],\n",
       "         [180, 184, 201],\n",
       "         [166, 170, 185],\n",
       "         ...,\n",
       "         [107, 146, 163],\n",
       "         [ 92, 125, 144],\n",
       "         [ 53,  69,  77]],\n",
       " \n",
       "        [[169, 178, 190],\n",
       "         [174, 183, 195],\n",
       "         [155, 163, 173],\n",
       "         ...,\n",
       "         [110, 145, 166],\n",
       "         [ 97, 130, 149],\n",
       "         [ 55,  76,  87]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 160, 192],\n",
       "         [132, 177, 201],\n",
       "         [116, 165, 197],\n",
       "         ...,\n",
       "         [106, 158, 194],\n",
       "         [104, 156, 190],\n",
       "         [104, 153, 185]],\n",
       " \n",
       "        [[104, 151, 187],\n",
       "         [111, 163, 195],\n",
       "         [129, 173, 203],\n",
       "         ...,\n",
       "         [105, 155, 192],\n",
       "         [ 92, 145, 180],\n",
       "         [108, 158, 190]],\n",
       " \n",
       "        [[108, 152, 187],\n",
       "         [114, 157, 191],\n",
       "         [117, 164, 195],\n",
       "         ...,\n",
       "         [116, 166, 201],\n",
       "         [101, 152, 187],\n",
       "         [ 96, 141, 178]]], dtype=uint8),\n",
       " array([[[ 59,  69,  79],\n",
       "         [ 59,  69,  79],\n",
       "         [ 65,  74,  83],\n",
       "         ...,\n",
       "         [ 58,  71,  74],\n",
       "         [ 33,  37,  39],\n",
       "         [  9,  15,  16]],\n",
       " \n",
       "        [[ 50,  59,  67],\n",
       "         [ 60,  67,  76],\n",
       "         [ 56,  64,  71],\n",
       "         ...,\n",
       "         [ 69,  82,  86],\n",
       "         [ 30,  33,  36],\n",
       "         [ 11,  17,  18]],\n",
       " \n",
       "        [[ 39,  50,  56],\n",
       "         [ 45,  52,  56],\n",
       "         [ 44,  53,  57],\n",
       "         ...,\n",
       "         [ 74,  86,  90],\n",
       "         [ 35,  45,  46],\n",
       "         [ 18,  24,  25]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 36,  49,  60],\n",
       "         [ 35,  47,  57],\n",
       "         [ 25,  38,  46],\n",
       "         ...,\n",
       "         [ 61,  77,  93],\n",
       "         [ 72,  86,  97],\n",
       "         [ 74,  87,  95]],\n",
       " \n",
       "        [[ 37,  49,  59],\n",
       "         [ 34,  46,  56],\n",
       "         [ 32,  45,  54],\n",
       "         ...,\n",
       "         [ 65,  81,  96],\n",
       "         [ 69,  86,  97],\n",
       "         [ 79,  94, 103]],\n",
       " \n",
       "        [[ 42,  54,  64],\n",
       "         [ 39,  51,  61],\n",
       "         [ 39,  51,  61],\n",
       "         ...,\n",
       "         [ 60,  76,  92],\n",
       "         [ 68,  84, 100],\n",
       "         [ 74,  93, 102]]], dtype=uint8),\n",
       " array([[[ 36,  57,  78],\n",
       "         [ 34,  55,  76],\n",
       "         [ 34,  55,  77],\n",
       "         ...,\n",
       "         [ 69,  84, 113],\n",
       "         [ 84, 101, 130],\n",
       "         [ 82,  98, 130]],\n",
       " \n",
       "        [[ 35,  56,  76],\n",
       "         [ 35,  56,  77],\n",
       "         [ 37,  58,  80],\n",
       "         ...,\n",
       "         [ 73,  87, 115],\n",
       "         [ 78,  95, 123],\n",
       "         [ 74,  91, 119]],\n",
       " \n",
       "        [[ 36,  57,  77],\n",
       "         [ 42,  62,  80],\n",
       "         [ 39,  60,  77],\n",
       "         ...,\n",
       "         [ 80,  93, 114],\n",
       "         [ 74,  88, 111],\n",
       "         [ 65,  78, 102]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 31,  51,  78],\n",
       "         [ 34,  54,  80],\n",
       "         [ 31,  53,  79],\n",
       "         ...,\n",
       "         [ 39,  59,  85],\n",
       "         [ 36,  53,  84],\n",
       "         [ 40,  58,  87]],\n",
       " \n",
       "        [[ 36,  57,  82],\n",
       "         [ 39,  59,  84],\n",
       "         [ 34,  55,  83],\n",
       "         ...,\n",
       "         [ 43,  61,  90],\n",
       "         [ 44,  63,  92],\n",
       "         [ 43,  61,  90]],\n",
       " \n",
       "        [[ 35,  56,  81],\n",
       "         [ 34,  55,  82],\n",
       "         [ 36,  56,  86],\n",
       "         ...,\n",
       "         [ 41,  59,  88],\n",
       "         [ 45,  66,  94],\n",
       "         [ 47,  65,  94]]], dtype=uint8),\n",
       " array([[[104, 127, 173],\n",
       "         [105, 128, 174],\n",
       "         [105, 128, 174],\n",
       "         ...,\n",
       "         [121, 148, 189],\n",
       "         [113, 140, 182],\n",
       "         [114, 139, 181]],\n",
       " \n",
       "        [[102, 125, 171],\n",
       "         [104, 127, 173],\n",
       "         [104, 127, 173],\n",
       "         ...,\n",
       "         [105, 128, 162],\n",
       "         [115, 138, 173],\n",
       "         [113, 136, 172]],\n",
       " \n",
       "        [[102, 125, 171],\n",
       "         [103, 126, 172],\n",
       "         [102, 125, 171],\n",
       "         ...,\n",
       "         [ 78,  95, 118],\n",
       "         [ 95, 115, 139],\n",
       "         [ 93, 110, 139]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 135, 186],\n",
       "         [115, 138, 186],\n",
       "         [114, 138, 185],\n",
       "         ...,\n",
       "         [115, 141, 188],\n",
       "         [114, 142, 189],\n",
       "         [114, 143, 188]],\n",
       " \n",
       "        [[116, 139, 188],\n",
       "         [119, 142, 190],\n",
       "         [120, 143, 191],\n",
       "         ...,\n",
       "         [115, 141, 188],\n",
       "         [114, 140, 187],\n",
       "         [113, 140, 186]],\n",
       " \n",
       "        [[116, 139, 187],\n",
       "         [119, 142, 190],\n",
       "         [120, 143, 191],\n",
       "         ...,\n",
       "         [115, 141, 188],\n",
       "         [114, 140, 187],\n",
       "         [113, 139, 186]]], dtype=uint8),\n",
       " array([[[ 28,  38,  47],\n",
       "         [ 34,  46,  53],\n",
       "         [ 27,  39,  45],\n",
       "         ...,\n",
       "         [115, 127, 130],\n",
       "         [ 94, 106, 113],\n",
       "         [ 98, 109, 115]],\n",
       " \n",
       "        [[ 33,  46,  55],\n",
       "         [ 34,  49,  57],\n",
       "         [ 30,  43,  51],\n",
       "         ...,\n",
       "         [ 94, 116, 129],\n",
       "         [107, 121, 128],\n",
       "         [100, 114, 121]],\n",
       " \n",
       "        [[ 36,  48,  64],\n",
       "         [ 36,  52,  68],\n",
       "         [ 33,  47,  59],\n",
       "         ...,\n",
       "         [ 92, 109, 124],\n",
       "         [ 91, 110, 123],\n",
       "         [ 99, 115, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[219, 233, 242],\n",
       "         [226, 241, 248],\n",
       "         [217, 234, 246],\n",
       "         ...,\n",
       "         [190, 223, 247],\n",
       "         [184, 220, 243],\n",
       "         [181, 213, 236]],\n",
       " \n",
       "        [[205, 224, 237],\n",
       "         [213, 231, 239],\n",
       "         [221, 236, 245],\n",
       "         ...,\n",
       "         [189, 224, 247],\n",
       "         [182, 217, 240],\n",
       "         [180, 217, 239]],\n",
       " \n",
       "        [[201, 220, 235],\n",
       "         [209, 228, 237],\n",
       "         [205, 223, 234],\n",
       "         ...,\n",
       "         [188, 220, 243],\n",
       "         [178, 209, 233],\n",
       "         [177, 210, 233]]], dtype=uint8),\n",
       " array([[[ 75,  82,  82],\n",
       "         [ 71,  76,  75],\n",
       "         [ 54,  60,  59],\n",
       "         ...,\n",
       "         [ 58,  56,  58],\n",
       "         [ 50,  53,  56],\n",
       "         [ 37,  39,  40]],\n",
       " \n",
       "        [[ 76,  82,  81],\n",
       "         [ 51,  57,  57],\n",
       "         [ 49,  54,  53],\n",
       "         ...,\n",
       "         [ 42,  41,  41],\n",
       "         [ 50,  52,  53],\n",
       "         [ 47,  49,  50]],\n",
       " \n",
       "        [[ 58,  66,  65],\n",
       "         [ 55,  64,  66],\n",
       "         [ 50,  59,  63],\n",
       "         ...,\n",
       "         [ 46,  44,  43],\n",
       "         [ 58,  55,  54],\n",
       "         [ 56,  56,  56]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 179, 193],\n",
       "         [167, 197, 209],\n",
       "         [167, 197, 207],\n",
       "         ...,\n",
       "         [180, 208, 226],\n",
       "         [181, 210, 226],\n",
       "         [176, 204, 223]],\n",
       " \n",
       "        [[150, 182, 196],\n",
       "         [168, 200, 211],\n",
       "         [172, 201, 216],\n",
       "         ...,\n",
       "         [170, 198, 218],\n",
       "         [162, 194, 214],\n",
       "         [165, 194, 216]],\n",
       " \n",
       "        [[160, 191, 203],\n",
       "         [158, 191, 206],\n",
       "         [149, 180, 200],\n",
       "         ...,\n",
       "         [172, 198, 216],\n",
       "         [165, 193, 212],\n",
       "         [163, 191, 211]]], dtype=uint8),\n",
       " array([[[134, 148, 170],\n",
       "         [137, 148, 170],\n",
       "         [143, 152, 173],\n",
       "         ...,\n",
       "         [ 17,  18,  14],\n",
       "         [ 19,  17,  14],\n",
       "         [ 21,  20,  10]],\n",
       " \n",
       "        [[138, 147, 168],\n",
       "         [142, 151, 172],\n",
       "         [138, 148, 167],\n",
       "         ...,\n",
       "         [ 25,  29,  30],\n",
       "         [ 16,  17,  12],\n",
       "         [ 22,  21,  15]],\n",
       " \n",
       "        [[141, 150, 168],\n",
       "         [143, 150, 169],\n",
       "         [139, 146, 165],\n",
       "         ...,\n",
       "         [ 39,  53,  59],\n",
       "         [  9,  10,  10],\n",
       "         [  9,  14,   6]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 112, 133],\n",
       "         [ 96, 113, 131],\n",
       "         [ 99, 112, 131],\n",
       "         ...,\n",
       "         [120, 136, 153],\n",
       "         [118, 134, 151],\n",
       "         [110, 128, 145]],\n",
       " \n",
       "        [[ 93, 110, 132],\n",
       "         [ 98, 114, 136],\n",
       "         [101, 115, 135],\n",
       "         ...,\n",
       "         [119, 134, 152],\n",
       "         [115, 131, 148],\n",
       "         [111, 128, 145]],\n",
       " \n",
       "        [[ 95, 110, 132],\n",
       "         [ 96, 113, 133],\n",
       "         [103, 115, 135],\n",
       "         ...,\n",
       "         [118, 133, 150],\n",
       "         [115, 131, 148],\n",
       "         [112, 128, 145]]], dtype=uint8),\n",
       " array([[[ 15,  25,  26],\n",
       "         [ 81, 104, 127],\n",
       "         [105, 128, 150],\n",
       "         ...,\n",
       "         [145, 162, 187],\n",
       "         [146, 164, 188],\n",
       "         [146, 164, 187]],\n",
       " \n",
       "        [[ 15,  23,  25],\n",
       "         [ 80, 105, 128],\n",
       "         [105, 129, 151],\n",
       "         ...,\n",
       "         [143, 165, 184],\n",
       "         [144, 166, 185],\n",
       "         [147, 166, 187]],\n",
       " \n",
       "        [[ 15,  24,  26],\n",
       "         [ 85, 105, 127],\n",
       "         [107, 128, 154],\n",
       "         ...,\n",
       "         [147, 163, 182],\n",
       "         [150, 166, 184],\n",
       "         [146, 167, 187]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 19,  34,  40],\n",
       "         [111, 141, 162],\n",
       "         [119, 149, 171],\n",
       "         ...,\n",
       "         [128, 155, 182],\n",
       "         [127, 155, 182],\n",
       "         [133, 156, 184]],\n",
       " \n",
       "        [[ 16,  26,  29],\n",
       "         [108, 139, 161],\n",
       "         [121, 149, 171],\n",
       "         ...,\n",
       "         [131, 155, 183],\n",
       "         [131, 155, 183],\n",
       "         [134, 156, 184]],\n",
       " \n",
       "        [[ 11,  19,  21],\n",
       "         [109, 134, 156],\n",
       "         [124, 152, 175],\n",
       "         ...,\n",
       "         [135, 156, 183],\n",
       "         [133, 154, 182],\n",
       "         [135, 156, 184]]], dtype=uint8),\n",
       " array([[[137, 148, 170],\n",
       "         [137, 147, 169],\n",
       "         [140, 148, 171],\n",
       "         ...,\n",
       "         [ 81,  89, 104],\n",
       "         [ 48,  59,  64],\n",
       "         [ 19,  17,  12]],\n",
       " \n",
       "        [[141, 150, 170],\n",
       "         [139, 148, 169],\n",
       "         [143, 151, 173],\n",
       "         ...,\n",
       "         [ 85,  98, 113],\n",
       "         [ 63,  80,  87],\n",
       "         [ 22,  27,  28]],\n",
       " \n",
       "        [[141, 148, 167],\n",
       "         [139, 146, 165],\n",
       "         [140, 148, 165],\n",
       "         ...,\n",
       "         [ 92, 107, 123],\n",
       "         [ 75,  95, 103],\n",
       "         [ 42,  52,  57]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 113, 136],\n",
       "         [ 95, 111, 131],\n",
       "         [ 99, 115, 135],\n",
       "         ...,\n",
       "         [108, 125, 145],\n",
       "         [112, 129, 148],\n",
       "         [118, 135, 152]],\n",
       " \n",
       "        [[ 96, 113, 135],\n",
       "         [ 93, 109, 132],\n",
       "         [ 97, 114, 135],\n",
       "         ...,\n",
       "         [112, 126, 146],\n",
       "         [116, 129, 149],\n",
       "         [117, 134, 151]],\n",
       " \n",
       "        [[ 94, 110, 129],\n",
       "         [ 96, 112, 134],\n",
       "         [ 98, 113, 134],\n",
       "         ...,\n",
       "         [116, 131, 150],\n",
       "         [116, 130, 148],\n",
       "         [120, 137, 153]]], dtype=uint8),\n",
       " array([[[ 81,  96, 115],\n",
       "         [104, 122, 144],\n",
       "         [ 74,  91, 110],\n",
       "         ...,\n",
       "         [ 87, 102, 140],\n",
       "         [ 90, 101, 141],\n",
       "         [ 92, 107, 145]],\n",
       " \n",
       "        [[ 87, 104, 122],\n",
       "         [ 81,  96, 112],\n",
       "         [ 53,  63,  72],\n",
       "         ...,\n",
       "         [ 80,  94, 126],\n",
       "         [ 78,  92, 127],\n",
       "         [ 80,  93, 131]],\n",
       " \n",
       "        [[ 79,  93, 106],\n",
       "         [ 46,  57,  62],\n",
       "         [ 33,  41,  46],\n",
       "         ...,\n",
       "         [ 64,  77, 106],\n",
       "         [ 66,  79, 111],\n",
       "         [ 76,  89, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  91, 118],\n",
       "         [ 64,  87, 117],\n",
       "         [ 63,  84, 116],\n",
       "         ...,\n",
       "         [ 48,  67, 102],\n",
       "         [ 49,  70, 102],\n",
       "         [ 53,  73, 109]],\n",
       " \n",
       "        [[ 70,  92, 115],\n",
       "         [ 62,  85, 111],\n",
       "         [ 61,  82, 114],\n",
       "         ...,\n",
       "         [ 49,  68, 103],\n",
       "         [ 48,  68, 104],\n",
       "         [ 52,  72, 111]],\n",
       " \n",
       "        [[ 70,  92, 116],\n",
       "         [ 59,  82, 109],\n",
       "         [ 59,  80, 110],\n",
       "         ...,\n",
       "         [ 42,  64,  99],\n",
       "         [ 49,  69, 104],\n",
       "         [ 55,  74, 113]]], dtype=uint8),\n",
       " array([[[ 59,  68,  94],\n",
       "         [ 61,  68,  92],\n",
       "         [ 51,  58,  80],\n",
       "         ...,\n",
       "         [ 39,  44,  49],\n",
       "         [ 51,  58,  71],\n",
       "         [ 37,  46,  53]],\n",
       " \n",
       "        [[ 52,  59,  86],\n",
       "         [ 47,  54,  75],\n",
       "         [ 39,  46,  63],\n",
       "         ...,\n",
       "         [ 38,  41,  46],\n",
       "         [ 41,  45,  50],\n",
       "         [ 43,  48,  52]],\n",
       " \n",
       "        [[ 48,  55,  78],\n",
       "         [ 39,  45,  61],\n",
       "         [ 37,  40,  54],\n",
       "         ...,\n",
       "         [ 42,  45,  50],\n",
       "         [ 45,  49,  54],\n",
       "         [ 47,  53,  58]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  65,  92],\n",
       "         [ 52,  64,  91],\n",
       "         [ 55,  68,  94],\n",
       "         ...,\n",
       "         [101, 108, 134],\n",
       "         [110, 117, 138],\n",
       "         [116, 122, 140]],\n",
       " \n",
       "        [[ 48,  63,  89],\n",
       "         [ 51,  63,  90],\n",
       "         [ 53,  65,  92],\n",
       "         ...,\n",
       "         [107, 113, 135],\n",
       "         [114, 120, 140],\n",
       "         [121, 126, 141]],\n",
       " \n",
       "        [[ 48,  63,  90],\n",
       "         [ 47,  61,  88],\n",
       "         [ 47,  61,  89],\n",
       "         ...,\n",
       "         [109, 115, 135],\n",
       "         [115, 122, 139],\n",
       "         [127, 128, 141]]], dtype=uint8),\n",
       " array([[[ 12,  17,  21],\n",
       "         [ 18,  27,  33],\n",
       "         [ 65,  85, 114],\n",
       "         ...,\n",
       "         [ 89, 104, 143],\n",
       "         [ 88, 103, 142],\n",
       "         [ 86, 102, 139]],\n",
       " \n",
       "        [[ 10,  15,  21],\n",
       "         [ 34,  39,  51],\n",
       "         [ 70,  91, 125],\n",
       "         ...,\n",
       "         [ 84, 100, 137],\n",
       "         [ 87, 103, 140],\n",
       "         [ 83,  99, 136]],\n",
       " \n",
       "        [[  9,  15,  19],\n",
       "         [ 35,  47,  63],\n",
       "         [ 70,  93, 126],\n",
       "         ...,\n",
       "         [ 79,  95, 126],\n",
       "         [ 76,  93, 124],\n",
       "         [ 75,  93, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  92, 128],\n",
       "         [ 71,  92, 130],\n",
       "         [ 68,  88, 129],\n",
       "         ...,\n",
       "         [ 35,  53,  79],\n",
       "         [ 36,  53,  80],\n",
       "         [ 37,  54,  81]],\n",
       " \n",
       "        [[ 69,  90, 128],\n",
       "         [ 70,  89, 131],\n",
       "         [ 69,  89, 130],\n",
       "         ...,\n",
       "         [ 35,  56,  81],\n",
       "         [ 36,  56,  81],\n",
       "         [ 38,  58,  83]],\n",
       " \n",
       "        [[ 70,  89, 126],\n",
       "         [ 71,  90, 128],\n",
       "         [ 69,  88, 129],\n",
       "         ...,\n",
       "         [ 39,  59,  84],\n",
       "         [ 41,  57,  85],\n",
       "         [ 39,  57,  84]]], dtype=uint8),\n",
       " array([[[ 75,  84,  90],\n",
       "         [ 84,  98, 113],\n",
       "         [113, 131, 152],\n",
       "         ...,\n",
       "         [216, 225, 234],\n",
       "         [219, 228, 238],\n",
       "         [222, 231, 240]],\n",
       " \n",
       "        [[ 70,  81,  95],\n",
       "         [ 97, 116, 134],\n",
       "         [121, 140, 161],\n",
       "         ...,\n",
       "         [211, 222, 226],\n",
       "         [212, 222, 229],\n",
       "         [212, 221, 230]],\n",
       " \n",
       "        [[ 81,  95, 111],\n",
       "         [108, 126, 147],\n",
       "         [125, 144, 165],\n",
       "         ...,\n",
       "         [205, 216, 220],\n",
       "         [206, 216, 221],\n",
       "         [211, 220, 229]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 166, 194],\n",
       "         [166, 181, 208],\n",
       "         [174, 189, 215],\n",
       "         ...,\n",
       "         [179, 194, 219],\n",
       "         [174, 187, 215],\n",
       "         [169, 183, 211]],\n",
       " \n",
       "        [[150, 164, 192],\n",
       "         [167, 181, 209],\n",
       "         [178, 191, 216],\n",
       "         ...,\n",
       "         [181, 196, 222],\n",
       "         [175, 189, 217],\n",
       "         [170, 184, 211]],\n",
       " \n",
       "        [[151, 164, 192],\n",
       "         [169, 179, 208],\n",
       "         [179, 190, 215],\n",
       "         ...,\n",
       "         [181, 196, 220],\n",
       "         [174, 188, 216],\n",
       "         [167, 181, 209]]], dtype=uint8),\n",
       " array([[[112, 129, 149],\n",
       "         [120, 137, 158],\n",
       "         [123, 142, 163],\n",
       "         ...,\n",
       "         [109, 132, 152],\n",
       "         [105, 129, 149],\n",
       "         [106, 129, 149]],\n",
       " \n",
       "        [[119, 136, 157],\n",
       "         [124, 141, 162],\n",
       "         [121, 140, 161],\n",
       "         ...,\n",
       "         [104, 128, 148],\n",
       "         [104, 127, 147],\n",
       "         [104, 128, 148]],\n",
       " \n",
       "        [[125, 143, 164],\n",
       "         [125, 144, 165],\n",
       "         [125, 144, 165],\n",
       "         ...,\n",
       "         [108, 127, 148],\n",
       "         [105, 124, 145],\n",
       "         [103, 126, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[150, 172, 194],\n",
       "         [149, 170, 197],\n",
       "         [143, 164, 191],\n",
       "         ...,\n",
       "         [120, 145, 177],\n",
       "         [122, 147, 179],\n",
       "         [123, 148, 180]],\n",
       " \n",
       "        [[153, 175, 197],\n",
       "         [151, 173, 197],\n",
       "         [148, 169, 196],\n",
       "         ...,\n",
       "         [125, 152, 178],\n",
       "         [125, 152, 178],\n",
       "         [123, 150, 176]],\n",
       " \n",
       "        [[158, 177, 200],\n",
       "         [154, 176, 201],\n",
       "         [151, 172, 199],\n",
       "         ...,\n",
       "         [130, 155, 181],\n",
       "         [127, 154, 180],\n",
       "         [128, 152, 181]]], dtype=uint8),\n",
       " array([[[119, 144, 181],\n",
       "         [139, 162, 189],\n",
       "         [117, 134, 163],\n",
       "         ...,\n",
       "         [120, 135, 189],\n",
       "         [130, 149, 195],\n",
       "         [148, 163, 205]],\n",
       " \n",
       "        [[116, 139, 176],\n",
       "         [144, 164, 192],\n",
       "         [109, 125, 153],\n",
       "         ...,\n",
       "         [118, 135, 187],\n",
       "         [126, 145, 191],\n",
       "         [142, 159, 202]],\n",
       " \n",
       "        [[117, 138, 175],\n",
       "         [126, 145, 173],\n",
       "         [114, 128, 155],\n",
       "         ...,\n",
       "         [113, 130, 178],\n",
       "         [121, 140, 187],\n",
       "         [133, 151, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  68, 104],\n",
       "         [123, 144, 184],\n",
       "         [157, 180, 212],\n",
       "         ...,\n",
       "         [149, 165, 212],\n",
       "         [148, 164, 210],\n",
       "         [149, 164, 210]],\n",
       " \n",
       "        [[ 61,  85, 123],\n",
       "         [125, 145, 183],\n",
       "         [157, 180, 212],\n",
       "         ...,\n",
       "         [150, 166, 213],\n",
       "         [148, 164, 211],\n",
       "         [149, 164, 210]],\n",
       " \n",
       "        [[ 81, 107, 145],\n",
       "         [123, 145, 182],\n",
       "         [158, 182, 212],\n",
       "         ...,\n",
       "         [152, 168, 215],\n",
       "         [148, 164, 211],\n",
       "         [149, 164, 210]]], dtype=uint8),\n",
       " array([[[36, 42, 42],\n",
       "         [41, 47, 52],\n",
       "         [46, 56, 60],\n",
       "         ...,\n",
       "         [55, 68, 85],\n",
       "         [57, 66, 85],\n",
       "         [58, 67, 84]],\n",
       " \n",
       "        [[42, 47, 51],\n",
       "         [48, 54, 59],\n",
       "         [49, 60, 64],\n",
       "         ...,\n",
       "         [54, 67, 83],\n",
       "         [54, 67, 83],\n",
       "         [57, 67, 83]],\n",
       " \n",
       "        [[48, 54, 59],\n",
       "         [49, 60, 64],\n",
       "         [49, 60, 64],\n",
       "         ...,\n",
       "         [54, 65, 81],\n",
       "         [58, 66, 83],\n",
       "         [58, 66, 83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[67, 78, 87],\n",
       "         [65, 80, 89],\n",
       "         [63, 78, 87],\n",
       "         ...,\n",
       "         [49, 65, 81],\n",
       "         [49, 64, 81],\n",
       "         [54, 67, 83]],\n",
       " \n",
       "        [[71, 80, 90],\n",
       "         [70, 80, 90],\n",
       "         [66, 79, 93],\n",
       "         ...,\n",
       "         [51, 67, 83],\n",
       "         [54, 67, 83],\n",
       "         [52, 63, 83]],\n",
       " \n",
       "        [[72, 81, 91],\n",
       "         [72, 81, 91],\n",
       "         [71, 81, 91],\n",
       "         ...,\n",
       "         [55, 68, 84],\n",
       "         [54, 67, 83],\n",
       "         [55, 68, 84]]], dtype=uint8),\n",
       " array([[[ 51,  61,  83],\n",
       "         [ 51,  62,  84],\n",
       "         [ 52,  63,  85],\n",
       "         ...,\n",
       "         [ 10,  13,  20],\n",
       "         [  9,  12,  11],\n",
       "         [ 10,  10,  10]],\n",
       " \n",
       "        [[ 51,  62,  84],\n",
       "         [ 52,  63,  85],\n",
       "         [ 54,  65,  87],\n",
       "         ...,\n",
       "         [ 14,  15,  28],\n",
       "         [  9,  14,  18],\n",
       "         [ 10,  10,  10]],\n",
       " \n",
       "        [[ 54,  65,  87],\n",
       "         [ 53,  64,  86],\n",
       "         [ 55,  66,  88],\n",
       "         ...,\n",
       "         [ 13,  18,  39],\n",
       "         [ 10,  14,  26],\n",
       "         [  8,  11,  13]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 45,  53, 100],\n",
       "         [ 46,  54, 101],\n",
       "         [ 43,  51,  98],\n",
       "         ...,\n",
       "         [ 30,  38,  85],\n",
       "         [ 30,  39,  84],\n",
       "         [ 30,  39,  79]],\n",
       " \n",
       "        [[ 46,  52, 104],\n",
       "         [ 46,  55, 101],\n",
       "         [ 46,  53, 103],\n",
       "         ...,\n",
       "         [ 29,  37,  84],\n",
       "         [ 30,  39,  84],\n",
       "         [ 30,  39,  79]],\n",
       " \n",
       "        [[ 42,  49, 100],\n",
       "         [ 44,  50, 103],\n",
       "         [ 46,  53, 101],\n",
       "         ...,\n",
       "         [ 31,  39,  87],\n",
       "         [ 30,  38,  80],\n",
       "         [ 33,  37,  78]]], dtype=uint8),\n",
       " array([[[144, 164, 213],\n",
       "         [148, 168, 216],\n",
       "         [145, 163, 211],\n",
       "         ...,\n",
       "         [ 93, 108, 146],\n",
       "         [ 92, 106, 141],\n",
       "         [ 88, 104, 134]],\n",
       " \n",
       "        [[136, 156, 203],\n",
       "         [140, 160, 208],\n",
       "         [137, 156, 203],\n",
       "         ...,\n",
       "         [ 88, 104, 141],\n",
       "         [ 89, 104, 137],\n",
       "         [ 91, 108, 137]],\n",
       " \n",
       "        [[134, 154, 202],\n",
       "         [124, 144, 191],\n",
       "         [125, 144, 191],\n",
       "         ...,\n",
       "         [ 87, 103, 141],\n",
       "         [ 88, 102, 136],\n",
       "         [ 91, 106, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 121, 175],\n",
       "         [ 92, 116, 172],\n",
       "         [ 83, 105, 159],\n",
       "         ...,\n",
       "         [109, 128, 175],\n",
       "         [105, 125, 173],\n",
       "         [103, 122, 170]],\n",
       " \n",
       "        [[103, 129, 183],\n",
       "         [100, 123, 179],\n",
       "         [ 94, 116, 171],\n",
       "         ...,\n",
       "         [104, 126, 174],\n",
       "         [105, 127, 175],\n",
       "         [104, 126, 174]],\n",
       " \n",
       "        [[100, 123, 179],\n",
       "         [101, 125, 179],\n",
       "         [100, 121, 176],\n",
       "         ...,\n",
       "         [107, 130, 179],\n",
       "         [107, 129, 177],\n",
       "         [104, 126, 174]]], dtype=uint8),\n",
       " array([[[ 91, 114, 164],\n",
       "         [ 92, 116, 166],\n",
       "         [ 92, 117, 167],\n",
       "         ...,\n",
       "         [141, 162, 213],\n",
       "         [142, 163, 214],\n",
       "         [138, 159, 210]],\n",
       " \n",
       "        [[ 92, 115, 165],\n",
       "         [ 93, 116, 166],\n",
       "         [ 96, 120, 170],\n",
       "         ...,\n",
       "         [143, 166, 215],\n",
       "         [144, 167, 217],\n",
       "         [141, 164, 214]],\n",
       " \n",
       "        [[ 87, 110, 160],\n",
       "         [ 94, 117, 167],\n",
       "         [ 95, 118, 169],\n",
       "         ...,\n",
       "         [144, 167, 215],\n",
       "         [145, 167, 215],\n",
       "         [144, 164, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 92, 115, 163],\n",
       "         [ 97, 120, 170],\n",
       "         [ 91, 115, 167],\n",
       "         ...,\n",
       "         [ 96, 122, 176],\n",
       "         [ 87, 113, 166],\n",
       "         [ 87, 113, 168]],\n",
       " \n",
       "        [[ 95, 117, 168],\n",
       "         [ 95, 117, 168],\n",
       "         [ 89, 111, 164],\n",
       "         ...,\n",
       "         [ 99, 123, 177],\n",
       "         [ 88, 114, 168],\n",
       "         [ 98, 124, 179]],\n",
       " \n",
       "        [[ 97, 119, 170],\n",
       "         [ 98, 121, 173],\n",
       "         [ 94, 118, 170],\n",
       "         ...,\n",
       "         [ 90, 114, 168],\n",
       "         [ 93, 119, 172],\n",
       "         [100, 126, 181]]], dtype=uint8),\n",
       " array([[[138, 157, 184],\n",
       "         [138, 161, 186],\n",
       "         [142, 164, 189],\n",
       "         ...,\n",
       "         [120, 147, 169],\n",
       "         [115, 138, 162],\n",
       "         [ 96, 114, 132]],\n",
       " \n",
       "        [[138, 154, 180],\n",
       "         [141, 161, 184],\n",
       "         [143, 162, 184],\n",
       "         ...,\n",
       "         [118, 145, 165],\n",
       "         [113, 139, 161],\n",
       "         [100, 121, 140]],\n",
       " \n",
       "        [[144, 160, 183],\n",
       "         [140, 157, 180],\n",
       "         [145, 161, 183],\n",
       "         ...,\n",
       "         [116, 141, 161],\n",
       "         [113, 141, 162],\n",
       "         [103, 125, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 166, 191],\n",
       "         [132, 162, 187],\n",
       "         [132, 161, 188],\n",
       "         ...,\n",
       "         [137, 168, 191],\n",
       "         [139, 170, 193],\n",
       "         [138, 170, 190]],\n",
       " \n",
       "        [[135, 164, 192],\n",
       "         [136, 164, 193],\n",
       "         [136, 165, 192],\n",
       "         ...,\n",
       "         [136, 168, 191],\n",
       "         [137, 169, 193],\n",
       "         [139, 170, 191]],\n",
       " \n",
       "        [[136, 164, 194],\n",
       "         [138, 167, 194],\n",
       "         [139, 169, 194],\n",
       "         ...,\n",
       "         [140, 171, 194],\n",
       "         [138, 169, 192],\n",
       "         [136, 167, 190]]], dtype=uint8),\n",
       " array([[[140, 161, 188],\n",
       "         [134, 155, 182],\n",
       "         [135, 156, 183],\n",
       "         ...,\n",
       "         [ 83, 100, 121],\n",
       "         [ 80,  97, 118],\n",
       "         [ 76,  93, 114]],\n",
       " \n",
       "        [[145, 162, 189],\n",
       "         [142, 159, 186],\n",
       "         [137, 156, 183],\n",
       "         ...,\n",
       "         [ 81,  98, 119],\n",
       "         [ 80,  97, 118],\n",
       "         [ 76,  93, 114]],\n",
       " \n",
       "        [[144, 158, 185],\n",
       "         [140, 154, 182],\n",
       "         [137, 154, 181],\n",
       "         ...,\n",
       "         [ 80,  97, 118],\n",
       "         [ 80,  97, 118],\n",
       "         [ 78,  95, 116]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82, 101, 138],\n",
       "         [ 81, 100, 138],\n",
       "         [ 84, 102, 139],\n",
       "         ...,\n",
       "         [107, 121, 149],\n",
       "         [107, 121, 150],\n",
       "         [105, 120, 145]],\n",
       " \n",
       "        [[ 80,  98, 135],\n",
       "         [ 88, 107, 144],\n",
       "         [ 90, 109, 146],\n",
       "         ...,\n",
       "         [110, 126, 153],\n",
       "         [108, 121, 149],\n",
       "         [104, 119, 143]],\n",
       " \n",
       "        [[ 84, 102, 139],\n",
       "         [ 91, 110, 146],\n",
       "         [ 93, 112, 149],\n",
       "         ...,\n",
       "         [105, 125, 153],\n",
       "         [106, 120, 148],\n",
       "         [106, 121, 146]]], dtype=uint8),\n",
       " array([[[221, 226, 247],\n",
       "         [220, 225, 245],\n",
       "         [219, 224, 245],\n",
       "         ...,\n",
       "         [138, 155, 188],\n",
       "         [134, 154, 181],\n",
       "         [123, 143, 170]],\n",
       " \n",
       "        [[217, 222, 243],\n",
       "         [218, 223, 244],\n",
       "         [216, 223, 240],\n",
       "         ...,\n",
       "         [139, 160, 187],\n",
       "         [138, 160, 187],\n",
       "         [129, 150, 177]],\n",
       " \n",
       "        [[216, 222, 241],\n",
       "         [213, 221, 238],\n",
       "         [214, 221, 238],\n",
       "         ...,\n",
       "         [139, 160, 187],\n",
       "         [138, 159, 186],\n",
       "         [134, 156, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[178, 192, 220],\n",
       "         [179, 193, 221],\n",
       "         [180, 194, 222],\n",
       "         ...,\n",
       "         [188, 198, 222],\n",
       "         [180, 191, 217],\n",
       "         [167, 179, 208]],\n",
       " \n",
       "        [[178, 192, 220],\n",
       "         [182, 196, 224],\n",
       "         [184, 199, 226],\n",
       "         ...,\n",
       "         [186, 198, 224],\n",
       "         [185, 191, 220],\n",
       "         [168, 174, 208]],\n",
       " \n",
       "        [[177, 191, 219],\n",
       "         [182, 197, 223],\n",
       "         [185, 200, 225],\n",
       "         ...,\n",
       "         [181, 196, 221],\n",
       "         [174, 186, 214],\n",
       "         [169, 175, 209]]], dtype=uint8),\n",
       " array([[[26, 35, 69],\n",
       "         [25, 33, 64],\n",
       "         [24, 31, 59],\n",
       "         ...,\n",
       "         [30, 43, 66],\n",
       "         [30, 43, 66],\n",
       "         [38, 50, 74]],\n",
       " \n",
       "        [[28, 35, 66],\n",
       "         [24, 31, 59],\n",
       "         [23, 30, 55],\n",
       "         ...,\n",
       "         [29, 42, 64],\n",
       "         [28, 41, 63],\n",
       "         [33, 45, 68]],\n",
       " \n",
       "        [[25, 34, 63],\n",
       "         [20, 26, 53],\n",
       "         [21, 28, 52],\n",
       "         ...,\n",
       "         [31, 42, 64],\n",
       "         [33, 45, 68],\n",
       "         [34, 44, 68]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[28, 41, 78],\n",
       "         [28, 40, 75],\n",
       "         [26, 38, 74],\n",
       "         ...,\n",
       "         [36, 47, 77],\n",
       "         [36, 46, 76],\n",
       "         [38, 48, 78]],\n",
       " \n",
       "        [[24, 38, 75],\n",
       "         [27, 40, 75],\n",
       "         [26, 37, 72],\n",
       "         ...,\n",
       "         [35, 46, 76],\n",
       "         [34, 45, 76],\n",
       "         [35, 47, 77]],\n",
       " \n",
       "        [[27, 39, 78],\n",
       "         [26, 39, 75],\n",
       "         [23, 35, 71],\n",
       "         ...,\n",
       "         [37, 48, 81],\n",
       "         [35, 47, 79],\n",
       "         [38, 50, 81]]], dtype=uint8),\n",
       " array([[[115, 115, 140],\n",
       "         [124, 122, 144],\n",
       "         [104, 104, 127],\n",
       "         ...,\n",
       "         [ 46,  59, 108],\n",
       "         [ 45,  59, 111],\n",
       "         [ 45,  59, 113]],\n",
       " \n",
       "        [[112, 109, 135],\n",
       "         [ 99,  94, 121],\n",
       "         [111, 108, 130],\n",
       "         ...,\n",
       "         [ 48,  60, 109],\n",
       "         [ 46,  59, 111],\n",
       "         [ 47,  61, 114]],\n",
       " \n",
       "        [[132, 132, 156],\n",
       "         [112, 109, 135],\n",
       "         [106, 103, 126],\n",
       "         ...,\n",
       "         [ 46,  56, 105],\n",
       "         [ 50,  62, 114],\n",
       "         [ 51,  64, 118]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 126, 160],\n",
       "         [101, 105, 142],\n",
       "         [ 70,  73, 113],\n",
       "         ...,\n",
       "         [105, 118, 170],\n",
       "         [ 91, 105, 158],\n",
       "         [ 81,  94, 150]],\n",
       " \n",
       "        [[116, 113, 141],\n",
       "         [ 97, 100, 135],\n",
       "         [ 88,  90, 131],\n",
       "         ...,\n",
       "         [106, 119, 171],\n",
       "         [ 93, 106, 158],\n",
       "         [ 82,  95, 151]],\n",
       " \n",
       "        [[151, 146, 173],\n",
       "         [111, 113, 147],\n",
       "         [104, 106, 142],\n",
       "         ...,\n",
       "         [111, 122, 171],\n",
       "         [ 94, 107, 159],\n",
       "         [ 84,  97, 152]]], dtype=uint8),\n",
       " array([[[117, 136, 179],\n",
       "         [119, 139, 180],\n",
       "         [116, 135, 177],\n",
       "         ...,\n",
       "         [114, 131, 158],\n",
       "         [118, 133, 158],\n",
       "         [116, 131, 151]],\n",
       " \n",
       "        [[110, 130, 171],\n",
       "         [115, 135, 176],\n",
       "         [110, 131, 169],\n",
       "         ...,\n",
       "         [112, 129, 156],\n",
       "         [117, 132, 158],\n",
       "         [116, 130, 152]],\n",
       " \n",
       "        [[104, 124, 166],\n",
       "         [ 98, 119, 160],\n",
       "         [101, 122, 160],\n",
       "         ...,\n",
       "         [112, 129, 157],\n",
       "         [116, 130, 158],\n",
       "         [120, 133, 155]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 129, 170],\n",
       "         [107, 131, 173],\n",
       "         [107, 132, 173],\n",
       "         ...,\n",
       "         [105, 126, 161],\n",
       "         [103, 123, 158],\n",
       "         [101, 122, 154]],\n",
       " \n",
       "        [[109, 134, 178],\n",
       "         [111, 135, 177],\n",
       "         [108, 134, 175],\n",
       "         ...,\n",
       "         [103, 126, 160],\n",
       "         [102, 124, 159],\n",
       "         [106, 127, 161]],\n",
       " \n",
       "        [[114, 139, 183],\n",
       "         [114, 138, 180],\n",
       "         [115, 140, 181],\n",
       "         ...,\n",
       "         [106, 129, 165],\n",
       "         [107, 131, 166],\n",
       "         [109, 129, 163]]], dtype=uint8),\n",
       " array([[[ 28,  45,  96],\n",
       "         [ 35,  57, 108],\n",
       "         [ 38,  64, 119],\n",
       "         ...,\n",
       "         [ 70, 105, 178],\n",
       "         [ 70, 105, 178],\n",
       "         [ 70, 108, 180]],\n",
       " \n",
       "        [[ 27,  49,  99],\n",
       "         [ 34,  60, 111],\n",
       "         [ 36,  68, 120],\n",
       "         ...,\n",
       "         [ 69, 104, 177],\n",
       "         [ 67, 102, 175],\n",
       "         [ 69, 107, 179]],\n",
       " \n",
       "        [[ 29,  52, 102],\n",
       "         [ 34,  62, 112],\n",
       "         [ 36,  68, 121],\n",
       "         ...,\n",
       "         [ 68, 105, 174],\n",
       "         [ 67, 103, 172],\n",
       "         [ 66, 104, 176]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 45,  73, 137],\n",
       "         [ 49,  81, 144],\n",
       "         [ 51,  84, 147],\n",
       "         ...,\n",
       "         [ 40,  69, 130],\n",
       "         [ 40,  69, 130],\n",
       "         [ 44,  73, 134]],\n",
       " \n",
       "        [[ 45,  73, 137],\n",
       "         [ 49,  81, 144],\n",
       "         [ 50,  83, 146],\n",
       "         ...,\n",
       "         [ 42,  71, 132],\n",
       "         [ 42,  71, 132],\n",
       "         [ 39,  68, 129]],\n",
       " \n",
       "        [[ 45,  73, 137],\n",
       "         [ 49,  81, 144],\n",
       "         [ 49,  82, 145],\n",
       "         ...,\n",
       "         [ 44,  72, 133],\n",
       "         [ 44,  73, 134],\n",
       "         [ 38,  67, 128]]], dtype=uint8),\n",
       " array([[[ 79, 101, 133],\n",
       "         [ 78, 102, 134],\n",
       "         [ 82, 103, 135],\n",
       "         ...,\n",
       "         [112, 135, 173],\n",
       "         [112, 134, 175],\n",
       "         [116, 138, 180]],\n",
       " \n",
       "        [[ 80,  99, 132],\n",
       "         [ 81, 102, 134],\n",
       "         [ 85, 104, 137],\n",
       "         ...,\n",
       "         [ 96, 120, 157],\n",
       "         [112, 134, 174],\n",
       "         [114, 134, 177]],\n",
       " \n",
       "        [[ 83, 102, 135],\n",
       "         [ 86, 104, 137],\n",
       "         [ 88, 106, 139],\n",
       "         ...,\n",
       "         [ 90, 113, 151],\n",
       "         [ 92, 116, 157],\n",
       "         [ 98, 122, 164]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 79, 101, 138],\n",
       "         [ 76,  98, 136],\n",
       "         [ 74,  99, 136],\n",
       "         ...,\n",
       "         [ 73,  97, 139],\n",
       "         [ 70,  93, 136],\n",
       "         [ 75, 100, 142]],\n",
       " \n",
       "        [[ 79, 102, 139],\n",
       "         [ 78, 103, 141],\n",
       "         [ 77, 103, 142],\n",
       "         ...,\n",
       "         [ 72,  96, 138],\n",
       "         [ 73,  95, 137],\n",
       "         [ 76, 103, 144]],\n",
       " \n",
       "        [[ 80, 106, 143],\n",
       "         [ 77, 104, 142],\n",
       "         [ 79, 106, 144],\n",
       "         ...,\n",
       "         [ 66,  90, 132],\n",
       "         [ 70,  93, 135],\n",
       "         [ 80, 108, 149]]], dtype=uint8),\n",
       " array([[[ 57,  66,  95],\n",
       "         [ 53,  64,  94],\n",
       "         [ 55,  65,  96],\n",
       "         ...,\n",
       "         [ 84, 102, 140],\n",
       "         [ 87, 105, 145],\n",
       "         [ 86, 103, 145]],\n",
       " \n",
       "        [[ 55,  62,  90],\n",
       "         [ 57,  66,  94],\n",
       "         [ 61,  69,  97],\n",
       "         ...,\n",
       "         [ 78,  94, 131],\n",
       "         [ 83, 102, 142],\n",
       "         [ 82, 101, 140]],\n",
       " \n",
       "        [[ 55,  60,  88],\n",
       "         [ 59,  65,  91],\n",
       "         [ 59,  65,  90],\n",
       "         ...,\n",
       "         [ 73,  85, 121],\n",
       "         [ 79,  95, 135],\n",
       "         [ 83, 100, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 46,  62, 105],\n",
       "         [ 47,  63, 106],\n",
       "         [ 49,  66, 108],\n",
       "         ...,\n",
       "         [ 52,  70, 113],\n",
       "         [ 53,  71, 114],\n",
       "         [ 54,  73, 118]],\n",
       " \n",
       "        [[ 46,  64, 108],\n",
       "         [ 45,  64, 108],\n",
       "         [ 49,  68, 112],\n",
       "         ...,\n",
       "         [ 53,  72, 115],\n",
       "         [ 53,  72, 115],\n",
       "         [ 54,  73, 117]],\n",
       " \n",
       "        [[ 51,  68, 114],\n",
       "         [ 48,  66, 111],\n",
       "         [ 51,  70, 115],\n",
       "         ...,\n",
       "         [ 51,  71, 112],\n",
       "         [ 49,  68, 111],\n",
       "         [ 49,  69, 114]]], dtype=uint8),\n",
       " array([[[ 81, 100, 137],\n",
       "         [ 81,  98, 136],\n",
       "         [ 80,  99, 134],\n",
       "         ...,\n",
       "         [199, 210, 218],\n",
       "         [136, 148, 154],\n",
       "         [121, 130, 134]],\n",
       " \n",
       "        [[ 77,  94, 132],\n",
       "         [ 81,  97, 136],\n",
       "         [ 82,  98, 135],\n",
       "         ...,\n",
       "         [201, 214, 223],\n",
       "         [140, 152, 159],\n",
       "         [115, 126, 131]],\n",
       " \n",
       "        [[ 78,  95, 134],\n",
       "         [ 76,  94, 131],\n",
       "         [ 79,  95, 131],\n",
       "         ...,\n",
       "         [198, 211, 219],\n",
       "         [139, 153, 160],\n",
       "         [107, 119, 125]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[166, 191, 219],\n",
       "         [181, 203, 227],\n",
       "         [200, 221, 242],\n",
       "         ...,\n",
       "         [231, 246, 252],\n",
       "         [228, 244, 251],\n",
       "         [229, 245, 252]],\n",
       " \n",
       "        [[161, 184, 215],\n",
       "         [184, 207, 229],\n",
       "         [206, 227, 249],\n",
       "         ...,\n",
       "         [239, 251, 254],\n",
       "         [238, 251, 252],\n",
       "         [232, 247, 252]],\n",
       " \n",
       "        [[150, 173, 205],\n",
       "         [185, 209, 232],\n",
       "         [208, 229, 250],\n",
       "         ...,\n",
       "         [232, 244, 248],\n",
       "         [243, 253, 251],\n",
       "         [237, 250, 253]]], dtype=uint8),\n",
       " array([[[48, 46, 68],\n",
       "         [50, 47, 69],\n",
       "         [53, 48, 69],\n",
       "         ...,\n",
       "         [82, 70, 78],\n",
       "         [83, 70, 73],\n",
       "         [73, 59, 61]],\n",
       " \n",
       "        [[48, 45, 66],\n",
       "         [46, 45, 64],\n",
       "         [48, 42, 61],\n",
       "         ...,\n",
       "         [82, 71, 78],\n",
       "         [81, 70, 75],\n",
       "         [76, 63, 65]],\n",
       " \n",
       "        [[45, 43, 63],\n",
       "         [45, 40, 60],\n",
       "         [43, 38, 54],\n",
       "         ...,\n",
       "         [82, 71, 79],\n",
       "         [85, 73, 79],\n",
       "         [78, 64, 67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[44, 44, 70],\n",
       "         [44, 44, 68],\n",
       "         [44, 41, 66],\n",
       "         ...,\n",
       "         [62, 59, 75],\n",
       "         [65, 64, 80],\n",
       "         [69, 69, 84]],\n",
       " \n",
       "        [[42, 42, 70],\n",
       "         [44, 43, 69],\n",
       "         [44, 42, 67],\n",
       "         ...,\n",
       "         [61, 61, 77],\n",
       "         [67, 67, 83],\n",
       "         [72, 71, 87]],\n",
       " \n",
       "        [[46, 47, 74],\n",
       "         [48, 46, 72],\n",
       "         [44, 44, 68],\n",
       "         ...,\n",
       "         [64, 62, 81],\n",
       "         [66, 65, 82],\n",
       "         [74, 73, 89]]], dtype=uint8),\n",
       " array([[[27, 26, 48],\n",
       "         [31, 32, 56],\n",
       "         [32, 36, 61],\n",
       "         ...,\n",
       "         [37, 39, 70],\n",
       "         [37, 39, 70],\n",
       "         [38, 40, 70]],\n",
       " \n",
       "        [[28, 27, 51],\n",
       "         [34, 35, 61],\n",
       "         [33, 36, 64],\n",
       "         ...,\n",
       "         [37, 39, 70],\n",
       "         [37, 39, 70],\n",
       "         [38, 39, 70]],\n",
       " \n",
       "        [[30, 30, 54],\n",
       "         [36, 37, 63],\n",
       "         [34, 37, 65],\n",
       "         ...,\n",
       "         [40, 40, 70],\n",
       "         [37, 39, 69],\n",
       "         [37, 39, 69]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[33, 43, 77],\n",
       "         [32, 41, 75],\n",
       "         [30, 39, 72],\n",
       "         ...,\n",
       "         [48, 57, 91],\n",
       "         [47, 56, 90],\n",
       "         [47, 57, 92]],\n",
       " \n",
       "        [[32, 44, 78],\n",
       "         [34, 44, 78],\n",
       "         [33, 42, 76],\n",
       "         ...,\n",
       "         [46, 55, 89],\n",
       "         [47, 56, 92],\n",
       "         [45, 54, 90]],\n",
       " \n",
       "        [[36, 46, 80],\n",
       "         [36, 46, 80],\n",
       "         [36, 45, 80],\n",
       "         ...,\n",
       "         [43, 53, 87],\n",
       "         [45, 53, 90],\n",
       "         [43, 52, 89]]], dtype=uint8),\n",
       " array([[[176, 174, 174],\n",
       "         [181, 179, 182],\n",
       "         [188, 185, 186],\n",
       "         ...,\n",
       "         [183, 178, 179],\n",
       "         [181, 179, 179],\n",
       "         [180, 180, 180]],\n",
       " \n",
       "        [[177, 175, 175],\n",
       "         [181, 180, 182],\n",
       "         [188, 185, 185],\n",
       "         ...,\n",
       "         [181, 176, 177],\n",
       "         [182, 179, 180],\n",
       "         [179, 179, 179]],\n",
       " \n",
       "        [[178, 177, 177],\n",
       "         [184, 181, 181],\n",
       "         [193, 189, 185],\n",
       "         ...,\n",
       "         [172, 167, 169],\n",
       "         [174, 171, 173],\n",
       "         [172, 171, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[198, 198, 198],\n",
       "         [200, 200, 200],\n",
       "         [202, 202, 202],\n",
       "         ...,\n",
       "         [218, 215, 211],\n",
       "         [220, 215, 212],\n",
       "         [225, 218, 215]],\n",
       " \n",
       "        [[199, 199, 199],\n",
       "         [203, 203, 203],\n",
       "         [205, 205, 205],\n",
       "         ...,\n",
       "         [219, 216, 212],\n",
       "         [222, 218, 213],\n",
       "         [228, 222, 217]],\n",
       " \n",
       "        [[201, 201, 201],\n",
       "         [204, 204, 204],\n",
       "         [207, 207, 207],\n",
       "         ...,\n",
       "         [218, 215, 210],\n",
       "         [221, 218, 210],\n",
       "         [230, 225, 216]]], dtype=uint8),\n",
       " array([[[ 39,  63, 109],\n",
       "         [ 41,  69, 113],\n",
       "         [ 49,  81, 122],\n",
       "         ...,\n",
       "         [ 51,  75, 119],\n",
       "         [ 69,  97, 141],\n",
       "         [ 61,  93, 136]],\n",
       " \n",
       "        [[ 52,  78, 124],\n",
       "         [ 55,  83, 127],\n",
       "         [ 57,  87, 128],\n",
       "         ...,\n",
       "         [ 67,  89, 134],\n",
       "         [ 49,  76, 120],\n",
       "         [ 48,  78, 122]],\n",
       " \n",
       "        [[ 86, 109, 155],\n",
       "         [ 83, 105, 150],\n",
       "         [ 87, 108, 150],\n",
       "         ...,\n",
       "         [ 89, 109, 154],\n",
       "         [ 69,  94, 138],\n",
       "         [ 55,  83, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 127, 187],\n",
       "         [113, 137, 196],\n",
       "         [119, 137, 194],\n",
       "         ...,\n",
       "         [ 92, 125, 171],\n",
       "         [ 92, 122, 167],\n",
       "         [109, 136, 180]],\n",
       " \n",
       "        [[105, 130, 190],\n",
       "         [122, 143, 199],\n",
       "         [136, 152, 202],\n",
       "         ...,\n",
       "         [ 97, 126, 173],\n",
       "         [ 94, 121, 167],\n",
       "         [105, 136, 179]],\n",
       " \n",
       "        [[120, 142, 201],\n",
       "         [126, 144, 198],\n",
       "         [134, 148, 195],\n",
       "         ...,\n",
       "         [104, 133, 180],\n",
       "         [109, 135, 181],\n",
       "         [108, 139, 183]]], dtype=uint8),\n",
       " array([[[145, 160, 206],\n",
       "         [129, 144, 189],\n",
       "         [ 66,  82, 121],\n",
       "         ...,\n",
       "         [156, 169, 215],\n",
       "         [160, 170, 215],\n",
       "         [166, 176, 220]],\n",
       " \n",
       "        [[103, 115, 156],\n",
       "         [ 90, 103, 144],\n",
       "         [105, 118, 159],\n",
       "         ...,\n",
       "         [ 99, 112, 160],\n",
       "         [123, 135, 182],\n",
       "         [124, 137, 184]],\n",
       " \n",
       "        [[ 79,  89, 130],\n",
       "         [ 85,  96, 136],\n",
       "         [108, 115, 163],\n",
       "         ...,\n",
       "         [ 81,  96, 145],\n",
       "         [123, 137, 186],\n",
       "         [119, 133, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[155, 176, 231],\n",
       "         [150, 168, 228],\n",
       "         [146, 164, 222],\n",
       "         ...,\n",
       "         [197, 215, 251],\n",
       "         [187, 206, 244],\n",
       "         [191, 208, 251]],\n",
       " \n",
       "        [[163, 185, 232],\n",
       "         [160, 181, 232],\n",
       "         [158, 177, 227],\n",
       "         ...,\n",
       "         [198, 216, 253],\n",
       "         [190, 208, 247],\n",
       "         [189, 206, 250]],\n",
       " \n",
       "        [[174, 190, 237],\n",
       "         [171, 187, 234],\n",
       "         [167, 182, 232],\n",
       "         ...,\n",
       "         [199, 215, 252],\n",
       "         [193, 208, 247],\n",
       "         [188, 201, 245]]], dtype=uint8),\n",
       " array([[[100, 137, 176],\n",
       "         [102, 137, 179],\n",
       "         [110, 145, 188],\n",
       "         ...,\n",
       "         [140, 166, 213],\n",
       "         [140, 166, 213],\n",
       "         [138, 163, 210]],\n",
       " \n",
       "        [[104, 140, 178],\n",
       "         [109, 145, 183],\n",
       "         [111, 146, 186],\n",
       "         ...,\n",
       "         [135, 161, 207],\n",
       "         [135, 161, 207],\n",
       "         [132, 161, 206]],\n",
       " \n",
       "        [[106, 142, 180],\n",
       "         [113, 145, 185],\n",
       "         [115, 148, 187],\n",
       "         ...,\n",
       "         [130, 156, 202],\n",
       "         [128, 156, 202],\n",
       "         [132, 162, 206]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 156, 200],\n",
       "         [118, 153, 197],\n",
       "         [116, 151, 195],\n",
       "         ...,\n",
       "         [112, 145, 190],\n",
       "         [110, 144, 188],\n",
       "         [109, 142, 187]],\n",
       " \n",
       "        [[124, 159, 203],\n",
       "         [120, 154, 199],\n",
       "         [116, 152, 197],\n",
       "         ...,\n",
       "         [114, 148, 192],\n",
       "         [112, 145, 190],\n",
       "         [110, 144, 187]],\n",
       " \n",
       "        [[127, 161, 207],\n",
       "         [123, 159, 205],\n",
       "         [121, 157, 203],\n",
       "         ...,\n",
       "         [115, 150, 194],\n",
       "         [112, 147, 191],\n",
       "         [110, 144, 187]]], dtype=uint8),\n",
       " array([[[144, 167, 213],\n",
       "         [147, 169, 214],\n",
       "         [146, 171, 216],\n",
       "         ...,\n",
       "         [132, 150, 187],\n",
       "         [125, 146, 178],\n",
       "         [117, 132, 161]],\n",
       " \n",
       "        [[142, 165, 210],\n",
       "         [140, 163, 208],\n",
       "         [134, 159, 202],\n",
       "         ...,\n",
       "         [132, 152, 189],\n",
       "         [123, 144, 176],\n",
       "         [122, 138, 167]],\n",
       " \n",
       "        [[135, 159, 202],\n",
       "         [132, 155, 196],\n",
       "         [112, 135, 174],\n",
       "         ...,\n",
       "         [137, 157, 192],\n",
       "         [127, 145, 178],\n",
       "         [122, 139, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 168, 217],\n",
       "         [135, 162, 212],\n",
       "         [140, 168, 215],\n",
       "         ...,\n",
       "         [139, 165, 210],\n",
       "         [138, 164, 209],\n",
       "         [138, 165, 209]],\n",
       " \n",
       "        [[138, 167, 218],\n",
       "         [134, 161, 211],\n",
       "         [138, 164, 211],\n",
       "         ...,\n",
       "         [135, 161, 208],\n",
       "         [141, 167, 214],\n",
       "         [141, 167, 212]],\n",
       " \n",
       "        [[136, 166, 217],\n",
       "         [135, 163, 211],\n",
       "         [131, 159, 206],\n",
       "         ...,\n",
       "         [140, 166, 213],\n",
       "         [141, 167, 213],\n",
       "         [141, 168, 212]]], dtype=uint8),\n",
       " array([[[ 65, 103, 174],\n",
       "         [ 62, 100, 172],\n",
       "         [ 62,  99, 173],\n",
       "         ...,\n",
       "         [ 47,  80, 149],\n",
       "         [ 51,  84, 148],\n",
       "         [ 50,  84, 146]],\n",
       " \n",
       "        [[ 62, 100, 172],\n",
       "         [ 62,  98, 168],\n",
       "         [ 61,  97, 167],\n",
       "         ...,\n",
       "         [ 51,  84, 149],\n",
       "         [ 53,  86, 149],\n",
       "         [ 52,  85, 148]],\n",
       " \n",
       "        [[ 60,  95, 168],\n",
       "         [ 61,  97, 166],\n",
       "         [ 56,  92, 157],\n",
       "         ...,\n",
       "         [ 58,  89, 150],\n",
       "         [ 54,  87, 150],\n",
       "         [ 52,  85, 148]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  89, 163],\n",
       "         [ 53,  88, 161],\n",
       "         [ 52,  86, 159],\n",
       "         ...,\n",
       "         [ 64,  99, 173],\n",
       "         [ 63,  99, 169],\n",
       "         [ 63,  99, 169]],\n",
       " \n",
       "        [[ 55,  90, 164],\n",
       "         [ 53,  88, 162],\n",
       "         [ 50,  85, 159],\n",
       "         ...,\n",
       "         [ 64,  99, 173],\n",
       "         [ 64,  99, 172],\n",
       "         [ 62,  97, 170]],\n",
       " \n",
       "        [[ 57,  91, 167],\n",
       "         [ 55,  88, 165],\n",
       "         [ 52,  86, 162],\n",
       "         ...,\n",
       "         [ 62,  97, 171],\n",
       "         [ 61,  96, 170],\n",
       "         [ 62,  97, 171]]], dtype=uint8),\n",
       " array([[[173, 190, 223],\n",
       "         [172, 188, 223],\n",
       "         [164, 182, 217],\n",
       "         ...,\n",
       "         [161, 175, 207],\n",
       "         [149, 164, 196],\n",
       "         [149, 162, 194]],\n",
       " \n",
       "        [[172, 192, 225],\n",
       "         [166, 186, 220],\n",
       "         [159, 179, 214],\n",
       "         ...,\n",
       "         [154, 173, 205],\n",
       "         [159, 175, 206],\n",
       "         [162, 177, 209]],\n",
       " \n",
       "        [[173, 192, 228],\n",
       "         [166, 186, 221],\n",
       "         [159, 178, 215],\n",
       "         ...,\n",
       "         [154, 174, 210],\n",
       "         [156, 174, 205],\n",
       "         [160, 179, 210]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[193, 205, 242],\n",
       "         [192, 203, 239],\n",
       "         [186, 199, 235],\n",
       "         ...,\n",
       "         [177, 193, 225],\n",
       "         [178, 196, 228],\n",
       "         [176, 195, 226]],\n",
       " \n",
       "        [[194, 206, 242],\n",
       "         [194, 205, 240],\n",
       "         [192, 203, 240],\n",
       "         ...,\n",
       "         [179, 194, 227],\n",
       "         [181, 194, 228],\n",
       "         [177, 196, 227]],\n",
       " \n",
       "        [[197, 209, 245],\n",
       "         [196, 207, 243],\n",
       "         [196, 206, 241],\n",
       "         ...,\n",
       "         [184, 199, 230],\n",
       "         [181, 196, 229],\n",
       "         [177, 197, 228]]], dtype=uint8),\n",
       " array([[[ 28,  30,  38],\n",
       "         [ 30,  32,  43],\n",
       "         [ 35,  35,  47],\n",
       "         ...,\n",
       "         [ 82,  89, 110],\n",
       "         [ 86,  93, 116],\n",
       "         [ 88,  95, 115]],\n",
       " \n",
       "        [[ 31,  32,  38],\n",
       "         [ 32,  33,  43],\n",
       "         [ 36,  37,  48],\n",
       "         ...,\n",
       "         [ 83,  87, 107],\n",
       "         [ 84,  91, 111],\n",
       "         [ 86,  91, 111]],\n",
       " \n",
       "        [[ 30,  33,  38],\n",
       "         [ 35,  35,  46],\n",
       "         [ 35,  36,  47],\n",
       "         ...,\n",
       "         [ 75,  77,  92],\n",
       "         [ 82,  86, 100],\n",
       "         [ 83,  86, 102]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  46,  50],\n",
       "         [ 37,  44,  49],\n",
       "         [ 39,  45,  53],\n",
       "         ...,\n",
       "         [ 43,  46,  62],\n",
       "         [ 41,  43,  60],\n",
       "         [ 43,  45,  65]],\n",
       " \n",
       "        [[ 42,  45,  50],\n",
       "         [ 41,  44,  52],\n",
       "         [ 40,  42,  52],\n",
       "         ...,\n",
       "         [ 42,  45,  60],\n",
       "         [ 40,  44,  59],\n",
       "         [ 42,  45,  65]],\n",
       " \n",
       "        [[ 42,  46,  51],\n",
       "         [ 40,  42,  52],\n",
       "         [ 41,  43,  53],\n",
       "         ...,\n",
       "         [ 44,  46,  62],\n",
       "         [ 41,  44,  60],\n",
       "         [ 43,  47,  66]]], dtype=uint8),\n",
       " array([[[ 97, 109, 137],\n",
       "         [ 99, 110, 139],\n",
       "         [104, 112, 141],\n",
       "         ...,\n",
       "         [ 97, 105, 133],\n",
       "         [ 81,  86, 107],\n",
       "         [ 56,  56,  67]],\n",
       " \n",
       "        [[104, 113, 140],\n",
       "         [102, 113, 140],\n",
       "         [106, 114, 143],\n",
       "         ...,\n",
       "         [ 93, 103, 133],\n",
       "         [ 84,  90, 114],\n",
       "         [ 59,  61,  75]],\n",
       " \n",
       "        [[108, 114, 138],\n",
       "         [109, 113, 138],\n",
       "         [110, 114, 141],\n",
       "         ...,\n",
       "         [ 92, 102, 131],\n",
       "         [ 89,  95, 121],\n",
       "         [ 64,  68,  85]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 137, 177],\n",
       "         [127, 132, 172],\n",
       "         [120, 126, 167],\n",
       "         ...,\n",
       "         [120, 128, 157],\n",
       "         [123, 131, 160],\n",
       "         [124, 130, 159]],\n",
       " \n",
       "        [[138, 139, 179],\n",
       "         [129, 133, 175],\n",
       "         [124, 130, 175],\n",
       "         ...,\n",
       "         [120, 131, 159],\n",
       "         [122, 132, 161],\n",
       "         [125, 132, 161]],\n",
       " \n",
       "        [[138, 138, 178],\n",
       "         [136, 135, 178],\n",
       "         [127, 132, 177],\n",
       "         ...,\n",
       "         [126, 137, 165],\n",
       "         [127, 135, 164],\n",
       "         [129, 137, 166]]], dtype=uint8),\n",
       " array([[[147, 163, 180],\n",
       "         [144, 166, 182],\n",
       "         [138, 155, 170],\n",
       "         ...,\n",
       "         [167, 174, 183],\n",
       "         [172, 181, 192],\n",
       "         [186, 195, 205]],\n",
       " \n",
       "        [[144, 161, 177],\n",
       "         [135, 158, 168],\n",
       "         [121, 133, 142],\n",
       "         ...,\n",
       "         [165, 172, 181],\n",
       "         [170, 180, 188],\n",
       "         [171, 182, 192]],\n",
       " \n",
       "        [[139, 156, 168],\n",
       "         [114, 132, 138],\n",
       "         [ 99, 110, 110],\n",
       "         ...,\n",
       "         [156, 163, 172],\n",
       "         [161, 171, 179],\n",
       "         [169, 183, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[146, 170, 192],\n",
       "         [147, 170, 194],\n",
       "         [147, 171, 192],\n",
       "         ...,\n",
       "         [178, 195, 221],\n",
       "         [176, 195, 221],\n",
       "         [175, 194, 221]],\n",
       " \n",
       "        [[147, 171, 193],\n",
       "         [148, 172, 196],\n",
       "         [150, 172, 196],\n",
       "         ...,\n",
       "         [180, 197, 223],\n",
       "         [180, 197, 223],\n",
       "         [177, 194, 220]],\n",
       " \n",
       "        [[149, 173, 191],\n",
       "         [150, 173, 198],\n",
       "         [151, 177, 201],\n",
       "         ...,\n",
       "         [180, 199, 226],\n",
       "         [180, 196, 223],\n",
       "         [180, 194, 221]]], dtype=uint8),\n",
       " array([[[200, 214, 230],\n",
       "         [192, 207, 225],\n",
       "         [187, 203, 221],\n",
       "         ...,\n",
       "         [ 88, 113, 133],\n",
       "         [ 81, 107, 123],\n",
       "         [ 63,  88,  95]],\n",
       " \n",
       "        [[203, 213, 228],\n",
       "         [201, 210, 227],\n",
       "         [193, 204, 222],\n",
       "         ...,\n",
       "         [ 88, 114, 133],\n",
       "         [ 82, 106, 127],\n",
       "         [ 63,  89, 104]],\n",
       " \n",
       "        [[203, 210, 225],\n",
       "         [200, 208, 225],\n",
       "         [196, 204, 221],\n",
       "         ...,\n",
       "         [ 87, 113, 133],\n",
       "         [ 84, 110, 130],\n",
       "         [ 71,  97, 112]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[111, 133, 168],\n",
       "         [117, 138, 170],\n",
       "         [117, 140, 173],\n",
       "         ...,\n",
       "         [144, 167, 192],\n",
       "         [138, 165, 192],\n",
       "         [141, 165, 194]],\n",
       " \n",
       "        [[110, 136, 170],\n",
       "         [115, 139, 171],\n",
       "         [119, 143, 177],\n",
       "         ...,\n",
       "         [148, 171, 197],\n",
       "         [142, 169, 195],\n",
       "         [141, 167, 190]],\n",
       " \n",
       "        [[117, 143, 178],\n",
       "         [114, 144, 176],\n",
       "         [117, 147, 180],\n",
       "         ...,\n",
       "         [149, 172, 198],\n",
       "         [144, 171, 197],\n",
       "         [143, 169, 195]]], dtype=uint8),\n",
       " array([[[18, 22, 20],\n",
       "         [26, 31, 29],\n",
       "         [23, 37, 32],\n",
       "         ...,\n",
       "         [71, 83, 93],\n",
       "         [58, 77, 88],\n",
       "         [61, 78, 89]],\n",
       " \n",
       "        [[13, 19, 17],\n",
       "         [22, 30, 27],\n",
       "         [28, 35, 30],\n",
       "         ...,\n",
       "         [68, 77, 84],\n",
       "         [61, 79, 86],\n",
       "         [60, 79, 89]],\n",
       " \n",
       "        [[19, 22, 20],\n",
       "         [22, 32, 29],\n",
       "         [29, 39, 33],\n",
       "         ...,\n",
       "         [63, 77, 80],\n",
       "         [58, 74, 82],\n",
       "         [60, 74, 88]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[43, 55, 67],\n",
       "         [44, 59, 71],\n",
       "         [38, 55, 66],\n",
       "         ...,\n",
       "         [49, 60, 73],\n",
       "         [44, 60, 71],\n",
       "         [59, 71, 88]],\n",
       " \n",
       "        [[40, 55, 64],\n",
       "         [39, 58, 66],\n",
       "         [42, 59, 70],\n",
       "         ...,\n",
       "         [41, 56, 69],\n",
       "         [39, 56, 69],\n",
       "         [53, 69, 85]],\n",
       " \n",
       "        [[38, 54, 67],\n",
       "         [42, 57, 67],\n",
       "         [41, 61, 69],\n",
       "         ...,\n",
       "         [43, 59, 72],\n",
       "         [44, 59, 71],\n",
       "         [52, 68, 84]]], dtype=uint8),\n",
       " array([[[ 60,  77,  84],\n",
       "         [ 54,  73,  79],\n",
       "         [ 60,  79,  85],\n",
       "         ...,\n",
       "         [ 29,  32,  30],\n",
       "         [ 26,  28,  27],\n",
       "         [ 25,  26,  27]],\n",
       " \n",
       "        [[ 66,  77,  85],\n",
       "         [ 53,  70,  77],\n",
       "         [ 64,  82,  87],\n",
       "         ...,\n",
       "         [ 17,  29,  28],\n",
       "         [ 21,  27,  25],\n",
       "         [ 19,  24,  23]],\n",
       " \n",
       "        [[ 59,  71,  79],\n",
       "         [ 59,  73,  81],\n",
       "         [ 61,  75,  82],\n",
       "         ...,\n",
       "         [ 25,  37,  35],\n",
       "         [ 22,  30,  25],\n",
       "         [ 22,  24,  21]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  74,  93],\n",
       "         [ 50,  65,  82],\n",
       "         [ 50,  60,  75],\n",
       "         ...,\n",
       "         [ 31,  38,  39],\n",
       "         [ 31,  37,  34],\n",
       "         [ 18,  23,  22]],\n",
       " \n",
       "        [[ 62,  77,  97],\n",
       "         [ 47,  67,  85],\n",
       "         [ 46,  59,  76],\n",
       "         ...,\n",
       "         [ 32,  36,  40],\n",
       "         [ 34,  40,  38],\n",
       "         [ 20,  24,  23]],\n",
       " \n",
       "        [[ 70,  82, 101],\n",
       "         [ 48,  67,  85],\n",
       "         [ 44,  57,  75],\n",
       "         ...,\n",
       "         [ 31,  35,  37],\n",
       "         [ 37,  40,  37],\n",
       "         [ 19,  22,  18]]], dtype=uint8),\n",
       " array([[[ 8,  4,  6],\n",
       "         [ 8,  5,  9],\n",
       "         [ 5,  4,  8],\n",
       "         ...,\n",
       "         [16, 19, 27],\n",
       "         [15, 21, 23],\n",
       "         [18, 21, 28]],\n",
       " \n",
       "        [[ 8,  7, 11],\n",
       "         [ 7,  6, 10],\n",
       "         [10,  7, 12],\n",
       "         ...,\n",
       "         [17, 21, 28],\n",
       "         [16, 19, 27],\n",
       "         [18, 20, 29]],\n",
       " \n",
       "        [[ 9,  8, 12],\n",
       "         [ 7,  8, 12],\n",
       "         [ 6,  8, 13],\n",
       "         ...,\n",
       "         [19, 21, 32],\n",
       "         [17, 20, 29],\n",
       "         [19, 21, 30]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[15, 22, 39],\n",
       "         [17, 22, 37],\n",
       "         [15, 22, 38],\n",
       "         ...,\n",
       "         [11, 13, 24],\n",
       "         [10, 12, 23],\n",
       "         [11, 13, 24]],\n",
       " \n",
       "        [[19, 25, 40],\n",
       "         [18, 24, 39],\n",
       "         [18, 25, 40],\n",
       "         ...,\n",
       "         [13, 15, 26],\n",
       "         [14, 16, 27],\n",
       "         [15, 16, 28]],\n",
       " \n",
       "        [[22, 25, 41],\n",
       "         [17, 23, 39],\n",
       "         [18, 25, 42],\n",
       "         ...,\n",
       "         [16, 18, 29],\n",
       "         [15, 17, 30],\n",
       "         [13, 16, 31]]], dtype=uint8),\n",
       " array([[[203, 212, 242],\n",
       "         [203, 213, 243],\n",
       "         [205, 215, 245],\n",
       "         ...,\n",
       "         [168, 184, 227],\n",
       "         [169, 186, 225],\n",
       "         [175, 192, 231]],\n",
       " \n",
       "        [[201, 211, 241],\n",
       "         [206, 216, 246],\n",
       "         [206, 216, 246],\n",
       "         ...,\n",
       "         [170, 185, 229],\n",
       "         [174, 191, 230],\n",
       "         [173, 190, 229]],\n",
       " \n",
       "        [[208, 218, 248],\n",
       "         [208, 218, 248],\n",
       "         [204, 214, 244],\n",
       "         ...,\n",
       "         [170, 186, 229],\n",
       "         [176, 193, 232],\n",
       "         [180, 198, 237]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[207, 218, 248],\n",
       "         [207, 218, 248],\n",
       "         [197, 213, 249],\n",
       "         ...,\n",
       "         [190, 201, 239],\n",
       "         [181, 196, 235],\n",
       "         [177, 189, 235]],\n",
       " \n",
       "        [[207, 218, 248],\n",
       "         [207, 218, 248],\n",
       "         [199, 215, 251],\n",
       "         ...,\n",
       "         [186, 197, 235],\n",
       "         [179, 194, 233],\n",
       "         [177, 190, 235]],\n",
       " \n",
       "        [[206, 215, 252],\n",
       "         [207, 218, 248],\n",
       "         [207, 218, 248],\n",
       "         ...,\n",
       "         [184, 194, 234],\n",
       "         [172, 186, 234],\n",
       "         [171, 185, 233]]], dtype=uint8),\n",
       " array([[[118, 113,  91],\n",
       "         [129, 126, 108],\n",
       "         [109, 108,  90],\n",
       "         ...,\n",
       "         [129, 137, 144],\n",
       "         [129, 137, 144],\n",
       "         [122, 130, 137]],\n",
       " \n",
       "        [[110, 105,  84],\n",
       "         [104,  98,  80],\n",
       "         [ 96,  91,  73],\n",
       "         ...,\n",
       "         [125, 133, 140],\n",
       "         [124, 131, 138],\n",
       "         [113, 121, 129]],\n",
       " \n",
       "        [[ 88,  82,  59],\n",
       "         [ 83,  74,  55],\n",
       "         [ 80,  73,  55],\n",
       "         ...,\n",
       "         [123, 129, 136],\n",
       "         [123, 129, 136],\n",
       "         [114, 122, 130]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 175, 146],\n",
       "         [155, 153, 139],\n",
       "         [130, 132, 127],\n",
       "         ...,\n",
       "         [133, 137, 148],\n",
       "         [149, 151, 162],\n",
       "         [158, 161, 172]],\n",
       " \n",
       "        [[191, 184, 155],\n",
       "         [151, 151, 137],\n",
       "         [135, 136, 132],\n",
       "         ...,\n",
       "         [130, 135, 146],\n",
       "         [145, 150, 161],\n",
       "         [157, 161, 174]],\n",
       " \n",
       "        [[193, 184, 157],\n",
       "         [148, 147, 136],\n",
       "         [132, 133, 129],\n",
       "         ...,\n",
       "         [132, 139, 150],\n",
       "         [145, 151, 162],\n",
       "         [158, 163, 175]]], dtype=uint8),\n",
       " array([[[155, 167, 189],\n",
       "         [134, 150, 171],\n",
       "         [127, 141, 163],\n",
       "         ...,\n",
       "         [136, 155, 180],\n",
       "         [139, 157, 182],\n",
       "         [129, 153, 177]],\n",
       " \n",
       "        [[128, 137, 155],\n",
       "         [113, 127, 145],\n",
       "         [102, 117, 136],\n",
       "         ...,\n",
       "         [122, 142, 166],\n",
       "         [119, 142, 168],\n",
       "         [124, 143, 170]],\n",
       " \n",
       "        [[126, 140, 158],\n",
       "         [122, 137, 155],\n",
       "         [103, 117, 134],\n",
       "         ...,\n",
       "         [106, 125, 146],\n",
       "         [110, 129, 151],\n",
       "         [122, 137, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 165, 194],\n",
       "         [143, 162, 191],\n",
       "         [143, 164, 191],\n",
       "         ...,\n",
       "         [131, 160, 190],\n",
       "         [136, 164, 199],\n",
       "         [145, 170, 205]],\n",
       " \n",
       "        [[148, 168, 196],\n",
       "         [149, 165, 193],\n",
       "         [146, 165, 192],\n",
       "         ...,\n",
       "         [136, 163, 199],\n",
       "         [138, 164, 200],\n",
       "         [151, 172, 209]],\n",
       " \n",
       "        [[152, 170, 197],\n",
       "         [152, 169, 197],\n",
       "         [150, 168, 195],\n",
       "         ...,\n",
       "         [136, 162, 199],\n",
       "         [150, 169, 206],\n",
       "         [156, 174, 211]]], dtype=uint8),\n",
       " array([[[140, 145, 148],\n",
       "         [139, 144, 147],\n",
       "         [142, 145, 146],\n",
       "         ...,\n",
       "         [200, 198, 188],\n",
       "         [196, 193, 185],\n",
       "         [193, 191, 183]],\n",
       " \n",
       "        [[134, 137, 139],\n",
       "         [132, 136, 138],\n",
       "         [126, 128, 128],\n",
       "         ...,\n",
       "         [203, 201, 191],\n",
       "         [196, 193, 185],\n",
       "         [194, 191, 186]],\n",
       " \n",
       "        [[125, 128, 133],\n",
       "         [114, 118, 119],\n",
       "         [112, 115, 115],\n",
       "         ...,\n",
       "         [202, 200, 191],\n",
       "         [199, 196, 188],\n",
       "         [192, 189, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[200, 200, 200],\n",
       "         [204, 201, 200],\n",
       "         [210, 205, 202],\n",
       "         ...,\n",
       "         [189, 191, 191],\n",
       "         [186, 188, 188],\n",
       "         [189, 187, 183]],\n",
       " \n",
       "        [[194, 194, 198],\n",
       "         [207, 204, 203],\n",
       "         [211, 206, 204],\n",
       "         ...,\n",
       "         [190, 194, 193],\n",
       "         [185, 188, 186],\n",
       "         [189, 188, 180]],\n",
       " \n",
       "        [[201, 203, 204],\n",
       "         [202, 201, 200],\n",
       "         [197, 196, 198],\n",
       "         ...,\n",
       "         [188, 192, 193],\n",
       "         [184, 188, 185],\n",
       "         [188, 183, 172]]], dtype=uint8),\n",
       " array([[[ 49,  66,  93],\n",
       "         [ 52,  69,  92],\n",
       "         [ 33,  45,  71],\n",
       "         ...,\n",
       "         [ 50,  68, 121],\n",
       "         [ 51,  69, 122],\n",
       "         [ 50,  67, 123]],\n",
       " \n",
       "        [[ 52,  70,  97],\n",
       "         [ 55,  71,  97],\n",
       "         [ 31,  44,  69],\n",
       "         ...,\n",
       "         [ 50,  68, 121],\n",
       "         [ 54,  72, 125],\n",
       "         [ 54,  72, 125]],\n",
       " \n",
       "        [[ 58,  76, 103],\n",
       "         [ 60,  77, 103],\n",
       "         [ 37,  47,  72],\n",
       "         ...,\n",
       "         [ 58,  76, 129],\n",
       "         [ 57,  75, 128],\n",
       "         [ 56,  74, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 124, 155],\n",
       "         [116, 129, 167],\n",
       "         [115, 128, 167],\n",
       "         ...,\n",
       "         [152, 161, 194],\n",
       "         [138, 148, 186],\n",
       "         [119, 130, 177]],\n",
       " \n",
       "        [[116, 127, 157],\n",
       "         [117, 130, 168],\n",
       "         [120, 131, 171],\n",
       "         ...,\n",
       "         [160, 166, 197],\n",
       "         [141, 151, 187],\n",
       "         [130, 138, 185]],\n",
       " \n",
       "        [[116, 127, 158],\n",
       "         [124, 136, 175],\n",
       "         [131, 143, 179],\n",
       "         ...,\n",
       "         [164, 169, 199],\n",
       "         [146, 155, 193],\n",
       "         [127, 136, 183]]], dtype=uint8),\n",
       " array([[[ 66,  83, 132],\n",
       "         [ 64,  81, 130],\n",
       "         [ 59,  76, 125],\n",
       "         ...,\n",
       "         [ 31,  40,  74],\n",
       "         [ 28,  37,  70],\n",
       "         [ 28,  36,  65]],\n",
       " \n",
       "        [[ 71,  87, 135],\n",
       "         [ 69,  85, 134],\n",
       "         [ 63,  79, 127],\n",
       "         ...,\n",
       "         [ 33,  42,  75],\n",
       "         [ 31,  40,  73],\n",
       "         [ 30,  39,  69]],\n",
       " \n",
       "        [[ 73,  89, 138],\n",
       "         [ 73,  89, 137],\n",
       "         [ 68,  84, 131],\n",
       "         ...,\n",
       "         [ 31,  41,  74],\n",
       "         [ 34,  43,  76],\n",
       "         [ 30,  39,  68]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 49,  60, 118],\n",
       "         [ 45,  56, 114],\n",
       "         [ 48,  59, 117],\n",
       "         ...,\n",
       "         [131, 132, 153],\n",
       "         [240, 235, 232],\n",
       "         [251, 248, 247]],\n",
       " \n",
       "        [[ 50,  62, 120],\n",
       "         [ 46,  58, 116],\n",
       "         [ 49,  60, 118],\n",
       "         ...,\n",
       "         [130, 130, 148],\n",
       "         [215, 207, 205],\n",
       "         [219, 209, 207]],\n",
       " \n",
       "        [[ 52,  64, 122],\n",
       "         [ 49,  61, 119],\n",
       "         [ 49,  61, 118],\n",
       "         ...,\n",
       "         [132, 130, 145],\n",
       "         [206, 198, 195],\n",
       "         [202, 195, 192]]], dtype=uint8),\n",
       " array([[[ 82, 101,  90],\n",
       "         [ 40,  50,  48],\n",
       "         [ 35,  43,  44],\n",
       "         ...,\n",
       "         [ 19,  23,  47],\n",
       "         [ 19,  23,  47],\n",
       "         [ 19,  23,  46]],\n",
       " \n",
       "        [[ 76,  93,  87],\n",
       "         [ 39,  46,  46],\n",
       "         [ 32,  37,  38],\n",
       "         ...,\n",
       "         [ 19,  23,  47],\n",
       "         [ 21,  25,  49],\n",
       "         [ 21,  25,  49]],\n",
       " \n",
       "        [[ 58,  71,  65],\n",
       "         [ 32,  36,  35],\n",
       "         [ 24,  28,  26],\n",
       "         ...,\n",
       "         [ 22,  25,  50],\n",
       "         [ 22,  26,  50],\n",
       "         [ 20,  24,  48]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 118, 109],\n",
       "         [119, 110, 103],\n",
       "         [109, 103, 101],\n",
       "         ...,\n",
       "         [ 30,  35,  74],\n",
       "         [ 29,  34,  73],\n",
       "         [ 29,  34,  73]],\n",
       " \n",
       "        [[126, 120, 109],\n",
       "         [118, 109, 105],\n",
       "         [109, 104, 102],\n",
       "         ...,\n",
       "         [ 30,  35,  74],\n",
       "         [ 30,  35,  74],\n",
       "         [ 30,  35,  74]],\n",
       " \n",
       "        [[125, 118, 108],\n",
       "         [116, 107, 105],\n",
       "         [108, 102, 103],\n",
       "         ...,\n",
       "         [ 31,  36,  75],\n",
       "         [ 31,  36,  75],\n",
       "         [ 32,  37,  76]]], dtype=uint8),\n",
       " array([[[171, 189, 210],\n",
       "         [175, 195, 218],\n",
       "         [182, 202, 224],\n",
       "         ...,\n",
       "         [152, 174, 202],\n",
       "         [152, 173, 200],\n",
       "         [156, 177, 202]],\n",
       " \n",
       "        [[178, 196, 218],\n",
       "         [183, 202, 225],\n",
       "         [185, 204, 227],\n",
       "         ...,\n",
       "         [150, 171, 196],\n",
       "         [150, 171, 197],\n",
       "         [152, 172, 198]],\n",
       " \n",
       "        [[179, 197, 216],\n",
       "         [190, 206, 228],\n",
       "         [186, 204, 226],\n",
       "         ...,\n",
       "         [148, 166, 190],\n",
       "         [147, 167, 192],\n",
       "         [146, 165, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 189, 220],\n",
       "         [163, 182, 215],\n",
       "         [157, 178, 212],\n",
       "         ...,\n",
       "         [122, 147, 189],\n",
       "         [128, 155, 196],\n",
       "         [133, 162, 203]],\n",
       " \n",
       "        [[175, 194, 227],\n",
       "         [165, 186, 217],\n",
       "         [161, 180, 215],\n",
       "         ...,\n",
       "         [128, 159, 196],\n",
       "         [137, 164, 204],\n",
       "         [140, 169, 209]],\n",
       " \n",
       "        [[164, 185, 220],\n",
       "         [165, 184, 219],\n",
       "         [163, 183, 218],\n",
       "         ...,\n",
       "         [135, 165, 204],\n",
       "         [142, 170, 209],\n",
       "         [146, 173, 211]]], dtype=uint8),\n",
       " array([[[138, 160, 188],\n",
       "         [138, 159, 186],\n",
       "         [138, 158, 184],\n",
       "         ...,\n",
       "         [122, 145, 173],\n",
       "         [118, 141, 167],\n",
       "         [101, 124, 149]],\n",
       " \n",
       "        [[132, 153, 180],\n",
       "         [130, 150, 175],\n",
       "         [133, 150, 175],\n",
       "         ...,\n",
       "         [128, 150, 176],\n",
       "         [123, 148, 172],\n",
       "         [116, 138, 163]],\n",
       " \n",
       "        [[125, 145, 170],\n",
       "         [127, 145, 168],\n",
       "         [124, 139, 161],\n",
       "         ...,\n",
       "         [127, 150, 176],\n",
       "         [126, 149, 174],\n",
       "         [120, 143, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 131, 175],\n",
       "         [109, 135, 179],\n",
       "         [109, 137, 179],\n",
       "         ...,\n",
       "         [120, 151, 190],\n",
       "         [115, 146, 184],\n",
       "         [113, 144, 180]],\n",
       " \n",
       "        [[100, 125, 169],\n",
       "         [101, 129, 173],\n",
       "         [107, 135, 179],\n",
       "         ...,\n",
       "         [115, 148, 187],\n",
       "         [113, 148, 185],\n",
       "         [112, 145, 181]],\n",
       " \n",
       "        [[ 96, 120, 165],\n",
       "         [ 97, 123, 167],\n",
       "         [103, 130, 173],\n",
       "         ...,\n",
       "         [117, 149, 189],\n",
       "         [114, 147, 186],\n",
       "         [111, 144, 180]]], dtype=uint8),\n",
       " array([[[15,  5, 11],\n",
       "         [24, 12, 17],\n",
       "         [21, 10, 18],\n",
       "         ...,\n",
       "         [27, 40, 65],\n",
       "         [28, 39, 65],\n",
       "         [29, 43, 65]],\n",
       " \n",
       "        [[23, 12, 17],\n",
       "         [20, 10, 16],\n",
       "         [21, 13, 21],\n",
       "         ...,\n",
       "         [28, 40, 66],\n",
       "         [30, 40, 67],\n",
       "         [30, 40, 64]],\n",
       " \n",
       "        [[20,  9, 15],\n",
       "         [18, 11, 18],\n",
       "         [22, 16, 25],\n",
       "         ...,\n",
       "         [30, 42, 66],\n",
       "         [37, 48, 72],\n",
       "         [28, 39, 63]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[21, 25, 40],\n",
       "         [28, 32, 50],\n",
       "         [23, 29, 45],\n",
       "         ...,\n",
       "         [29, 41, 69],\n",
       "         [30, 46, 76],\n",
       "         [30, 51, 83]],\n",
       " \n",
       "        [[23, 28, 41],\n",
       "         [24, 31, 45],\n",
       "         [27, 34, 51],\n",
       "         ...,\n",
       "         [27, 38, 65],\n",
       "         [32, 49, 77],\n",
       "         [31, 54, 85]],\n",
       " \n",
       "        [[26, 29, 44],\n",
       "         [24, 28, 43],\n",
       "         [22, 29, 44],\n",
       "         ...,\n",
       "         [25, 36, 62],\n",
       "         [35, 49, 78],\n",
       "         [30, 52, 84]]], dtype=uint8),\n",
       " array([[[ 31,  45,  68],\n",
       "         [ 38,  52,  76],\n",
       "         [ 35,  47,  69],\n",
       "         ...,\n",
       "         [ 38,  38,  56],\n",
       "         [ 20,  12,  23],\n",
       "         [ 22,  11,  20]],\n",
       " \n",
       "        [[ 37,  52,  74],\n",
       "         [ 35,  50,  70],\n",
       "         [ 39,  52,  74],\n",
       "         ...,\n",
       "         [ 31,  34,  51],\n",
       "         [ 26,  19,  32],\n",
       "         [ 24,  13,  22]],\n",
       " \n",
       "        [[ 32,  46,  66],\n",
       "         [ 25,  39,  59],\n",
       "         [ 37,  50,  69],\n",
       "         ...,\n",
       "         [ 31,  37,  55],\n",
       "         [ 32,  29,  42],\n",
       "         [ 24,  15,  25]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 38,  73, 107],\n",
       "         [ 36,  73, 107],\n",
       "         [ 35,  73, 105],\n",
       "         ...,\n",
       "         [ 32,  71, 100],\n",
       "         [ 36,  74, 103],\n",
       "         [ 40,  74, 102]],\n",
       " \n",
       "        [[ 32,  67, 101],\n",
       "         [ 40,  76, 110],\n",
       "         [ 36,  72, 106],\n",
       "         ...,\n",
       "         [ 39,  78, 110],\n",
       "         [ 39,  78, 107],\n",
       "         [ 43,  80, 108]],\n",
       " \n",
       "        [[ 32,  64,  99],\n",
       "         [ 26,  60,  95],\n",
       "         [ 35,  70, 103],\n",
       "         ...,\n",
       "         [ 40,  80, 113],\n",
       "         [ 39,  77, 109],\n",
       "         [ 35,  72, 102]]], dtype=uint8),\n",
       " array([[[ 97, 118, 148],\n",
       "         [104, 125, 152],\n",
       "         [108, 130, 156],\n",
       "         ...,\n",
       "         [144, 133, 154],\n",
       "         [146, 135, 157],\n",
       "         [137, 127, 148]],\n",
       " \n",
       "        [[ 97, 118, 148],\n",
       "         [104, 128, 153],\n",
       "         [110, 130, 157],\n",
       "         ...,\n",
       "         [136, 124, 150],\n",
       "         [136, 124, 150],\n",
       "         [130, 121, 147]],\n",
       " \n",
       "        [[100, 122, 152],\n",
       "         [102, 124, 151],\n",
       "         [107, 128, 154],\n",
       "         ...,\n",
       "         [130, 123, 148],\n",
       "         [123, 117, 142],\n",
       "         [128, 119, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 138, 170],\n",
       "         [122, 137, 169],\n",
       "         [124, 137, 170],\n",
       "         ...,\n",
       "         [105, 114, 153],\n",
       "         [103, 113, 153],\n",
       "         [106, 115, 157]],\n",
       " \n",
       "        [[126, 138, 172],\n",
       "         [123, 135, 169],\n",
       "         [125, 137, 171],\n",
       "         ...,\n",
       "         [105, 115, 155],\n",
       "         [107, 116, 156],\n",
       "         [109, 117, 157]],\n",
       " \n",
       "        [[122, 134, 168],\n",
       "         [120, 132, 168],\n",
       "         [121, 133, 167],\n",
       "         ...,\n",
       "         [109, 119, 159],\n",
       "         [110, 120, 160],\n",
       "         [112, 121, 161]]], dtype=uint8),\n",
       " array([[[ 39,  47,  80],\n",
       "         [ 48,  56,  88],\n",
       "         [ 46,  55,  88],\n",
       "         ...,\n",
       "         [101, 125, 171],\n",
       "         [101, 124, 169],\n",
       "         [103, 127, 171]],\n",
       " \n",
       "        [[ 47,  57,  91],\n",
       "         [ 48,  58,  92],\n",
       "         [ 50,  61,  97],\n",
       "         ...,\n",
       "         [104, 124, 171],\n",
       "         [106, 129, 175],\n",
       "         [ 93, 115, 162]],\n",
       " \n",
       "        [[ 44,  57,  92],\n",
       "         [ 47,  60,  96],\n",
       "         [ 51,  64, 102],\n",
       "         ...,\n",
       "         [103, 126, 172],\n",
       "         [ 98, 121, 167],\n",
       "         [ 96, 120, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 156, 191],\n",
       "         [120, 146, 183],\n",
       "         [116, 137, 181],\n",
       "         ...,\n",
       "         [128, 157, 202],\n",
       "         [138, 162, 208],\n",
       "         [141, 166, 212]],\n",
       " \n",
       "        [[125, 155, 194],\n",
       "         [128, 159, 197],\n",
       "         [130, 153, 191],\n",
       "         ...,\n",
       "         [141, 166, 212],\n",
       "         [145, 169, 215],\n",
       "         [142, 166, 214]],\n",
       " \n",
       "        [[139, 166, 208],\n",
       "         [126, 157, 199],\n",
       "         [135, 161, 199],\n",
       "         ...,\n",
       "         [152, 177, 217],\n",
       "         [152, 177, 218],\n",
       "         [147, 173, 217]]], dtype=uint8),\n",
       " array([[[ 68, 102, 156],\n",
       "         [ 72, 106, 160],\n",
       "         [ 81, 115, 169],\n",
       "         ...,\n",
       "         [124, 153, 210],\n",
       "         [124, 153, 210],\n",
       "         [125, 154, 211]],\n",
       " \n",
       "        [[ 73, 104, 159],\n",
       "         [ 73, 104, 159],\n",
       "         [ 75, 106, 161],\n",
       "         ...,\n",
       "         [122, 151, 208],\n",
       "         [122, 151, 208],\n",
       "         [124, 153, 210]],\n",
       " \n",
       "        [[ 72, 102, 157],\n",
       "         [ 73, 104, 158],\n",
       "         [ 75, 106, 161],\n",
       "         ...,\n",
       "         [124, 153, 210],\n",
       "         [123, 152, 209],\n",
       "         [121, 150, 207]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 131, 177],\n",
       "         [ 99, 133, 179],\n",
       "         [102, 136, 182],\n",
       "         ...,\n",
       "         [ 86, 117, 178],\n",
       "         [ 86, 117, 180],\n",
       "         [ 84, 115, 178]],\n",
       " \n",
       "        [[ 99, 133, 179],\n",
       "         [100, 134, 180],\n",
       "         [102, 136, 182],\n",
       "         ...,\n",
       "         [ 88, 119, 180],\n",
       "         [ 86, 117, 180],\n",
       "         [ 84, 115, 178]],\n",
       " \n",
       "        [[102, 136, 182],\n",
       "         [103, 137, 183],\n",
       "         [103, 137, 183],\n",
       "         ...,\n",
       "         [ 89, 120, 181],\n",
       "         [ 84, 115, 178],\n",
       "         [ 76, 107, 170]]], dtype=uint8),\n",
       " array([[[138, 130, 151],\n",
       "         [138, 128, 148],\n",
       "         [141, 130, 150],\n",
       "         ...,\n",
       "         [119, 134, 150],\n",
       "         [122, 138, 154],\n",
       "         [114, 131, 146]],\n",
       " \n",
       "        [[126, 120, 143],\n",
       "         [129, 121, 143],\n",
       "         [131, 122, 143],\n",
       "         ...,\n",
       "         [116, 129, 144],\n",
       "         [120, 136, 150],\n",
       "         [120, 136, 151]],\n",
       " \n",
       "        [[121, 115, 140],\n",
       "         [119, 111, 134],\n",
       "         [126, 117, 137],\n",
       "         ...,\n",
       "         [110, 119, 133],\n",
       "         [115, 128, 142],\n",
       "         [119, 135, 148]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 112, 148],\n",
       "         [103, 104, 139],\n",
       "         [110, 112, 143],\n",
       "         ...,\n",
       "         [134, 147, 169],\n",
       "         [133, 146, 168],\n",
       "         [127, 140, 162]],\n",
       " \n",
       "        [[118, 118, 154],\n",
       "         [113, 113, 149],\n",
       "         [111, 113, 144],\n",
       "         ...,\n",
       "         [134, 146, 169],\n",
       "         [132, 144, 167],\n",
       "         [126, 139, 162]],\n",
       " \n",
       "        [[118, 118, 154],\n",
       "         [117, 118, 153],\n",
       "         [113, 115, 147],\n",
       "         ...,\n",
       "         [129, 140, 165],\n",
       "         [127, 138, 165],\n",
       "         [124, 135, 162]]], dtype=uint8),\n",
       " array([[[113, 130, 151],\n",
       "         [116, 130, 152],\n",
       "         [117, 131, 150],\n",
       "         ...,\n",
       "         [130, 124, 146],\n",
       "         [129, 123, 146],\n",
       "         [131, 125, 148]],\n",
       " \n",
       "        [[106, 120, 140],\n",
       "         [111, 124, 143],\n",
       "         [116, 128, 146],\n",
       "         ...,\n",
       "         [128, 122, 145],\n",
       "         [129, 123, 146],\n",
       "         [129, 123, 146]],\n",
       " \n",
       "        [[100, 111, 127],\n",
       "         [103, 113, 127],\n",
       "         [112, 120, 134],\n",
       "         ...,\n",
       "         [122, 115, 138],\n",
       "         [125, 118, 139],\n",
       "         [125, 118, 139]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[123, 134, 157],\n",
       "         [121, 132, 155],\n",
       "         [124, 132, 155],\n",
       "         ...,\n",
       "         [ 65,  63,  75],\n",
       "         [ 35,  34,  43],\n",
       "         [ 22,  24,  38]],\n",
       " \n",
       "        [[128, 138, 162],\n",
       "         [127, 137, 161],\n",
       "         [127, 138, 160],\n",
       "         ...,\n",
       "         [ 38,  37,  47],\n",
       "         [ 29,  31,  39],\n",
       "         [ 32,  37,  58]],\n",
       " \n",
       "        [[129, 139, 163],\n",
       "         [130, 140, 164],\n",
       "         [131, 141, 163],\n",
       "         ...,\n",
       "         [ 33,  33,  39],\n",
       "         [ 21,  22,  34],\n",
       "         [ 89,  92, 131]]], dtype=uint8),\n",
       " array([[[137, 129, 147],\n",
       "         [133, 127, 143],\n",
       "         [124, 118, 135],\n",
       "         ...,\n",
       "         [113, 126, 142],\n",
       "         [121, 137, 153],\n",
       "         [127, 143, 159]],\n",
       " \n",
       "        [[132, 128, 140],\n",
       "         [126, 122, 134],\n",
       "         [125, 120, 135],\n",
       "         ...,\n",
       "         [109, 117, 131],\n",
       "         [114, 126, 141],\n",
       "         [120, 134, 148]],\n",
       " \n",
       "        [[123, 117, 133],\n",
       "         [116, 112, 123],\n",
       "         [123, 116, 128],\n",
       "         ...,\n",
       "         [103, 109, 122],\n",
       "         [112, 123, 136],\n",
       "         [115, 128, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 119, 140],\n",
       "         [125, 117, 141],\n",
       "         [125, 120, 142],\n",
       "         ...,\n",
       "         [118, 127, 147],\n",
       "         [109, 122, 144],\n",
       "         [100, 117, 138]],\n",
       " \n",
       "        [[126, 120, 139],\n",
       "         [128, 120, 145],\n",
       "         [129, 124, 150],\n",
       "         ...,\n",
       "         [122, 129, 149],\n",
       "         [115, 127, 148],\n",
       "         [105, 122, 143]],\n",
       " \n",
       "        [[ 82,  76,  94],\n",
       "         [130, 122, 147],\n",
       "         [129, 125, 152],\n",
       "         ...,\n",
       "         [125, 133, 153],\n",
       "         [118, 131, 153],\n",
       "         [110, 127, 148]]], dtype=uint8),\n",
       " array([[[110, 110, 122],\n",
       "         [133, 135, 146],\n",
       "         [124, 126, 137],\n",
       "         ...,\n",
       "         [ 48,  57,  66],\n",
       "         [ 43,  51,  60],\n",
       "         [ 38,  45,  53]],\n",
       " \n",
       "        [[112, 111, 125],\n",
       "         [119, 118, 132],\n",
       "         [120, 120, 131],\n",
       "         ...,\n",
       "         [ 50,  57,  66],\n",
       "         [ 43,  51,  60],\n",
       "         [ 38,  46,  53]],\n",
       " \n",
       "        [[113, 110, 124],\n",
       "         [110, 108, 120],\n",
       "         [112, 110, 122],\n",
       "         ...,\n",
       "         [ 53,  60,  67],\n",
       "         [ 43,  52,  59],\n",
       "         [ 37,  45,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100,  96, 112],\n",
       "         [101, 101, 117],\n",
       "         [102, 102, 118],\n",
       "         ...,\n",
       "         [ 64,  74,  89],\n",
       "         [ 55,  56,  68],\n",
       "         [ 53,  50,  60]],\n",
       " \n",
       "        [[ 87,  85,  97],\n",
       "         [102, 101, 117],\n",
       "         [103, 103, 119],\n",
       "         ...,\n",
       "         [ 73,  82,  96],\n",
       "         [ 56,  58,  69],\n",
       "         [ 63,  58,  67]],\n",
       " \n",
       "        [[ 20,  17,  27],\n",
       "         [ 79,  79,  92],\n",
       "         [106, 106, 122],\n",
       "         ...,\n",
       "         [ 75,  84,  97],\n",
       "         [ 62,  66,  75],\n",
       "         [ 63,  60,  66]]], dtype=uint8),\n",
       " array([[[ 50,  66,  82],\n",
       "         [ 53,  71,  88],\n",
       "         [ 60,  78,  95],\n",
       "         ...,\n",
       "         [163, 155, 171],\n",
       "         [166, 157, 174],\n",
       "         [156, 150, 166]],\n",
       " \n",
       "        [[ 51,  67,  82],\n",
       "         [ 57,  73,  90],\n",
       "         [ 64,  80,  97],\n",
       "         ...,\n",
       "         [139, 141, 160],\n",
       "         [137, 139, 157],\n",
       "         [135, 135, 153]],\n",
       " \n",
       "        [[ 54,  70,  83],\n",
       "         [ 56,  72,  88],\n",
       "         [ 63,  79,  95],\n",
       "         ...,\n",
       "         [121, 126, 144],\n",
       "         [124, 128, 146],\n",
       "         [124, 125, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 81,  98, 118],\n",
       "         [ 78,  95, 117],\n",
       "         [ 77,  93, 115],\n",
       "         ...,\n",
       "         [ 41,  41,  51],\n",
       "         [ 15,  16,  21],\n",
       "         [  9,   8,  18]],\n",
       " \n",
       "        [[ 79,  96, 116],\n",
       "         [ 79,  97, 118],\n",
       "         [ 79,  97, 118],\n",
       "         ...,\n",
       "         [ 12,  15,  20],\n",
       "         [  7,   9,  16],\n",
       "         [ 55,  57,  74]],\n",
       " \n",
       "        [[ 85, 101, 120],\n",
       "         [ 83, 100, 119],\n",
       "         [ 82, 100, 119],\n",
       "         ...,\n",
       "         [  8,  11,  15],\n",
       "         [ 26,  29,  41],\n",
       "         [ 66,  71,  94]]], dtype=uint8),\n",
       " array([[[ 93, 106, 134],\n",
       "         [ 80,  91, 123],\n",
       "         [102, 114, 146],\n",
       "         ...,\n",
       "         [197, 207, 238],\n",
       "         [207, 218, 247],\n",
       "         [194, 206, 238]],\n",
       " \n",
       "        [[ 86,  98, 126],\n",
       "         [ 83,  94, 124],\n",
       "         [104, 116, 144],\n",
       "         ...,\n",
       "         [188, 199, 231],\n",
       "         [189, 200, 232],\n",
       "         [181, 193, 227]],\n",
       " \n",
       "        [[ 94, 106, 134],\n",
       "         [103, 116, 142],\n",
       "         [107, 121, 144],\n",
       "         ...,\n",
       "         [177, 189, 224],\n",
       "         [171, 183, 219],\n",
       "         [169, 181, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 111, 157],\n",
       "         [ 99, 115, 158],\n",
       "         [100, 116, 159],\n",
       "         ...,\n",
       "         [124, 138, 187],\n",
       "         [121, 136, 182],\n",
       "         [113, 126, 172]],\n",
       " \n",
       "        [[ 98, 113, 158],\n",
       "         [101, 116, 162],\n",
       "         [101, 117, 161],\n",
       "         ...,\n",
       "         [127, 141, 189],\n",
       "         [130, 143, 189],\n",
       "         [ 92, 102, 149]],\n",
       " \n",
       "        [[ 98, 113, 159],\n",
       "         [ 98, 113, 159],\n",
       "         [103, 118, 164],\n",
       "         ...,\n",
       "         [129, 142, 190],\n",
       "         [117, 127, 174],\n",
       "         [ 80,  88, 135]]], dtype=uint8),\n",
       " array([[[194, 205, 232],\n",
       "         [188, 199, 227],\n",
       "         [199, 209, 239],\n",
       "         ...,\n",
       "         [ 85,  96, 123],\n",
       "         [ 81,  92, 119],\n",
       "         [ 76,  87, 111]],\n",
       " \n",
       "        [[198, 210, 238],\n",
       "         [176, 187, 217],\n",
       "         [182, 193, 225],\n",
       "         ...,\n",
       "         [ 90, 101, 128],\n",
       "         [ 82,  93, 120],\n",
       "         [ 81,  91, 116]],\n",
       " \n",
       "        [[164, 178, 208],\n",
       "         [173, 186, 218],\n",
       "         [162, 173, 208],\n",
       "         ...,\n",
       "         [ 90, 101, 128],\n",
       "         [ 96, 107, 134],\n",
       "         [ 93, 104, 128]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 134, 186],\n",
       "         [110, 123, 175],\n",
       "         [111, 124, 176],\n",
       "         ...,\n",
       "         [101, 120, 165],\n",
       "         [106, 124, 167],\n",
       "         [100, 117, 159]],\n",
       " \n",
       "        [[131, 142, 192],\n",
       "         [123, 134, 184],\n",
       "         [120, 131, 182],\n",
       "         ...,\n",
       "         [104, 120, 166],\n",
       "         [100, 118, 161],\n",
       "         [101, 118, 159]],\n",
       " \n",
       "        [[132, 143, 193],\n",
       "         [130, 141, 192],\n",
       "         [122, 133, 183],\n",
       "         ...,\n",
       "         [106, 122, 168],\n",
       "         [103, 121, 164],\n",
       "         [100, 117, 158]]], dtype=uint8),\n",
       " array([[[ 51,  59,  75],\n",
       "         [ 57,  66,  81],\n",
       "         [ 70,  80,  96],\n",
       "         ...,\n",
       "         [197, 208, 236],\n",
       "         [201, 211, 243],\n",
       "         [196, 206, 238]],\n",
       " \n",
       "        [[ 49,  59,  68],\n",
       "         [ 54,  64,  73],\n",
       "         [ 59,  70,  79],\n",
       "         ...,\n",
       "         [186, 197, 226],\n",
       "         [171, 182, 213],\n",
       "         [180, 191, 222]],\n",
       " \n",
       "        [[ 46,  54,  62],\n",
       "         [ 44,  52,  60],\n",
       "         [ 46,  53,  62],\n",
       "         ...,\n",
       "         [160, 174, 207],\n",
       "         [154, 166, 202],\n",
       "         [177, 191, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  80, 107],\n",
       "         [ 73,  83, 110],\n",
       "         [ 76,  88, 115],\n",
       "         ...,\n",
       "         [ 53,  54,  53],\n",
       "         [242, 247, 248],\n",
       "         [ 66,  74,  96]],\n",
       " \n",
       "        [[ 75,  82, 106],\n",
       "         [ 74,  84, 107],\n",
       "         [ 76,  87, 110],\n",
       "         ...,\n",
       "         [247, 251, 251],\n",
       "         [ 64,  72,  84],\n",
       "         [ 76,  84, 118]],\n",
       " \n",
       "        [[ 68,  78, 100],\n",
       "         [ 69,  80, 102],\n",
       "         [ 70,  81, 103],\n",
       "         ...,\n",
       "         [ 83,  90,  98],\n",
       "         [ 89,  97, 125],\n",
       "         [ 89,  98, 139]]], dtype=uint8),\n",
       " array([[[178, 190, 225],\n",
       "         [171, 183, 217],\n",
       "         [174, 186, 219],\n",
       "         ...,\n",
       "         [ 40,  48,  61],\n",
       "         [ 38,  46,  56],\n",
       "         [ 31,  37,  46]],\n",
       " \n",
       "        [[168, 181, 215],\n",
       "         [171, 183, 217],\n",
       "         [182, 195, 228],\n",
       "         ...,\n",
       "         [ 39,  47,  59],\n",
       "         [ 34,  40,  50],\n",
       "         [ 30,  36,  43]],\n",
       " \n",
       "        [[174, 186, 219],\n",
       "         [178, 192, 227],\n",
       "         [164, 176, 210],\n",
       "         ...,\n",
       "         [ 33,  39,  49],\n",
       "         [ 31,  37,  44],\n",
       "         [ 31,  35,  40]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[250, 253, 248],\n",
       "         [221, 240, 229],\n",
       "         [208, 241, 224],\n",
       "         ...,\n",
       "         [ 65,  73, 105],\n",
       "         [ 53,  60,  85],\n",
       "         [ 52,  56,  73]],\n",
       " \n",
       "        [[152, 154, 150],\n",
       "         [245, 251, 245],\n",
       "         [214, 236, 223],\n",
       "         ...,\n",
       "         [ 67,  76, 107],\n",
       "         [ 63,  69,  92],\n",
       "         [ 69,  73,  88]],\n",
       " \n",
       "        [[180, 183, 182],\n",
       "         [140, 140, 138],\n",
       "         [241, 251, 243],\n",
       "         ...,\n",
       "         [ 71,  76, 100],\n",
       "         [ 71,  76,  93],\n",
       "         [ 38,  41,  49]]], dtype=uint8),\n",
       " array([[[114, 121, 137],\n",
       "         [117, 122, 140],\n",
       "         [120, 124, 142],\n",
       "         ...,\n",
       "         [219, 206, 206],\n",
       "         [218, 206, 208],\n",
       "         [203, 193, 195]],\n",
       " \n",
       "        [[114, 119, 134],\n",
       "         [111, 115, 129],\n",
       "         [120, 122, 136],\n",
       "         ...,\n",
       "         [211, 199, 200],\n",
       "         [224, 215, 216],\n",
       "         [212, 206, 207]],\n",
       " \n",
       "        [[116, 118, 130],\n",
       "         [114, 116, 127],\n",
       "         [120, 122, 133],\n",
       "         ...,\n",
       "         [191, 185, 187],\n",
       "         [194, 187, 189],\n",
       "         [202, 197, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 154, 175],\n",
       "         [150, 161, 184],\n",
       "         [152, 163, 185],\n",
       "         ...,\n",
       "         [142, 154, 176],\n",
       "         [139, 152, 175],\n",
       "         [130, 145, 171]],\n",
       " \n",
       "        [[143, 153, 173],\n",
       "         [150, 158, 181],\n",
       "         [153, 164, 186],\n",
       "         ...,\n",
       "         [143, 155, 182],\n",
       "         [135, 148, 174],\n",
       "         [131, 145, 173]],\n",
       " \n",
       "        [[139, 148, 170],\n",
       "         [152, 160, 181],\n",
       "         [162, 172, 189],\n",
       "         ...,\n",
       "         [141, 154, 182],\n",
       "         [133, 149, 176],\n",
       "         [138, 151, 179]]], dtype=uint8),\n",
       " array([[[ 65,  95, 146],\n",
       "         [ 74, 102, 153],\n",
       "         [ 79, 100, 149],\n",
       "         ...,\n",
       "         [120, 151, 204],\n",
       "         [121, 152, 205],\n",
       "         [126, 157, 210]],\n",
       " \n",
       "        [[ 68,  93, 141],\n",
       "         [ 70,  92, 140],\n",
       "         [ 78,  96, 141],\n",
       "         ...,\n",
       "         [114, 145, 198],\n",
       "         [120, 150, 203],\n",
       "         [124, 155, 208]],\n",
       " \n",
       "        [[ 66,  86, 130],\n",
       "         [ 52,  70, 110],\n",
       "         [ 61,  74, 110],\n",
       "         ...,\n",
       "         [117, 148, 201],\n",
       "         [118, 148, 201],\n",
       "         [120, 151, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 132, 178],\n",
       "         [100, 134, 180],\n",
       "         [100, 133, 182],\n",
       "         ...,\n",
       "         [ 88, 122, 175],\n",
       "         [ 93, 127, 180],\n",
       "         [ 90, 124, 178]],\n",
       " \n",
       "        [[ 99, 133, 179],\n",
       "         [ 99, 133, 179],\n",
       "         [100, 135, 180],\n",
       "         ...,\n",
       "         [ 94, 130, 185],\n",
       "         [ 90, 125, 182],\n",
       "         [ 86, 120, 178]],\n",
       " \n",
       "        [[ 99, 133, 179],\n",
       "         [100, 134, 180],\n",
       "         [102, 136, 182],\n",
       "         ...,\n",
       "         [ 95, 129, 185],\n",
       "         [ 89, 124, 181],\n",
       "         [ 85, 118, 178]]], dtype=uint8),\n",
       " array([[[132, 162, 216],\n",
       "         [125, 156, 209],\n",
       "         [130, 161, 213],\n",
       "         ...,\n",
       "         [ 97, 130, 181],\n",
       "         [ 89, 122, 171],\n",
       "         [ 97, 130, 180]],\n",
       " \n",
       "        [[136, 166, 220],\n",
       "         [126, 158, 211],\n",
       "         [127, 158, 211],\n",
       "         ...,\n",
       "         [ 93, 125, 176],\n",
       "         [ 91, 124, 173],\n",
       "         [ 90, 123, 173]],\n",
       " \n",
       "        [[137, 168, 220],\n",
       "         [121, 152, 205],\n",
       "         [123, 154, 208],\n",
       "         ...,\n",
       "         [ 96, 128, 177],\n",
       "         [ 88, 121, 170],\n",
       "         [ 87, 120, 170]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 125, 191],\n",
       "         [101, 130, 192],\n",
       "         [105, 136, 191],\n",
       "         ...,\n",
       "         [122, 152, 197],\n",
       "         [123, 153, 198],\n",
       "         [122, 152, 195]],\n",
       " \n",
       "        [[ 97, 125, 189],\n",
       "         [105, 134, 195],\n",
       "         [100, 130, 189],\n",
       "         ...,\n",
       "         [119, 150, 195],\n",
       "         [124, 155, 200],\n",
       "         [124, 156, 198]],\n",
       " \n",
       "        [[100, 128, 192],\n",
       "         [108, 137, 198],\n",
       "         [105, 134, 195],\n",
       "         ...,\n",
       "         [127, 156, 201],\n",
       "         [126, 155, 200],\n",
       "         [126, 155, 199]]], dtype=uint8),\n",
       " array([[[146, 187, 249],\n",
       "         [144, 185, 247],\n",
       "         [141, 183, 246],\n",
       "         ...,\n",
       "         [140, 180, 244],\n",
       "         [148, 182, 245],\n",
       "         [152, 186, 249]],\n",
       " \n",
       "        [[145, 186, 248],\n",
       "         [141, 182, 244],\n",
       "         [138, 180, 243],\n",
       "         ...,\n",
       "         [144, 184, 249],\n",
       "         [148, 187, 249],\n",
       "         [148, 186, 248]],\n",
       " \n",
       "        [[143, 184, 246],\n",
       "         [140, 181, 243],\n",
       "         [135, 177, 241],\n",
       "         ...,\n",
       "         [145, 186, 248],\n",
       "         [143, 184, 246],\n",
       "         [144, 185, 247]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 201, 254],\n",
       "         [157, 201, 254],\n",
       "         [159, 202, 255],\n",
       "         ...,\n",
       "         [178, 212, 255],\n",
       "         [175, 211, 255],\n",
       "         [172, 209, 253]],\n",
       " \n",
       "        [[159, 199, 251],\n",
       "         [157, 201, 252],\n",
       "         [162, 201, 251],\n",
       "         ...,\n",
       "         [173, 209, 253],\n",
       "         [171, 208, 252],\n",
       "         [169, 206, 250]],\n",
       " \n",
       "        [[161, 200, 252],\n",
       "         [158, 202, 251],\n",
       "         [164, 202, 251],\n",
       "         ...,\n",
       "         [167, 203, 248],\n",
       "         [165, 202, 246],\n",
       "         [166, 203, 247]]], dtype=uint8),\n",
       " array([[[141, 150, 172],\n",
       "         [147, 156, 177],\n",
       "         [149, 156, 175],\n",
       "         ...,\n",
       "         [ 75,  81,  90],\n",
       "         [ 76,  81,  90],\n",
       "         [ 74,  79,  88]],\n",
       " \n",
       "        [[146, 153, 177],\n",
       "         [147, 154, 178],\n",
       "         [150, 157, 177],\n",
       "         ...,\n",
       "         [ 77,  80,  88],\n",
       "         [ 75,  80,  87],\n",
       "         [ 73,  79,  86]],\n",
       " \n",
       "        [[143, 154, 176],\n",
       "         [144, 155, 177],\n",
       "         [143, 153, 174],\n",
       "         ...,\n",
       "         [ 73,  77,  85],\n",
       "         [ 76,  79,  87],\n",
       "         [ 73,  79,  86]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89, 103, 132],\n",
       "         [ 95, 107, 136],\n",
       "         [ 99, 112, 140],\n",
       "         ...,\n",
       "         [102, 113, 133],\n",
       "         [ 98, 109, 130],\n",
       "         [ 95, 106, 126]],\n",
       " \n",
       "        [[ 89, 102, 134],\n",
       "         [ 93, 109, 138],\n",
       "         [ 98, 114, 141],\n",
       "         ...,\n",
       "         [105, 118, 137],\n",
       "         [103, 115, 134],\n",
       "         [ 99, 111, 132]],\n",
       " \n",
       "        [[ 87, 100, 132],\n",
       "         [ 91, 106, 138],\n",
       "         [100, 114, 143],\n",
       "         ...,\n",
       "         [111, 124, 146],\n",
       "         [107, 118, 139],\n",
       "         [ 99, 111, 132]]], dtype=uint8),\n",
       " array([[[18, 19, 29],\n",
       "         [28, 30, 41],\n",
       "         [28, 32, 43],\n",
       "         ...,\n",
       "         [43, 54, 86],\n",
       "         [42, 53, 85],\n",
       "         [43, 54, 86]],\n",
       " \n",
       "        [[22, 24, 33],\n",
       "         [30, 32, 43],\n",
       "         [29, 33, 44],\n",
       "         ...,\n",
       "         [42, 53, 85],\n",
       "         [42, 53, 85],\n",
       "         [43, 54, 86]],\n",
       " \n",
       "        [[26, 28, 38],\n",
       "         [30, 32, 43],\n",
       "         [30, 32, 43],\n",
       "         ...,\n",
       "         [45, 55, 85],\n",
       "         [44, 54, 84],\n",
       "         [43, 54, 86]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[35, 41, 64],\n",
       "         [34, 40, 63],\n",
       "         [31, 37, 60],\n",
       "         ...,\n",
       "         [27, 31, 56],\n",
       "         [29, 33, 59],\n",
       "         [30, 34, 62]],\n",
       " \n",
       "        [[34, 42, 65],\n",
       "         [32, 39, 62],\n",
       "         [32, 39, 62],\n",
       "         ...,\n",
       "         [27, 31, 59],\n",
       "         [30, 32, 62],\n",
       "         [29, 32, 63]],\n",
       " \n",
       "        [[34, 41, 66],\n",
       "         [34, 40, 66],\n",
       "         [32, 39, 64],\n",
       "         ...,\n",
       "         [31, 33, 65],\n",
       "         [31, 34, 65],\n",
       "         [30, 34, 65]]], dtype=uint8),\n",
       " array([[[40, 49, 82],\n",
       "         [40, 50, 83],\n",
       "         [40, 50, 82],\n",
       "         ...,\n",
       "         [33, 39, 52],\n",
       "         [29, 36, 49],\n",
       "         [23, 26, 36]],\n",
       " \n",
       "        [[39, 48, 81],\n",
       "         [39, 49, 82],\n",
       "         [39, 48, 81],\n",
       "         ...,\n",
       "         [34, 40, 53],\n",
       "         [30, 36, 49],\n",
       "         [24, 27, 38]],\n",
       " \n",
       "        [[36, 45, 78],\n",
       "         [39, 48, 80],\n",
       "         [40, 49, 82],\n",
       "         ...,\n",
       "         [34, 40, 53],\n",
       "         [33, 36, 50],\n",
       "         [25, 28, 39]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[31, 35, 64],\n",
       "         [31, 35, 63],\n",
       "         [30, 34, 62],\n",
       "         ...,\n",
       "         [42, 51, 74],\n",
       "         [45, 55, 75],\n",
       "         [48, 57, 76]],\n",
       " \n",
       "        [[30, 35, 66],\n",
       "         [33, 36, 67],\n",
       "         [33, 36, 66],\n",
       "         ...,\n",
       "         [43, 54, 76],\n",
       "         [46, 57, 77],\n",
       "         [49, 58, 77]],\n",
       " \n",
       "        [[32, 35, 66],\n",
       "         [32, 37, 67],\n",
       "         [35, 40, 69],\n",
       "         ...,\n",
       "         [44, 55, 78],\n",
       "         [48, 59, 81],\n",
       "         [48, 57, 78]]], dtype=uint8),\n",
       " array([[[ 47,  57,  74],\n",
       "         [ 93, 111, 129],\n",
       "         [ 96, 113, 135],\n",
       "         ...,\n",
       "         [125, 154, 193],\n",
       "         [126, 154, 194],\n",
       "         [128, 157, 196]],\n",
       " \n",
       "        [[ 64,  75,  93],\n",
       "         [ 94, 110, 130],\n",
       "         [ 98, 115, 134],\n",
       "         ...,\n",
       "         [122, 152, 191],\n",
       "         [122, 151, 190],\n",
       "         [124, 153, 192]],\n",
       " \n",
       "        [[ 80,  93, 110],\n",
       "         [ 95, 110, 129],\n",
       "         [ 99, 114, 133],\n",
       "         ...,\n",
       "         [113, 143, 182],\n",
       "         [117, 149, 188],\n",
       "         [119, 151, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 134, 171],\n",
       "         [104, 133, 170],\n",
       "         [101, 130, 167],\n",
       "         ...,\n",
       "         [ 50,  73, 117],\n",
       "         [ 57,  80, 128],\n",
       "         [ 65,  88, 136]],\n",
       " \n",
       "        [[104, 136, 172],\n",
       "         [105, 138, 174],\n",
       "         [106, 139, 175],\n",
       "         ...,\n",
       "         [ 56,  79, 129],\n",
       "         [ 64,  91, 138],\n",
       "         [ 78, 104, 151]],\n",
       " \n",
       "        [[106, 140, 178],\n",
       "         [110, 143, 181],\n",
       "         [109, 142, 181],\n",
       "         ...,\n",
       "         [ 68,  96, 143],\n",
       "         [ 78, 107, 154],\n",
       "         [ 80, 109, 156]]], dtype=uint8),\n",
       " array([[[102, 132, 173],\n",
       "         [111, 141, 182],\n",
       "         [123, 152, 193],\n",
       "         ...,\n",
       "         [107, 134, 171],\n",
       "         [101, 127, 167],\n",
       "         [ 93, 122, 161]],\n",
       " \n",
       "        [[103, 132, 174],\n",
       "         [105, 135, 176],\n",
       "         [115, 144, 185],\n",
       "         ...,\n",
       "         [110, 137, 174],\n",
       "         [103, 129, 169],\n",
       "         [ 90, 119, 158]],\n",
       " \n",
       "        [[ 94, 126, 170],\n",
       "         [106, 135, 180],\n",
       "         [109, 138, 182],\n",
       "         ...,\n",
       "         [111, 137, 173],\n",
       "         [105, 132, 168],\n",
       "         [ 96, 125, 164]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89, 121, 174],\n",
       "         [ 86, 118, 171],\n",
       "         [ 81, 113, 166],\n",
       "         ...,\n",
       "         [104, 139, 179],\n",
       "         [104, 139, 179],\n",
       "         [102, 137, 177]],\n",
       " \n",
       "        [[ 94, 126, 179],\n",
       "         [ 90, 122, 175],\n",
       "         [ 88, 120, 173],\n",
       "         ...,\n",
       "         [109, 144, 184],\n",
       "         [109, 144, 184],\n",
       "         [103, 138, 178]],\n",
       " \n",
       "        [[ 98, 130, 183],\n",
       "         [ 98, 130, 183],\n",
       "         [ 95, 128, 179],\n",
       "         ...,\n",
       "         [109, 145, 185],\n",
       "         [110, 146, 186],\n",
       "         [106, 142, 182]]], dtype=uint8),\n",
       " array([[[ 39,  44,  53],\n",
       "         [ 59,  63,  77],\n",
       "         [ 70,  78,  92],\n",
       "         ...,\n",
       "         [ 99, 119, 146],\n",
       "         [ 98, 118, 148],\n",
       "         [101, 122, 150]],\n",
       " \n",
       "        [[ 44,  49,  58],\n",
       "         [ 60,  64,  78],\n",
       "         [ 72,  80,  91],\n",
       "         ...,\n",
       "         [ 99, 119, 144],\n",
       "         [100, 118, 147],\n",
       "         [100, 118, 147]],\n",
       " \n",
       "        [[ 45,  52,  61],\n",
       "         [ 63,  69,  81],\n",
       "         [ 77,  85,  98],\n",
       "         ...,\n",
       "         [ 87, 104, 130],\n",
       "         [ 94, 112, 140],\n",
       "         [ 96, 113, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[102, 114, 128],\n",
       "         [102, 118, 135],\n",
       "         [108, 124, 142],\n",
       "         ...,\n",
       "         [100, 120, 151],\n",
       "         [100, 121, 152],\n",
       "         [ 99, 120, 151]],\n",
       " \n",
       "        [[103, 115, 130],\n",
       "         [104, 120, 137],\n",
       "         [110, 126, 144],\n",
       "         ...,\n",
       "         [101, 122, 153],\n",
       "         [102, 123, 154],\n",
       "         [100, 121, 153]],\n",
       " \n",
       "        [[105, 117, 132],\n",
       "         [107, 123, 140],\n",
       "         [110, 126, 145],\n",
       "         ...,\n",
       "         [107, 128, 159],\n",
       "         [104, 125, 156],\n",
       "         [103, 124, 156]]], dtype=uint8),\n",
       " array([[[108, 129, 158],\n",
       "         [108, 126, 156],\n",
       "         [111, 128, 157],\n",
       "         ...,\n",
       "         [ 27,  33,  43],\n",
       "         [ 12,  15,  20],\n",
       "         [ 17,  17,  22]],\n",
       " \n",
       "        [[107, 127, 157],\n",
       "         [103, 121, 151],\n",
       "         [ 99, 117, 145],\n",
       "         ...,\n",
       "         [ 47,  53,  64],\n",
       "         [ 11,  13,  21],\n",
       "         [ 13,  15,  18]],\n",
       " \n",
       "        [[101, 121, 152],\n",
       "         [100, 118, 149],\n",
       "         [ 96, 113, 142],\n",
       "         ...,\n",
       "         [ 59,  67,  77],\n",
       "         [ 12,  15,  23],\n",
       "         [ 12,  14,  18]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 120, 152],\n",
       "         [ 97, 120, 152],\n",
       "         [ 94, 117, 147],\n",
       "         ...,\n",
       "         [131, 148, 170],\n",
       "         [127, 142, 161],\n",
       "         [124, 136, 152]],\n",
       " \n",
       "        [[ 98, 119, 151],\n",
       "         [ 96, 117, 149],\n",
       "         [ 96, 118, 149],\n",
       "         ...,\n",
       "         [128, 148, 169],\n",
       "         [124, 141, 160],\n",
       "         [121, 136, 153]],\n",
       " \n",
       "        [[ 98, 119, 151],\n",
       "         [ 98, 119, 151],\n",
       "         [ 96, 117, 148],\n",
       "         ...,\n",
       "         [127, 147, 169],\n",
       "         [125, 142, 161],\n",
       "         [121, 136, 153]]], dtype=uint8),\n",
       " array([[[ 36,  45,  53],\n",
       "         [ 62,  75,  90],\n",
       "         [ 82,  98, 115],\n",
       "         ...,\n",
       "         [ 89, 110, 141],\n",
       "         [ 89, 110, 141],\n",
       "         [ 92, 114, 144]],\n",
       " \n",
       "        [[ 48,  56,  67],\n",
       "         [ 82,  95, 110],\n",
       "         [ 94, 110, 127],\n",
       "         ...,\n",
       "         [ 76,  97, 128],\n",
       "         [ 75,  96, 127],\n",
       "         [ 82, 103, 134]],\n",
       " \n",
       "        [[ 61,  70,  83],\n",
       "         [ 91, 106, 123],\n",
       "         [ 99, 115, 132],\n",
       "         ...,\n",
       "         [ 64,  86, 115],\n",
       "         [ 69,  91, 120],\n",
       "         [ 72,  93, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 123, 136],\n",
       "         [ 99, 118, 137],\n",
       "         [ 92, 116, 136],\n",
       "         ...,\n",
       "         [102, 130, 164],\n",
       "         [103, 131, 164],\n",
       "         [102, 133, 166]],\n",
       " \n",
       "        [[107, 123, 136],\n",
       "         [ 98, 118, 136],\n",
       "         [ 91, 115, 134],\n",
       "         ...,\n",
       "         [103, 131, 165],\n",
       "         [103, 131, 165],\n",
       "         [ 99, 130, 163]],\n",
       " \n",
       "        [[107, 123, 138],\n",
       "         [ 97, 117, 134],\n",
       "         [ 92, 117, 136],\n",
       "         ...,\n",
       "         [102, 130, 164],\n",
       "         [100, 128, 162],\n",
       "         [ 95, 126, 159]]], dtype=uint8),\n",
       " array([[[130, 147, 173],\n",
       "         [131, 149, 175],\n",
       "         [135, 152, 178],\n",
       "         ...,\n",
       "         [ 84, 100, 117],\n",
       "         [ 47,  58,  72],\n",
       "         [ 22,  28,  35]],\n",
       " \n",
       "        [[127, 146, 172],\n",
       "         [129, 149, 174],\n",
       "         [131, 148, 174],\n",
       "         ...,\n",
       "         [ 95, 111, 128],\n",
       "         [ 86,  96, 110],\n",
       "         [ 23,  30,  38]],\n",
       " \n",
       "        [[125, 144, 172],\n",
       "         [125, 144, 170],\n",
       "         [126, 143, 169],\n",
       "         ...,\n",
       "         [111, 128, 145],\n",
       "         [106, 122, 135],\n",
       "         [ 32,  41,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 169, 196],\n",
       "         [148, 169, 196],\n",
       "         [148, 170, 195],\n",
       "         ...,\n",
       "         [147, 171, 191],\n",
       "         [142, 165, 187],\n",
       "         [138, 161, 183]],\n",
       " \n",
       "        [[149, 170, 196],\n",
       "         [146, 167, 194],\n",
       "         [148, 170, 195],\n",
       "         ...,\n",
       "         [151, 174, 196],\n",
       "         [142, 165, 187],\n",
       "         [138, 161, 184]],\n",
       " \n",
       "        [[148, 170, 196],\n",
       "         [146, 167, 194],\n",
       "         [145, 167, 192],\n",
       "         ...,\n",
       "         [151, 174, 196],\n",
       "         [142, 166, 188],\n",
       "         [139, 161, 185]]], dtype=uint8),\n",
       " array([[[171, 188, 226],\n",
       "         [168, 186, 223],\n",
       "         [168, 185, 222],\n",
       "         ...,\n",
       "         [ 10,  16,  33],\n",
       "         [  0,   1,   9],\n",
       "         [  2,   3,  11]],\n",
       " \n",
       "        [[165, 184, 222],\n",
       "         [162, 181, 219],\n",
       "         [161, 181, 219],\n",
       "         ...,\n",
       "         [ 11,  20,  37],\n",
       "         [  1,   3,  13],\n",
       "         [  1,   1,  10]],\n",
       " \n",
       "        [[155, 175, 216],\n",
       "         [153, 174, 215],\n",
       "         [152, 173, 214],\n",
       "         ...,\n",
       "         [ 13,  21,  41],\n",
       "         [  1,   4,  14],\n",
       "         [  1,   3,  11]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 153, 198],\n",
       "         [127, 156, 200],\n",
       "         [129, 158, 202],\n",
       "         ...,\n",
       "         [ 76, 102, 148],\n",
       "         [ 62,  90, 132],\n",
       "         [ 39,  63, 104]],\n",
       " \n",
       "        [[125, 154, 199],\n",
       "         [128, 157, 201],\n",
       "         [131, 160, 204],\n",
       "         ...,\n",
       "         [ 80, 108, 153],\n",
       "         [ 67,  94, 136],\n",
       "         [ 43,  69, 107]],\n",
       " \n",
       "        [[124, 153, 198],\n",
       "         [127, 156, 200],\n",
       "         [129, 158, 202],\n",
       "         ...,\n",
       "         [ 82, 111, 156],\n",
       "         [ 72,  99, 140],\n",
       "         [ 48,  75, 113]]], dtype=uint8),\n",
       " array([[[ 34,  45,  54],\n",
       "         [ 60,  76,  90],\n",
       "         [ 75,  90, 107],\n",
       "         ...,\n",
       "         [102, 124, 159],\n",
       "         [103, 125, 160],\n",
       "         [102, 126, 161]],\n",
       " \n",
       "        [[ 61,  76,  85],\n",
       "         [ 74,  90, 105],\n",
       "         [ 78,  97, 114],\n",
       "         ...,\n",
       "         [102, 124, 156],\n",
       "         [102, 124, 156],\n",
       "         [102, 124, 158]],\n",
       " \n",
       "        [[ 77,  93, 106],\n",
       "         [ 80,  98, 115],\n",
       "         [ 83, 103, 121],\n",
       "         ...,\n",
       "         [ 97, 118, 150],\n",
       "         [ 96, 117, 149],\n",
       "         [ 98, 121, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  94, 122],\n",
       "         [ 67,  96, 127],\n",
       "         [ 69,  97, 131],\n",
       "         ...,\n",
       "         [ 77, 107, 148],\n",
       "         [ 79, 109, 150],\n",
       "         [ 78, 110, 152]],\n",
       " \n",
       "        [[ 68,  93, 125],\n",
       "         [ 68,  95, 129],\n",
       "         [ 70,  98, 133],\n",
       "         ...,\n",
       "         [ 81, 111, 152],\n",
       "         [ 81, 111, 152],\n",
       "         [ 81, 110, 154]],\n",
       " \n",
       "        [[ 70,  95, 127],\n",
       "         [ 69,  96, 130],\n",
       "         [ 70,  98, 133],\n",
       "         ...,\n",
       "         [ 82, 113, 154],\n",
       "         [ 80, 111, 152],\n",
       "         [ 77, 109, 152]]], dtype=uint8),\n",
       " array([[[ 78,  95, 128],\n",
       "         [ 71,  88, 121],\n",
       "         [ 77,  94, 127],\n",
       "         ...,\n",
       "         [123, 144, 175],\n",
       "         [123, 142, 174],\n",
       "         [122, 141, 175]],\n",
       " \n",
       "        [[ 73,  90, 123],\n",
       "         [ 69,  86, 119],\n",
       "         [ 64,  81, 114],\n",
       "         ...,\n",
       "         [115, 135, 169],\n",
       "         [114, 133, 166],\n",
       "         [120, 139, 171]],\n",
       " \n",
       "        [[ 60,  79, 114],\n",
       "         [ 57,  76, 111],\n",
       "         [ 56,  75, 110],\n",
       "         ...,\n",
       "         [104, 123, 159],\n",
       "         [104, 123, 157],\n",
       "         [101, 121, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[150, 168, 205],\n",
       "         [151, 169, 203],\n",
       "         [157, 174, 207],\n",
       "         ...,\n",
       "         [164, 181, 208],\n",
       "         [153, 172, 202],\n",
       "         [155, 176, 210]],\n",
       " \n",
       "        [[143, 162, 199],\n",
       "         [149, 168, 203],\n",
       "         [158, 173, 207],\n",
       "         ...,\n",
       "         [157, 177, 204],\n",
       "         [152, 173, 203],\n",
       "         [154, 177, 210]],\n",
       " \n",
       "        [[138, 158, 195],\n",
       "         [147, 165, 202],\n",
       "         [156, 171, 206],\n",
       "         ...,\n",
       "         [156, 178, 204],\n",
       "         [155, 176, 205],\n",
       "         [149, 173, 206]]], dtype=uint8),\n",
       " array([[[109, 131, 164],\n",
       "         [109, 130, 164],\n",
       "         [111, 133, 165],\n",
       "         ...,\n",
       "         [ 92, 107, 126],\n",
       "         [ 81,  93, 113],\n",
       "         [ 76,  86, 103]],\n",
       " \n",
       "        [[108, 131, 163],\n",
       "         [107, 130, 162],\n",
       "         [108, 131, 163],\n",
       "         ...,\n",
       "         [101, 116, 135],\n",
       "         [ 99, 114, 133],\n",
       "         [ 86,  98, 118]],\n",
       " \n",
       "        [[109, 130, 162],\n",
       "         [108, 129, 161],\n",
       "         [107, 128, 160],\n",
       "         ...,\n",
       "         [103, 117, 136],\n",
       "         [102, 116, 136],\n",
       "         [ 96, 110, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 77, 104, 141],\n",
       "         [ 75, 102, 139],\n",
       "         [ 75, 100, 137],\n",
       "         ...,\n",
       "         [ 94, 115, 147],\n",
       "         [ 94, 115, 147],\n",
       "         [ 94, 115, 147]],\n",
       " \n",
       "        [[ 79, 107, 143],\n",
       "         [ 78, 105, 142],\n",
       "         [ 77, 104, 141],\n",
       "         ...,\n",
       "         [ 95, 117, 149],\n",
       "         [ 93, 115, 147],\n",
       "         [ 93, 115, 147]],\n",
       " \n",
       "        [[ 80, 107, 144],\n",
       "         [ 80, 107, 144],\n",
       "         [ 80, 107, 144],\n",
       "         ...,\n",
       "         [ 93, 116, 151],\n",
       "         [ 92, 115, 151],\n",
       "         [ 92, 116, 149]]], dtype=uint8),\n",
       " array([[[ 77,  91, 119],\n",
       "         [ 75,  89, 117],\n",
       "         [ 74,  88, 118],\n",
       "         ...,\n",
       "         [ 95, 110, 142],\n",
       "         [ 95, 109, 141],\n",
       "         [ 93, 108, 140]],\n",
       " \n",
       "        [[ 77,  91, 119],\n",
       "         [ 81,  95, 123],\n",
       "         [ 77,  91, 120],\n",
       "         ...,\n",
       "         [ 91, 106, 138],\n",
       "         [ 91, 106, 138],\n",
       "         [ 87, 101, 133]],\n",
       " \n",
       "        [[ 76,  89, 117],\n",
       "         [ 79,  93, 121],\n",
       "         [ 79,  93, 121],\n",
       "         ...,\n",
       "         [ 76,  91, 123],\n",
       "         [ 71,  87, 119],\n",
       "         [ 79,  93, 125]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 113, 142],\n",
       "         [ 95, 113, 142],\n",
       "         [ 97, 115, 144],\n",
       "         ...,\n",
       "         [ 79,  94, 126],\n",
       "         [ 78,  96, 127],\n",
       "         [ 81,  98, 130]],\n",
       " \n",
       "        [[ 97, 115, 144],\n",
       "         [100, 118, 147],\n",
       "         [ 92, 110, 141],\n",
       "         ...,\n",
       "         [ 87, 101, 133],\n",
       "         [ 85, 102, 135],\n",
       "         [ 86, 103, 136]],\n",
       " \n",
       "        [[ 97, 115, 144],\n",
       "         [101, 119, 148],\n",
       "         [102, 120, 151],\n",
       "         ...,\n",
       "         [ 86, 104, 135],\n",
       "         [ 87, 104, 137],\n",
       "         [ 88, 105, 138]]], dtype=uint8),\n",
       " array([[[ 92, 107, 139],\n",
       "         [ 90, 105, 137],\n",
       "         [ 88, 103, 135],\n",
       "         ...,\n",
       "         [143, 143, 164],\n",
       "         [138, 138, 158],\n",
       "         [139, 136, 157]],\n",
       " \n",
       "        [[ 86, 100, 132],\n",
       "         [ 87, 101, 133],\n",
       "         [ 84,  99, 129],\n",
       "         ...,\n",
       "         [112, 109, 126],\n",
       "         [143, 138, 158],\n",
       "         [131, 127, 147]],\n",
       " \n",
       "        [[ 85,  96, 127],\n",
       "         [ 78,  89, 119],\n",
       "         [ 79,  89, 119],\n",
       "         ...,\n",
       "         [ 81,  78,  90],\n",
       "         [ 96,  92, 108],\n",
       "         [131, 126, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[102, 117, 150],\n",
       "         [ 96, 111, 144],\n",
       "         [ 90, 105, 137],\n",
       "         ...,\n",
       "         [150, 156, 181],\n",
       "         [153, 157, 180],\n",
       "         [151, 159, 175]],\n",
       " \n",
       "        [[111, 126, 159],\n",
       "         [101, 116, 149],\n",
       "         [100, 115, 147],\n",
       "         ...,\n",
       "         [151, 156, 181],\n",
       "         [152, 159, 180],\n",
       "         [153, 161, 176]],\n",
       " \n",
       "        [[114, 126, 160],\n",
       "         [111, 123, 157],\n",
       "         [106, 121, 153],\n",
       "         ...,\n",
       "         [155, 160, 185],\n",
       "         [156, 162, 184],\n",
       "         [151, 161, 175]]], dtype=uint8),\n",
       " array([[[ 50,  60,  69],\n",
       "         [ 73,  86, 100],\n",
       "         [ 96, 112, 125],\n",
       "         ...,\n",
       "         [ 97, 117, 142],\n",
       "         [ 90, 110, 137],\n",
       "         [ 93, 114, 141]],\n",
       " \n",
       "        [[ 62,  71,  83],\n",
       "         [ 87,  99, 113],\n",
       "         [105, 121, 135],\n",
       "         ...,\n",
       "         [ 93, 110, 137],\n",
       "         [ 86, 104, 131],\n",
       "         [ 87, 106, 133]],\n",
       " \n",
       "        [[ 76,  85,  97],\n",
       "         [ 98, 109, 123],\n",
       "         [120, 135, 144],\n",
       "         ...,\n",
       "         [ 88, 105, 132],\n",
       "         [ 83, 100, 127],\n",
       "         [ 81,  99, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[103, 125, 143],\n",
       "         [108, 129, 150],\n",
       "         [106, 129, 152],\n",
       "         ...,\n",
       "         [ 86, 107, 135],\n",
       "         [ 86, 107, 135],\n",
       "         [ 88, 109, 137]],\n",
       " \n",
       "        [[110, 132, 150],\n",
       "         [112, 135, 155],\n",
       "         [116, 139, 161],\n",
       "         ...,\n",
       "         [ 89, 110, 138],\n",
       "         [ 93, 114, 142],\n",
       "         [ 92, 113, 141]],\n",
       " \n",
       "        [[117, 139, 157],\n",
       "         [118, 140, 161],\n",
       "         [118, 141, 163],\n",
       "         ...,\n",
       "         [ 96, 117, 145],\n",
       "         [ 93, 114, 142],\n",
       "         [ 95, 116, 144]]], dtype=uint8),\n",
       " array([[[100, 118, 146],\n",
       "         [103, 122, 149],\n",
       "         [109, 129, 154],\n",
       "         ...,\n",
       "         [ 88,  93, 107],\n",
       "         [ 59,  59,  74],\n",
       "         [ 22,  18,  25]],\n",
       " \n",
       "        [[ 95, 114, 141],\n",
       "         [ 96, 115, 142],\n",
       "         [ 94, 113, 140],\n",
       "         ...,\n",
       "         [110, 116, 130],\n",
       "         [ 77,  77,  92],\n",
       "         [ 38,  34,  42]],\n",
       " \n",
       "        [[ 89, 107, 133],\n",
       "         [ 81,  99, 125],\n",
       "         [ 87, 105, 132],\n",
       "         ...,\n",
       "         [119, 122, 138],\n",
       "         [ 90,  91, 106],\n",
       "         [ 47,  45,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 112, 144],\n",
       "         [ 81,  96, 127],\n",
       "         [ 68,  81, 110],\n",
       "         ...,\n",
       "         [142, 151, 171],\n",
       "         [141, 150, 169],\n",
       "         [140, 148, 167]],\n",
       " \n",
       "        [[104, 119, 151],\n",
       "         [ 86, 101, 133],\n",
       "         [ 77,  91, 120],\n",
       "         ...,\n",
       "         [144, 152, 172],\n",
       "         [144, 153, 172],\n",
       "         [142, 152, 170]],\n",
       " \n",
       "        [[110, 125, 157],\n",
       "         [ 95, 110, 142],\n",
       "         [ 86, 102, 131],\n",
       "         ...,\n",
       "         [147, 158, 180],\n",
       "         [145, 156, 177],\n",
       "         [143, 154, 174]]], dtype=uint8),\n",
       " array([[[ 90, 112, 147],\n",
       "         [ 99, 118, 153],\n",
       "         [101, 120, 155],\n",
       "         ...,\n",
       "         [ 97, 112, 154],\n",
       "         [ 94, 107, 150],\n",
       "         [ 89, 102, 146]],\n",
       " \n",
       "        [[ 88, 108, 143],\n",
       "         [ 98, 118, 152],\n",
       "         [ 98, 116, 151],\n",
       "         ...,\n",
       "         [ 82,  93, 139],\n",
       "         [ 80,  93, 137],\n",
       "         [ 81,  93, 137]],\n",
       " \n",
       "        [[ 94, 114, 149],\n",
       "         [ 93, 112, 147],\n",
       "         [ 95, 115, 150],\n",
       "         ...,\n",
       "         [ 79,  91, 133],\n",
       "         [ 76,  88, 130],\n",
       "         [ 71,  83, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[122, 142, 183],\n",
       "         [126, 145, 186],\n",
       "         [126, 144, 185],\n",
       "         ...,\n",
       "         [ 93, 110, 156],\n",
       "         [ 80, 102, 150],\n",
       "         [ 98, 121, 169]],\n",
       " \n",
       "        [[128, 148, 189],\n",
       "         [124, 143, 185],\n",
       "         [126, 146, 188],\n",
       "         ...,\n",
       "         [ 94, 115, 161],\n",
       "         [ 97, 120, 168],\n",
       "         [104, 127, 175]],\n",
       " \n",
       "        [[133, 153, 192],\n",
       "         [121, 140, 183],\n",
       "         [125, 144, 187],\n",
       "         ...,\n",
       "         [111, 133, 179],\n",
       "         [110, 134, 181],\n",
       "         [109, 135, 182]]], dtype=uint8),\n",
       " array([[[ 90, 106, 148],\n",
       "         [ 91, 108, 149],\n",
       "         [ 90, 106, 146],\n",
       "         ...,\n",
       "         [109, 125, 154],\n",
       "         [101, 117, 147],\n",
       "         [ 94, 110, 139]],\n",
       " \n",
       "        [[ 88, 102, 144],\n",
       "         [ 84,  97, 138],\n",
       "         [ 83,  96, 139],\n",
       "         ...,\n",
       "         [108, 125, 152],\n",
       "         [106, 123, 150],\n",
       "         [100, 116, 146]],\n",
       " \n",
       "        [[ 80,  93, 136],\n",
       "         [ 82,  93, 136],\n",
       "         [ 79,  90, 133],\n",
       "         ...,\n",
       "         [104, 121, 149],\n",
       "         [104, 120, 148],\n",
       "         [101, 116, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82,  98, 145],\n",
       "         [ 64,  78, 125],\n",
       "         [ 63,  74, 119],\n",
       "         ...,\n",
       "         [115, 134, 167],\n",
       "         [122, 139, 170],\n",
       "         [130, 148, 174]],\n",
       " \n",
       "        [[ 88, 108, 155],\n",
       "         [ 79,  96, 143],\n",
       "         [ 72,  87, 135],\n",
       "         ...,\n",
       "         [113, 134, 166],\n",
       "         [120, 140, 171],\n",
       "         [129, 147, 174]],\n",
       " \n",
       "        [[ 97, 117, 164],\n",
       "         [ 87, 107, 154],\n",
       "         [ 79,  96, 143],\n",
       "         ...,\n",
       "         [119, 140, 171],\n",
       "         [124, 145, 175],\n",
       "         [130, 147, 175]]], dtype=uint8),\n",
       " array([[[ 37,  36,  48],\n",
       "         [ 73,  70,  92],\n",
       "         [100,  99, 120],\n",
       "         ...,\n",
       "         [ 83,  92, 130],\n",
       "         [ 83,  94, 132],\n",
       "         [ 77,  88, 126]],\n",
       " \n",
       "        [[ 47,  48,  60],\n",
       "         [ 98,  93, 115],\n",
       "         [141, 138, 155],\n",
       "         ...,\n",
       "         [ 50,  59,  95],\n",
       "         [ 66,  79, 115],\n",
       "         [ 72,  82, 120]],\n",
       " \n",
       "        [[ 65,  65,  78],\n",
       "         [120, 113, 131],\n",
       "         [171, 163, 174],\n",
       "         ...,\n",
       "         [ 37,  43,  74],\n",
       "         [ 54,  64,  98],\n",
       "         [ 63,  72, 109]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 188, 211],\n",
       "         [200, 203, 223],\n",
       "         [194, 199, 222],\n",
       "         ...,\n",
       "         [127, 135, 178],\n",
       "         [125, 137, 179],\n",
       "         [121, 130, 173]],\n",
       " \n",
       "        [[186, 191, 214],\n",
       "         [197, 200, 222],\n",
       "         [195, 201, 223],\n",
       "         ...,\n",
       "         [126, 137, 179],\n",
       "         [130, 140, 183],\n",
       "         [132, 141, 185]],\n",
       " \n",
       "        [[190, 197, 220],\n",
       "         [195, 200, 226],\n",
       "         [199, 205, 231],\n",
       "         ...,\n",
       "         [125, 136, 177],\n",
       "         [129, 136, 179],\n",
       "         [130, 136, 181]]], dtype=uint8),\n",
       " array([[[137, 180, 219],\n",
       "         [138, 181, 220],\n",
       "         [139, 183, 224],\n",
       "         ...,\n",
       "         [ 63, 100, 135],\n",
       "         [ 65, 101, 134],\n",
       "         [ 60,  93, 124]],\n",
       " \n",
       "        [[131, 177, 215],\n",
       "         [137, 181, 222],\n",
       "         [139, 183, 224],\n",
       "         ...,\n",
       "         [ 59,  94, 123],\n",
       "         [ 57,  92, 118],\n",
       "         [ 54,  84, 110]],\n",
       " \n",
       "        [[132, 175, 217],\n",
       "         [134, 177, 219],\n",
       "         [136, 179, 222],\n",
       "         ...,\n",
       "         [ 57,  90, 109],\n",
       "         [ 50,  80, 100],\n",
       "         [ 48,  74,  95]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 136, 184],\n",
       "         [ 84, 122, 170],\n",
       "         [ 77, 113, 161],\n",
       "         ...,\n",
       "         [ 87, 114, 171],\n",
       "         [ 90, 118, 176],\n",
       "         [ 94, 122, 183]],\n",
       " \n",
       "        [[ 92, 132, 182],\n",
       "         [ 86, 123, 173],\n",
       "         [ 77, 111, 159],\n",
       "         ...,\n",
       "         [ 86, 114, 174],\n",
       "         [ 90, 118, 179],\n",
       "         [ 88, 115, 179]],\n",
       " \n",
       "        [[ 92, 131, 183],\n",
       "         [ 87, 124, 174],\n",
       "         [ 80, 113, 160],\n",
       "         ...,\n",
       "         [ 93, 121, 182],\n",
       "         [ 88, 116, 178],\n",
       "         [ 82, 109, 173]]], dtype=uint8),\n",
       " array([[[ 47,  45, 104],\n",
       "         [ 48,  46, 105],\n",
       "         [ 51,  48, 107],\n",
       "         ...,\n",
       "         [ 56,  57,  78],\n",
       "         [ 54,  55,  76],\n",
       "         [ 48,  52,  70]],\n",
       " \n",
       "        [[ 48,  47, 103],\n",
       "         [ 47,  46, 102],\n",
       "         [ 50,  48, 104],\n",
       "         ...,\n",
       "         [ 59,  61,  82],\n",
       "         [ 57,  59,  81],\n",
       "         [ 46,  50,  68]],\n",
       " \n",
       "        [[ 51,  49, 108],\n",
       "         [ 49,  47, 106],\n",
       "         [ 46,  43, 102],\n",
       "         ...,\n",
       "         [ 58,  58,  80],\n",
       "         [ 54,  55,  76],\n",
       "         [ 46,  50,  69]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 48,  49,  87],\n",
       "         [ 52,  54,  88],\n",
       "         [ 55,  57,  91],\n",
       "         ...,\n",
       "         [ 66,  70,  99],\n",
       "         [ 56,  63,  90],\n",
       "         [ 50,  57,  84]],\n",
       " \n",
       "        [[ 47,  49,  84],\n",
       "         [ 53,  55,  89],\n",
       "         [ 57,  60,  91],\n",
       "         ...,\n",
       "         [ 69,  72, 100],\n",
       "         [ 57,  62,  91],\n",
       "         [ 52,  58,  85]],\n",
       " \n",
       "        [[ 45,  49,  84],\n",
       "         [ 52,  57,  90],\n",
       "         [ 59,  63,  94],\n",
       "         ...,\n",
       "         [ 67,  71,  99],\n",
       "         [ 59,  64,  90],\n",
       "         [ 48,  52,  77]]], dtype=uint8),\n",
       " array([[[135, 145, 175],\n",
       "         [129, 139, 170],\n",
       "         [110, 121, 153],\n",
       "         ...,\n",
       "         [180, 171, 184],\n",
       "         [131, 123, 133],\n",
       "         [ 45,  37,  37]],\n",
       " \n",
       "        [[107, 117, 151],\n",
       "         [103, 114, 147],\n",
       "         [ 97, 107, 140],\n",
       "         ...,\n",
       "         [192, 184, 194],\n",
       "         [153, 144, 158],\n",
       "         [ 54,  45,  48]],\n",
       " \n",
       "        [[ 89,  98, 134],\n",
       "         [ 97, 107, 140],\n",
       "         [ 72,  80, 113],\n",
       "         ...,\n",
       "         [203, 197, 202],\n",
       "         [178, 169, 182],\n",
       "         [ 99,  88,  98]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[166, 177, 214],\n",
       "         [152, 164, 200],\n",
       "         [151, 160, 197],\n",
       "         ...,\n",
       "         [202, 204, 225],\n",
       "         [215, 218, 236],\n",
       "         [217, 222, 236]],\n",
       " \n",
       "        [[173, 182, 219],\n",
       "         [160, 169, 206],\n",
       "         [157, 166, 204],\n",
       "         ...,\n",
       "         [217, 221, 239],\n",
       "         [216, 223, 238],\n",
       "         [214, 222, 237]],\n",
       " \n",
       "        [[169, 180, 216],\n",
       "         [167, 176, 212],\n",
       "         [160, 169, 206],\n",
       "         ...,\n",
       "         [218, 223, 241],\n",
       "         [211, 219, 236],\n",
       "         [214, 222, 238]]], dtype=uint8),\n",
       " array([[[223, 236, 250],\n",
       "         [223, 236, 250],\n",
       "         [222, 235, 249],\n",
       "         ...,\n",
       "         [204, 222, 245],\n",
       "         [204, 222, 245],\n",
       "         [205, 222, 244]],\n",
       " \n",
       "        [[224, 236, 251],\n",
       "         [219, 234, 249],\n",
       "         [214, 229, 248],\n",
       "         ...,\n",
       "         [203, 219, 247],\n",
       "         [198, 218, 251],\n",
       "         [199, 220, 250]],\n",
       " \n",
       "        [[181, 213, 243],\n",
       "         [175, 208, 241],\n",
       "         [163, 198, 231],\n",
       "         ...,\n",
       "         [193, 214, 246],\n",
       "         [190, 215, 247],\n",
       "         [192, 216, 248]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[233, 242, 249],\n",
       "         [232, 240, 249],\n",
       "         [229, 236, 248],\n",
       "         ...,\n",
       "         [215, 229, 247],\n",
       "         [219, 229, 247],\n",
       "         [226, 235, 249]],\n",
       " \n",
       "        [[234, 242, 248],\n",
       "         [234, 242, 249],\n",
       "         [232, 239, 248],\n",
       "         ...,\n",
       "         [215, 229, 247],\n",
       "         [219, 229, 246],\n",
       "         [226, 235, 249]],\n",
       " \n",
       "        [[231, 240, 250],\n",
       "         [231, 240, 250],\n",
       "         [232, 241, 251],\n",
       "         ...,\n",
       "         [222, 231, 245],\n",
       "         [224, 234, 251],\n",
       "         [229, 238, 253]]], dtype=uint8),\n",
       " array([[[ 41,  55,  67],\n",
       "         [109, 122, 142],\n",
       "         [114, 131, 157],\n",
       "         ...,\n",
       "         [ 64,  95, 150],\n",
       "         [ 65,  97, 151],\n",
       "         [ 60,  93, 148]],\n",
       " \n",
       "        [[ 27,  36,  48],\n",
       "         [120, 135, 155],\n",
       "         [112, 129, 159],\n",
       "         ...,\n",
       "         [ 59,  93, 147],\n",
       "         [ 54,  87, 141],\n",
       "         [ 52,  83, 139]],\n",
       " \n",
       "        [[ 42,  52,  65],\n",
       "         [112, 127, 150],\n",
       "         [111, 130, 160],\n",
       "         ...,\n",
       "         [ 46,  76, 131],\n",
       "         [ 50,  80, 135],\n",
       "         [ 49,  80, 137]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78, 100, 146],\n",
       "         [ 74,  97, 143],\n",
       "         [ 65,  92, 139],\n",
       "         ...,\n",
       "         [ 36,  68, 129],\n",
       "         [ 36,  68, 129],\n",
       "         [ 54,  88, 145]],\n",
       " \n",
       "        [[ 74,  97, 144],\n",
       "         [ 81, 104, 151],\n",
       "         [ 68,  95, 142],\n",
       "         ...,\n",
       "         [ 37,  72, 132],\n",
       "         [ 49,  83, 141],\n",
       "         [ 72, 105, 158]],\n",
       " \n",
       "        [[ 68,  92, 141],\n",
       "         [ 68,  92, 141],\n",
       "         [ 71,  99, 149],\n",
       "         ...,\n",
       "         [ 42,  78, 138],\n",
       "         [ 61,  97, 151],\n",
       "         [ 86, 118, 165]]], dtype=uint8),\n",
       " array([[[133, 151, 183],\n",
       "         [134, 152, 184],\n",
       "         [143, 156, 186],\n",
       "         ...,\n",
       "         [119, 129, 151],\n",
       "         [109, 120, 142],\n",
       "         [ 78,  85, 101]],\n",
       " \n",
       "        [[123, 143, 180],\n",
       "         [122, 143, 182],\n",
       "         [125, 145, 181],\n",
       "         ...,\n",
       "         [127, 134, 156],\n",
       "         [120, 130, 150],\n",
       "         [ 78,  85,  99]],\n",
       " \n",
       "        [[103, 130, 176],\n",
       "         [ 98, 128, 173],\n",
       "         [101, 130, 172],\n",
       "         ...,\n",
       "         [131, 139, 159],\n",
       "         [132, 142, 160],\n",
       "         [ 72,  79,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[120, 135, 171],\n",
       "         [114, 130, 169],\n",
       "         [108, 119, 158],\n",
       "         ...,\n",
       "         [123, 136, 163],\n",
       "         [132, 146, 165],\n",
       "         [141, 155, 166]],\n",
       " \n",
       "        [[116, 130, 167],\n",
       "         [107, 124, 163],\n",
       "         [103, 116, 156],\n",
       "         ...,\n",
       "         [113, 128, 155],\n",
       "         [125, 136, 156],\n",
       "         [160, 171, 176]],\n",
       " \n",
       "        [[124, 137, 174],\n",
       "         [103, 119, 159],\n",
       "         [104, 117, 158],\n",
       "         ...,\n",
       "         [120, 132, 160],\n",
       "         [135, 145, 163],\n",
       "         [182, 192, 194]]], dtype=uint8),\n",
       " array([[[ 43,  79, 110],\n",
       "         [ 52,  95, 133],\n",
       "         [ 57, 102, 140],\n",
       "         ...,\n",
       "         [143, 187, 217],\n",
       "         [137, 184, 213],\n",
       "         [126, 176, 208]],\n",
       " \n",
       "        [[ 44,  82, 115],\n",
       "         [ 55,  99, 137],\n",
       "         [ 58, 103, 141],\n",
       "         ...,\n",
       "         [133, 180, 212],\n",
       "         [129, 177, 209],\n",
       "         [123, 174, 206]],\n",
       " \n",
       "        [[ 45,  87, 120],\n",
       "         [ 52,  98, 136],\n",
       "         [ 62, 104, 143],\n",
       "         ...,\n",
       "         [114, 168, 201],\n",
       "         [116, 168, 201],\n",
       "         [118, 168, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 57,  85, 103],\n",
       "         [ 95, 133, 162],\n",
       "         [ 93, 134, 166],\n",
       "         ...,\n",
       "         [  9,  10,  16],\n",
       "         [ 18,  36,  72],\n",
       "         [111, 163, 197]],\n",
       " \n",
       "        [[ 14,  22,  32],\n",
       "         [ 51,  83,  99],\n",
       "         [ 83, 127, 159],\n",
       "         ...,\n",
       "         [  8,  16,  44],\n",
       "         [106, 154, 192],\n",
       "         [130, 183, 214]],\n",
       " \n",
       "        [[ 50,  82, 109],\n",
       "         [ 31,  33,  40],\n",
       "         [115, 127, 131],\n",
       "         ...,\n",
       "         [ 86, 130, 168],\n",
       "         [126, 179, 214],\n",
       "         [140, 190, 222]]], dtype=uint8),\n",
       " array([[[164, 179, 194],\n",
       "         [163, 181, 194],\n",
       "         [153, 173, 190],\n",
       "         ...,\n",
       "         [139, 151, 186],\n",
       "         [139, 151, 187],\n",
       "         [140, 152, 188]],\n",
       " \n",
       "        [[168, 185, 198],\n",
       "         [156, 175, 191],\n",
       "         [113, 130, 151],\n",
       "         ...,\n",
       "         [139, 151, 186],\n",
       "         [139, 151, 187],\n",
       "         [139, 151, 187]],\n",
       " \n",
       "        [[159, 177, 194],\n",
       "         [115, 131, 153],\n",
       "         [ 94, 107, 133],\n",
       "         ...,\n",
       "         [138, 150, 186],\n",
       "         [139, 151, 187],\n",
       "         [137, 149, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[143, 157, 185],\n",
       "         [145, 159, 187],\n",
       "         [146, 163, 190],\n",
       "         ...,\n",
       "         [143, 154, 184],\n",
       "         [147, 158, 188],\n",
       "         [154, 165, 194]],\n",
       " \n",
       "        [[141, 155, 183],\n",
       "         [145, 161, 189],\n",
       "         [145, 162, 189],\n",
       "         ...,\n",
       "         [143, 152, 182],\n",
       "         [150, 161, 189],\n",
       "         [155, 165, 195]],\n",
       " \n",
       "        [[142, 156, 184],\n",
       "         [144, 160, 187],\n",
       "         [144, 161, 188],\n",
       "         ...,\n",
       "         [144, 154, 184],\n",
       "         [152, 163, 191],\n",
       "         [154, 164, 194]]], dtype=uint8),\n",
       " array([[[140, 152, 186],\n",
       "         [140, 152, 186],\n",
       "         [139, 151, 185],\n",
       "         ...,\n",
       "         [178, 197, 206],\n",
       "         [170, 189, 201],\n",
       "         [144, 165, 182]],\n",
       " \n",
       "        [[137, 150, 186],\n",
       "         [137, 149, 185],\n",
       "         [136, 148, 184],\n",
       "         ...,\n",
       "         [172, 191, 206],\n",
       "         [180, 200, 212],\n",
       "         [172, 190, 204]],\n",
       " \n",
       "        [[134, 148, 184],\n",
       "         [133, 147, 183],\n",
       "         [132, 147, 182],\n",
       "         ...,\n",
       "         [135, 156, 175],\n",
       "         [171, 191, 206],\n",
       "         [185, 202, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 152, 187],\n",
       "         [127, 146, 181],\n",
       "         [126, 145, 180],\n",
       "         ...,\n",
       "         [171, 182, 210],\n",
       "         [171, 183, 211],\n",
       "         [170, 185, 210]],\n",
       " \n",
       "        [[136, 153, 187],\n",
       "         [129, 147, 181],\n",
       "         [128, 147, 182],\n",
       "         ...,\n",
       "         [170, 182, 209],\n",
       "         [170, 182, 210],\n",
       "         [168, 184, 206]],\n",
       " \n",
       "        [[141, 154, 187],\n",
       "         [133, 149, 181],\n",
       "         [128, 147, 180],\n",
       "         ...,\n",
       "         [170, 182, 209],\n",
       "         [169, 182, 208],\n",
       "         [167, 183, 204]]], dtype=uint8),\n",
       " array([[[113, 167, 198],\n",
       "         [117, 168, 200],\n",
       "         [116, 168, 198],\n",
       "         ...,\n",
       "         [ 87, 139, 174],\n",
       "         [ 70, 119, 153],\n",
       "         [ 32,  60,  88]],\n",
       " \n",
       "        [[108, 163, 194],\n",
       "         [105, 159, 190],\n",
       "         [104, 158, 189],\n",
       "         ...,\n",
       "         [ 91, 143, 178],\n",
       "         [ 74, 121, 154],\n",
       "         [ 43,  72, 101]],\n",
       " \n",
       "        [[ 97, 152, 183],\n",
       "         [ 90, 144, 175],\n",
       "         [ 80, 133, 164],\n",
       "         ...,\n",
       "         [ 93, 144, 175],\n",
       "         [ 80, 128, 159],\n",
       "         [ 53,  86, 116]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 10,  12,  24],\n",
       "         [ 41,  69,  95],\n",
       "         [ 55, 101, 137],\n",
       "         ...,\n",
       "         [ 93, 150, 176],\n",
       "         [ 88, 142, 163],\n",
       "         [ 74,  97, 104]],\n",
       " \n",
       "        [[  6,  18,  37],\n",
       "         [  7,  21,  33],\n",
       "         [ 53,  95, 126],\n",
       "         ...,\n",
       "         [ 92, 148, 172],\n",
       "         [ 87, 123, 135],\n",
       "         [ 16,  22,  24]],\n",
       " \n",
       "        [[ 70,  97, 127],\n",
       "         [ 10,  14,  24],\n",
       "         [ 21,  52,  77],\n",
       "         ...,\n",
       "         [102, 148, 166],\n",
       "         [ 40,  59,  61],\n",
       "         [  9,  16,  20]]], dtype=uint8),\n",
       " array([[[ 64,  84,  60],\n",
       "         [ 88, 105,  92],\n",
       "         [130, 141, 145],\n",
       "         ...,\n",
       "         [125, 139, 158],\n",
       "         [126, 140, 159],\n",
       "         [121, 134, 156]],\n",
       " \n",
       "        [[ 43,  63,  44],\n",
       "         [ 94, 111, 101],\n",
       "         [116, 127, 133],\n",
       "         ...,\n",
       "         [123, 137, 156],\n",
       "         [121, 134, 156],\n",
       "         [120, 133, 155]],\n",
       " \n",
       "        [[ 65,  85,  69],\n",
       "         [100, 113, 110],\n",
       "         [114, 123, 132],\n",
       "         ...,\n",
       "         [112, 126, 145],\n",
       "         [116, 129, 150],\n",
       "         [113, 126, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 138, 152],\n",
       "         [123, 136, 150],\n",
       "         [121, 132, 148],\n",
       "         ...,\n",
       "         [104, 115, 142],\n",
       "         [101, 116, 142],\n",
       "         [103, 117, 145]],\n",
       " \n",
       "        [[129, 142, 157],\n",
       "         [127, 139, 156],\n",
       "         [122, 133, 150],\n",
       "         ...,\n",
       "         [102, 114, 141],\n",
       "         [102, 117, 143],\n",
       "         [104, 118, 146]],\n",
       " \n",
       "        [[131, 144, 159],\n",
       "         [132, 144, 162],\n",
       "         [127, 139, 157],\n",
       "         ...,\n",
       "         [106, 119, 145],\n",
       "         [109, 122, 148],\n",
       "         [109, 123, 151]]], dtype=uint8),\n",
       " array([[[ 22,  20,  32],\n",
       "         [ 22,  20,  32],\n",
       "         [ 22,  20,  32],\n",
       "         ...,\n",
       "         [110, 124, 173],\n",
       "         [124, 138, 186],\n",
       "         [146, 152, 195]],\n",
       " \n",
       "        [[ 18,  18,  29],\n",
       "         [ 20,  18,  30],\n",
       "         [ 20,  18,  30],\n",
       "         ...,\n",
       "         [115, 128, 176],\n",
       "         [122, 139, 187],\n",
       "         [150, 157, 198]],\n",
       " \n",
       "        [[ 20,  18,  30],\n",
       "         [ 20,  19,  29],\n",
       "         [ 21,  20,  30],\n",
       "         ...,\n",
       "         [113, 126, 173],\n",
       "         [121, 134, 185],\n",
       "         [143, 155, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 20,  20,  32],\n",
       "         [ 21,  21,  35],\n",
       "         [ 28,  28,  42],\n",
       "         ...,\n",
       "         [ 23,  22,  39],\n",
       "         [ 29,  27,  49],\n",
       "         [ 31,  29,  52]],\n",
       " \n",
       "        [[ 19,  19,  33],\n",
       "         [ 20,  20,  34],\n",
       "         [ 24,  24,  38],\n",
       "         ...,\n",
       "         [ 21,  21,  39],\n",
       "         [ 27,  25,  45],\n",
       "         [ 31,  27,  51]],\n",
       " \n",
       "        [[ 21,  19,  32],\n",
       "         [ 23,  23,  36],\n",
       "         [ 22,  22,  35],\n",
       "         ...,\n",
       "         [ 23,  21,  40],\n",
       "         [ 27,  25,  45],\n",
       "         [ 35,  31,  56]]], dtype=uint8),\n",
       " array([[[ 34,  55,  83],\n",
       "         [ 39,  67, 110],\n",
       "         [ 56,  97, 148],\n",
       "         ...,\n",
       "         [164, 204, 238],\n",
       "         [160, 202, 239],\n",
       "         [149, 193, 232]],\n",
       " \n",
       "        [[ 36,  65,  97],\n",
       "         [ 52,  91, 135],\n",
       "         [ 51,  98, 146],\n",
       "         ...,\n",
       "         [158, 201, 238],\n",
       "         [149, 192, 231],\n",
       "         [142, 187, 225]],\n",
       " \n",
       "        [[ 39,  69, 105],\n",
       "         [ 56,  98, 145],\n",
       "         [ 59, 109, 159],\n",
       "         ...,\n",
       "         [144, 188, 225],\n",
       "         [143, 186, 229],\n",
       "         [143, 188, 226]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 76, 130, 177],\n",
       "         [ 89, 142, 189],\n",
       "         [ 86, 144, 194],\n",
       "         ...,\n",
       "         [136, 188, 238],\n",
       "         [140, 189, 239],\n",
       "         [143, 191, 239]],\n",
       " \n",
       "        [[ 83, 137, 184],\n",
       "         [ 87, 141, 188],\n",
       "         [ 88, 148, 194],\n",
       "         ...,\n",
       "         [136, 189, 238],\n",
       "         [142, 191, 240],\n",
       "         [144, 193, 240]],\n",
       " \n",
       "        [[ 80, 134, 181],\n",
       "         [ 88, 141, 188],\n",
       "         [ 89, 147, 193],\n",
       "         ...,\n",
       "         [137, 188, 238],\n",
       "         [132, 183, 233],\n",
       "         [140, 189, 235]]], dtype=uint8),\n",
       " array([[[131, 142, 163],\n",
       "         [133, 144, 164],\n",
       "         [131, 142, 161],\n",
       "         ...,\n",
       "         [ 91, 103, 113],\n",
       "         [ 88, 100, 100],\n",
       "         [ 74,  83,  71]],\n",
       " \n",
       "        [[118, 129, 150],\n",
       "         [117, 127, 147],\n",
       "         [120, 132, 151],\n",
       "         ...,\n",
       "         [ 73,  88,  90],\n",
       "         [ 87, 101,  98],\n",
       "         [ 75,  86,  74]],\n",
       " \n",
       "        [[107, 120, 141],\n",
       "         [109, 120, 140],\n",
       "         [107, 118, 139],\n",
       "         ...,\n",
       "         [ 47,  63,  61],\n",
       "         [ 68,  84,  78],\n",
       "         [ 77,  87,  76]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  86, 107],\n",
       "         [ 74,  88, 110],\n",
       "         [ 75,  89, 111],\n",
       "         ...,\n",
       "         [ 47,  63,  74],\n",
       "         [ 53,  70,  80],\n",
       "         [ 56,  73,  81]],\n",
       " \n",
       "        [[ 65,  80, 103],\n",
       "         [ 77,  91, 114],\n",
       "         [ 75,  89, 112],\n",
       "         ...,\n",
       "         [ 51,  67,  80],\n",
       "         [ 54,  70,  83],\n",
       "         [ 54,  70,  82]],\n",
       " \n",
       "        [[ 62,  76,  99],\n",
       "         [ 75,  89, 112],\n",
       "         [ 76,  90, 113],\n",
       "         ...,\n",
       "         [ 51,  67,  79],\n",
       "         [ 53,  69,  81],\n",
       "         [ 51,  67,  80]]], dtype=uint8),\n",
       " array([[[145, 189, 229],\n",
       "         [142, 188, 228],\n",
       "         [143, 188, 229],\n",
       "         ...,\n",
       "         [ 99, 149, 193],\n",
       "         [ 69, 112, 160],\n",
       "         [ 26,  43,  79]],\n",
       " \n",
       "        [[140, 186, 227],\n",
       "         [141, 187, 228],\n",
       "         [141, 187, 228],\n",
       "         ...,\n",
       "         [105, 154, 200],\n",
       "         [ 78, 122, 171],\n",
       "         [ 28,  47,  83]],\n",
       " \n",
       "        [[141, 186, 227],\n",
       "         [136, 182, 223],\n",
       "         [139, 185, 226],\n",
       "         ...,\n",
       "         [102, 152, 195],\n",
       "         [ 80, 124, 172],\n",
       "         [ 32,  51,  89]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[161, 200, 246],\n",
       "         [150, 191, 236],\n",
       "         [149, 190, 235],\n",
       "         ...,\n",
       "         [120, 172, 212],\n",
       "         [113, 166, 203],\n",
       "         [109, 157, 192]],\n",
       " \n",
       "        [[165, 204, 250],\n",
       "         [148, 190, 235],\n",
       "         [142, 184, 229],\n",
       "         ...,\n",
       "         [118, 170, 210],\n",
       "         [114, 168, 204],\n",
       "         [110, 156, 192]],\n",
       " \n",
       "        [[161, 197, 245],\n",
       "         [145, 186, 234],\n",
       "         [134, 177, 224],\n",
       "         ...,\n",
       "         [119, 170, 210],\n",
       "         [109, 161, 196],\n",
       "         [105, 155, 188]]], dtype=uint8),\n",
       " array([[[178, 179, 207],\n",
       "         [180, 180, 208],\n",
       "         [183, 180, 209],\n",
       "         ...,\n",
       "         [178, 188, 205],\n",
       "         [193, 200, 210],\n",
       "         [199, 205, 208]],\n",
       " \n",
       "        [[178, 179, 207],\n",
       "         [179, 179, 207],\n",
       "         [180, 178, 207],\n",
       "         ...,\n",
       "         [170, 177, 199],\n",
       "         [184, 189, 204],\n",
       "         [195, 204, 211]],\n",
       " \n",
       "        [[178, 179, 207],\n",
       "         [180, 180, 209],\n",
       "         [182, 180, 209],\n",
       "         ...,\n",
       "         [159, 169, 192],\n",
       "         [172, 181, 198],\n",
       "         [187, 195, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[175, 179, 197],\n",
       "         [174, 178, 197],\n",
       "         [172, 176, 195],\n",
       "         ...,\n",
       "         [182, 188, 211],\n",
       "         [179, 186, 211],\n",
       "         [177, 183, 212]],\n",
       " \n",
       "        [[173, 178, 199],\n",
       "         [175, 180, 200],\n",
       "         [173, 177, 196],\n",
       "         ...,\n",
       "         [181, 187, 210],\n",
       "         [179, 186, 211],\n",
       "         [177, 183, 212]],\n",
       " \n",
       "        [[172, 177, 198],\n",
       "         [175, 179, 199],\n",
       "         [173, 177, 196],\n",
       "         ...,\n",
       "         [179, 185, 209],\n",
       "         [176, 183, 209],\n",
       "         [177, 179, 209]]], dtype=uint8),\n",
       " array([[[216, 239, 235],\n",
       "         [217, 236, 231],\n",
       "         [200, 215, 210],\n",
       "         ...,\n",
       "         [161, 177, 198],\n",
       "         [146, 164, 187],\n",
       "         [186, 202, 225]],\n",
       " \n",
       "        [[204, 232, 232],\n",
       "         [211, 235, 232],\n",
       "         [180, 195, 186],\n",
       "         ...,\n",
       "         [158, 174, 194],\n",
       "         [153, 170, 193],\n",
       "         [190, 206, 229]],\n",
       " \n",
       "        [[214, 237, 234],\n",
       "         [224, 242, 237],\n",
       "         [157, 164, 149],\n",
       "         ...,\n",
       "         [165, 180, 201],\n",
       "         [147, 163, 186],\n",
       "         [177, 193, 216]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 153, 158],\n",
       "         [191, 204, 206],\n",
       "         [192, 205, 215],\n",
       "         ...,\n",
       "         [184, 198, 220],\n",
       "         [176, 188, 212],\n",
       "         [173, 189, 212]],\n",
       " \n",
       "        [[170, 181, 189],\n",
       "         [191, 204, 205],\n",
       "         [187, 200, 210],\n",
       "         ...,\n",
       "         [178, 188, 209],\n",
       "         [182, 196, 213],\n",
       "         [176, 193, 215]],\n",
       " \n",
       "        [[191, 204, 207],\n",
       "         [187, 199, 203],\n",
       "         [180, 193, 202],\n",
       "         ...,\n",
       "         [176, 188, 205],\n",
       "         [176, 190, 208],\n",
       "         [177, 193, 218]]], dtype=uint8),\n",
       " array([[[163, 178, 209],\n",
       "         [166, 182, 211],\n",
       "         [160, 176, 206],\n",
       "         ...,\n",
       "         [ 63,  75,  73],\n",
       "         [114, 120, 114],\n",
       "         [211, 213, 204]],\n",
       " \n",
       "        [[176, 189, 215],\n",
       "         [164, 177, 203],\n",
       "         [157, 170, 195],\n",
       "         ...,\n",
       "         [ 72,  79,  79],\n",
       "         [ 99, 106, 102],\n",
       "         [196, 195, 186]],\n",
       " \n",
       "        [[174, 188, 208],\n",
       "         [175, 188, 206],\n",
       "         [173, 186, 204],\n",
       "         ...,\n",
       "         [ 73,  81,  80],\n",
       "         [ 98, 105, 100],\n",
       "         [173, 171, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 67,  82, 118],\n",
       "         [ 95, 110, 143],\n",
       "         [ 75,  89, 126],\n",
       "         ...,\n",
       "         [ 60,  71,  97],\n",
       "         [ 68,  80, 104],\n",
       "         [ 72,  84, 108]],\n",
       " \n",
       "        [[ 50,  66, 103],\n",
       "         [ 78,  93, 126],\n",
       "         [ 92, 109, 139],\n",
       "         ...,\n",
       "         [ 61,  74, 100],\n",
       "         [ 71,  84, 107],\n",
       "         [ 65,  79, 102]],\n",
       " \n",
       "        [[ 41,  57,  93],\n",
       "         [ 57,  72, 108],\n",
       "         [105, 119, 144],\n",
       "         ...,\n",
       "         [ 57,  69,  96],\n",
       "         [ 60,  72,  96],\n",
       "         [ 70,  82, 106]]], dtype=uint8),\n",
       " array([[[ 23,  38,  22],\n",
       "         [ 45,  62,  51],\n",
       "         [133, 140, 150],\n",
       "         ...,\n",
       "         [195, 206, 228],\n",
       "         [190, 203, 225],\n",
       "         [189, 201, 224]],\n",
       " \n",
       "        [[ 32,  46,  32],\n",
       "         [ 52,  71,  63],\n",
       "         [144, 151, 160],\n",
       "         ...,\n",
       "         [196, 205, 225],\n",
       "         [193, 204, 223],\n",
       "         [191, 201, 225]],\n",
       " \n",
       "        [[ 23,  38,  21],\n",
       "         [ 83,  98, 101],\n",
       "         [138, 145, 152],\n",
       "         ...,\n",
       "         [198, 208, 224],\n",
       "         [192, 203, 223],\n",
       "         [191, 202, 222]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[187, 194, 199],\n",
       "         [190, 200, 212],\n",
       "         [191, 201, 219],\n",
       "         ...,\n",
       "         [190, 203, 229],\n",
       "         [193, 206, 232],\n",
       "         [187, 199, 227]],\n",
       " \n",
       "        [[191, 199, 204],\n",
       "         [194, 202, 218],\n",
       "         [193, 202, 221],\n",
       "         ...,\n",
       "         [197, 210, 236],\n",
       "         [195, 208, 234],\n",
       "         [189, 202, 229]],\n",
       " \n",
       "        [[190, 197, 206],\n",
       "         [192, 200, 216],\n",
       "         [195, 205, 224],\n",
       "         ...,\n",
       "         [200, 211, 238],\n",
       "         [193, 206, 232],\n",
       "         [191, 205, 232]]], dtype=uint8),\n",
       " array([[[167, 181, 209],\n",
       "         [168, 181, 207],\n",
       "         [164, 177, 203],\n",
       "         ...,\n",
       "         [ 56,  68,  69],\n",
       "         [ 34,  48,  42],\n",
       "         [ 20,  27,  22]],\n",
       " \n",
       "        [[170, 185, 211],\n",
       "         [171, 184, 210],\n",
       "         [169, 182, 208],\n",
       "         ...,\n",
       "         [ 71,  82,  86],\n",
       "         [ 57,  69,  72],\n",
       "         [ 31,  39,  35]],\n",
       " \n",
       "        [[171, 186, 212],\n",
       "         [170, 183, 209],\n",
       "         [170, 183, 209],\n",
       "         ...,\n",
       "         [ 79,  89,  96],\n",
       "         [ 68,  79,  85],\n",
       "         [ 43,  54,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 77,  94, 121],\n",
       "         [ 77,  92, 118],\n",
       "         [ 75,  90, 116],\n",
       "         ...,\n",
       "         [ 90, 101, 120],\n",
       "         [ 87,  99, 117],\n",
       "         [ 85,  97, 108]],\n",
       " \n",
       "        [[ 79,  96, 123],\n",
       "         [ 78,  93, 119],\n",
       "         [ 76,  91, 117],\n",
       "         ...,\n",
       "         [ 98, 110, 129],\n",
       "         [ 93, 104, 123],\n",
       "         [ 87,  99, 111]],\n",
       " \n",
       "        [[ 81,  98, 124],\n",
       "         [ 80,  95, 122],\n",
       "         [ 79,  94, 120],\n",
       "         ...,\n",
       "         [104, 117, 137],\n",
       "         [ 95, 109, 127],\n",
       "         [ 91, 102, 117]]], dtype=uint8),\n",
       " array([[[ 87,  88,  78],\n",
       "         [ 95,  96,  87],\n",
       "         [ 89,  90,  81],\n",
       "         ...,\n",
       "         [118, 126, 139],\n",
       "         [112, 120, 133],\n",
       "         [113, 123, 137]],\n",
       " \n",
       "        [[ 75,  78,  63],\n",
       "         [ 70,  73,  57],\n",
       "         [ 58,  61,  45],\n",
       "         ...,\n",
       "         [104, 115, 131],\n",
       "         [111, 123, 138],\n",
       "         [111, 124, 140]],\n",
       " \n",
       "        [[ 78,  80,  63],\n",
       "         [ 63,  64,  47],\n",
       "         [ 54,  54,  37],\n",
       "         ...,\n",
       "         [ 94, 107, 122],\n",
       "         [ 99, 113, 128],\n",
       "         [105, 118, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 141, 150],\n",
       "         [130, 137, 146],\n",
       "         [128, 137, 143],\n",
       "         ...,\n",
       "         [101, 114, 136],\n",
       "         [102, 116, 138],\n",
       "         [107, 117, 140]],\n",
       " \n",
       "        [[129, 136, 145],\n",
       "         [134, 137, 148],\n",
       "         [133, 138, 147],\n",
       "         ...,\n",
       "         [104, 115, 141],\n",
       "         [103, 115, 141],\n",
       "         [110, 120, 144]],\n",
       " \n",
       "        [[131, 138, 148],\n",
       "         [136, 142, 153],\n",
       "         [134, 140, 151],\n",
       "         ...,\n",
       "         [107, 118, 143],\n",
       "         [108, 120, 144],\n",
       "         [112, 122, 147]]], dtype=uint8),\n",
       " array([[[102, 114, 132],\n",
       "         [101, 113, 131],\n",
       "         [103, 113, 131],\n",
       "         ...,\n",
       "         [ 29,  38,  42],\n",
       "         [ 22,  26,  28],\n",
       "         [  8,  10,  10]],\n",
       " \n",
       "        [[102, 114, 130],\n",
       "         [103, 116, 132],\n",
       "         [102, 115, 131],\n",
       "         ...,\n",
       "         [ 36,  45,  52],\n",
       "         [ 28,  34,  36],\n",
       "         [ 12,  15,  16]],\n",
       " \n",
       "        [[101, 113, 131],\n",
       "         [100, 113, 129],\n",
       "         [ 98, 111, 127],\n",
       "         ...,\n",
       "         [ 38,  47,  52],\n",
       "         [ 33,  39,  42],\n",
       "         [ 18,  19,  23]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 16,  28,  53],\n",
       "         [ 16,  28,  53],\n",
       "         [ 16,  28,  52],\n",
       "         ...,\n",
       "         [ 26,  35,  48],\n",
       "         [ 25,  34,  43],\n",
       "         [ 23,  32,  37]],\n",
       " \n",
       "        [[ 18,  32,  55],\n",
       "         [ 16,  29,  54],\n",
       "         [ 16,  27,  54],\n",
       "         ...,\n",
       "         [ 26,  35,  49],\n",
       "         [ 25,  35,  43],\n",
       "         [ 23,  32,  36]],\n",
       " \n",
       "        [[ 19,  31,  57],\n",
       "         [ 18,  30,  57],\n",
       "         [ 17,  29,  55],\n",
       "         ...,\n",
       "         [ 26,  36,  49],\n",
       "         [ 24,  33,  43],\n",
       "         [ 23,  33,  36]]], dtype=uint8),\n",
       " array([[[140, 149, 191],\n",
       "         [130, 144, 190],\n",
       "         [103, 121, 173],\n",
       "         ...,\n",
       "         [149, 165, 204],\n",
       "         [149, 163, 201],\n",
       "         [152, 166, 204]],\n",
       " \n",
       "        [[133, 147, 190],\n",
       "         [114, 130, 177],\n",
       "         [118, 133, 182],\n",
       "         ...,\n",
       "         [133, 150, 193],\n",
       "         [141, 154, 197],\n",
       "         [142, 159, 199]],\n",
       " \n",
       "        [[129, 142, 185],\n",
       "         [127, 141, 184],\n",
       "         [107, 122, 170],\n",
       "         ...,\n",
       "         [153, 166, 204],\n",
       "         [144, 162, 198],\n",
       "         [146, 163, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 150, 197],\n",
       "         [144, 156, 203],\n",
       "         [143, 154, 203],\n",
       "         ...,\n",
       "         [140, 161, 203],\n",
       "         [134, 159, 203],\n",
       "         [134, 157, 205]],\n",
       " \n",
       "        [[139, 146, 196],\n",
       "         [141, 152, 200],\n",
       "         [143, 153, 202],\n",
       "         ...,\n",
       "         [134, 156, 204],\n",
       "         [129, 152, 200],\n",
       "         [130, 153, 204]],\n",
       " \n",
       "        [[138, 142, 195],\n",
       "         [144, 151, 200],\n",
       "         [148, 159, 205],\n",
       "         ...,\n",
       "         [131, 156, 204],\n",
       "         [136, 159, 207],\n",
       "         [136, 158, 206]]], dtype=uint8),\n",
       " array([[[  4,   9,   7],\n",
       "         [ 98, 106, 107],\n",
       "         [118, 124, 130],\n",
       "         ...,\n",
       "         [184, 193, 213],\n",
       "         [180, 190, 210],\n",
       "         [176, 187, 207]],\n",
       " \n",
       "        [[  9,  15,  13],\n",
       "         [ 84,  93,  90],\n",
       "         [100, 108, 110],\n",
       "         ...,\n",
       "         [176, 185, 205],\n",
       "         [173, 183, 203],\n",
       "         [172, 183, 203]],\n",
       " \n",
       "        [[ 34,  41,  36],\n",
       "         [ 84,  94,  89],\n",
       "         [ 90,  98,  99],\n",
       "         ...,\n",
       "         [171, 183, 202],\n",
       "         [165, 176, 196],\n",
       "         [171, 182, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 17,  23,  20],\n",
       "         [153, 160, 175],\n",
       "         [163, 175, 192],\n",
       "         ...,\n",
       "         [144, 157, 183],\n",
       "         [139, 153, 178],\n",
       "         [140, 153, 179]],\n",
       " \n",
       "        [[ 21,  27,  22],\n",
       "         [155, 162, 177],\n",
       "         [163, 175, 192],\n",
       "         ...,\n",
       "         [149, 162, 188],\n",
       "         [142, 155, 181],\n",
       "         [146, 159, 185]],\n",
       " \n",
       "        [[ 22,  28,  23],\n",
       "         [152, 160, 174],\n",
       "         [167, 179, 196],\n",
       "         ...,\n",
       "         [152, 165, 190],\n",
       "         [146, 159, 185],\n",
       "         [151, 164, 188]]], dtype=uint8),\n",
       " array([[[178, 189, 209],\n",
       "         [179, 190, 209],\n",
       "         [177, 189, 207],\n",
       "         ...,\n",
       "         [105, 113, 128],\n",
       "         [ 98, 107, 121],\n",
       "         [ 85,  94, 107]],\n",
       " \n",
       "        [[175, 186, 206],\n",
       "         [179, 190, 210],\n",
       "         [177, 189, 207],\n",
       "         ...,\n",
       "         [106, 115, 129],\n",
       "         [102, 111, 124],\n",
       "         [ 89,  97, 111]],\n",
       " \n",
       "        [[180, 191, 211],\n",
       "         [174, 185, 205],\n",
       "         [173, 185, 203],\n",
       "         ...,\n",
       "         [108, 117, 130],\n",
       "         [100, 108, 121],\n",
       "         [ 89,  98, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 112, 140],\n",
       "         [105, 117, 145],\n",
       "         [112, 126, 149],\n",
       "         ...,\n",
       "         [111, 123, 141],\n",
       "         [112, 120, 139],\n",
       "         [101, 107, 119]],\n",
       " \n",
       "        [[100, 112, 139],\n",
       "         [106, 118, 145],\n",
       "         [112, 125, 151],\n",
       "         ...,\n",
       "         [116, 128, 146],\n",
       "         [112, 121, 139],\n",
       "         [ 90,  96, 105]],\n",
       " \n",
       "        [[103, 115, 142],\n",
       "         [107, 120, 147],\n",
       "         [114, 127, 153],\n",
       "         ...,\n",
       "         [119, 131, 148],\n",
       "         [111, 121, 136],\n",
       "         [ 90,  94, 104]]], dtype=uint8),\n",
       " array([[[ 47,  36,  44],\n",
       "         [115, 124, 154],\n",
       "         [124, 134, 166],\n",
       "         ...,\n",
       "         [163, 179, 204],\n",
       "         [164, 179, 205],\n",
       "         [166, 181, 207]],\n",
       " \n",
       "        [[ 61,  54,  69],\n",
       "         [114, 121, 154],\n",
       "         [114, 122, 151],\n",
       "         ...,\n",
       "         [158, 175, 202],\n",
       "         [158, 173, 199],\n",
       "         [161, 176, 202]],\n",
       " \n",
       "        [[101,  98, 125],\n",
       "         [104, 110, 141],\n",
       "         [ 92, 100, 129],\n",
       "         ...,\n",
       "         [151, 168, 196],\n",
       "         [155, 171, 200],\n",
       "         [156, 173, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 154, 187],\n",
       "         [140, 161, 193],\n",
       "         [144, 164, 196],\n",
       "         ...,\n",
       "         [152, 172, 202],\n",
       "         [152, 173, 204],\n",
       "         [148, 170, 198]],\n",
       " \n",
       "        [[137, 157, 190],\n",
       "         [140, 161, 193],\n",
       "         [143, 164, 196],\n",
       "         ...,\n",
       "         [154, 174, 205],\n",
       "         [154, 175, 203],\n",
       "         [150, 169, 202]],\n",
       " \n",
       "        [[139, 160, 192],\n",
       "         [142, 163, 195],\n",
       "         [144, 166, 200],\n",
       "         ...,\n",
       "         [156, 176, 207],\n",
       "         [158, 178, 209],\n",
       "         [155, 175, 207]]], dtype=uint8),\n",
       " array([[[148, 171, 198],\n",
       "         [150, 172, 200],\n",
       "         [151, 173, 201],\n",
       "         ...,\n",
       "         [100, 111, 125],\n",
       "         [ 48,  45,  40],\n",
       "         [118, 114,  98]],\n",
       " \n",
       "        [[145, 165, 197],\n",
       "         [145, 166, 195],\n",
       "         [147, 168, 197],\n",
       "         ...,\n",
       "         [103, 116, 131],\n",
       "         [ 74,  75,  73],\n",
       "         [136, 135, 118]],\n",
       " \n",
       "        [[141, 162, 193],\n",
       "         [139, 160, 192],\n",
       "         [142, 164, 193],\n",
       "         ...,\n",
       "         [111, 124, 142],\n",
       "         [ 93,  98,  99],\n",
       "         [168, 165, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[143, 164, 196],\n",
       "         [138, 157, 193],\n",
       "         [133, 153, 188],\n",
       "         ...,\n",
       "         [111, 123, 138],\n",
       "         [112, 123, 137],\n",
       "         [164, 169, 168]],\n",
       " \n",
       "        [[145, 166, 198],\n",
       "         [139, 159, 195],\n",
       "         [135, 156, 191],\n",
       "         ...,\n",
       "         [109, 124, 139],\n",
       "         [113, 124, 138],\n",
       "         [154, 159, 158]],\n",
       " \n",
       "        [[145, 167, 202],\n",
       "         [136, 160, 191],\n",
       "         [136, 158, 193],\n",
       "         ...,\n",
       "         [111, 126, 144],\n",
       "         [114, 125, 139],\n",
       "         [138, 147, 151]]], dtype=uint8),\n",
       " array([[[193, 223, 248],\n",
       "         [191, 225, 249],\n",
       "         [193, 226, 250],\n",
       "         ...,\n",
       "         [216, 237, 252],\n",
       "         [213, 237, 252],\n",
       "         [210, 233, 253]],\n",
       " \n",
       "        [[195, 225, 250],\n",
       "         [193, 227, 251],\n",
       "         [197, 228, 252],\n",
       "         ...,\n",
       "         [211, 234, 250],\n",
       "         [207, 232, 249],\n",
       "         [204, 229, 251]],\n",
       " \n",
       "        [[194, 224, 249],\n",
       "         [194, 224, 250],\n",
       "         [198, 225, 251],\n",
       "         ...,\n",
       "         [205, 231, 248],\n",
       "         [201, 228, 248],\n",
       "         [197, 224, 250]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[207, 235, 250],\n",
       "         [213, 237, 250],\n",
       "         [218, 240, 250],\n",
       "         ...,\n",
       "         [228, 244, 252],\n",
       "         [230, 246, 253],\n",
       "         [225, 244, 249]],\n",
       " \n",
       "        [[209, 235, 251],\n",
       "         [212, 237, 251],\n",
       "         [217, 241, 250],\n",
       "         ...,\n",
       "         [229, 245, 252],\n",
       "         [229, 245, 251],\n",
       "         [224, 240, 246]],\n",
       " \n",
       "        [[208, 233, 250],\n",
       "         [211, 237, 250],\n",
       "         [218, 240, 251],\n",
       "         ...,\n",
       "         [229, 244, 246],\n",
       "         [224, 239, 242],\n",
       "         [225, 241, 247]]], dtype=uint8),\n",
       " array([[[106, 113, 104],\n",
       "         [152, 164, 169],\n",
       "         [171, 186, 195],\n",
       "         ...,\n",
       "         [143, 152, 187],\n",
       "         [143, 153, 187],\n",
       "         [144, 154, 188]],\n",
       " \n",
       "        [[129, 137, 135],\n",
       "         [158, 175, 181],\n",
       "         [173, 188, 197],\n",
       "         ...,\n",
       "         [140, 149, 186],\n",
       "         [140, 150, 184],\n",
       "         [141, 151, 185]],\n",
       " \n",
       "        [[137, 148, 149],\n",
       "         [172, 187, 196],\n",
       "         [175, 192, 201],\n",
       "         ...,\n",
       "         [133, 142, 179],\n",
       "         [134, 144, 181],\n",
       "         [138, 147, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[210, 230, 243],\n",
       "         [214, 233, 244],\n",
       "         [214, 234, 242],\n",
       "         ...,\n",
       "         [183, 197, 215],\n",
       "         [210, 223, 236],\n",
       "         [215, 226, 239]],\n",
       " \n",
       "        [[201, 226, 240],\n",
       "         [208, 229, 243],\n",
       "         [214, 233, 244],\n",
       "         ...,\n",
       "         [202, 217, 233],\n",
       "         [212, 226, 238],\n",
       "         [218, 231, 243]],\n",
       " \n",
       "        [[194, 221, 234],\n",
       "         [198, 224, 240],\n",
       "         [204, 227, 240],\n",
       "         ...,\n",
       "         [207, 223, 236],\n",
       "         [214, 228, 241],\n",
       "         [220, 234, 243]]], dtype=uint8),\n",
       " array([[[143, 155, 191],\n",
       "         [141, 153, 189],\n",
       "         [140, 151, 189],\n",
       "         ...,\n",
       "         [105,  98,  84],\n",
       "         [102,  95,  74],\n",
       "         [105, 100,  75]],\n",
       " \n",
       "        [[139, 150, 188],\n",
       "         [137, 148, 186],\n",
       "         [135, 145, 185],\n",
       "         ...,\n",
       "         [106,  99,  86],\n",
       "         [102,  96,  74],\n",
       "         [108, 102,  78]],\n",
       " \n",
       "        [[136, 147, 185],\n",
       "         [134, 144, 184],\n",
       "         [133, 143, 183],\n",
       "         ...,\n",
       "         [109, 105,  93],\n",
       "         [ 98,  91,  71],\n",
       "         [106, 100,  77]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 154, 188],\n",
       "         [137, 147, 181],\n",
       "         [132, 141, 178],\n",
       "         ...,\n",
       "         [135, 148, 175],\n",
       "         [137, 150, 176],\n",
       "         [141, 154, 176]],\n",
       " \n",
       "        [[146, 156, 190],\n",
       "         [137, 146, 180],\n",
       "         [135, 145, 179],\n",
       "         ...,\n",
       "         [135, 149, 179],\n",
       "         [139, 151, 179],\n",
       "         [141, 153, 180]],\n",
       " \n",
       "        [[149, 160, 190],\n",
       "         [139, 151, 183],\n",
       "         [135, 146, 179],\n",
       "         ...,\n",
       "         [139, 151, 183],\n",
       "         [140, 151, 181],\n",
       "         [141, 152, 181]]], dtype=uint8),\n",
       " array([[[113, 114, 105],\n",
       "         [117, 120, 119],\n",
       "         [115, 119, 120],\n",
       "         ...,\n",
       "         [ 91,  96, 116],\n",
       "         [ 94, 100, 119],\n",
       "         [101, 103, 121]],\n",
       " \n",
       "        [[106, 107, 100],\n",
       "         [116, 122, 121],\n",
       "         [112, 121, 121],\n",
       "         ...,\n",
       "         [ 89,  95, 116],\n",
       "         [ 88,  95, 115],\n",
       "         [ 96,  98, 117]],\n",
       " \n",
       "        [[104, 104,  98],\n",
       "         [113, 119, 119],\n",
       "         [112, 120, 120],\n",
       "         ...,\n",
       "         [ 78,  84, 105],\n",
       "         [ 87,  92, 113],\n",
       "         [ 90,  95, 113]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93, 105, 111],\n",
       "         [ 94, 106, 112],\n",
       "         [ 88,  99, 106],\n",
       "         ...,\n",
       "         [ 79,  90, 117],\n",
       "         [ 83,  94, 121],\n",
       "         [ 83,  95, 122]],\n",
       " \n",
       "        [[ 95, 106, 114],\n",
       "         [ 90, 100, 108],\n",
       "         [ 91, 100, 111],\n",
       "         ...,\n",
       "         [ 80,  91, 118],\n",
       "         [ 83,  94, 121],\n",
       "         [ 83,  95, 122]],\n",
       " \n",
       "        [[ 95, 107, 115],\n",
       "         [ 95, 106, 114],\n",
       "         [ 92, 102, 115],\n",
       "         ...,\n",
       "         [ 81,  92, 119],\n",
       "         [ 83,  94, 121],\n",
       "         [ 83,  96, 122]]], dtype=uint8),\n",
       " array([[[107, 112, 129],\n",
       "         [103, 106, 125],\n",
       "         [101, 102, 122],\n",
       "         ...,\n",
       "         [ 95,  98,  96],\n",
       "         [ 98,  99,  95],\n",
       "         [105, 103,  96]],\n",
       " \n",
       "        [[ 99, 100, 120],\n",
       "         [ 99, 103, 123],\n",
       "         [ 94,  97, 118],\n",
       "         ...,\n",
       "         [ 92,  95,  93],\n",
       "         [ 99,  99,  95],\n",
       "         [104, 101,  97]],\n",
       " \n",
       "        [[ 93,  93, 113],\n",
       "         [ 90,  95, 116],\n",
       "         [ 89,  94, 115],\n",
       "         ...,\n",
       "         [ 93,  94,  94],\n",
       "         [ 98,  98,  96],\n",
       "         [104, 101,  97]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87, 100, 129],\n",
       "         [ 80,  92, 124],\n",
       "         [ 74,  85, 114],\n",
       "         ...,\n",
       "         [ 63,  72,  75],\n",
       "         [ 68,  73,  75],\n",
       "         [ 69,  74,  77]],\n",
       " \n",
       "        [[ 85,  96, 128],\n",
       "         [ 84,  95, 127],\n",
       "         [ 79,  90, 120],\n",
       "         ...,\n",
       "         [ 68,  74,  79],\n",
       "         [ 74,  79,  83],\n",
       "         [ 74,  79,  82]],\n",
       " \n",
       "        [[ 91, 100, 133],\n",
       "         [ 83,  95, 127],\n",
       "         [ 84,  95, 125],\n",
       "         ...,\n",
       "         [ 70,  76,  85],\n",
       "         [ 69,  75,  82],\n",
       "         [ 72,  78,  83]]], dtype=uint8),\n",
       " array([[[102, 111, 121],\n",
       "         [107, 116, 130],\n",
       "         [113, 122, 136],\n",
       "         ...,\n",
       "         [128, 135, 155],\n",
       "         [132, 139, 159],\n",
       "         [132, 138, 159]],\n",
       " \n",
       "        [[108, 116, 127],\n",
       "         [114, 123, 136],\n",
       "         [117, 127, 145],\n",
       "         ...,\n",
       "         [130, 138, 157],\n",
       "         [131, 139, 158],\n",
       "         [132, 139, 160]],\n",
       " \n",
       "        [[104, 112, 123],\n",
       "         [115, 124, 137],\n",
       "         [116, 129, 144],\n",
       "         ...,\n",
       "         [127, 137, 155],\n",
       "         [130, 140, 158],\n",
       "         [129, 139, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 105, 123],\n",
       "         [ 94, 101, 120],\n",
       "         [ 91,  96, 114],\n",
       "         ...,\n",
       "         [104, 124, 149],\n",
       "         [105, 126, 151],\n",
       "         [117, 135, 161]],\n",
       " \n",
       "        [[100, 109, 127],\n",
       "         [ 98, 105, 124],\n",
       "         [ 92,  99, 116],\n",
       "         ...,\n",
       "         [104, 124, 149],\n",
       "         [109, 129, 155],\n",
       "         [119, 135, 161]],\n",
       " \n",
       "        [[110, 118, 137],\n",
       "         [107, 114, 133],\n",
       "         [ 99, 105, 124],\n",
       "         ...,\n",
       "         [108, 127, 154],\n",
       "         [110, 129, 156],\n",
       "         [121, 134, 160]]], dtype=uint8),\n",
       " array([[[159, 180, 218],\n",
       "         [163, 184, 221],\n",
       "         [160, 180, 221],\n",
       "         ...,\n",
       "         [110, 132, 187],\n",
       "         [113, 137, 191],\n",
       "         [106, 133, 187]],\n",
       " \n",
       "        [[149, 168, 210],\n",
       "         [152, 171, 214],\n",
       "         [155, 174, 217],\n",
       "         ...,\n",
       "         [104, 124, 179],\n",
       "         [105, 126, 181],\n",
       "         [106, 129, 185]],\n",
       " \n",
       "        [[144, 164, 205],\n",
       "         [155, 174, 217],\n",
       "         [152, 171, 214],\n",
       "         ...,\n",
       "         [ 97, 118, 171],\n",
       "         [ 97, 118, 173],\n",
       "         [105, 130, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 205, 243],\n",
       "         [185, 204, 242],\n",
       "         [184, 202, 241],\n",
       "         ...,\n",
       "         [160, 182, 225],\n",
       "         [159, 182, 227],\n",
       "         [162, 185, 231]],\n",
       " \n",
       "        [[185, 204, 243],\n",
       "         [183, 202, 241],\n",
       "         [184, 202, 243],\n",
       "         ...,\n",
       "         [159, 180, 225],\n",
       "         [160, 180, 227],\n",
       "         [167, 186, 229]],\n",
       " \n",
       "        [[183, 201, 242],\n",
       "         [182, 200, 241],\n",
       "         [182, 200, 241],\n",
       "         ...,\n",
       "         [163, 183, 228],\n",
       "         [164, 182, 229],\n",
       "         [168, 187, 230]]], dtype=uint8),\n",
       " array([[[130, 137, 157],\n",
       "         [131, 138, 158],\n",
       "         [131, 138, 158],\n",
       "         ...,\n",
       "         [ 77,  81,  88],\n",
       "         [ 67,  66,  68],\n",
       "         [ 63,  58,  57]],\n",
       " \n",
       "        [[131, 138, 158],\n",
       "         [131, 138, 157],\n",
       "         [134, 140, 159],\n",
       "         ...,\n",
       "         [ 78,  86,  96],\n",
       "         [ 68,  73,  79],\n",
       "         [ 62,  60,  60]],\n",
       " \n",
       "        [[134, 140, 159],\n",
       "         [131, 138, 157],\n",
       "         [130, 137, 156],\n",
       "         ...,\n",
       "         [ 76,  86,  96],\n",
       "         [ 72,  78,  85],\n",
       "         [ 62,  62,  65]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 105, 132],\n",
       "         [ 93, 109, 136],\n",
       "         [ 98, 115, 141],\n",
       "         ...,\n",
       "         [121, 125, 153],\n",
       "         [108, 116, 141],\n",
       "         [106, 114, 139]],\n",
       " \n",
       "        [[ 86, 104, 131],\n",
       "         [ 88, 107, 133],\n",
       "         [ 95, 115, 140],\n",
       "         ...,\n",
       "         [120, 127, 154],\n",
       "         [109, 119, 143],\n",
       "         [105, 114, 139]],\n",
       " \n",
       "        [[ 90, 106, 134],\n",
       "         [ 86, 104, 132],\n",
       "         [ 88, 109, 136],\n",
       "         ...,\n",
       "         [114, 125, 150],\n",
       "         [107, 118, 145],\n",
       "         [105, 116, 143]]], dtype=uint8),\n",
       " array([[[120, 113, 116],\n",
       "         [151, 144, 146],\n",
       "         [143, 137, 142],\n",
       "         ...,\n",
       "         [136, 157, 183],\n",
       "         [137, 158, 185],\n",
       "         [133, 154, 182]],\n",
       " \n",
       "        [[131, 124, 127],\n",
       "         [144, 138, 140],\n",
       "         [143, 137, 142],\n",
       "         ...,\n",
       "         [132, 153, 179],\n",
       "         [131, 152, 179],\n",
       "         [129, 150, 178]],\n",
       " \n",
       "        [[133, 128, 131],\n",
       "         [141, 135, 140],\n",
       "         [147, 142, 148],\n",
       "         ...,\n",
       "         [131, 149, 175],\n",
       "         [129, 149, 174],\n",
       "         [127, 145, 174]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[209, 211, 229],\n",
       "         [198, 202, 221],\n",
       "         [192, 199, 216],\n",
       "         ...,\n",
       "         [202, 209, 228],\n",
       "         [203, 210, 229],\n",
       "         [205, 212, 231]],\n",
       " \n",
       "        [[209, 210, 229],\n",
       "         [198, 204, 219],\n",
       "         [192, 199, 216],\n",
       "         ...,\n",
       "         [208, 214, 233],\n",
       "         [210, 216, 235],\n",
       "         [207, 213, 232]],\n",
       " \n",
       "        [[204, 208, 226],\n",
       "         [197, 204, 221],\n",
       "         [192, 199, 218],\n",
       "         ...,\n",
       "         [212, 218, 237],\n",
       "         [211, 217, 236],\n",
       "         [209, 216, 235]]], dtype=uint8),\n",
       " array([[[117, 144, 178],\n",
       "         [114, 141, 175],\n",
       "         [114, 143, 175],\n",
       "         ...,\n",
       "         [ 25,  28,  34],\n",
       "         [ 24,  23,  27],\n",
       "         [ 29,  25,  30]],\n",
       " \n",
       "        [[114, 141, 175],\n",
       "         [110, 138, 172],\n",
       "         [109, 138, 170],\n",
       "         ...,\n",
       "         [ 24,  29,  35],\n",
       "         [ 22,  22,  26],\n",
       "         [ 29,  26,  31]],\n",
       " \n",
       "        [[110, 137, 171],\n",
       "         [107, 136, 168],\n",
       "         [105, 134, 164],\n",
       "         ...,\n",
       "         [ 27,  31,  39],\n",
       "         [ 21,  23,  27],\n",
       "         [ 25,  24,  28]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 134, 168],\n",
       "         [ 96, 136, 169],\n",
       "         [ 94, 136, 170],\n",
       "         ...,\n",
       "         [ 74, 111, 145],\n",
       "         [ 80, 116, 146],\n",
       "         [ 79, 111, 140]],\n",
       " \n",
       "        [[ 95, 133, 167],\n",
       "         [ 94, 134, 167],\n",
       "         [ 94, 136, 170],\n",
       "         ...,\n",
       "         [ 79, 116, 150],\n",
       "         [ 82, 118, 148],\n",
       "         [ 83, 115, 144]],\n",
       " \n",
       "        [[ 92, 132, 165],\n",
       "         [ 92, 132, 165],\n",
       "         [ 92, 133, 167],\n",
       "         ...,\n",
       "         [ 84, 120, 153],\n",
       "         [ 85, 119, 149],\n",
       "         [ 86, 116, 145]]], dtype=uint8),\n",
       " array([[[104, 103, 110],\n",
       "         [140, 149, 159],\n",
       "         [143, 154, 165],\n",
       "         ...,\n",
       "         [208, 206, 206],\n",
       "         [212, 207, 208],\n",
       "         [209, 205, 205]],\n",
       " \n",
       "        [[100,  94, 104],\n",
       "         [148, 154, 165],\n",
       "         [151, 157, 168],\n",
       "         ...,\n",
       "         [194, 192, 192],\n",
       "         [204, 199, 200],\n",
       "         [205, 202, 203]],\n",
       " \n",
       "        [[136, 130, 134],\n",
       "         [136, 138, 144],\n",
       "         [150, 152, 160],\n",
       "         ...,\n",
       "         [208, 206, 206],\n",
       "         [204, 202, 202],\n",
       "         [201, 200, 200]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[123, 140, 157],\n",
       "         [134, 154, 171],\n",
       "         [136, 153, 172],\n",
       "         ...,\n",
       "         [107, 120, 139],\n",
       "         [109, 124, 143],\n",
       "         [112, 126, 146]],\n",
       " \n",
       "        [[119, 142, 158],\n",
       "         [135, 152, 169],\n",
       "         [141, 157, 174],\n",
       "         ...,\n",
       "         [112, 118, 144],\n",
       "         [115, 125, 146],\n",
       "         [113, 125, 145]],\n",
       " \n",
       "        [[116, 141, 157],\n",
       "         [135, 152, 169],\n",
       "         [144, 158, 176],\n",
       "         ...,\n",
       "         [112, 123, 150],\n",
       "         [116, 126, 150],\n",
       "         [117, 129, 151]]], dtype=uint8),\n",
       " array([[[147, 142, 143],\n",
       "         [141, 137, 132],\n",
       "         [145, 139, 134],\n",
       "         ...,\n",
       "         [ 26,  13,  15],\n",
       "         [ 24,  13,  13],\n",
       "         [ 26,  12,  14]],\n",
       " \n",
       "        [[141, 136, 136],\n",
       "         [140, 135, 130],\n",
       "         [135, 129, 124],\n",
       "         ...,\n",
       "         [ 26,  14,  16],\n",
       "         [ 26,  14,  14],\n",
       "         [ 27,  14,  13]],\n",
       " \n",
       "        [[116, 112, 108],\n",
       "         [108, 102,  91],\n",
       "         [100,  90,  80],\n",
       "         ...,\n",
       "         [ 28,  17,  19],\n",
       "         [ 26,  15,  15],\n",
       "         [ 27,  14,  13]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[196, 202, 201],\n",
       "         [206, 211, 210],\n",
       "         [203, 208, 206],\n",
       "         ...,\n",
       "         [185, 189, 188],\n",
       "         [188, 186, 183],\n",
       "         [190, 182, 178]],\n",
       " \n",
       "        [[197, 202, 201],\n",
       "         [204, 210, 209],\n",
       "         [204, 212, 208],\n",
       "         ...,\n",
       "         [181, 184, 184],\n",
       "         [188, 185, 181],\n",
       "         [188, 178, 174]],\n",
       " \n",
       "        [[196, 202, 201],\n",
       "         [196, 202, 201],\n",
       "         [204, 210, 209],\n",
       "         ...,\n",
       "         [184, 185, 185],\n",
       "         [184, 180, 178],\n",
       "         [184, 174, 168]]], dtype=uint8),\n",
       " array([[[108, 138, 197],\n",
       "         [111, 144, 203],\n",
       "         [116, 148, 207],\n",
       "         ...,\n",
       "         [ 39,  70, 123],\n",
       "         [ 37,  68, 121],\n",
       "         [ 36,  67, 120]],\n",
       " \n",
       "        [[101, 132, 191],\n",
       "         [112, 145, 204],\n",
       "         [120, 152, 211],\n",
       "         ...,\n",
       "         [ 43,  74, 127],\n",
       "         [ 41,  73, 122],\n",
       "         [ 40,  71, 121]],\n",
       " \n",
       "        [[104, 136, 195],\n",
       "         [108, 140, 199],\n",
       "         [114, 146, 205],\n",
       "         ...,\n",
       "         [ 48,  79, 132],\n",
       "         [ 43,  74, 125],\n",
       "         [ 40,  71, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 167, 225],\n",
       "         [133, 162, 220],\n",
       "         [127, 156, 217],\n",
       "         ...,\n",
       "         [143, 171, 228],\n",
       "         [141, 169, 229],\n",
       "         [134, 162, 222]],\n",
       " \n",
       "        [[150, 180, 232],\n",
       "         [150, 180, 233],\n",
       "         [142, 171, 227],\n",
       "         ...,\n",
       "         [144, 171, 228],\n",
       "         [136, 164, 224],\n",
       "         [136, 165, 225]],\n",
       " \n",
       "        [[156, 183, 234],\n",
       "         [156, 184, 234],\n",
       "         [157, 186, 237],\n",
       "         ...,\n",
       "         [145, 171, 229],\n",
       "         [137, 167, 226],\n",
       "         [136, 166, 225]]], dtype=uint8),\n",
       " array([[[187, 189, 190],\n",
       "         [191, 190, 192],\n",
       "         [183, 184, 187],\n",
       "         ...,\n",
       "         [148, 151, 156],\n",
       "         [167, 170, 170],\n",
       "         [193, 195, 196]],\n",
       " \n",
       "        [[175, 177, 178],\n",
       "         [184, 183, 185],\n",
       "         [184, 185, 188],\n",
       "         ...,\n",
       "         [144, 146, 151],\n",
       "         [158, 161, 161],\n",
       "         [194, 196, 197]],\n",
       " \n",
       "        [[172, 173, 175],\n",
       "         [184, 186, 187],\n",
       "         [183, 185, 187],\n",
       "         ...,\n",
       "         [127, 131, 133],\n",
       "         [164, 166, 169],\n",
       "         [200, 200, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73,  88, 116],\n",
       "         [ 67,  79, 106],\n",
       "         [ 59,  73,  97],\n",
       "         ...,\n",
       "         [ 74,  98, 118],\n",
       "         [ 73,  98, 117],\n",
       "         [ 89, 106, 122]],\n",
       " \n",
       "        [[ 74,  89, 116],\n",
       "         [ 67,  79, 107],\n",
       "         [ 64,  78, 100],\n",
       "         ...,\n",
       "         [ 71,  93, 118],\n",
       "         [ 74,  99, 121],\n",
       "         [ 79, 100, 120]],\n",
       " \n",
       "        [[ 68,  85, 112],\n",
       "         [ 70,  82, 110],\n",
       "         [ 70,  84, 106],\n",
       "         ...,\n",
       "         [ 71,  94, 120],\n",
       "         [ 71,  94, 116],\n",
       "         [ 81, 100, 118]]], dtype=uint8),\n",
       " array([[[131, 138, 154],\n",
       "         [144, 148, 174],\n",
       "         [145, 149, 177],\n",
       "         ...,\n",
       "         [172, 172, 186],\n",
       "         [176, 177, 191],\n",
       "         [188, 190, 198]],\n",
       " \n",
       "        [[141, 145, 161],\n",
       "         [140, 148, 168],\n",
       "         [143, 150, 170],\n",
       "         ...,\n",
       "         [174, 174, 193],\n",
       "         [174, 173, 190],\n",
       "         [173, 172, 189]],\n",
       " \n",
       "        [[138, 142, 162],\n",
       "         [140, 145, 168],\n",
       "         [136, 143, 162],\n",
       "         ...,\n",
       "         [162, 167, 184],\n",
       "         [163, 169, 186],\n",
       "         [151, 158, 176]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[182, 185, 182],\n",
       "         [139, 147, 156],\n",
       "         [144, 158, 180],\n",
       "         ...,\n",
       "         [159, 165, 184],\n",
       "         [154, 158, 185],\n",
       "         [153, 157, 185]],\n",
       " \n",
       "        [[179, 183, 180],\n",
       "         [149, 155, 165],\n",
       "         [145, 158, 181],\n",
       "         ...,\n",
       "         [168, 173, 192],\n",
       "         [156, 161, 187],\n",
       "         [153, 157, 184]],\n",
       " \n",
       "        [[175, 185, 180],\n",
       "         [141, 153, 167],\n",
       "         [139, 151, 178],\n",
       "         ...,\n",
       "         [163, 170, 193],\n",
       "         [159, 166, 193],\n",
       "         [151, 158, 187]]], dtype=uint8),\n",
       " array([[[ 46,  51,  52],\n",
       "         [ 40,  46,  45],\n",
       "         [ 41,  47,  46],\n",
       "         ...,\n",
       "         [ 19,  14,  11],\n",
       "         [ 19,  15,  10],\n",
       "         [ 18,  14,   9]],\n",
       " \n",
       "        [[ 41,  46,  47],\n",
       "         [ 38,  44,  43],\n",
       "         [ 40,  44,  44],\n",
       "         ...,\n",
       "         [ 21,  16,  13],\n",
       "         [ 19,  15,  10],\n",
       "         [ 20,  14,   9]],\n",
       " \n",
       "        [[ 38,  43,  43],\n",
       "         [ 35,  40,  39],\n",
       "         [ 34,  36,  36],\n",
       "         ...,\n",
       "         [ 23,  19,  14],\n",
       "         [ 21,  17,  12],\n",
       "         [ 21,  15,  10]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 38,  40,  50],\n",
       "         [ 38,  40,  50],\n",
       "         [ 40,  42,  52],\n",
       "         ...,\n",
       "         [171, 164, 146],\n",
       "         [198, 192, 173],\n",
       "         [224, 218, 199]],\n",
       " \n",
       "        [[ 40,  42,  52],\n",
       "         [ 41,  43,  52],\n",
       "         [ 42,  43,  53],\n",
       "         ...,\n",
       "         [176, 169, 151],\n",
       "         [201, 195, 176],\n",
       "         [215, 209, 190]],\n",
       " \n",
       "        [[ 40,  42,  52],\n",
       "         [ 41,  43,  53],\n",
       "         [ 42,  44,  54],\n",
       "         ...,\n",
       "         [169, 162, 145],\n",
       "         [218, 212, 193],\n",
       "         [222, 216, 197]]], dtype=uint8),\n",
       " array([[[141, 149, 173],\n",
       "         [124, 132, 161],\n",
       "         [126, 137, 166],\n",
       "         ...,\n",
       "         [100, 102, 102],\n",
       "         [ 95,  97,  98],\n",
       "         [ 94,  98,  99]],\n",
       " \n",
       "        [[129, 139, 166],\n",
       "         [121, 132, 160],\n",
       "         [119, 129, 158],\n",
       "         ...,\n",
       "         [101, 102, 106],\n",
       "         [ 92,  93,  97],\n",
       "         [ 90,  94,  95]],\n",
       " \n",
       "        [[115, 127, 155],\n",
       "         [114, 126, 154],\n",
       "         [109, 121, 150],\n",
       "         ...,\n",
       "         [ 92,  91,  95],\n",
       "         [ 90,  91,  95],\n",
       "         [ 91,  94,  98]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78,  79,  90],\n",
       "         [ 84,  85,  95],\n",
       "         [ 89,  90, 100],\n",
       "         ...,\n",
       "         [124, 127, 129],\n",
       "         [119, 123, 126],\n",
       "         [100, 105, 108]],\n",
       " \n",
       "        [[ 90,  92, 103],\n",
       "         [ 88,  90, 101],\n",
       "         [ 93,  94, 107],\n",
       "         ...,\n",
       "         [124, 126, 133],\n",
       "         [111, 115, 119],\n",
       "         [ 95, 100, 101]],\n",
       " \n",
       "        [[ 89,  91, 102],\n",
       "         [ 91,  92, 104],\n",
       "         [ 91,  92, 105],\n",
       "         ...,\n",
       "         [123, 126, 133],\n",
       "         [107, 111, 114],\n",
       "         [ 93, 100, 103]]], dtype=uint8),\n",
       " array([[[109, 130, 185],\n",
       "         [106, 127, 182],\n",
       "         [107, 128, 182],\n",
       "         ...,\n",
       "         [ 42,  51,  88],\n",
       "         [ 30,  33,  68],\n",
       "         [ 21,  26,  50]],\n",
       " \n",
       "        [[105, 125, 181],\n",
       "         [105, 126, 181],\n",
       "         [108, 130, 182],\n",
       "         ...,\n",
       "         [ 51,  62, 103],\n",
       "         [ 32,  39,  76],\n",
       "         [ 23,  29,  59]],\n",
       " \n",
       "        [[102, 123, 177],\n",
       "         [102, 123, 177],\n",
       "         [101, 122, 174],\n",
       "         ...,\n",
       "         [ 60,  73, 117],\n",
       "         [ 42,  51,  90],\n",
       "         [ 27,  35,  65]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 156, 203],\n",
       "         [136, 156, 203],\n",
       "         [145, 166, 211],\n",
       "         ...,\n",
       "         [118, 139, 190],\n",
       "         [113, 134, 185],\n",
       "         [110, 132, 180]],\n",
       " \n",
       "        [[135, 153, 200],\n",
       "         [136, 154, 201],\n",
       "         [138, 157, 204],\n",
       "         ...,\n",
       "         [122, 145, 195],\n",
       "         [116, 139, 189],\n",
       "         [111, 134, 184]],\n",
       " \n",
       "        [[136, 154, 201],\n",
       "         [136, 154, 201],\n",
       "         [139, 159, 205],\n",
       "         ...,\n",
       "         [124, 147, 197],\n",
       "         [118, 141, 192],\n",
       "         [113, 134, 185]]], dtype=uint8),\n",
       " array([[[ 31,  44,  58],\n",
       "         [ 37,  52,  69],\n",
       "         [ 33,  48,  65],\n",
       "         ...,\n",
       "         [155, 164, 174],\n",
       "         [162, 172, 182],\n",
       "         [170, 176, 189]],\n",
       " \n",
       "        [[ 25,  38,  53],\n",
       "         [ 32,  46,  65],\n",
       "         [ 46,  61,  84],\n",
       "         ...,\n",
       "         [156, 166, 183],\n",
       "         [158, 167, 181],\n",
       "         [161, 169, 183]],\n",
       " \n",
       "        [[ 31,  39,  51],\n",
       "         [ 44,  55,  72],\n",
       "         [ 43,  56,  76],\n",
       "         ...,\n",
       "         [147, 162, 178],\n",
       "         [155, 165, 181],\n",
       "         [158, 166, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[108, 126, 145],\n",
       "         [105, 123, 145],\n",
       "         [104, 121, 148],\n",
       "         ...,\n",
       "         [ 46,  53,  70],\n",
       "         [ 49,  58,  74],\n",
       "         [ 59,  69,  83]],\n",
       " \n",
       "        [[111, 130, 151],\n",
       "         [111, 136, 159],\n",
       "         [104, 127, 155],\n",
       "         ...,\n",
       "         [ 44,  51,  68],\n",
       "         [ 56,  64,  81],\n",
       "         [ 67,  81,  97]],\n",
       " \n",
       "        [[111, 133, 156],\n",
       "         [113, 136, 163],\n",
       "         [112, 137, 163],\n",
       "         ...,\n",
       "         [ 43,  50,  70],\n",
       "         [ 59,  67,  84],\n",
       "         [ 65,  76, 102]]], dtype=uint8),\n",
       " array([[[182, 183, 193],\n",
       "         [175, 177, 183],\n",
       "         [185, 187, 188],\n",
       "         ...,\n",
       "         [131, 141, 154],\n",
       "         [126, 134, 149],\n",
       "         [129, 138, 152]],\n",
       " \n",
       "        [[178, 181, 186],\n",
       "         [178, 181, 186],\n",
       "         [188, 190, 192],\n",
       "         ...,\n",
       "         [125, 136, 145],\n",
       "         [131, 140, 154],\n",
       "         [123, 132, 146]],\n",
       " \n",
       "        [[182, 185, 190],\n",
       "         [173, 176, 181],\n",
       "         [175, 177, 180],\n",
       "         ...,\n",
       "         [130, 139, 148],\n",
       "         [132, 142, 152],\n",
       "         [122, 131, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 144, 166],\n",
       "         [131, 147, 167],\n",
       "         [151, 168, 184],\n",
       "         ...,\n",
       "         [158, 162, 168],\n",
       "         [150, 155, 157],\n",
       "         [157, 160, 169]],\n",
       " \n",
       "        [[121, 138, 164],\n",
       "         [129, 149, 169],\n",
       "         [148, 166, 183],\n",
       "         ...,\n",
       "         [161, 163, 173],\n",
       "         [156, 159, 168],\n",
       "         [157, 159, 169]],\n",
       " \n",
       "        [[122, 141, 163],\n",
       "         [133, 151, 171],\n",
       "         [135, 153, 170],\n",
       "         ...,\n",
       "         [168, 170, 180],\n",
       "         [162, 164, 174],\n",
       "         [160, 163, 171]]], dtype=uint8),\n",
       " array([[[29, 23, 18],\n",
       "         [27, 20, 14],\n",
       "         [22, 16, 11],\n",
       "         ...,\n",
       "         [60, 60, 60],\n",
       "         [59, 59, 59],\n",
       "         [56, 58, 59]],\n",
       " \n",
       "        [[23, 17, 13],\n",
       "         [21, 16, 11],\n",
       "         [19, 14, 11],\n",
       "         ...,\n",
       "         [54, 54, 54],\n",
       "         [56, 56, 56],\n",
       "         [55, 56, 57]],\n",
       " \n",
       "        [[19, 14, 11],\n",
       "         [17, 11,  9],\n",
       "         [17, 12, 11],\n",
       "         ...,\n",
       "         [50, 50, 50],\n",
       "         [52, 52, 52],\n",
       "         [49, 51, 52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[53, 53, 57],\n",
       "         [54, 57, 62],\n",
       "         [55, 59, 64],\n",
       "         ...,\n",
       "         [46, 50, 61],\n",
       "         [46, 50, 61],\n",
       "         [44, 48, 59]],\n",
       " \n",
       "        [[55, 54, 59],\n",
       "         [53, 55, 60],\n",
       "         [54, 58, 64],\n",
       "         ...,\n",
       "         [43, 47, 58],\n",
       "         [44, 48, 59],\n",
       "         [46, 50, 61]],\n",
       " \n",
       "        [[50, 49, 55],\n",
       "         [53, 55, 60],\n",
       "         [52, 56, 61],\n",
       "         ...,\n",
       "         [44, 48, 59],\n",
       "         [43, 47, 58],\n",
       "         [44, 48, 59]]], dtype=uint8),\n",
       " array([[[ 21,  25,  39],\n",
       "         [ 21,  30,  44],\n",
       "         [ 24,  32,  44],\n",
       "         ...,\n",
       "         [ 86, 101, 124],\n",
       "         [ 96, 109, 131],\n",
       "         [101, 112, 134]],\n",
       " \n",
       "        [[ 21,  29,  43],\n",
       "         [ 21,  30,  47],\n",
       "         [ 23,  31,  46],\n",
       "         ...,\n",
       "         [ 88, 102, 125],\n",
       "         [100, 114, 136],\n",
       "         [106, 117, 139]],\n",
       " \n",
       "        [[ 24,  31,  49],\n",
       "         [ 25,  33,  50],\n",
       "         [ 19,  28,  42],\n",
       "         ...,\n",
       "         [ 94, 108, 130],\n",
       "         [ 99, 113, 135],\n",
       "         [ 98, 113, 132]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 31,  37,  50],\n",
       "         [ 33,  42,  51],\n",
       "         [ 34,  44,  55],\n",
       "         ...,\n",
       "         [ 25,  26,  41],\n",
       "         [ 25,  27,  41],\n",
       "         [ 21,  29,  43]],\n",
       " \n",
       "        [[ 41,  50,  64],\n",
       "         [ 55,  64,  77],\n",
       "         [ 58,  71,  85],\n",
       "         ...,\n",
       "         [ 23,  30,  41],\n",
       "         [ 27,  31,  42],\n",
       "         [ 24,  33,  45]],\n",
       " \n",
       "        [[ 40,  49,  67],\n",
       "         [ 63,  72,  92],\n",
       "         [ 63,  77,  95],\n",
       "         ...,\n",
       "         [ 22,  29,  45],\n",
       "         [ 30,  37,  54],\n",
       "         [ 23,  30,  46]]], dtype=uint8),\n",
       " array([[[160, 159, 169],\n",
       "         [167, 163, 174],\n",
       "         [168, 164, 175],\n",
       "         ...,\n",
       "         [144, 146, 154],\n",
       "         [126, 127, 137],\n",
       "         [121, 123, 133]],\n",
       " \n",
       "        [[172, 174, 183],\n",
       "         [150, 150, 162],\n",
       "         [175, 174, 184],\n",
       "         ...,\n",
       "         [145, 144, 153],\n",
       "         [133, 135, 145],\n",
       "         [127, 129, 139]],\n",
       " \n",
       "        [[148, 150, 159],\n",
       "         [149, 149, 161],\n",
       "         [163, 162, 173],\n",
       "         ...,\n",
       "         [153, 152, 161],\n",
       "         [143, 144, 154],\n",
       "         [121, 123, 133]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[143, 145, 155],\n",
       "         [165, 167, 177],\n",
       "         [165, 168, 178],\n",
       "         ...,\n",
       "         [156, 160, 170],\n",
       "         [143, 147, 157],\n",
       "         [140, 145, 153]],\n",
       " \n",
       "        [[156, 157, 167],\n",
       "         [163, 164, 174],\n",
       "         [173, 175, 185],\n",
       "         ...,\n",
       "         [159, 164, 173],\n",
       "         [146, 151, 161],\n",
       "         [140, 144, 156]],\n",
       " \n",
       "        [[158, 161, 169],\n",
       "         [162, 164, 173],\n",
       "         [173, 174, 183],\n",
       "         ...,\n",
       "         [159, 162, 172],\n",
       "         [146, 149, 159],\n",
       "         [143, 145, 156]]], dtype=uint8),\n",
       " array([[[ 39,  56, 100],\n",
       "         [ 72,  94, 146],\n",
       "         [ 83, 106, 155],\n",
       "         ...,\n",
       "         [102, 117, 171],\n",
       "         [ 98, 118, 170],\n",
       "         [ 98, 119, 171]],\n",
       " \n",
       "        [[ 56,  74, 124],\n",
       "         [ 74,  95, 147],\n",
       "         [ 84, 106, 156],\n",
       "         ...,\n",
       "         [ 98, 114, 164],\n",
       "         [ 98, 115, 168],\n",
       "         [100, 117, 171]],\n",
       " \n",
       "        [[ 69,  89, 139],\n",
       "         [ 80, 101, 151],\n",
       "         [ 86, 107, 157],\n",
       "         ...,\n",
       "         [ 91, 106, 153],\n",
       "         [ 97, 113, 164],\n",
       "         [100, 116, 168]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 122, 176],\n",
       "         [ 92, 116, 170],\n",
       "         [ 87, 107, 162],\n",
       "         ...,\n",
       "         [ 80, 104, 166],\n",
       "         [ 84, 110, 173],\n",
       "         [ 91, 118, 182]],\n",
       " \n",
       "        [[ 98, 123, 176],\n",
       "         [ 95, 119, 173],\n",
       "         [ 97, 117, 172],\n",
       "         ...,\n",
       "         [ 87, 111, 173],\n",
       "         [ 88, 114, 177],\n",
       "         [ 95, 122, 186]],\n",
       " \n",
       "        [[102, 126, 178],\n",
       "         [103, 124, 176],\n",
       "         [103, 124, 176],\n",
       "         ...,\n",
       "         [ 91, 119, 180],\n",
       "         [ 93, 121, 182],\n",
       "         [ 98, 126, 187]]], dtype=uint8),\n",
       " array([[[131, 172, 220],\n",
       "         [132, 168, 218],\n",
       "         [145, 178, 226],\n",
       "         ...,\n",
       "         [166, 202, 248],\n",
       "         [165, 203, 248],\n",
       "         [166, 203, 247]],\n",
       " \n",
       "        [[128, 168, 216],\n",
       "         [127, 163, 213],\n",
       "         [123, 156, 203],\n",
       "         ...,\n",
       "         [165, 201, 247],\n",
       "         [161, 202, 245],\n",
       "         [162, 202, 245]],\n",
       " \n",
       "        [[116, 155, 203],\n",
       "         [100, 135, 185],\n",
       "         [101, 133, 181],\n",
       "         ...,\n",
       "         [161, 201, 245],\n",
       "         [158, 201, 244],\n",
       "         [159, 201, 245]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 179, 235],\n",
       "         [147, 182, 238],\n",
       "         [148, 184, 239],\n",
       "         ...,\n",
       "         [147, 183, 229],\n",
       "         [154, 191, 235],\n",
       "         [158, 195, 239]],\n",
       " \n",
       "        [[144, 179, 237],\n",
       "         [145, 179, 238],\n",
       "         [147, 182, 239],\n",
       "         ...,\n",
       "         [152, 190, 234],\n",
       "         [160, 197, 241],\n",
       "         [161, 198, 242]],\n",
       " \n",
       "        [[142, 179, 239],\n",
       "         [143, 180, 241],\n",
       "         [144, 182, 240],\n",
       "         ...,\n",
       "         [159, 196, 240],\n",
       "         [160, 197, 241],\n",
       "         [158, 194, 240]]], dtype=uint8),\n",
       " array([[[105, 123, 172],\n",
       "         [105, 122, 171],\n",
       "         [104, 121, 170],\n",
       "         ...,\n",
       "         [139, 147, 149],\n",
       "         [ 80,  84,  86],\n",
       "         [ 58,  56,  56]],\n",
       " \n",
       "        [[103, 121, 170],\n",
       "         [103, 120, 169],\n",
       "         [101, 118, 167],\n",
       "         ...,\n",
       "         [182, 187, 188],\n",
       "         [111, 115, 120],\n",
       "         [ 55,  53,  53]],\n",
       " \n",
       "        [[102, 119, 168],\n",
       "         [ 99, 116, 165],\n",
       "         [101, 117, 166],\n",
       "         ...,\n",
       "         [213, 215, 216],\n",
       "         [121, 126, 129],\n",
       "         [ 55,  57,  57]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[199, 207, 224],\n",
       "         [192, 200, 217],\n",
       "         [183, 192, 210],\n",
       "         ...,\n",
       "         [238, 242, 242],\n",
       "         [229, 235, 240],\n",
       "         [223, 229, 234]],\n",
       " \n",
       "        [[207, 215, 232],\n",
       "         [199, 207, 224],\n",
       "         [188, 197, 211],\n",
       "         ...,\n",
       "         [248, 249, 249],\n",
       "         [235, 241, 243],\n",
       "         [226, 233, 236]],\n",
       " \n",
       "        [[218, 227, 241],\n",
       "         [202, 211, 225],\n",
       "         [200, 207, 222],\n",
       "         ...,\n",
       "         [254, 254, 254],\n",
       "         [241, 246, 247],\n",
       "         [227, 235, 239]]], dtype=uint8),\n",
       " array([[[170, 159, 172],\n",
       "         [173, 167, 179],\n",
       "         [175, 173, 186],\n",
       "         ...,\n",
       "         [133, 139, 147],\n",
       "         [131, 142, 145],\n",
       "         [128, 143, 152]],\n",
       " \n",
       "        [[171, 167, 177],\n",
       "         [176, 165, 182],\n",
       "         [176, 175, 189],\n",
       "         ...,\n",
       "         [106, 114, 114],\n",
       "         [110, 115, 119],\n",
       "         [105, 114, 117]],\n",
       " \n",
       "        [[167, 161, 174],\n",
       "         [172, 165, 181],\n",
       "         [181, 175, 188],\n",
       "         ...,\n",
       "         [ 87,  77,  75],\n",
       "         [ 83,  84,  83],\n",
       "         [ 86,  94,  93]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[206, 220, 233],\n",
       "         [204, 217, 234],\n",
       "         [209, 221, 237],\n",
       "         ...,\n",
       "         [223, 233, 235],\n",
       "         [232, 240, 240],\n",
       "         [223, 230, 240]],\n",
       " \n",
       "        [[208, 217, 234],\n",
       "         [201, 216, 235],\n",
       "         [209, 220, 239],\n",
       "         ...,\n",
       "         [218, 233, 239],\n",
       "         [205, 222, 236],\n",
       "         [220, 231, 241]],\n",
       " \n",
       "        [[202, 210, 228],\n",
       "         [205, 215, 230],\n",
       "         [205, 220, 234],\n",
       "         ...,\n",
       "         [216, 226, 237],\n",
       "         [210, 223, 234],\n",
       "         [217, 229, 237]]], dtype=uint8),\n",
       " array([[[31, 34, 22],\n",
       "         [32, 34, 21],\n",
       "         [28, 30, 18],\n",
       "         ...,\n",
       "         [43, 71, 59],\n",
       "         [46, 73, 62],\n",
       "         [42, 72, 59]],\n",
       " \n",
       "        [[33, 35, 23],\n",
       "         [31, 32, 22],\n",
       "         [27, 28, 17],\n",
       "         ...,\n",
       "         [41, 63, 51],\n",
       "         [38, 61, 49],\n",
       "         [42, 68, 55]],\n",
       " \n",
       "        [[37, 37, 25],\n",
       "         [30, 32, 20],\n",
       "         [31, 33, 21],\n",
       "         ...,\n",
       "         [37, 50, 37],\n",
       "         [36, 51, 38],\n",
       "         [30, 47, 35]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[44, 56, 43],\n",
       "         [36, 50, 39],\n",
       "         [35, 51, 38],\n",
       "         ...,\n",
       "         [35, 51, 40],\n",
       "         [30, 46, 34],\n",
       "         [34, 48, 37]],\n",
       " \n",
       "        [[41, 54, 40],\n",
       "         [39, 53, 42],\n",
       "         [39, 53, 40],\n",
       "         ...,\n",
       "         [29, 44, 33],\n",
       "         [35, 47, 36],\n",
       "         [30, 42, 30]],\n",
       " \n",
       "        [[42, 55, 41],\n",
       "         [40, 58, 41],\n",
       "         [32, 47, 33],\n",
       "         ...,\n",
       "         [29, 41, 29],\n",
       "         [31, 41, 29],\n",
       "         [30, 35, 24]]], dtype=uint8),\n",
       " array([[[118, 137, 182],\n",
       "         [124, 142, 189],\n",
       "         [130, 148, 195],\n",
       "         ...,\n",
       "         [135, 152, 205],\n",
       "         [126, 143, 195],\n",
       "         [133, 150, 198]],\n",
       " \n",
       "        [[120, 136, 182],\n",
       "         [121, 139, 185],\n",
       "         [131, 150, 195],\n",
       "         ...,\n",
       "         [123, 139, 195],\n",
       "         [118, 135, 187],\n",
       "         [128, 145, 193]],\n",
       " \n",
       "        [[122, 139, 182],\n",
       "         [123, 142, 187],\n",
       "         [126, 142, 188],\n",
       "         ...,\n",
       "         [122, 137, 189],\n",
       "         [121, 135, 187],\n",
       "         [124, 139, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 151, 193],\n",
       "         [144, 163, 209],\n",
       "         [151, 171, 219],\n",
       "         ...,\n",
       "         [148, 170, 232],\n",
       "         [153, 172, 232],\n",
       "         [156, 174, 235]],\n",
       " \n",
       "        [[133, 149, 191],\n",
       "         [141, 158, 204],\n",
       "         [150, 170, 218],\n",
       "         ...,\n",
       "         [146, 167, 232],\n",
       "         [150, 168, 230],\n",
       "         [157, 173, 234]],\n",
       " \n",
       "        [[133, 146, 189],\n",
       "         [138, 155, 202],\n",
       "         [147, 164, 213],\n",
       "         ...,\n",
       "         [146, 164, 229],\n",
       "         [156, 172, 230],\n",
       "         [155, 173, 233]]], dtype=uint8),\n",
       " array([[[ 66,  77,  69],\n",
       "         [ 55,  65,  59],\n",
       "         [ 52,  67,  59],\n",
       "         ...,\n",
       "         [122, 154, 143],\n",
       "         [132, 163, 149],\n",
       "         [132, 163, 148]],\n",
       " \n",
       "        [[ 56,  64,  57],\n",
       "         [ 62,  72,  64],\n",
       "         [ 56,  71,  63],\n",
       "         ...,\n",
       "         [114, 146, 132],\n",
       "         [117, 149, 134],\n",
       "         [114, 144, 131]],\n",
       " \n",
       "        [[ 58,  68,  63],\n",
       "         [ 61,  73,  63],\n",
       "         [ 65,  77,  69],\n",
       "         ...,\n",
       "         [ 99, 120, 104],\n",
       "         [101, 124, 109],\n",
       "         [ 88, 110,  93]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 129, 122],\n",
       "         [ 95, 137, 130],\n",
       "         [ 98, 138, 132],\n",
       "         ...,\n",
       "         [ 62,  93,  92],\n",
       "         [ 63,  93,  92],\n",
       "         [ 53,  83,  84]],\n",
       " \n",
       "        [[ 98, 140, 133],\n",
       "         [ 89, 133, 126],\n",
       "         [ 90, 135, 128],\n",
       "         ...,\n",
       "         [ 73, 105, 104],\n",
       "         [ 75, 106, 106],\n",
       "         [ 55,  90,  88]],\n",
       " \n",
       "        [[ 95, 139, 132],\n",
       "         [104, 146, 139],\n",
       "         [ 96, 140, 133],\n",
       "         ...,\n",
       "         [ 74, 107, 106],\n",
       "         [ 79, 109, 111],\n",
       "         [ 64,  98,  98]]], dtype=uint8),\n",
       " array([[[160, 156, 168],\n",
       "         [168, 164, 175],\n",
       "         [168, 163, 173],\n",
       "         ...,\n",
       "         [183, 191, 185],\n",
       "         [176, 187, 179],\n",
       "         [182, 195, 187]],\n",
       " \n",
       "        [[157, 156, 171],\n",
       "         [164, 161, 170],\n",
       "         [163, 160, 169],\n",
       "         ...,\n",
       "         [156, 155, 140],\n",
       "         [158, 159, 138],\n",
       "         [164, 166, 147]],\n",
       " \n",
       "        [[161, 157, 168],\n",
       "         [160, 157, 166],\n",
       "         [163, 159, 165],\n",
       "         ...,\n",
       "         [101,  85,  59],\n",
       "         [118, 106,  76],\n",
       "         [119, 104,  74]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[203, 216, 224],\n",
       "         [204, 215, 223],\n",
       "         [206, 218, 224],\n",
       "         ...,\n",
       "         [187, 191, 183],\n",
       "         [177, 187, 186],\n",
       "         [173, 189, 193]],\n",
       " \n",
       "        [[201, 214, 222],\n",
       "         [198, 211, 219],\n",
       "         [207, 218, 226],\n",
       "         ...,\n",
       "         [180, 194, 197],\n",
       "         [169, 192, 199],\n",
       "         [169, 194, 200]],\n",
       " \n",
       "        [[202, 219, 226],\n",
       "         [203, 220, 227],\n",
       "         [207, 221, 229],\n",
       "         ...,\n",
       "         [173, 198, 203],\n",
       "         [180, 202, 208],\n",
       "         [189, 209, 215]]], dtype=uint8),\n",
       " array([[[175, 178, 183],\n",
       "         [179, 184, 189],\n",
       "         [183, 192, 196],\n",
       "         ...,\n",
       "         [187, 202, 196],\n",
       "         [192, 208, 201],\n",
       "         [196, 213, 206]],\n",
       " \n",
       "        [[175, 178, 183],\n",
       "         [177, 182, 186],\n",
       "         [184, 194, 200],\n",
       "         ...,\n",
       "         [173, 189, 182],\n",
       "         [178, 193, 185],\n",
       "         [188, 203, 195]],\n",
       " \n",
       "        [[181, 183, 188],\n",
       "         [177, 181, 182],\n",
       "         [182, 188, 191],\n",
       "         ...,\n",
       "         [158, 174, 164],\n",
       "         [165, 177, 164],\n",
       "         [177, 187, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[209, 222, 229],\n",
       "         [207, 223, 228],\n",
       "         [205, 221, 226],\n",
       "         ...,\n",
       "         [207, 217, 219],\n",
       "         [208, 219, 223],\n",
       "         [202, 217, 221]],\n",
       " \n",
       "        [[208, 223, 227],\n",
       "         [209, 225, 230],\n",
       "         [211, 225, 230],\n",
       "         ...,\n",
       "         [216, 225, 225],\n",
       "         [205, 218, 220],\n",
       "         [194, 216, 221]],\n",
       " \n",
       "        [[212, 228, 234],\n",
       "         [212, 227, 233],\n",
       "         [213, 229, 233],\n",
       "         ...,\n",
       "         [221, 229, 229],\n",
       "         [212, 224, 223],\n",
       "         [198, 219, 225]]], dtype=uint8),\n",
       " array([[[132, 148, 167],\n",
       "         [141, 157, 176],\n",
       "         [143, 166, 184],\n",
       "         ...,\n",
       "         [128, 148, 132],\n",
       "         [114, 139, 121],\n",
       "         [113, 137, 123]],\n",
       " \n",
       "        [[134, 145, 166],\n",
       "         [131, 147, 165],\n",
       "         [149, 169, 185],\n",
       "         ...,\n",
       "         [ 69,  74,  62],\n",
       "         [ 72,  86,  78],\n",
       "         [ 80,  97,  94]],\n",
       " \n",
       "        [[141, 153, 170],\n",
       "         [131, 145, 161],\n",
       "         [140, 158, 169],\n",
       "         ...,\n",
       "         [ 43,  50,  39],\n",
       "         [ 45,  53,  43],\n",
       "         [ 62,  78,  75]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[178, 207, 221],\n",
       "         [175, 205, 219],\n",
       "         [177, 207, 221],\n",
       "         ...,\n",
       "         [178, 211, 217],\n",
       "         [167, 206, 217],\n",
       "         [156, 201, 217]],\n",
       " \n",
       "        [[181, 211, 224],\n",
       "         [177, 210, 224],\n",
       "         [177, 208, 223],\n",
       "         ...,\n",
       "         [186, 217, 225],\n",
       "         [182, 216, 225],\n",
       "         [172, 211, 224]],\n",
       " \n",
       "        [[175, 209, 224],\n",
       "         [173, 207, 223],\n",
       "         [177, 211, 226],\n",
       "         ...,\n",
       "         [182, 215, 224],\n",
       "         [180, 216, 225],\n",
       "         [181, 220, 228]]], dtype=uint8),\n",
       " array([[[137, 151, 145],\n",
       "         [137, 152, 144],\n",
       "         [135, 150, 142],\n",
       "         ...,\n",
       "         [186, 184, 170],\n",
       "         [186, 182, 168],\n",
       "         [196, 191, 178]],\n",
       " \n",
       "        [[135, 151, 142],\n",
       "         [135, 150, 142],\n",
       "         [129, 144, 136],\n",
       "         ...,\n",
       "         [182, 175, 159],\n",
       "         [193, 184, 169],\n",
       "         [194, 187, 170]],\n",
       " \n",
       "        [[132, 147, 139],\n",
       "         [129, 144, 136],\n",
       "         [127, 141, 130],\n",
       "         ...,\n",
       "         [166, 158, 141],\n",
       "         [180, 173, 157],\n",
       "         [184, 176, 161]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[182, 184, 177],\n",
       "         [182, 185, 177],\n",
       "         [181, 182, 176],\n",
       "         ...,\n",
       "         [160, 163, 175],\n",
       "         [159, 159, 174],\n",
       "         [160, 161, 172]],\n",
       " \n",
       "        [[181, 183, 177],\n",
       "         [184, 184, 178],\n",
       "         [182, 184, 178],\n",
       "         ...,\n",
       "         [159, 161, 172],\n",
       "         [166, 164, 176],\n",
       "         [166, 165, 175]],\n",
       " \n",
       "        [[158, 162, 164],\n",
       "         [161, 164, 167],\n",
       "         [161, 163, 165],\n",
       "         ...,\n",
       "         [159, 161, 172],\n",
       "         [163, 164, 174],\n",
       "         [161, 162, 172]]], dtype=uint8),\n",
       " array([[[103, 110, 111],\n",
       "         [103, 111, 111],\n",
       "         [103, 111, 111],\n",
       "         ...,\n",
       "         [ 97, 116, 121],\n",
       "         [101, 120, 127],\n",
       "         [ 98, 120, 128]],\n",
       " \n",
       "        [[ 98, 106, 109],\n",
       "         [103, 111, 111],\n",
       "         [105, 110, 112],\n",
       "         ...,\n",
       "         [ 94, 111, 118],\n",
       "         [ 99, 114, 120],\n",
       "         [104, 122, 127]],\n",
       " \n",
       "        [[102, 109, 106],\n",
       "         [107, 113, 111],\n",
       "         [107, 108, 106],\n",
       "         ...,\n",
       "         [ 96, 107, 113],\n",
       "         [101, 116, 120],\n",
       "         [108, 121, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 119, 133],\n",
       "         [108, 122, 133],\n",
       "         [108, 122, 134],\n",
       "         ...,\n",
       "         [ 84, 100, 127],\n",
       "         [ 86,  99, 124],\n",
       "         [ 85, 100, 123]],\n",
       " \n",
       "        [[112, 122, 136],\n",
       "         [115, 124, 137],\n",
       "         [115, 125, 138],\n",
       "         ...,\n",
       "         [ 72,  86, 114],\n",
       "         [ 88,  96, 122],\n",
       "         [ 87, 100, 124]],\n",
       " \n",
       "        [[112, 121, 135],\n",
       "         [121, 129, 142],\n",
       "         [118, 125, 139],\n",
       "         ...,\n",
       "         [ 82,  96, 119],\n",
       "         [ 84,  98, 124],\n",
       "         [ 86, 101, 125]]], dtype=uint8),\n",
       " array([[[ 55,  71,  74],\n",
       "         [ 64,  80,  82],\n",
       "         [ 66,  77,  81],\n",
       "         ...,\n",
       "         [ 83, 107, 108],\n",
       "         [ 70,  93,  96],\n",
       "         [ 63,  79,  81]],\n",
       " \n",
       "        [[ 50,  57,  63],\n",
       "         [ 57,  65,  67],\n",
       "         [ 57,  61,  62],\n",
       "         ...,\n",
       "         [ 80, 108, 110],\n",
       "         [ 77, 101, 108],\n",
       "         [ 51,  80,  81]],\n",
       " \n",
       "        [[ 48,  56,  60],\n",
       "         [ 50,  53,  55],\n",
       "         [ 53,  52,  55],\n",
       "         ...,\n",
       "         [ 78, 106, 108],\n",
       "         [ 77, 104, 111],\n",
       "         [ 71,  98, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  96, 123],\n",
       "         [ 73,  97, 129],\n",
       "         [ 79,  98, 131],\n",
       "         ...,\n",
       "         [ 88, 110, 122],\n",
       "         [ 86, 108, 120],\n",
       "         [ 80, 102, 113]],\n",
       " \n",
       "        [[ 72,  96, 125],\n",
       "         [ 73,  97, 128],\n",
       "         [ 81, 102, 134],\n",
       "         ...,\n",
       "         [ 88, 109, 124],\n",
       "         [ 85, 104, 117],\n",
       "         [ 84, 105, 113]],\n",
       " \n",
       "        [[ 72,  98, 126],\n",
       "         [ 78, 100, 132],\n",
       "         [ 77, 102, 134],\n",
       "         ...,\n",
       "         [ 93, 114, 129],\n",
       "         [ 92, 111, 124],\n",
       "         [ 86, 107, 117]]], dtype=uint8),\n",
       " array([[[163, 165, 173],\n",
       "         [162, 163, 171],\n",
       "         [158, 160, 168],\n",
       "         ...,\n",
       "         [ 99, 121,  96],\n",
       "         [ 97, 120,  95],\n",
       "         [ 94, 119,  95]],\n",
       " \n",
       "        [[158, 160, 168],\n",
       "         [156, 158, 166],\n",
       "         [152, 154, 162],\n",
       "         ...,\n",
       "         [100, 124,  98],\n",
       "         [ 97, 122,  96],\n",
       "         [ 95, 120,  96]],\n",
       " \n",
       "        [[151, 153, 162],\n",
       "         [149, 152, 160],\n",
       "         [147, 150, 158],\n",
       "         ...,\n",
       "         [100, 125,  97],\n",
       "         [ 99, 126,  98],\n",
       "         [ 91, 121,  95]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[115, 133, 128],\n",
       "         [113, 132, 128],\n",
       "         [110, 129, 126],\n",
       "         ...,\n",
       "         [102, 130, 103],\n",
       "         [104, 132, 102],\n",
       "         [106, 131, 104]],\n",
       " \n",
       "        [[117, 135, 128],\n",
       "         [115, 133, 127],\n",
       "         [115, 132, 128],\n",
       "         ...,\n",
       "         [107, 132, 106],\n",
       "         [107, 132, 104],\n",
       "         [108, 133, 105]],\n",
       " \n",
       "        [[118, 135, 124],\n",
       "         [118, 135, 124],\n",
       "         [118, 135, 126],\n",
       "         ...,\n",
       "         [109, 134, 107],\n",
       "         [108, 133, 105],\n",
       "         [108, 133, 105]]], dtype=uint8),\n",
       " array([[[ 98, 147, 187],\n",
       "         [ 90, 139, 178],\n",
       "         [ 54, 102, 139],\n",
       "         ...,\n",
       "         [ 39,  61,  98],\n",
       "         [ 43,  62,  97],\n",
       "         [ 25,  43,  70]],\n",
       " \n",
       "        [[ 83, 134, 176],\n",
       "         [ 77, 128, 169],\n",
       "         [ 64, 113, 151],\n",
       "         ...,\n",
       "         [ 34,  57,  95],\n",
       "         [ 42,  64, 100],\n",
       "         [ 26,  46,  78]],\n",
       " \n",
       "        [[ 79, 133, 175],\n",
       "         [ 77, 129, 171],\n",
       "         [ 58, 108, 149],\n",
       "         ...,\n",
       "         [ 32,  54,  90],\n",
       "         [ 40,  61,  98],\n",
       "         [ 29,  46,  81]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 130, 185],\n",
       "         [ 72, 125, 180],\n",
       "         [ 74, 122, 178],\n",
       "         ...,\n",
       "         [ 47,  62, 119],\n",
       "         [ 43,  58, 113],\n",
       "         [ 42,  57, 106]],\n",
       " \n",
       "        [[ 82, 139, 192],\n",
       "         [ 83, 136, 189],\n",
       "         [ 89, 137, 190],\n",
       "         ...,\n",
       "         [ 47,  62, 120],\n",
       "         [ 41,  56, 113],\n",
       "         [ 39,  56, 107]],\n",
       " \n",
       "        [[ 90, 146, 198],\n",
       "         [ 89, 141, 193],\n",
       "         [ 89, 136, 189],\n",
       "         ...,\n",
       "         [ 46,  61, 117],\n",
       "         [ 42,  57, 113],\n",
       "         [ 36,  54, 107]]], dtype=uint8),\n",
       " array([[[161, 196, 242],\n",
       "         [157, 195, 240],\n",
       "         [162, 198, 244],\n",
       "         ...,\n",
       "         [134, 169, 216],\n",
       "         [145, 179, 222],\n",
       "         [135, 169, 212]],\n",
       " \n",
       "        [[160, 196, 242],\n",
       "         [157, 196, 241],\n",
       "         [160, 199, 243],\n",
       "         ...,\n",
       "         [137, 172, 219],\n",
       "         [144, 179, 222],\n",
       "         [136, 170, 213]],\n",
       " \n",
       "        [[160, 195, 241],\n",
       "         [162, 196, 242],\n",
       "         [163, 199, 243],\n",
       "         ...,\n",
       "         [141, 176, 221],\n",
       "         [141, 176, 219],\n",
       "         [140, 174, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[145, 183, 233],\n",
       "         [150, 185, 235],\n",
       "         [158, 194, 241],\n",
       "         ...,\n",
       "         [154, 195, 240],\n",
       "         [153, 193, 241],\n",
       "         [150, 189, 241]],\n",
       " \n",
       "        [[147, 184, 234],\n",
       "         [152, 187, 237],\n",
       "         [160, 196, 242],\n",
       "         ...,\n",
       "         [154, 194, 242],\n",
       "         [151, 191, 240],\n",
       "         [149, 188, 240]],\n",
       " \n",
       "        [[148, 185, 235],\n",
       "         [152, 187, 237],\n",
       "         [160, 197, 242],\n",
       "         ...,\n",
       "         [152, 192, 240],\n",
       "         [149, 189, 238],\n",
       "         [147, 186, 238]]], dtype=uint8),\n",
       " array([[[140, 158, 209],\n",
       "         [137, 155, 208],\n",
       "         [134, 149, 203],\n",
       "         ...,\n",
       "         [ 60,  71,  97],\n",
       "         [ 57,  70,  92],\n",
       "         [ 52,  65,  87]],\n",
       " \n",
       "        [[134, 153, 204],\n",
       "         [127, 145, 198],\n",
       "         [125, 141, 194],\n",
       "         ...,\n",
       "         [ 64,  75, 100],\n",
       "         [ 60,  71,  93],\n",
       "         [ 56,  66,  89]],\n",
       " \n",
       "        [[132, 149, 198],\n",
       "         [130, 148, 198],\n",
       "         [125, 139, 191],\n",
       "         ...,\n",
       "         [ 66,  75,  98],\n",
       "         [ 59,  68,  88],\n",
       "         [ 56,  65,  85]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  81, 119],\n",
       "         [ 64,  76, 111],\n",
       "         [ 66,  78, 112],\n",
       "         ...,\n",
       "         [ 81,  96, 125],\n",
       "         [ 75,  89, 116],\n",
       "         [ 70,  82, 110]],\n",
       " \n",
       "        [[ 69,  81, 118],\n",
       "         [ 65,  77, 111],\n",
       "         [ 68,  79, 113],\n",
       "         ...,\n",
       "         [ 83,  96, 127],\n",
       "         [ 77,  89, 118],\n",
       "         [ 69,  80, 108]],\n",
       " \n",
       "        [[ 69,  80, 117],\n",
       "         [ 67,  78, 110],\n",
       "         [ 70,  81, 113],\n",
       "         ...,\n",
       "         [ 84,  97, 129],\n",
       "         [ 77,  88, 119],\n",
       "         [ 68,  80, 107]]], dtype=uint8),\n",
       " array([[[132, 131, 140],\n",
       "         [137, 134, 143],\n",
       "         [137, 134, 143],\n",
       "         ...,\n",
       "         [118, 119, 115],\n",
       "         [108, 111, 103],\n",
       "         [110, 109,  99]],\n",
       " \n",
       "        [[134, 132, 137],\n",
       "         [133, 132, 138],\n",
       "         [137, 132, 138],\n",
       "         ...,\n",
       "         [115, 120, 120],\n",
       "         [109, 114, 112],\n",
       "         [106, 109, 102]],\n",
       " \n",
       "        [[124, 123, 126],\n",
       "         [126, 123, 126],\n",
       "         [127, 121, 123],\n",
       "         ...,\n",
       "         [114, 118, 119],\n",
       "         [112, 117, 116],\n",
       "         [111, 112, 109]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96,  94, 115],\n",
       "         [ 95,  92, 113],\n",
       "         [ 90,  84, 106],\n",
       "         ...,\n",
       "         [108, 108, 125],\n",
       "         [107, 107, 123],\n",
       "         [103, 103, 120]],\n",
       " \n",
       "        [[101,  97, 122],\n",
       "         [101,  97, 122],\n",
       "         [ 98,  93, 119],\n",
       "         ...,\n",
       "         [112, 111, 131],\n",
       "         [111, 111, 129],\n",
       "         [108, 111, 126]],\n",
       " \n",
       "        [[ 98,  97, 121],\n",
       "         [104, 102, 128],\n",
       "         [102,  96, 125],\n",
       "         ...,\n",
       "         [113, 111, 133],\n",
       "         [111, 111, 129],\n",
       "         [106, 108, 126]]], dtype=uint8),\n",
       " array([[[193, 199, 185],\n",
       "         [190, 196, 183],\n",
       "         [183, 187, 175],\n",
       "         ...,\n",
       "         [ 91,  92, 104],\n",
       "         [ 96,  96, 110],\n",
       "         [ 96,  96, 111]],\n",
       " \n",
       "        [[184, 189, 174],\n",
       "         [168, 173, 156],\n",
       "         [163, 165, 150],\n",
       "         ...,\n",
       "         [ 94,  88, 100],\n",
       "         [ 95,  94, 106],\n",
       "         [100, 100, 113]],\n",
       " \n",
       "        [[150, 153, 137],\n",
       "         [136, 138, 122],\n",
       "         [136, 134, 119],\n",
       "         ...,\n",
       "         [ 92,  85,  97],\n",
       "         [ 93,  92, 104],\n",
       "         [101,  99, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 133, 136],\n",
       "         [128, 126, 132],\n",
       "         [128, 126, 132],\n",
       "         ...,\n",
       "         [105, 104, 125],\n",
       "         [108, 106, 128],\n",
       "         [109, 109, 129]],\n",
       " \n",
       "        [[135, 132, 141],\n",
       "         [128, 128, 135],\n",
       "         [130, 128, 134],\n",
       "         ...,\n",
       "         [109, 107, 130],\n",
       "         [108, 107, 129],\n",
       "         [110, 110, 131]],\n",
       " \n",
       "        [[137, 134, 143],\n",
       "         [130, 128, 139],\n",
       "         [132, 128, 139],\n",
       "         ...,\n",
       "         [112, 110, 132],\n",
       "         [113, 110, 135],\n",
       "         [113, 111, 134]]], dtype=uint8),\n",
       " array([[[115, 103,  88],\n",
       "         [ 87,  77,  63],\n",
       "         [ 92,  78,  66],\n",
       "         ...,\n",
       "         [133, 146, 148],\n",
       "         [134, 147, 149],\n",
       "         [129, 142, 144]],\n",
       " \n",
       "        [[104,  91,  64],\n",
       "         [100,  85,  62],\n",
       "         [102,  83,  68],\n",
       "         ...,\n",
       "         [132, 143, 144],\n",
       "         [132, 145, 146],\n",
       "         [131, 143, 145]],\n",
       " \n",
       "        [[ 90,  75,  56],\n",
       "         [ 92,  75,  66],\n",
       "         [102,  85,  80],\n",
       "         ...,\n",
       "         [127, 132, 132],\n",
       "         [132, 143, 142],\n",
       "         [133, 144, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 132, 162],\n",
       "         [133, 132, 162],\n",
       "         [132, 133, 163],\n",
       "         ...,\n",
       "         [153, 158, 161],\n",
       "         [154, 159, 159],\n",
       "         [153, 159, 158]],\n",
       " \n",
       "        [[138, 134, 161],\n",
       "         [140, 137, 163],\n",
       "         [139, 137, 167],\n",
       "         ...,\n",
       "         [153, 157, 163],\n",
       "         [153, 159, 159],\n",
       "         [151, 157, 156]],\n",
       " \n",
       "        [[143, 137, 162],\n",
       "         [148, 142, 169],\n",
       "         [145, 142, 168],\n",
       "         ...,\n",
       "         [153, 156, 164],\n",
       "         [153, 158, 161],\n",
       "         [152, 158, 157]]], dtype=uint8),\n",
       " array([[[ 34,  38,  38],\n",
       "         [ 57,  64,  69],\n",
       "         [102, 112, 120],\n",
       "         ...,\n",
       "         [179, 193, 213],\n",
       "         [179, 193, 214],\n",
       "         [177, 190, 212]],\n",
       " \n",
       "        [[ 30,  34,  35],\n",
       "         [ 70,  78,  83],\n",
       "         [105, 114, 123],\n",
       "         ...,\n",
       "         [178, 192, 212],\n",
       "         [177, 190, 212],\n",
       "         [176, 189, 211]],\n",
       " \n",
       "        [[ 31,  35,  35],\n",
       "         [ 82,  89,  94],\n",
       "         [106, 115, 124],\n",
       "         ...,\n",
       "         [174, 187, 208],\n",
       "         [175, 188, 210],\n",
       "         [178, 191, 213]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 136, 153],\n",
       "         [130, 141, 157],\n",
       "         [139, 149, 166],\n",
       "         ...,\n",
       "         [144, 155, 181],\n",
       "         [150, 161, 188],\n",
       "         [156, 167, 193]],\n",
       " \n",
       "        [[128, 138, 154],\n",
       "         [136, 146, 162],\n",
       "         [146, 156, 172],\n",
       "         ...,\n",
       "         [145, 157, 182],\n",
       "         [151, 162, 188],\n",
       "         [155, 166, 192]],\n",
       " \n",
       "        [[129, 140, 154],\n",
       "         [140, 151, 165],\n",
       "         [148, 159, 173],\n",
       "         ...,\n",
       "         [145, 157, 181],\n",
       "         [147, 159, 183],\n",
       "         [152, 164, 188]]], dtype=uint8),\n",
       " array([[[184, 195, 217],\n",
       "         [183, 194, 216],\n",
       "         [180, 188, 211],\n",
       "         ...,\n",
       "         [130, 141, 154],\n",
       "         [114, 126, 136],\n",
       "         [ 63,  72,  77]],\n",
       " \n",
       "        [[179, 190, 212],\n",
       "         [176, 187, 209],\n",
       "         [175, 183, 206],\n",
       "         ...,\n",
       "         [130, 141, 155],\n",
       "         [120, 132, 142],\n",
       "         [ 65,  75,  79]],\n",
       " \n",
       "        [[177, 188, 210],\n",
       "         [172, 183, 205],\n",
       "         [164, 172, 195],\n",
       "         ...,\n",
       "         [128, 139, 153],\n",
       "         [121, 133, 143],\n",
       "         [ 74,  84,  89]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[166, 178, 206],\n",
       "         [166, 178, 206],\n",
       "         [163, 174, 202],\n",
       "         ...,\n",
       "         [146, 160, 183],\n",
       "         [143, 157, 180],\n",
       "         [136, 150, 173]],\n",
       " \n",
       "        [[170, 183, 210],\n",
       "         [171, 184, 210],\n",
       "         [171, 182, 209],\n",
       "         ...,\n",
       "         [144, 157, 179],\n",
       "         [143, 156, 178],\n",
       "         [139, 152, 174]],\n",
       " \n",
       "        [[169, 182, 208],\n",
       "         [173, 186, 212],\n",
       "         [175, 186, 213],\n",
       "         ...,\n",
       "         [141, 155, 177],\n",
       "         [141, 154, 176],\n",
       "         [139, 152, 174]]], dtype=uint8),\n",
       " array([[[180, 183, 182],\n",
       "         [165, 169, 167],\n",
       "         [182, 184, 178],\n",
       "         ...,\n",
       "         [156, 163, 161],\n",
       "         [141, 154, 155],\n",
       "         [142, 155, 160]],\n",
       " \n",
       "        [[148, 152, 152],\n",
       "         [142, 147, 146],\n",
       "         [143, 146, 140],\n",
       "         ...,\n",
       "         [126, 136, 135],\n",
       "         [125, 137, 134],\n",
       "         [149, 157, 156]],\n",
       " \n",
       "        [[127, 132, 131],\n",
       "         [110, 112, 109],\n",
       "         [130, 135, 129],\n",
       "         ...,\n",
       "         [136, 146, 147],\n",
       "         [131, 139, 135],\n",
       "         [146, 152, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 131, 145],\n",
       "         [ 99, 117, 134],\n",
       "         [ 95, 111, 129],\n",
       "         ...,\n",
       "         [ 68,  81,  97],\n",
       "         [ 51,  63,  80],\n",
       "         [ 59,  74,  90]],\n",
       " \n",
       "        [[103, 120, 137],\n",
       "         [108, 123, 139],\n",
       "         [107, 122, 135],\n",
       "         ...,\n",
       "         [ 70,  83, 100],\n",
       "         [ 65,  76,  93],\n",
       "         [ 70,  85, 101]],\n",
       " \n",
       "        [[107, 121, 138],\n",
       "         [104, 119, 136],\n",
       "         [108, 121, 136],\n",
       "         ...,\n",
       "         [ 68,  81,  97],\n",
       "         [ 69,  82,  98],\n",
       "         [ 73,  86, 102]]], dtype=uint8),\n",
       " array([[[139, 149, 156],\n",
       "         [149, 154, 154],\n",
       "         [133, 136, 134],\n",
       "         ...,\n",
       "         [132, 136, 136],\n",
       "         [133, 136, 136],\n",
       "         [133, 141, 145]],\n",
       " \n",
       "        [[141, 151, 155],\n",
       "         [115, 120, 119],\n",
       "         [123, 120, 109],\n",
       "         ...,\n",
       "         [123, 128, 123],\n",
       "         [123, 120, 115],\n",
       "         [154, 155, 152]],\n",
       " \n",
       "        [[118, 130, 137],\n",
       "         [134, 143, 146],\n",
       "         [133, 134, 133],\n",
       "         ...,\n",
       "         [123, 129, 121],\n",
       "         [124, 129, 121],\n",
       "         [136, 137, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[130, 149, 157],\n",
       "         [125, 143, 150],\n",
       "         [133, 149, 157],\n",
       "         ...,\n",
       "         [109, 131, 145],\n",
       "         [134, 154, 170],\n",
       "         [146, 167, 181]],\n",
       " \n",
       "        [[130, 147, 155],\n",
       "         [138, 155, 162],\n",
       "         [129, 149, 156],\n",
       "         ...,\n",
       "         [119, 142, 158],\n",
       "         [133, 155, 174],\n",
       "         [151, 171, 186]],\n",
       " \n",
       "        [[130, 147, 156],\n",
       "         [134, 149, 158],\n",
       "         [125, 148, 157],\n",
       "         ...,\n",
       "         [116, 141, 161],\n",
       "         [140, 161, 179],\n",
       "         [156, 172, 187]]], dtype=uint8),\n",
       " array([[[ 73,  76,  66],\n",
       "         [ 84,  89,  89],\n",
       "         [149, 156, 163],\n",
       "         ...,\n",
       "         [142, 153, 180],\n",
       "         [144, 155, 181],\n",
       "         [143, 155, 179]],\n",
       " \n",
       "        [[ 77,  78,  64],\n",
       "         [101, 105, 106],\n",
       "         [145, 154, 161],\n",
       "         ...,\n",
       "         [141, 152, 179],\n",
       "         [139, 150, 177],\n",
       "         [141, 151, 179]],\n",
       " \n",
       "        [[ 84,  84,  70],\n",
       "         [113, 117, 116],\n",
       "         [144, 151, 154],\n",
       "         ...,\n",
       "         [134, 143, 167],\n",
       "         [131, 138, 164],\n",
       "         [131, 142, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 175, 190],\n",
       "         [171, 183, 201],\n",
       "         [175, 189, 208],\n",
       "         ...,\n",
       "         [171, 184, 210],\n",
       "         [171, 183, 210],\n",
       "         [175, 187, 212]],\n",
       " \n",
       "        [[168, 178, 193],\n",
       "         [171, 185, 203],\n",
       "         [175, 189, 208],\n",
       "         ...,\n",
       "         [173, 186, 212],\n",
       "         [174, 187, 213],\n",
       "         [175, 187, 212]],\n",
       " \n",
       "        [[169, 181, 195],\n",
       "         [174, 188, 206],\n",
       "         [178, 192, 211],\n",
       "         ...,\n",
       "         [173, 186, 212],\n",
       "         [173, 186, 212],\n",
       "         [174, 186, 213]]], dtype=uint8),\n",
       " array([[[144, 155, 182],\n",
       "         [141, 153, 180],\n",
       "         [140, 152, 180],\n",
       "         ...,\n",
       "         [134, 140, 157],\n",
       "         [136, 143, 158],\n",
       "         [134, 141, 156]],\n",
       " \n",
       "        [[138, 151, 177],\n",
       "         [135, 148, 174],\n",
       "         [137, 150, 177],\n",
       "         ...,\n",
       "         [121, 134, 152],\n",
       "         [131, 140, 154],\n",
       "         [131, 140, 154]],\n",
       " \n",
       "        [[137, 150, 176],\n",
       "         [133, 146, 173],\n",
       "         [134, 146, 174],\n",
       "         ...,\n",
       "         [115, 129, 148],\n",
       "         [126, 138, 152],\n",
       "         [131, 140, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 153, 182],\n",
       "         [141, 153, 185],\n",
       "         [138, 152, 184],\n",
       "         ...,\n",
       "         [135, 147, 165],\n",
       "         [142, 154, 173],\n",
       "         [146, 156, 174]],\n",
       " \n",
       "        [[147, 157, 186],\n",
       "         [143, 154, 184],\n",
       "         [142, 153, 183],\n",
       "         ...,\n",
       "         [143, 154, 174],\n",
       "         [146, 157, 176],\n",
       "         [148, 157, 177]],\n",
       " \n",
       "        [[148, 159, 186],\n",
       "         [147, 158, 186],\n",
       "         [145, 156, 185],\n",
       "         ...,\n",
       "         [149, 160, 180],\n",
       "         [149, 160, 180],\n",
       "         [149, 161, 179]]], dtype=uint8),\n",
       " array([[[ 35,  57, 102],\n",
       "         [ 33,  56, 104],\n",
       "         [ 34,  61, 114],\n",
       "         ...,\n",
       "         [152, 183, 239],\n",
       "         [156, 185, 238],\n",
       "         [166, 192, 244]],\n",
       " \n",
       "        [[ 33,  54, 100],\n",
       "         [ 31,  54, 102],\n",
       "         [ 36,  64, 116],\n",
       "         ...,\n",
       "         [134, 169, 227],\n",
       "         [149, 183, 238],\n",
       "         [147, 179, 234]],\n",
       " \n",
       "        [[ 33,  53,  99],\n",
       "         [ 33,  56, 104],\n",
       "         [ 36,  63, 116],\n",
       "         ...,\n",
       "         [125, 161, 224],\n",
       "         [132, 166, 226],\n",
       "         [136, 170, 228]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  87, 139],\n",
       "         [ 51,  95, 149],\n",
       "         [ 59, 102, 159],\n",
       "         ...,\n",
       "         [ 49,  85, 149],\n",
       "         [ 44,  83, 147],\n",
       "         [ 46,  86, 151]],\n",
       " \n",
       "        [[ 51,  90, 142],\n",
       "         [ 52,  95, 152],\n",
       "         [ 59, 103, 160],\n",
       "         ...,\n",
       "         [ 49,  89, 154],\n",
       "         [ 47,  89, 154],\n",
       "         [ 49,  91, 156]],\n",
       " \n",
       "        [[ 49,  87, 140],\n",
       "         [ 51,  93, 151],\n",
       "         [ 56, 100, 157],\n",
       "         ...,\n",
       "         [ 51,  97, 163],\n",
       "         [ 50,  94, 160],\n",
       "         [ 55, 100, 164]]], dtype=uint8),\n",
       " array([[[ 34,  48,  65],\n",
       "         [ 61,  80, 104],\n",
       "         [ 73,  93, 118],\n",
       "         ...,\n",
       "         [127, 159, 198],\n",
       "         [122, 154, 193],\n",
       "         [129, 161, 200]],\n",
       " \n",
       "        [[ 47,  62,  81],\n",
       "         [ 67,  87, 112],\n",
       "         [ 74,  94, 119],\n",
       "         ...,\n",
       "         [125, 157, 196],\n",
       "         [126, 158, 197],\n",
       "         [121, 155, 194]],\n",
       " \n",
       "        [[ 56,  72,  91],\n",
       "         [ 71,  91, 116],\n",
       "         [ 78,  98, 123],\n",
       "         ...,\n",
       "         [122, 153, 192],\n",
       "         [125, 155, 195],\n",
       "         [124, 154, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 92, 111, 148],\n",
       "         [100, 119, 156],\n",
       "         [105, 124, 161],\n",
       "         ...,\n",
       "         [102, 129, 163],\n",
       "         [106, 133, 167],\n",
       "         [108, 135, 169]],\n",
       " \n",
       "        [[ 92, 112, 147],\n",
       "         [ 98, 117, 153],\n",
       "         [105, 123, 160],\n",
       "         ...,\n",
       "         [106, 132, 168],\n",
       "         [108, 134, 170],\n",
       "         [110, 136, 170]],\n",
       " \n",
       "        [[ 92, 112, 147],\n",
       "         [ 97, 117, 153],\n",
       "         [104, 123, 160],\n",
       "         ...,\n",
       "         [109, 135, 171],\n",
       "         [109, 135, 171],\n",
       "         [111, 137, 171]]], dtype=uint8),\n",
       " array([[[194, 229, 250],\n",
       "         [185, 220, 245],\n",
       "         [183, 219, 248],\n",
       "         ...,\n",
       "         [142, 185, 226],\n",
       "         [139, 184, 225],\n",
       "         [135, 179, 220]],\n",
       " \n",
       "        [[187, 224, 248],\n",
       "         [177, 214, 241],\n",
       "         [180, 216, 248],\n",
       "         ...,\n",
       "         [144, 188, 229],\n",
       "         [142, 186, 227],\n",
       "         [138, 182, 223]],\n",
       " \n",
       "        [[185, 224, 252],\n",
       "         [177, 215, 246],\n",
       "         [177, 214, 248],\n",
       "         ...,\n",
       "         [144, 188, 229],\n",
       "         [145, 189, 230],\n",
       "         [140, 184, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[206, 240, 253],\n",
       "         [206, 240, 253],\n",
       "         [209, 240, 254],\n",
       "         ...,\n",
       "         [189, 223, 247],\n",
       "         [190, 224, 248],\n",
       "         [191, 225, 249]],\n",
       " \n",
       "        [[205, 239, 253],\n",
       "         [205, 239, 253],\n",
       "         [208, 239, 254],\n",
       "         ...,\n",
       "         [190, 224, 248],\n",
       "         [191, 225, 249],\n",
       "         [192, 226, 250]],\n",
       " \n",
       "        [[203, 238, 252],\n",
       "         [205, 238, 253],\n",
       "         [205, 238, 253],\n",
       "         ...,\n",
       "         [193, 226, 250],\n",
       "         [194, 228, 252],\n",
       "         [194, 228, 252]]], dtype=uint8),\n",
       " array([[[181, 204, 250],\n",
       "         [172, 195, 242],\n",
       "         [172, 194, 242],\n",
       "         ...,\n",
       "         [ 89, 119, 162],\n",
       "         [ 80, 109, 147],\n",
       "         [ 75, 102, 139]],\n",
       " \n",
       "        [[182, 205, 253],\n",
       "         [160, 185, 233],\n",
       "         [164, 192, 242],\n",
       "         ...,\n",
       "         [ 91, 120, 164],\n",
       "         [ 82, 107, 149],\n",
       "         [ 76, 103, 140]],\n",
       " \n",
       "        [[160, 186, 237],\n",
       "         [157, 182, 236],\n",
       "         [149, 177, 231],\n",
       "         ...,\n",
       "         [ 85, 117, 162],\n",
       "         [ 86, 115, 153],\n",
       "         [ 79, 106, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 138, 198],\n",
       "         [ 80, 117, 177],\n",
       "         [ 65, 103, 162],\n",
       "         ...,\n",
       "         [105, 140, 190],\n",
       "         [106, 139, 184],\n",
       "         [107, 139, 182]],\n",
       " \n",
       "        [[100, 137, 197],\n",
       "         [ 89, 127, 187],\n",
       "         [ 82, 119, 179],\n",
       "         ...,\n",
       "         [107, 143, 192],\n",
       "         [110, 144, 188],\n",
       "         [108, 140, 184]],\n",
       " \n",
       "        [[ 98, 135, 195],\n",
       "         [ 98, 135, 195],\n",
       "         [ 92, 129, 189],\n",
       "         ...,\n",
       "         [109, 144, 193],\n",
       "         [107, 143, 187],\n",
       "         [105, 137, 181]]], dtype=uint8),\n",
       " array([[[155, 164, 176],\n",
       "         [158, 168, 178],\n",
       "         [131, 141, 148],\n",
       "         ...,\n",
       "         [203, 209, 208],\n",
       "         [185, 192, 191],\n",
       "         [210, 215, 213]],\n",
       " \n",
       "        [[155, 165, 176],\n",
       "         [125, 130, 138],\n",
       "         [135, 143, 147],\n",
       "         ...,\n",
       "         [189, 193, 192],\n",
       "         [165, 171, 172],\n",
       "         [174, 183, 181]],\n",
       " \n",
       "        [[127, 135, 144],\n",
       "         [111, 118, 125],\n",
       "         [109, 113, 113],\n",
       "         ...,\n",
       "         [120, 132, 131],\n",
       "         [171, 177, 175],\n",
       "         [171, 178, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 129, 147],\n",
       "         [113, 128, 148],\n",
       "         [105, 124, 143],\n",
       "         ...,\n",
       "         [123, 142, 154],\n",
       "         [156, 165, 167],\n",
       "         [ 99, 117, 132]],\n",
       " \n",
       "        [[115, 133, 153],\n",
       "         [105, 124, 145],\n",
       "         [111, 130, 151],\n",
       "         ...,\n",
       "         [116, 141, 158],\n",
       "         [159, 171, 176],\n",
       "         [119, 135, 150]],\n",
       " \n",
       "        [[124, 142, 159],\n",
       "         [122, 140, 156],\n",
       "         [119, 139, 155],\n",
       "         ...,\n",
       "         [115, 136, 154],\n",
       "         [131, 148, 161],\n",
       "         [121, 140, 156]]], dtype=uint8),\n",
       " array([[[ 67,  65, 113],\n",
       "         [ 59,  60,  78],\n",
       "         [ 70,  71,  88],\n",
       "         ...,\n",
       "         [122, 148, 188],\n",
       "         [120, 149, 188],\n",
       "         [121, 150, 189]],\n",
       " \n",
       "        [[ 77,  77, 102],\n",
       "         [ 67,  69,  89],\n",
       "         [ 77,  78,  96],\n",
       "         ...,\n",
       "         [122, 147, 187],\n",
       "         [121, 147, 187],\n",
       "         [113, 139, 179]],\n",
       " \n",
       "        [[ 74,  76,  93],\n",
       "         [ 74,  76,  92],\n",
       "         [ 83,  88, 109],\n",
       "         ...,\n",
       "         [126, 152, 192],\n",
       "         [112, 138, 178],\n",
       "         [110, 138, 180]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[103, 126, 175],\n",
       "         [102, 123, 176],\n",
       "         [ 95, 117, 169],\n",
       "         ...,\n",
       "         [110, 135, 189],\n",
       "         [ 97, 120, 181],\n",
       "         [ 93, 115, 175]],\n",
       " \n",
       "        [[101, 124, 173],\n",
       "         [102, 124, 177],\n",
       "         [ 93, 115, 167],\n",
       "         ...,\n",
       "         [100, 126, 181],\n",
       "         [ 87, 111, 170],\n",
       "         [ 92, 116, 176]],\n",
       " \n",
       "        [[100, 123, 173],\n",
       "         [101, 123, 175],\n",
       "         [ 91, 113, 165],\n",
       "         ...,\n",
       "         [ 93, 118, 174],\n",
       "         [ 92, 116, 174],\n",
       "         [ 98, 122, 181]]], dtype=uint8),\n",
       " array([[[ 89, 114, 170],\n",
       "         [ 87, 110, 166],\n",
       "         [ 74,  95, 156],\n",
       "         ...,\n",
       "         [  2,   1,   6],\n",
       "         [  1,   1,   1],\n",
       "         [  0,   0,   0]],\n",
       " \n",
       "        [[ 93, 118, 174],\n",
       "         [ 95, 118, 174],\n",
       "         [ 81, 102, 163],\n",
       "         ...,\n",
       "         [  4,   2,   7],\n",
       "         [  1,   2,   1],\n",
       "         [  0,   0,   0]],\n",
       " \n",
       "        [[ 97, 123, 177],\n",
       "         [ 97, 123, 177],\n",
       "         [ 74,  98, 156],\n",
       "         ...,\n",
       "         [  4,   4,   7],\n",
       "         [  1,   1,   1],\n",
       "         [  0,   0,   0]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 20,  25,  83],\n",
       "         [ 16,  22,  77],\n",
       "         [ 18,  23,  76],\n",
       "         ...,\n",
       "         [  2,   1,   5],\n",
       "         [  1,   1,   5],\n",
       "         [  1,   2,   3]],\n",
       " \n",
       "        [[ 23,  31,  89],\n",
       "         [ 19,  26,  86],\n",
       "         [ 17,  22,  78],\n",
       "         ...,\n",
       "         [  1,   0,   2],\n",
       "         [  1,   1,   9],\n",
       "         [ 56,  64, 116]],\n",
       " \n",
       "        [[ 25,  34,  91],\n",
       "         [ 25,  35,  95],\n",
       "         [ 25,  33,  94],\n",
       "         ...,\n",
       "         [  2,   2,  10],\n",
       "         [ 57,  71, 125],\n",
       "         [ 61,  77, 148]]], dtype=uint8),\n",
       " array([[[117, 134, 150],\n",
       "         [101, 122, 139],\n",
       "         [104, 125, 142],\n",
       "         ...,\n",
       "         [157, 163, 162],\n",
       "         [169, 175, 174],\n",
       "         [165, 172, 174]],\n",
       " \n",
       "        [[131, 146, 156],\n",
       "         [ 94, 114, 129],\n",
       "         [ 95, 117, 134],\n",
       "         ...,\n",
       "         [116, 122, 121],\n",
       "         [130, 133, 133],\n",
       "         [130, 136, 137]],\n",
       " \n",
       "        [[120, 135, 144],\n",
       "         [115, 130, 139],\n",
       "         [ 83, 101, 114],\n",
       "         ...,\n",
       "         [ 98, 101, 100],\n",
       "         [110, 118, 121],\n",
       "         [131, 137, 139]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 153, 169],\n",
       "         [125, 141, 161],\n",
       "         [146, 159, 173],\n",
       "         ...,\n",
       "         [126, 149, 165],\n",
       "         [139, 157, 174],\n",
       "         [111, 131, 150]],\n",
       " \n",
       "        [[125, 141, 161],\n",
       "         [134, 148, 168],\n",
       "         [126, 140, 159],\n",
       "         ...,\n",
       "         [112, 138, 157],\n",
       "         [125, 149, 165],\n",
       "         [120, 145, 162]],\n",
       " \n",
       "        [[124, 137, 155],\n",
       "         [152, 161, 178],\n",
       "         [129, 142, 167],\n",
       "         ...,\n",
       "         [130, 148, 165],\n",
       "         [136, 154, 171],\n",
       "         [122, 146, 166]]], dtype=uint8),\n",
       " array([[[ 86, 124, 169],\n",
       "         [ 88, 129, 175],\n",
       "         [ 84, 128, 173],\n",
       "         ...,\n",
       "         [183, 213, 251],\n",
       "         [180, 209, 252],\n",
       "         [173, 204, 248]],\n",
       " \n",
       "        [[ 84, 122, 165],\n",
       "         [ 81, 122, 166],\n",
       "         [ 86, 128, 171],\n",
       "         ...,\n",
       "         [183, 213, 251],\n",
       "         [179, 208, 251],\n",
       "         [173, 203, 248]],\n",
       " \n",
       "        [[ 84, 121, 163],\n",
       "         [ 86, 126, 170],\n",
       "         [ 86, 126, 168],\n",
       "         ...,\n",
       "         [177, 207, 245],\n",
       "         [171, 201, 243],\n",
       "         [171, 200, 247]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 156, 190],\n",
       "         [126, 165, 202],\n",
       "         [122, 163, 205],\n",
       "         ...,\n",
       "         [123, 160, 220],\n",
       "         [109, 147, 206],\n",
       "         [122, 160, 220]],\n",
       " \n",
       "        [[121, 160, 192],\n",
       "         [126, 166, 202],\n",
       "         [123, 165, 206],\n",
       "         ...,\n",
       "         [120, 158, 217],\n",
       "         [117, 154, 214],\n",
       "         [126, 163, 223]],\n",
       " \n",
       "        [[123, 157, 190],\n",
       "         [128, 165, 202],\n",
       "         [125, 167, 209],\n",
       "         ...,\n",
       "         [122, 159, 219],\n",
       "         [120, 157, 217],\n",
       "         [128, 166, 225]]], dtype=uint8),\n",
       " array([[[172, 203, 248],\n",
       "         [165, 197, 245],\n",
       "         [157, 191, 237],\n",
       "         ...,\n",
       "         [ 54,  84, 109],\n",
       "         [ 48,  78, 105],\n",
       "         [ 40,  71,  95]],\n",
       " \n",
       "        [[168, 198, 245],\n",
       "         [161, 193, 239],\n",
       "         [154, 188, 234],\n",
       "         ...,\n",
       "         [ 46,  74,  97],\n",
       "         [ 48,  76, 101],\n",
       "         [ 47,  76,  99]],\n",
       " \n",
       "        [[161, 191, 239],\n",
       "         [156, 189, 234],\n",
       "         [147, 180, 226],\n",
       "         ...,\n",
       "         [ 40,  67,  88],\n",
       "         [ 46,  73,  94],\n",
       "         [ 48,  74,  98]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 80, 113, 161],\n",
       "         [ 80, 113, 162],\n",
       "         [ 81, 117, 165],\n",
       "         ...,\n",
       "         [ 83, 115, 152],\n",
       "         [ 80, 114, 144],\n",
       "         [ 78, 109, 139]],\n",
       " \n",
       "        [[ 79, 113, 160],\n",
       "         [ 81, 114, 164],\n",
       "         [ 81, 117, 163],\n",
       "         ...,\n",
       "         [ 81, 112, 150],\n",
       "         [ 76, 112, 140],\n",
       "         [ 73, 108, 135]],\n",
       " \n",
       "        [[ 78, 114, 162],\n",
       "         [ 80, 116, 164],\n",
       "         [ 80, 116, 163],\n",
       "         ...,\n",
       "         [ 80, 111, 149],\n",
       "         [ 75, 107, 138],\n",
       "         [ 69, 105, 130]]], dtype=uint8),\n",
       " array([[[198, 206, 200],\n",
       "         [162, 175, 180],\n",
       "         [161, 173, 175],\n",
       "         ...,\n",
       "         [ 79,  90,  88],\n",
       "         [ 71,  81,  82],\n",
       "         [ 77,  87,  87]],\n",
       " \n",
       "        [[173, 181, 178],\n",
       "         [151, 165, 166],\n",
       "         [154, 165, 167],\n",
       "         ...,\n",
       "         [ 67,  73,  71],\n",
       "         [ 76,  84,  82],\n",
       "         [ 71,  78,  77]],\n",
       " \n",
       "        [[137, 149, 147],\n",
       "         [146, 159, 158],\n",
       "         [113, 121, 122],\n",
       "         ...,\n",
       "         [ 62,  64,  56],\n",
       "         [ 51,  56,  55],\n",
       "         [ 55,  61,  60]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 33,  48,  74],\n",
       "         [ 37,  52,  77],\n",
       "         [ 36,  53,  75],\n",
       "         ...,\n",
       "         [ 61,  76,  92],\n",
       "         [ 54,  69,  85],\n",
       "         [ 60,  76,  90]],\n",
       " \n",
       "        [[ 30,  45,  71],\n",
       "         [ 31,  46,  70],\n",
       "         [ 46,  60,  82],\n",
       "         ...,\n",
       "         [ 81,  98, 111],\n",
       "         [ 78,  92, 106],\n",
       "         [ 75,  92, 106]],\n",
       " \n",
       "        [[ 30,  44,  67],\n",
       "         [ 39,  52,  75],\n",
       "         [ 43,  58,  80],\n",
       "         ...,\n",
       "         [ 86, 104, 119],\n",
       "         [ 86, 102, 118],\n",
       "         [ 84, 103, 118]]], dtype=uint8),\n",
       " array([[[125, 141, 152],\n",
       "         [118, 133, 143],\n",
       "         [ 81,  96, 106],\n",
       "         ...,\n",
       "         [142, 157, 161],\n",
       "         [148, 162, 169],\n",
       "         [111, 129, 143]],\n",
       " \n",
       "        [[127, 144, 158],\n",
       "         [ 54,  67,  79],\n",
       "         [ 60,  74,  80],\n",
       "         ...,\n",
       "         [151, 163, 162],\n",
       "         [131, 144, 147],\n",
       "         [107, 120, 126]],\n",
       " \n",
       "        [[100, 107, 108],\n",
       "         [ 80,  89,  91],\n",
       "         [119, 126, 123],\n",
       "         ...,\n",
       "         [115, 125, 126],\n",
       "         [109, 119, 120],\n",
       "         [ 74,  87,  88]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 150, 159],\n",
       "         [150, 165, 174],\n",
       "         [148, 162, 173],\n",
       "         ...,\n",
       "         [120, 137, 150],\n",
       "         [ 99, 114, 129],\n",
       "         [109, 119, 128]],\n",
       " \n",
       "        [[153, 167, 174],\n",
       "         [146, 158, 167],\n",
       "         [154, 166, 177],\n",
       "         ...,\n",
       "         [107, 124, 140],\n",
       "         [ 98, 109, 121],\n",
       "         [ 90,  97, 106]],\n",
       " \n",
       "        [[150, 163, 171],\n",
       "         [147, 160, 169],\n",
       "         [149, 164, 172],\n",
       "         ...,\n",
       "         [ 87, 103, 119],\n",
       "         [ 88,  98, 107],\n",
       "         [106, 109, 110]]], dtype=uint8),\n",
       " array([[[126, 157, 211],\n",
       "         [129, 159, 214],\n",
       "         [131, 159, 214],\n",
       "         ...,\n",
       "         [100, 133, 183],\n",
       "         [ 95, 128, 178],\n",
       "         [ 94, 126, 178]],\n",
       " \n",
       "        [[128, 159, 212],\n",
       "         [131, 161, 216],\n",
       "         [135, 162, 218],\n",
       "         ...,\n",
       "         [ 98, 129, 182],\n",
       "         [ 91, 125, 178],\n",
       "         [ 91, 123, 176]],\n",
       " \n",
       "        [[128, 160, 213],\n",
       "         [131, 162, 215],\n",
       "         [137, 166, 218],\n",
       "         ...,\n",
       "         [ 96, 127, 182],\n",
       "         [ 89, 123, 176],\n",
       "         [ 86, 119, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 144, 194],\n",
       "         [106, 136, 185],\n",
       "         [107, 132, 182],\n",
       "         ...,\n",
       "         [119, 148, 193],\n",
       "         [119, 147, 196],\n",
       "         [114, 141, 189]],\n",
       " \n",
       "        [[105, 138, 192],\n",
       "         [106, 141, 190],\n",
       "         [106, 140, 184],\n",
       "         ...,\n",
       "         [122, 151, 195],\n",
       "         [122, 151, 195],\n",
       "         [123, 151, 195]],\n",
       " \n",
       "        [[103, 136, 191],\n",
       "         [104, 139, 190],\n",
       "         [104, 138, 184],\n",
       "         ...,\n",
       "         [123, 152, 196],\n",
       "         [123, 152, 196],\n",
       "         [124, 152, 196]]], dtype=uint8),\n",
       " array([[[147, 172, 209],\n",
       "         [138, 162, 206],\n",
       "         [139, 165, 205],\n",
       "         ...,\n",
       "         [105, 134, 175],\n",
       "         [102, 130, 172],\n",
       "         [ 91, 121, 157]],\n",
       " \n",
       "        [[137, 167, 204],\n",
       "         [136, 164, 208],\n",
       "         [137, 165, 207],\n",
       "         ...,\n",
       "         [107, 135, 176],\n",
       "         [103, 131, 171],\n",
       "         [ 98, 127, 165]],\n",
       " \n",
       "        [[134, 164, 205],\n",
       "         [133, 162, 203],\n",
       "         [136, 166, 206],\n",
       "         ...,\n",
       "         [106, 134, 175],\n",
       "         [105, 133, 173],\n",
       "         [ 98, 127, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 161, 200],\n",
       "         [128, 160, 199],\n",
       "         [130, 163, 202],\n",
       "         ...,\n",
       "         [127, 156, 201],\n",
       "         [123, 151, 196],\n",
       "         [120, 146, 193]],\n",
       " \n",
       "        [[130, 163, 202],\n",
       "         [131, 162, 201],\n",
       "         [130, 163, 202],\n",
       "         ...,\n",
       "         [125, 154, 200],\n",
       "         [123, 151, 197],\n",
       "         [117, 146, 192]],\n",
       " \n",
       "        [[133, 164, 203],\n",
       "         [132, 163, 202],\n",
       "         [133, 164, 203],\n",
       "         ...,\n",
       "         [126, 154, 201],\n",
       "         [121, 149, 196],\n",
       "         [117, 145, 192]]], dtype=uint8),\n",
       " array([[[ 30,  28,  31],\n",
       "         [ 58,  64,  68],\n",
       "         [ 67,  77,  81],\n",
       "         ...,\n",
       "         [194, 187, 175],\n",
       "         [201, 194, 182],\n",
       "         [199, 191, 179]],\n",
       " \n",
       "        [[ 38,  39,  41],\n",
       "         [ 58,  65,  69],\n",
       "         [ 72,  79,  83],\n",
       "         ...,\n",
       "         [108,  94,  76],\n",
       "         [144, 129, 111],\n",
       "         [182, 169, 152]],\n",
       " \n",
       "        [[ 48,  52,  54],\n",
       "         [ 65,  72,  75],\n",
       "         [ 71,  78,  83],\n",
       "         ...,\n",
       "         [115,  97,  78],\n",
       "         [179, 157, 134],\n",
       "         [151, 128, 105]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89,  97, 107],\n",
       "         [102, 110, 122],\n",
       "         [113, 121, 135],\n",
       "         ...,\n",
       "         [123, 130, 149],\n",
       "         [115, 125, 143],\n",
       "         [111, 122, 142]],\n",
       " \n",
       "        [[ 96, 101, 112],\n",
       "         [103, 110, 122],\n",
       "         [111, 120, 134],\n",
       "         ...,\n",
       "         [126, 134, 154],\n",
       "         [120, 129, 149],\n",
       "         [110, 119, 139]],\n",
       " \n",
       "        [[100, 102, 112],\n",
       "         [104, 113, 124],\n",
       "         [115, 123, 137],\n",
       "         ...,\n",
       "         [129, 136, 156],\n",
       "         [124, 133, 153],\n",
       "         [117, 126, 146]]], dtype=uint8),\n",
       " array([[[159, 183, 227],\n",
       "         [149, 173, 218],\n",
       "         [156, 179, 225],\n",
       "         ...,\n",
       "         [110, 140, 195],\n",
       "         [107, 138, 193],\n",
       "         [100, 133, 188]],\n",
       " \n",
       "        [[167, 192, 236],\n",
       "         [168, 192, 236],\n",
       "         [167, 190, 235],\n",
       "         ...,\n",
       "         [116, 143, 199],\n",
       "         [111, 140, 195],\n",
       "         [107, 136, 191]],\n",
       " \n",
       "        [[168, 193, 237],\n",
       "         [168, 193, 237],\n",
       "         [172, 195, 237],\n",
       "         ...,\n",
       "         [123, 148, 204],\n",
       "         [116, 142, 198],\n",
       "         [113, 139, 194]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[187, 213, 250],\n",
       "         [182, 208, 248],\n",
       "         [181, 206, 248],\n",
       "         ...,\n",
       "         [121, 141, 197],\n",
       "         [123, 143, 198],\n",
       "         [127, 147, 202]],\n",
       " \n",
       "        [[189, 215, 252],\n",
       "         [186, 212, 252],\n",
       "         [182, 207, 249],\n",
       "         ...,\n",
       "         [132, 152, 206],\n",
       "         [133, 153, 208],\n",
       "         [133, 153, 208]],\n",
       " \n",
       "        [[188, 215, 252],\n",
       "         [188, 213, 254],\n",
       "         [185, 210, 252],\n",
       "         ...,\n",
       "         [138, 158, 210],\n",
       "         [139, 159, 213],\n",
       "         [139, 159, 214]]], dtype=uint8),\n",
       " array([[[ 71,  76,  75],\n",
       "         [ 98, 110, 111],\n",
       "         [117, 128, 131],\n",
       "         ...,\n",
       "         [179, 188, 191],\n",
       "         [189, 198, 202],\n",
       "         [174, 184, 188]],\n",
       " \n",
       "        [[ 80,  88,  88],\n",
       "         [107, 119, 122],\n",
       "         [118, 130, 134],\n",
       "         ...,\n",
       "         [171, 181, 183],\n",
       "         [166, 172, 177],\n",
       "         [171, 182, 186]],\n",
       " \n",
       "        [[ 96, 108, 108],\n",
       "         [111, 124, 126],\n",
       "         [115, 127, 131],\n",
       "         ...,\n",
       "         [174, 183, 186],\n",
       "         [173, 182, 186],\n",
       "         [164, 175, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[163, 175, 181],\n",
       "         [171, 181, 184],\n",
       "         [178, 186, 189],\n",
       "         ...,\n",
       "         [176, 188, 200],\n",
       "         [173, 186, 197],\n",
       "         [170, 184, 196]],\n",
       " \n",
       "        [[172, 182, 189],\n",
       "         [175, 184, 188],\n",
       "         [176, 182, 187],\n",
       "         ...,\n",
       "         [174, 187, 198],\n",
       "         [175, 187, 199],\n",
       "         [174, 187, 199]],\n",
       " \n",
       "        [[176, 183, 191],\n",
       "         [178, 187, 190],\n",
       "         [178, 184, 189],\n",
       "         ...,\n",
       "         [178, 190, 202],\n",
       "         [175, 187, 199],\n",
       "         [174, 187, 199]]], dtype=uint8),\n",
       " array([[[173, 185, 190],\n",
       "         [164, 178, 183],\n",
       "         [162, 177, 183],\n",
       "         ...,\n",
       "         [ 21,  18,  14],\n",
       "         [ 12,   7,   4],\n",
       "         [ 12,   8,   4]],\n",
       " \n",
       "        [[165, 177, 183],\n",
       "         [162, 174, 180],\n",
       "         [154, 169, 175],\n",
       "         ...,\n",
       "         [ 24,  21,  17],\n",
       "         [ 13,   9,   5],\n",
       "         [ 12,   7,   4]],\n",
       " \n",
       "        [[164, 175, 182],\n",
       "         [164, 176, 182],\n",
       "         [141, 159, 164],\n",
       "         ...,\n",
       "         [ 22,  21,  17],\n",
       "         [ 13,  10,   6],\n",
       "         [ 12,   7,   4]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  74,  78],\n",
       "         [ 66,  72,  77],\n",
       "         [ 75,  82,  89],\n",
       "         ...,\n",
       "         [ 58,  60,  56],\n",
       "         [ 51,  52,  43],\n",
       "         [ 51,  50,  40]],\n",
       " \n",
       "        [[ 68,  74,  79],\n",
       "         [ 67,  71,  76],\n",
       "         [ 70,  76,  82],\n",
       "         ...,\n",
       "         [ 68,  68,  64],\n",
       "         [ 52,  50,  42],\n",
       "         [ 59,  59,  46]],\n",
       " \n",
       "        [[ 75,  81,  84],\n",
       "         [ 63,  68,  72],\n",
       "         [ 63,  69,  74],\n",
       "         ...,\n",
       "         [ 62,  63,  58],\n",
       "         [ 56,  54,  45],\n",
       "         [ 58,  58,  46]]], dtype=uint8),\n",
       " array([[[163, 165, 177],\n",
       "         [186, 186, 202],\n",
       "         [187, 188, 202],\n",
       "         ...,\n",
       "         [134, 137, 180],\n",
       "         [143, 146, 190],\n",
       "         [144, 150, 194]],\n",
       " \n",
       "        [[175, 177, 189],\n",
       "         [181, 181, 197],\n",
       "         [184, 185, 199],\n",
       "         ...,\n",
       "         [129, 134, 173],\n",
       "         [131, 136, 175],\n",
       "         [136, 142, 183]],\n",
       " \n",
       "        [[173, 174, 188],\n",
       "         [181, 181, 197],\n",
       "         [185, 187, 198],\n",
       "         ...,\n",
       "         [126, 128, 168],\n",
       "         [129, 131, 171],\n",
       "         [128, 132, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[223, 225, 233],\n",
       "         [231, 234, 239],\n",
       "         [234, 237, 241],\n",
       "         ...,\n",
       "         [125, 134, 184],\n",
       "         [127, 135, 185],\n",
       "         [127, 137, 189]],\n",
       " \n",
       "        [[225, 227, 236],\n",
       "         [234, 235, 244],\n",
       "         [239, 242, 246],\n",
       "         ...,\n",
       "         [130, 138, 191],\n",
       "         [130, 138, 191],\n",
       "         [133, 141, 191]],\n",
       " \n",
       "        [[226, 229, 237],\n",
       "         [229, 231, 241],\n",
       "         [232, 235, 243],\n",
       "         ...,\n",
       "         [130, 141, 193],\n",
       "         [129, 140, 192],\n",
       "         [131, 142, 192]]], dtype=uint8),\n",
       " array([[[137, 147, 194],\n",
       "         [135, 146, 190],\n",
       "         [132, 143, 187],\n",
       "         ...,\n",
       "         [107, 118, 136],\n",
       "         [ 86,  89,  93],\n",
       "         [ 56,  51,  46]],\n",
       " \n",
       "        [[137, 147, 194],\n",
       "         [135, 146, 190],\n",
       "         [133, 144, 188],\n",
       "         ...,\n",
       "         [106, 118, 137],\n",
       "         [100, 108, 120],\n",
       "         [ 55,  54,  54]],\n",
       " \n",
       "        [[141, 147, 192],\n",
       "         [140, 146, 191],\n",
       "         [137, 143, 188],\n",
       "         ...,\n",
       "         [110, 122, 144],\n",
       "         [106, 117, 139],\n",
       "         [ 60,  59,  67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 129, 176],\n",
       "         [112, 128, 174],\n",
       "         [113, 129, 175],\n",
       "         ...,\n",
       "         [108, 122, 153],\n",
       "         [104, 120, 149],\n",
       "         [105, 121, 150]],\n",
       " \n",
       "        [[116, 132, 179],\n",
       "         [112, 128, 174],\n",
       "         [114, 130, 176],\n",
       "         ...,\n",
       "         [111, 125, 158],\n",
       "         [108, 123, 155],\n",
       "         [108, 123, 155]],\n",
       " \n",
       "        [[120, 134, 184],\n",
       "         [116, 130, 178],\n",
       "         [114, 128, 176],\n",
       "         ...,\n",
       "         [113, 130, 163],\n",
       "         [113, 128, 161],\n",
       "         [113, 128, 161]]], dtype=uint8),\n",
       " array([[[ 94, 100,  97],\n",
       "         [ 89,  97,  96],\n",
       "         [ 96, 104, 105],\n",
       "         ...,\n",
       "         [119, 136, 153],\n",
       "         [111, 131, 149],\n",
       "         [118, 137, 154]],\n",
       " \n",
       "        [[ 93, 100,  97],\n",
       "         [ 93,  99,  98],\n",
       "         [ 96, 102, 103],\n",
       "         ...,\n",
       "         [ 99, 118, 136],\n",
       "         [ 98, 116, 135],\n",
       "         [105, 126, 144]],\n",
       " \n",
       "        [[ 92,  99,  95],\n",
       "         [ 93,  99,  97],\n",
       "         [ 82,  90,  89],\n",
       "         ...,\n",
       "         [ 88, 106, 125],\n",
       "         [ 96, 115, 133],\n",
       "         [ 88, 108, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  54,  30],\n",
       "         [155, 149, 125],\n",
       "         [ 87,  95,  96],\n",
       "         ...,\n",
       "         [ 46,  61,  79],\n",
       "         [ 55,  69,  87],\n",
       "         [ 59,  77,  94]],\n",
       " \n",
       "        [[ 59,  46,  27],\n",
       "         [117, 117, 100],\n",
       "         [ 99, 107, 108],\n",
       "         ...,\n",
       "         [ 53,  69,  86],\n",
       "         [ 61,  77,  94],\n",
       "         [ 63,  79,  96]],\n",
       " \n",
       "        [[ 77,  66,  47],\n",
       "         [101, 104,  93],\n",
       "         [ 91, 102, 100],\n",
       "         ...,\n",
       "         [ 60,  76,  93],\n",
       "         [ 62,  78,  95],\n",
       "         [ 64,  80,  97]]], dtype=uint8),\n",
       " array([[[129, 145, 160],\n",
       "         [125, 143, 156],\n",
       "         [125, 137, 147],\n",
       "         ...,\n",
       "         [191, 199, 202],\n",
       "         [182, 191, 194],\n",
       "         [185, 194, 197]],\n",
       " \n",
       "        [[103, 122, 139],\n",
       "         [106, 125, 143],\n",
       "         [110, 125, 139],\n",
       "         ...,\n",
       "         [185, 196, 198],\n",
       "         [185, 194, 198],\n",
       "         [184, 193, 196]],\n",
       " \n",
       "        [[ 96, 113, 132],\n",
       "         [ 96, 115, 131],\n",
       "         [106, 123, 135],\n",
       "         ...,\n",
       "         [189, 197, 197],\n",
       "         [191, 199, 201],\n",
       "         [183, 192, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 177, 185],\n",
       "         [109, 122, 142],\n",
       "         [ 85,  98, 120],\n",
       "         ...,\n",
       "         [186, 199, 207],\n",
       "         [184, 197, 202],\n",
       "         [185, 195, 198]],\n",
       " \n",
       "        [[182, 192, 203],\n",
       "         [168, 181, 189],\n",
       "         [109, 123, 142],\n",
       "         ...,\n",
       "         [193, 206, 214],\n",
       "         [183, 195, 200],\n",
       "         [176, 186, 189]],\n",
       " \n",
       "        [[193, 204, 212],\n",
       "         [183, 193, 202],\n",
       "         [163, 175, 186],\n",
       "         ...,\n",
       "         [184, 196, 206],\n",
       "         [183, 197, 200],\n",
       "         [176, 185, 188]]], dtype=uint8),\n",
       " array([[[ 50,  48,  64],\n",
       "         [ 72,  70, 101],\n",
       "         [ 84, 100, 133],\n",
       "         ...,\n",
       "         [142, 164, 195],\n",
       "         [138, 163, 193],\n",
       "         [137, 161, 192]],\n",
       " \n",
       "        [[ 52,  51,  77],\n",
       "         [ 68,  79, 110],\n",
       "         [112, 132, 165],\n",
       "         ...,\n",
       "         [138, 161, 193],\n",
       "         [133, 160, 192],\n",
       "         [132, 157, 191]],\n",
       " \n",
       "        [[ 49,  58,  82],\n",
       "         [ 94, 112, 143],\n",
       "         [119, 137, 166],\n",
       "         ...,\n",
       "         [137, 162, 196],\n",
       "         [132, 157, 189],\n",
       "         [130, 157, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[172, 198, 232],\n",
       "         [176, 197, 229],\n",
       "         [174, 196, 227],\n",
       "         ...,\n",
       "         [161, 188, 224],\n",
       "         [161, 188, 223],\n",
       "         [160, 187, 222]],\n",
       " \n",
       "        [[170, 198, 232],\n",
       "         [172, 194, 226],\n",
       "         [174, 195, 226],\n",
       "         ...,\n",
       "         [160, 190, 225],\n",
       "         [162, 190, 225],\n",
       "         [163, 189, 225]],\n",
       " \n",
       "        [[167, 195, 229],\n",
       "         [170, 193, 225],\n",
       "         [170, 195, 225],\n",
       "         ...,\n",
       "         [161, 191, 226],\n",
       "         [165, 193, 228],\n",
       "         [167, 193, 229]]], dtype=uint8),\n",
       " array([[[119, 147, 178],\n",
       "         [112, 140, 171],\n",
       "         [113, 140, 174],\n",
       "         ...,\n",
       "         [ 53,  62,  77],\n",
       "         [ 49,  48,  62],\n",
       "         [ 38,  35,  34]],\n",
       " \n",
       "        [[112, 140, 171],\n",
       "         [110, 138, 169],\n",
       "         [111, 139, 170],\n",
       "         ...,\n",
       "         [ 66,  76,  93],\n",
       "         [ 56,  54,  72],\n",
       "         [ 40,  40,  47]],\n",
       " \n",
       "        [[105, 131, 166],\n",
       "         [106, 133, 168],\n",
       "         [109, 138, 169],\n",
       "         ...,\n",
       "         [ 64,  75,  96],\n",
       "         [ 54,  58,  81],\n",
       "         [ 47,  43,  57]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 81, 101, 135],\n",
       "         [ 82, 102, 138],\n",
       "         [ 76,  99, 135],\n",
       "         ...,\n",
       "         [105, 120, 143],\n",
       "         [107, 121, 142],\n",
       "         [110, 124, 143]],\n",
       " \n",
       "        [[ 86, 107, 140],\n",
       "         [ 85, 105, 140],\n",
       "         [ 79, 103, 138],\n",
       "         ...,\n",
       "         [106, 121, 144],\n",
       "         [112, 126, 148],\n",
       "         [115, 130, 147]],\n",
       " \n",
       "        [[ 88, 109, 140],\n",
       "         [ 84, 108, 138],\n",
       "         [ 83, 107, 137],\n",
       "         ...,\n",
       "         [104, 116, 143],\n",
       "         [112, 126, 152],\n",
       "         [118, 129, 151]]], dtype=uint8),\n",
       " array([[[148, 156, 186],\n",
       "         [119, 126, 175],\n",
       "         [142, 149, 185],\n",
       "         ...,\n",
       "         [ 94, 107, 129],\n",
       "         [ 84,  97, 119],\n",
       "         [ 73,  87, 110]],\n",
       " \n",
       "        [[147, 155, 184],\n",
       "         [142, 152, 180],\n",
       "         [144, 153, 180],\n",
       "         ...,\n",
       "         [ 94, 107, 129],\n",
       "         [ 85,  98, 120],\n",
       "         [ 74,  88, 111]],\n",
       " \n",
       "        [[146, 157, 184],\n",
       "         [146, 157, 184],\n",
       "         [146, 155, 183],\n",
       "         ...,\n",
       "         [ 97, 108, 130],\n",
       "         [ 88, 101, 124],\n",
       "         [ 77,  90, 113]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 130, 157],\n",
       "         [123, 133, 157],\n",
       "         [128, 134, 157],\n",
       "         ...,\n",
       "         [129, 140, 167],\n",
       "         [127, 138, 165],\n",
       "         [126, 138, 162]],\n",
       " \n",
       "        [[126, 136, 160],\n",
       "         [125, 135, 159],\n",
       "         [129, 135, 158],\n",
       "         ...,\n",
       "         [129, 140, 167],\n",
       "         [128, 140, 164],\n",
       "         [127, 139, 163]],\n",
       " \n",
       "        [[127, 137, 160],\n",
       "         [127, 137, 160],\n",
       "         [130, 137, 160],\n",
       "         ...,\n",
       "         [128, 139, 167],\n",
       "         [128, 140, 164],\n",
       "         [126, 138, 162]]], dtype=uint8),\n",
       " array([[[172, 173, 186],\n",
       "         [133, 137, 157],\n",
       "         [114, 118, 140],\n",
       "         ...,\n",
       "         [127, 149, 190],\n",
       "         [126, 148, 189],\n",
       "         [128, 150, 191]],\n",
       " \n",
       "        [[151, 152, 166],\n",
       "         [122, 124, 142],\n",
       "         [110, 115, 132],\n",
       "         ...,\n",
       "         [123, 145, 186],\n",
       "         [124, 146, 187],\n",
       "         [124, 146, 187]],\n",
       " \n",
       "        [[137, 138, 151],\n",
       "         [116, 114, 128],\n",
       "         [107, 106, 121],\n",
       "         ...,\n",
       "         [122, 142, 183],\n",
       "         [124, 144, 185],\n",
       "         [122, 143, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 145, 171],\n",
       "         [131, 146, 175],\n",
       "         [122, 141, 176],\n",
       "         ...,\n",
       "         [ 70, 102, 155],\n",
       "         [ 68, 100, 152],\n",
       "         [ 65,  96, 151]],\n",
       " \n",
       "        [[136, 145, 174],\n",
       "         [124, 143, 175],\n",
       "         [120, 138, 178],\n",
       "         ...,\n",
       "         [ 75, 107, 160],\n",
       "         [ 70, 102, 155],\n",
       "         [ 67,  98, 153]],\n",
       " \n",
       "        [[132, 144, 173],\n",
       "         [122, 142, 175],\n",
       "         [118, 139, 177],\n",
       "         ...,\n",
       "         [ 74, 108, 161],\n",
       "         [ 72, 104, 157],\n",
       "         [ 71, 103, 156]]], dtype=uint8),\n",
       " array([[[132, 152, 189],\n",
       "         [132, 153, 189],\n",
       "         [134, 153, 190],\n",
       "         ...,\n",
       "         [151, 163, 191],\n",
       "         [149, 163, 187],\n",
       "         [146, 160, 186]],\n",
       " \n",
       "        [[126, 145, 182],\n",
       "         [128, 147, 184],\n",
       "         [132, 151, 189],\n",
       "         ...,\n",
       "         [141, 152, 180],\n",
       "         [143, 154, 181],\n",
       "         [141, 152, 179]],\n",
       " \n",
       "        [[118, 139, 178],\n",
       "         [124, 146, 181],\n",
       "         [124, 143, 180],\n",
       "         ...,\n",
       "         [133, 143, 170],\n",
       "         [143, 150, 175],\n",
       "         [138, 146, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 178, 213],\n",
       "         [159, 178, 213],\n",
       "         [157, 173, 209],\n",
       "         ...,\n",
       "         [146, 172, 211],\n",
       "         [146, 175, 210],\n",
       "         [149, 175, 210]],\n",
       " \n",
       "        [[156, 175, 210],\n",
       "         [162, 181, 216],\n",
       "         [165, 182, 216],\n",
       "         ...,\n",
       "         [147, 172, 212],\n",
       "         [147, 175, 211],\n",
       "         [149, 175, 211]],\n",
       " \n",
       "        [[158, 177, 213],\n",
       "         [156, 176, 212],\n",
       "         [161, 181, 212],\n",
       "         ...,\n",
       "         [146, 173, 211],\n",
       "         [148, 175, 212],\n",
       "         [147, 174, 210]]], dtype=uint8),\n",
       " array([[[152, 174, 239],\n",
       "         [165, 189, 240],\n",
       "         [168, 193, 242],\n",
       "         ...,\n",
       "         [175, 193, 242],\n",
       "         [171, 194, 245],\n",
       "         [169, 193, 245]],\n",
       " \n",
       "        [[124, 158, 241],\n",
       "         [136, 173, 242],\n",
       "         [151, 192, 249],\n",
       "         ...,\n",
       "         [159, 193, 253],\n",
       "         [152, 191, 248],\n",
       "         [149, 188, 250]],\n",
       " \n",
       "        [[124, 160, 238],\n",
       "         [135, 170, 246],\n",
       "         [149, 185, 252],\n",
       "         ...,\n",
       "         [154, 187, 252],\n",
       "         [150, 187, 249],\n",
       "         [148, 189, 252]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 119, 196],\n",
       "         [101, 120, 193],\n",
       "         [ 96, 117, 192],\n",
       "         ...,\n",
       "         [175, 195, 252],\n",
       "         [178, 198, 255],\n",
       "         [170, 190, 248]],\n",
       " \n",
       "        [[119, 140, 214],\n",
       "         [ 97, 120, 197],\n",
       "         [ 94, 114, 194],\n",
       "         ...,\n",
       "         [166, 188, 250],\n",
       "         [181, 200, 254],\n",
       "         [170, 188, 248]],\n",
       " \n",
       "        [[ 93, 111, 186],\n",
       "         [104, 125, 202],\n",
       "         [ 99, 119, 196],\n",
       "         ...,\n",
       "         [171, 192, 252],\n",
       "         [178, 195, 252],\n",
       "         [171, 190, 250]]], dtype=uint8),\n",
       " array([[[ 87, 105, 142],\n",
       "         [105, 126, 164],\n",
       "         [109, 130, 168],\n",
       "         ...,\n",
       "         [124, 157, 207],\n",
       "         [125, 158, 208],\n",
       "         [125, 158, 207]],\n",
       " \n",
       "        [[ 86, 106, 142],\n",
       "         [105, 126, 162],\n",
       "         [110, 131, 169],\n",
       "         ...,\n",
       "         [123, 156, 206],\n",
       "         [126, 159, 209],\n",
       "         [118, 151, 202]],\n",
       " \n",
       "        [[ 89, 112, 143],\n",
       "         [110, 132, 168],\n",
       "         [115, 134, 176],\n",
       "         ...,\n",
       "         [124, 157, 207],\n",
       "         [123, 155, 208],\n",
       "         [122, 154, 208]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 123, 172],\n",
       "         [ 89, 114, 165],\n",
       "         [ 91, 112, 164],\n",
       "         ...,\n",
       "         [101, 121, 178],\n",
       "         [ 98, 119, 175],\n",
       "         [ 96, 120, 174]],\n",
       " \n",
       "        [[ 99, 125, 171],\n",
       "         [ 98, 123, 173],\n",
       "         [104, 127, 177],\n",
       "         ...,\n",
       "         [100, 124, 178],\n",
       "         [100, 123, 179],\n",
       "         [102, 127, 183]],\n",
       " \n",
       "        [[108, 132, 178],\n",
       "         [104, 131, 177],\n",
       "         [103, 129, 177],\n",
       "         ...,\n",
       "         [104, 129, 185],\n",
       "         [101, 126, 182],\n",
       "         [108, 133, 189]]], dtype=uint8),\n",
       " array([[[139, 172, 218],\n",
       "         [141, 171, 216],\n",
       "         [144, 170, 217],\n",
       "         ...,\n",
       "         [154, 168, 190],\n",
       "         [129, 139, 154],\n",
       "         [120, 123, 133]],\n",
       " \n",
       "        [[134, 166, 215],\n",
       "         [137, 167, 215],\n",
       "         [139, 172, 221],\n",
       "         ...,\n",
       "         [156, 170, 193],\n",
       "         [129, 138, 156],\n",
       "         [106, 108, 122]],\n",
       " \n",
       "        [[132, 165, 215],\n",
       "         [138, 169, 220],\n",
       "         [139, 171, 221],\n",
       "         ...,\n",
       "         [163, 177, 200],\n",
       "         [124, 135, 156],\n",
       "         [106, 109, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[204, 216, 242],\n",
       "         [218, 226, 244],\n",
       "         [222, 231, 249],\n",
       "         ...,\n",
       "         [192, 206, 227],\n",
       "         [199, 212, 234],\n",
       "         [199, 213, 232]],\n",
       " \n",
       "        [[213, 225, 250],\n",
       "         [230, 237, 253],\n",
       "         [227, 235, 249],\n",
       "         ...,\n",
       "         [198, 212, 231],\n",
       "         [207, 219, 237],\n",
       "         [205, 216, 235]],\n",
       " \n",
       "        [[206, 220, 245],\n",
       "         [229, 237, 250],\n",
       "         [234, 241, 254],\n",
       "         ...,\n",
       "         [208, 221, 239],\n",
       "         [213, 223, 240],\n",
       "         [215, 225, 242]]], dtype=uint8),\n",
       " array([[[ 58,  65,  60],\n",
       "         [ 64,  73,  70],\n",
       "         [ 73,  84,  81],\n",
       "         ...,\n",
       "         [ 85, 122, 135],\n",
       "         [ 75, 115, 127],\n",
       "         [ 83, 123, 135]],\n",
       " \n",
       "        [[ 62,  69,  65],\n",
       "         [ 67,  76,  73],\n",
       "         [ 70,  79,  76],\n",
       "         ...,\n",
       "         [ 91, 130, 142],\n",
       "         [ 89, 129, 141],\n",
       "         [ 90, 132, 143]],\n",
       " \n",
       "        [[ 62,  71,  68],\n",
       "         [ 63,  74,  71],\n",
       "         [ 68,  79,  76],\n",
       "         ...,\n",
       "         [105, 143, 155],\n",
       "         [100, 139, 153],\n",
       "         [ 97, 138, 150]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[115, 126, 124],\n",
       "         [115, 124, 121],\n",
       "         [116, 122, 121],\n",
       "         ...,\n",
       "         [ 70, 109, 118],\n",
       "         [ 70, 100, 108],\n",
       "         [ 76, 100, 107]],\n",
       " \n",
       "        [[101, 116, 118],\n",
       "         [109, 122, 122],\n",
       "         [110, 122, 123],\n",
       "         ...,\n",
       "         [ 74, 105, 114],\n",
       "         [ 72,  98, 105],\n",
       "         [ 75,  96, 104]],\n",
       " \n",
       "        [[ 98, 119, 123],\n",
       "         [104, 126, 131],\n",
       "         [100, 123, 127],\n",
       "         ...,\n",
       "         [ 76, 103, 112],\n",
       "         [ 73,  96, 104],\n",
       "         [ 78,  99, 107]]], dtype=uint8),\n",
       " array([[[ 41,  42,  39],\n",
       "         [ 26,  29,  28],\n",
       "         [ 30,  40,  39],\n",
       "         ...,\n",
       "         [131, 151, 154],\n",
       "         [126, 144, 147],\n",
       "         [135, 152, 156]],\n",
       " \n",
       "        [[ 36,  37,  35],\n",
       "         [ 30,  35,  32],\n",
       "         [ 46,  58,  59],\n",
       "         ...,\n",
       "         [124, 142, 143],\n",
       "         [126, 141, 144],\n",
       "         [144, 158, 165]],\n",
       " \n",
       "        [[ 36,  39,  37],\n",
       "         [ 42,  48,  46],\n",
       "         [ 54,  68,  67],\n",
       "         ...,\n",
       "         [112, 130, 131],\n",
       "         [128, 142, 146],\n",
       "         [141, 154, 161]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78, 104, 116],\n",
       "         [ 74, 100, 111],\n",
       "         [ 67,  91, 103],\n",
       "         ...,\n",
       "         [ 91, 111, 128],\n",
       "         [ 91, 115, 131],\n",
       "         [ 98, 127, 142]],\n",
       " \n",
       "        [[ 81, 109, 120],\n",
       "         [ 80, 108, 119],\n",
       "         [ 74, 100, 112],\n",
       "         ...,\n",
       "         [ 86, 110, 126],\n",
       "         [ 92, 117, 133],\n",
       "         [ 92, 123, 138]],\n",
       " \n",
       "        [[ 86, 114, 125],\n",
       "         [ 83, 111, 122],\n",
       "         [ 83, 108, 120],\n",
       "         ...,\n",
       "         [ 91, 117, 133],\n",
       "         [ 91, 120, 135],\n",
       "         [ 91, 122, 137]]], dtype=uint8),\n",
       " array([[[ 91, 133, 146],\n",
       "         [ 88, 130, 142],\n",
       "         [ 93, 134, 145],\n",
       "         ...,\n",
       "         [ 28,  31,  22],\n",
       "         [ 26,  27,  17],\n",
       "         [ 23,  25,  15]],\n",
       " \n",
       "        [[ 96, 138, 150],\n",
       "         [ 96, 139, 147],\n",
       "         [ 99, 142, 149],\n",
       "         ...,\n",
       "         [ 32,  35,  26],\n",
       "         [ 26,  27,  17],\n",
       "         [ 31,  31,  19]],\n",
       " \n",
       "        [[104, 145, 153],\n",
       "         [112, 154, 162],\n",
       "         [ 98, 138, 146],\n",
       "         ...,\n",
       "         [ 34,  36,  27],\n",
       "         [ 26,  27,  17],\n",
       "         [ 25,  25,  15]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 64,  98, 110],\n",
       "         [ 55,  82,  89],\n",
       "         [ 47,  71,  73],\n",
       "         ...,\n",
       "         [ 57,  71,  68],\n",
       "         [ 54,  68,  64],\n",
       "         [ 50,  60,  54]],\n",
       " \n",
       "        [[ 60,  95, 107],\n",
       "         [ 61,  90,  99],\n",
       "         [ 53,  77,  81],\n",
       "         ...,\n",
       "         [ 55,  69,  68],\n",
       "         [ 54,  67,  64],\n",
       "         [ 55,  65,  61]],\n",
       " \n",
       "        [[ 67, 102, 116],\n",
       "         [ 60,  92, 103],\n",
       "         [ 57,  82,  89],\n",
       "         ...,\n",
       "         [ 58,  73,  74],\n",
       "         [ 59,  73,  70],\n",
       "         [ 54,  66,  63]]], dtype=uint8),\n",
       " array([[[150, 169, 176],\n",
       "         [153, 172, 179],\n",
       "         [148, 168, 173],\n",
       "         ...,\n",
       "         [ 34,  47,  43],\n",
       "         [ 33,  44,  41],\n",
       "         [ 34,  40,  38]],\n",
       " \n",
       "        [[147, 166, 173],\n",
       "         [139, 158, 166],\n",
       "         [143, 163, 168],\n",
       "         ...,\n",
       "         [ 21,  34,  30],\n",
       "         [ 21,  32,  29],\n",
       "         [ 27,  33,  30]],\n",
       " \n",
       "        [[140, 159, 166],\n",
       "         [135, 154, 161],\n",
       "         [144, 164, 169],\n",
       "         ...,\n",
       "         [ 46,  60,  56],\n",
       "         [ 35,  46,  43],\n",
       "         [ 25,  34,  31]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 175, 189],\n",
       "         [144, 171, 185],\n",
       "         [139, 165, 179],\n",
       "         ...,\n",
       "         [102, 128, 134],\n",
       "         [114, 142, 149],\n",
       "         [113, 144, 153]],\n",
       " \n",
       "        [[150, 177, 191],\n",
       "         [147, 174, 188],\n",
       "         [149, 174, 191],\n",
       "         ...,\n",
       "         [108, 136, 143],\n",
       "         [106, 136, 146],\n",
       "         [114, 143, 154]],\n",
       " \n",
       "        [[154, 181, 195],\n",
       "         [152, 179, 193],\n",
       "         [151, 176, 189],\n",
       "         ...,\n",
       "         [118, 145, 159],\n",
       "         [123, 150, 164],\n",
       "         [124, 152, 164]]], dtype=uint8),\n",
       " array([[[ 30,  32,  43],\n",
       "         [ 48,  51,  68],\n",
       "         [ 59,  65,  87],\n",
       "         ...,\n",
       "         [100, 109, 136],\n",
       "         [114, 117, 144],\n",
       "         [127, 128, 146]],\n",
       " \n",
       "        [[ 37,  40,  52],\n",
       "         [ 59,  62,  82],\n",
       "         [ 79,  82, 109],\n",
       "         ...,\n",
       "         [112, 120, 147],\n",
       "         [100, 103, 132],\n",
       "         [109, 110, 133]],\n",
       " \n",
       "        [[ 45,  48,  64],\n",
       "         [ 65,  70,  96],\n",
       "         [ 82,  90, 117],\n",
       "         ...,\n",
       "         [ 99, 108, 136],\n",
       "         [101, 105, 133],\n",
       "         [ 85,  88, 120]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  76,  91],\n",
       "         [ 70,  71,  81],\n",
       "         [ 75,  76,  89],\n",
       "         ...,\n",
       "         [ 71,  79, 108],\n",
       "         [ 85,  94, 128],\n",
       "         [ 77,  92, 125]],\n",
       " \n",
       "        [[ 87,  87, 102],\n",
       "         [ 82,  84,  94],\n",
       "         [ 87,  93, 108],\n",
       "         ...,\n",
       "         [ 73,  84, 116],\n",
       "         [ 77,  87, 121],\n",
       "         [ 80,  91, 126]],\n",
       " \n",
       "        [[ 91,  91, 105],\n",
       "         [ 89,  93, 104],\n",
       "         [ 87,  92, 107],\n",
       "         ...,\n",
       "         [ 83,  94, 127],\n",
       "         [ 93, 102, 136],\n",
       "         [ 76,  85, 122]]], dtype=uint8),\n",
       " array([[[147, 158, 186],\n",
       "         [144, 156, 183],\n",
       "         [144, 155, 182],\n",
       "         ...,\n",
       "         [117, 124, 144],\n",
       "         [108, 119, 141],\n",
       "         [ 96, 107, 129]],\n",
       " \n",
       "        [[141, 153, 181],\n",
       "         [140, 152, 181],\n",
       "         [139, 151, 179],\n",
       "         ...,\n",
       "         [120, 127, 146],\n",
       "         [110, 119, 139],\n",
       "         [101, 110, 130]],\n",
       " \n",
       "        [[139, 151, 181],\n",
       "         [137, 151, 179],\n",
       "         [136, 147, 176],\n",
       "         ...,\n",
       "         [120, 126, 145],\n",
       "         [111, 119, 138],\n",
       "         [ 97, 107, 125]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 143, 168],\n",
       "         [133, 140, 168],\n",
       "         [123, 130, 157],\n",
       "         ...,\n",
       "         [128, 140, 164],\n",
       "         [126, 138, 162],\n",
       "         [124, 136, 160]],\n",
       " \n",
       "        [[139, 144, 167],\n",
       "         [132, 139, 166],\n",
       "         [126, 133, 160],\n",
       "         ...,\n",
       "         [129, 140, 165],\n",
       "         [128, 139, 166],\n",
       "         [126, 137, 164]],\n",
       " \n",
       "        [[135, 142, 167],\n",
       "         [128, 138, 164],\n",
       "         [126, 136, 161],\n",
       "         ...,\n",
       "         [129, 140, 167],\n",
       "         [129, 140, 167],\n",
       "         [128, 139, 166]]], dtype=uint8),\n",
       " array([[[162, 161, 169],\n",
       "         [158, 158, 164],\n",
       "         [157, 153, 159],\n",
       "         ...,\n",
       "         [ 97, 101, 128],\n",
       "         [ 89,  97, 122],\n",
       "         [ 62,  68,  84]],\n",
       " \n",
       "        [[170, 171, 181],\n",
       "         [166, 164, 173],\n",
       "         [155, 152, 160],\n",
       "         ...,\n",
       "         [ 95,  99, 129],\n",
       "         [ 86,  92, 119],\n",
       "         [ 70,  78, 101]],\n",
       " \n",
       "        [[127, 128, 145],\n",
       "         [139, 143, 160],\n",
       "         [136, 139, 152],\n",
       "         ...,\n",
       "         [101, 105, 134],\n",
       "         [ 96, 105, 132],\n",
       "         [ 85,  95, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 123, 150],\n",
       "         [118, 122, 150],\n",
       "         [119, 121, 139],\n",
       "         ...,\n",
       "         [102, 103, 113],\n",
       "         [112, 115, 130],\n",
       "         [122, 129, 146]],\n",
       " \n",
       "        [[113, 120, 146],\n",
       "         [123, 128, 156],\n",
       "         [115, 117, 138],\n",
       "         ...,\n",
       "         [114, 114, 126],\n",
       "         [118, 121, 136],\n",
       "         [127, 131, 146]],\n",
       " \n",
       "        [[128, 143, 175],\n",
       "         [120, 130, 157],\n",
       "         [118, 119, 140],\n",
       "         ...,\n",
       "         [116, 117, 128],\n",
       "         [122, 125, 139],\n",
       "         [123, 126, 140]]], dtype=uint8),\n",
       " array([[[ 75,  73,  68],\n",
       "         [ 58,  56,  51],\n",
       "         [ 72,  71,  65],\n",
       "         ...,\n",
       "         [119, 138, 145],\n",
       "         [134, 153, 160],\n",
       "         [124, 144, 150]],\n",
       " \n",
       "        [[ 62,  58,  53],\n",
       "         [ 75,  71,  66],\n",
       "         [ 78,  77,  71],\n",
       "         ...,\n",
       "         [101, 120, 127],\n",
       "         [103, 122, 129],\n",
       "         [121, 140, 147]],\n",
       " \n",
       "        [[ 52,  43,  36],\n",
       "         [ 59,  51,  44],\n",
       "         [ 63,  56,  48],\n",
       "         ...,\n",
       "         [104, 123, 130],\n",
       "         [111, 130, 137],\n",
       "         [103, 125, 130]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88,  67,  62],\n",
       "         [ 83,  69,  62],\n",
       "         [ 91,  79,  76],\n",
       "         ...,\n",
       "         [ 79,  88,  92],\n",
       "         [ 83,  92, 102],\n",
       "         [ 83,  97, 110]],\n",
       " \n",
       "        [[ 88,  69,  61],\n",
       "         [ 88,  72,  69],\n",
       "         [ 91,  79,  77],\n",
       "         ...,\n",
       "         [ 80,  89,  93],\n",
       "         [ 88,  98, 108],\n",
       "         [ 84,  98, 111]],\n",
       " \n",
       "        [[ 87,  67,  59],\n",
       "         [ 90,  76,  72],\n",
       "         [ 92,  83,  80],\n",
       "         ...,\n",
       "         [ 80,  91,  96],\n",
       "         [ 83,  92, 102],\n",
       "         [ 87, 103, 116]]], dtype=uint8),\n",
       " array([[[127, 144, 153],\n",
       "         [122, 139, 147],\n",
       "         [128, 145, 151],\n",
       "         ...,\n",
       "         [ 61,  63,  59],\n",
       "         [ 61,  60,  56],\n",
       "         [ 62,  61,  57]],\n",
       " \n",
       "        [[121, 138, 147],\n",
       "         [127, 145, 152],\n",
       "         [147, 163, 169],\n",
       "         ...,\n",
       "         [ 61,  63,  59],\n",
       "         [ 59,  58,  54],\n",
       "         [ 60,  59,  55]],\n",
       " \n",
       "        [[132, 150, 158],\n",
       "         [143, 162, 168],\n",
       "         [149, 164, 169],\n",
       "         ...,\n",
       "         [ 62,  66,  61],\n",
       "         [ 58,  57,  53],\n",
       "         [ 57,  57,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 137, 159],\n",
       "         [114, 136, 154],\n",
       "         [109, 129, 145],\n",
       "         ...,\n",
       "         [106, 118, 122],\n",
       "         [106, 119, 121],\n",
       "         [109, 122, 124]],\n",
       " \n",
       "        [[119, 140, 161],\n",
       "         [116, 138, 156],\n",
       "         [113, 132, 149],\n",
       "         ...,\n",
       "         [108, 120, 124],\n",
       "         [ 99, 112, 114],\n",
       "         [105, 118, 120]],\n",
       " \n",
       "        [[117, 139, 157],\n",
       "         [121, 142, 160],\n",
       "         [114, 132, 149],\n",
       "         ...,\n",
       "         [105, 117, 121],\n",
       "         [103, 115, 118],\n",
       "         [ 88, 101, 103]]], dtype=uint8),\n",
       " array([[[ 98, 110, 145],\n",
       "         [101, 113, 149],\n",
       "         [ 98, 109, 146],\n",
       "         ...,\n",
       "         [157, 161, 213],\n",
       "         [134, 139, 192],\n",
       "         [140, 144, 198]],\n",
       " \n",
       "        [[ 95, 108, 142],\n",
       "         [ 92, 104, 140],\n",
       "         [102, 113, 151],\n",
       "         ...,\n",
       "         [133, 140, 199],\n",
       "         [141, 148, 206],\n",
       "         [127, 134, 192]],\n",
       " \n",
       "        [[ 97, 110, 148],\n",
       "         [104, 118, 158],\n",
       "         [ 99, 115, 155],\n",
       "         ...,\n",
       "         [144, 153, 218],\n",
       "         [144, 154, 218],\n",
       "         [135, 145, 209]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[148, 159, 226],\n",
       "         [144, 154, 221],\n",
       "         [147, 156, 223],\n",
       "         ...,\n",
       "         [162, 167, 222],\n",
       "         [160, 167, 222],\n",
       "         [157, 168, 223]],\n",
       " \n",
       "        [[151, 165, 227],\n",
       "         [153, 166, 228],\n",
       "         [152, 163, 225],\n",
       "         ...,\n",
       "         [162, 169, 224],\n",
       "         [160, 169, 226],\n",
       "         [158, 169, 226]],\n",
       " \n",
       "        [[149, 167, 224],\n",
       "         [152, 168, 225],\n",
       "         [152, 166, 225],\n",
       "         ...,\n",
       "         [160, 169, 224],\n",
       "         [161, 169, 227],\n",
       "         [157, 167, 227]]], dtype=uint8),\n",
       " array([[[ 85,  85,  85],\n",
       "         [179, 194, 207],\n",
       "         [180, 201, 216],\n",
       "         ...,\n",
       "         [152, 172, 190],\n",
       "         [147, 167, 185],\n",
       "         [140, 162, 180]],\n",
       " \n",
       "        [[ 79,  77,  77],\n",
       "         [179, 193, 207],\n",
       "         [179, 200, 215],\n",
       "         ...,\n",
       "         [150, 170, 188],\n",
       "         [148, 168, 185],\n",
       "         [146, 166, 184]],\n",
       " \n",
       "        [[ 82,  77,  80],\n",
       "         [177, 194, 206],\n",
       "         [182, 206, 218],\n",
       "         ...,\n",
       "         [150, 170, 187],\n",
       "         [146, 166, 184],\n",
       "         [147, 165, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[201, 191, 172],\n",
       "         [198, 213, 227],\n",
       "         [206, 220, 231],\n",
       "         ...,\n",
       "         [161, 183, 196],\n",
       "         [164, 185, 200],\n",
       "         [167, 189, 206]],\n",
       " \n",
       "        [[207, 193, 169],\n",
       "         [203, 216, 229],\n",
       "         [209, 223, 235],\n",
       "         ...,\n",
       "         [163, 185, 198],\n",
       "         [173, 192, 206],\n",
       "         [172, 190, 208]],\n",
       " \n",
       "        [[194, 180, 155],\n",
       "         [200, 212, 224],\n",
       "         [208, 222, 234],\n",
       "         ...,\n",
       "         [172, 190, 205],\n",
       "         [173, 191, 208],\n",
       "         [174, 194, 212]]], dtype=uint8),\n",
       " array([[[107, 125, 142],\n",
       "         [108, 125, 144],\n",
       "         [107, 123, 142],\n",
       "         ...,\n",
       "         [ 84,  81,  80],\n",
       "         [ 85,  87,  83],\n",
       "         [ 97,  95,  91]],\n",
       " \n",
       "        [[105, 123, 140],\n",
       "         [101, 122, 140],\n",
       "         [ 97, 115, 134],\n",
       "         ...,\n",
       "         [ 79,  79,  75],\n",
       "         [ 78,  79,  73],\n",
       "         [ 93,  91,  87]],\n",
       " \n",
       "        [[ 98, 117, 139],\n",
       "         [ 92, 113, 133],\n",
       "         [ 95, 113, 134],\n",
       "         ...,\n",
       "         [ 72,  69,  64],\n",
       "         [ 80,  76,  72],\n",
       "         [ 76,  74,  65]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  67,  83],\n",
       "         [ 46,  58,  74],\n",
       "         [ 44,  53,  66],\n",
       "         ...,\n",
       "         [ 94, 100, 106],\n",
       "         [134, 135, 120],\n",
       "         [169, 160, 130]],\n",
       " \n",
       "        [[ 54,  69,  85],\n",
       "         [ 51,  60,  77],\n",
       "         [ 46,  56,  70],\n",
       "         ...,\n",
       "         [100, 106, 112],\n",
       "         [131, 132, 116],\n",
       "         [165, 158, 127]],\n",
       " \n",
       "        [[ 59,  72,  90],\n",
       "         [ 54,  61,  80],\n",
       "         [ 51,  60,  77],\n",
       "         ...,\n",
       "         [102, 110, 110],\n",
       "         [132, 133, 117],\n",
       "         [164, 156, 126]]], dtype=uint8),\n",
       " array([[[176, 180, 180],\n",
       "         [177, 181, 182],\n",
       "         [180, 182, 183],\n",
       "         ...,\n",
       "         [134, 148, 164],\n",
       "         [130, 143, 168],\n",
       "         [162, 172, 181]],\n",
       " \n",
       "        [[181, 178, 178],\n",
       "         [178, 175, 174],\n",
       "         [176, 174, 173],\n",
       "         ...,\n",
       "         [134, 143, 161],\n",
       "         [139, 151, 168],\n",
       "         [161, 172, 184]],\n",
       " \n",
       "        [[187, 183, 184],\n",
       "         [172, 172, 172],\n",
       "         [166, 167, 167],\n",
       "         ...,\n",
       "         [129, 146, 165],\n",
       "         [163, 171, 185],\n",
       "         [168, 179, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[224, 229, 228],\n",
       "         [212, 218, 216],\n",
       "         [200, 206, 207],\n",
       "         ...,\n",
       "         [190, 206, 216],\n",
       "         [192, 204, 217],\n",
       "         [191, 204, 217]],\n",
       " \n",
       "        [[227, 231, 230],\n",
       "         [223, 229, 228],\n",
       "         [204, 210, 213],\n",
       "         ...,\n",
       "         [192, 206, 216],\n",
       "         [189, 204, 219],\n",
       "         [198, 209, 222]],\n",
       " \n",
       "        [[225, 228, 229],\n",
       "         [225, 230, 231],\n",
       "         [217, 223, 222],\n",
       "         ...,\n",
       "         [199, 210, 220],\n",
       "         [195, 208, 221],\n",
       "         [198, 210, 222]]], dtype=uint8),\n",
       " array([[[150, 162, 178],\n",
       "         [144, 160, 177],\n",
       "         [146, 164, 173],\n",
       "         ...,\n",
       "         [143, 146, 146],\n",
       "         [155, 157, 148],\n",
       "         [163, 162, 145]],\n",
       " \n",
       "        [[136, 156, 174],\n",
       "         [133, 153, 172],\n",
       "         [141, 156, 172],\n",
       "         ...,\n",
       "         [140, 149, 147],\n",
       "         [145, 150, 149],\n",
       "         [166, 163, 152]],\n",
       " \n",
       "        [[145, 158, 174],\n",
       "         [131, 151, 170],\n",
       "         [132, 152, 167],\n",
       "         ...,\n",
       "         [142, 148, 142],\n",
       "         [150, 152, 152],\n",
       "         [167, 164, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[109, 112, 138],\n",
       "         [ 98, 107, 128],\n",
       "         [ 93, 110, 136],\n",
       "         ...,\n",
       "         [132, 139, 136],\n",
       "         [146, 143, 134],\n",
       "         [184, 179, 151]],\n",
       " \n",
       "        [[101, 111, 138],\n",
       "         [ 96, 110, 131],\n",
       "         [106, 115, 142],\n",
       "         ...,\n",
       "         [134, 135, 134],\n",
       "         [141, 142, 135],\n",
       "         [189, 182, 151]],\n",
       " \n",
       "        [[110, 122, 140],\n",
       "         [100, 120, 137],\n",
       "         [101, 121, 137],\n",
       "         ...,\n",
       "         [130, 137, 134],\n",
       "         [153, 154, 133],\n",
       "         [188, 182, 155]]], dtype=uint8),\n",
       " array([[[107, 107, 115],\n",
       "         [135, 148, 166],\n",
       "         [135, 153, 170],\n",
       "         ...,\n",
       "         [123, 136, 159],\n",
       "         [125, 140, 158],\n",
       "         [124, 138, 156]],\n",
       " \n",
       "        [[111, 121, 130],\n",
       "         [139, 154, 170],\n",
       "         [138, 153, 170],\n",
       "         ...,\n",
       "         [123, 136, 157],\n",
       "         [113, 135, 156],\n",
       "         [117, 134, 155]],\n",
       " \n",
       "        [[114, 127, 143],\n",
       "         [130, 148, 164],\n",
       "         [136, 151, 168],\n",
       "         ...,\n",
       "         [120, 137, 159],\n",
       "         [110, 130, 149],\n",
       "         [113, 129, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 160, 179],\n",
       "         [146, 164, 181],\n",
       "         [146, 163, 180],\n",
       "         ...,\n",
       "         [121, 150, 181],\n",
       "         [124, 153, 184],\n",
       "         [123, 155, 187]],\n",
       " \n",
       "        [[143, 164, 184],\n",
       "         [144, 165, 183],\n",
       "         [149, 166, 183],\n",
       "         ...,\n",
       "         [122, 152, 185],\n",
       "         [130, 159, 189],\n",
       "         [140, 166, 197]],\n",
       " \n",
       "        [[149, 167, 188],\n",
       "         [148, 166, 184],\n",
       "         [153, 166, 183],\n",
       "         ...,\n",
       "         [121, 154, 187],\n",
       "         [128, 163, 193],\n",
       "         [145, 169, 198]]], dtype=uint8),\n",
       " array([[[129, 144, 160],\n",
       "         [128, 139, 159],\n",
       "         [116, 132, 155],\n",
       "         ...,\n",
       "         [106,  98,  85],\n",
       "         [162, 158, 140],\n",
       "         [205, 196, 182]],\n",
       " \n",
       "        [[126, 140, 159],\n",
       "         [124, 135, 159],\n",
       "         [121, 136, 154],\n",
       "         ...,\n",
       "         [ 91,  84,  78],\n",
       "         [156, 147, 129],\n",
       "         [213, 205, 188]],\n",
       " \n",
       "        [[109, 129, 152],\n",
       "         [110, 133, 153],\n",
       "         [111, 130, 151],\n",
       "         ...,\n",
       "         [ 76,  69,  60],\n",
       "         [146, 138, 120],\n",
       "         [210, 202, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 83, 111, 145],\n",
       "         [ 69,  89, 124],\n",
       "         [ 51,  64,  95],\n",
       "         ...,\n",
       "         [ 95,  95,  94],\n",
       "         [ 49,  54,  63],\n",
       "         [ 53,  50,  72]],\n",
       " \n",
       "        [[ 98, 119, 152],\n",
       "         [ 75,  97, 132],\n",
       "         [ 55,  70, 102],\n",
       "         ...,\n",
       "         [ 95,  95,  94],\n",
       "         [ 53,  57,  67],\n",
       "         [ 56,  52,  74]],\n",
       " \n",
       "        [[ 96, 116, 150],\n",
       "         [ 74,  96, 131],\n",
       "         [ 61,  75, 105],\n",
       "         ...,\n",
       "         [ 93,  97,  95],\n",
       "         [ 55,  59,  69],\n",
       "         [ 52,  52,  76]]], dtype=uint8),\n",
       " array([[[ 10,  10,  20],\n",
       "         [  8,  14,  32],\n",
       "         [ 12,  22,  47],\n",
       "         ...,\n",
       "         [105, 136, 181],\n",
       "         [107, 138, 183],\n",
       "         [107, 138, 183]],\n",
       " \n",
       "        [[ 11,  14,  23],\n",
       "         [ 12,  17,  34],\n",
       "         [ 13,  23,  50],\n",
       "         ...,\n",
       "         [105, 134, 179],\n",
       "         [106, 137, 182],\n",
       "         [109, 140, 185]],\n",
       " \n",
       "        [[  7,  11,  22],\n",
       "         [ 10,  18,  37],\n",
       "         [ 14,  26,  50],\n",
       "         ...,\n",
       "         [108, 137, 181],\n",
       "         [109, 138, 182],\n",
       "         [108, 139, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 26,  43,  76],\n",
       "         [ 33,  55,  91],\n",
       "         [ 41,  66, 108],\n",
       "         ...,\n",
       "         [ 55,  87, 130],\n",
       "         [ 53,  85, 128],\n",
       "         [ 50,  79, 123]],\n",
       " \n",
       "        [[ 30,  45,  80],\n",
       "         [ 38,  57,  97],\n",
       "         [ 43,  67, 109],\n",
       "         ...,\n",
       "         [ 56,  88, 131],\n",
       "         [ 54,  86, 129],\n",
       "         [ 52,  82, 126]],\n",
       " \n",
       "        [[ 29,  46,  81],\n",
       "         [ 39,  58,  99],\n",
       "         [ 46,  71, 112],\n",
       "         ...,\n",
       "         [ 56,  88, 131],\n",
       "         [ 54,  86, 129],\n",
       "         [ 53,  84, 127]]], dtype=uint8),\n",
       " array([[[ 35,  44,  62],\n",
       "         [ 77,  93, 114],\n",
       "         [ 87, 105, 132],\n",
       "         ...,\n",
       "         [153, 176, 207],\n",
       "         [158, 182, 212],\n",
       "         [159, 182, 212]],\n",
       " \n",
       "        [[ 42,  50,  69],\n",
       "         [ 77,  94, 115],\n",
       "         [ 92, 108, 131],\n",
       "         ...,\n",
       "         [148, 173, 203],\n",
       "         [152, 175, 207],\n",
       "         [153, 177, 209]],\n",
       " \n",
       "        [[ 42,  51,  69],\n",
       "         [ 80,  97, 117],\n",
       "         [ 89, 103, 126],\n",
       "         ...,\n",
       "         [145, 168, 199],\n",
       "         [153, 174, 211],\n",
       "         [147, 170, 206]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 114, 145],\n",
       "         [ 91, 115, 145],\n",
       "         [ 92, 117, 149],\n",
       "         ...,\n",
       "         [111, 140, 177],\n",
       "         [140, 169, 203],\n",
       "         [159, 188, 219]],\n",
       " \n",
       "        [[ 98, 118, 149],\n",
       "         [ 98, 122, 152],\n",
       "         [ 94, 119, 152],\n",
       "         ...,\n",
       "         [114, 143, 180],\n",
       "         [140, 168, 203],\n",
       "         [161, 190, 221]],\n",
       " \n",
       "        [[100, 121, 153],\n",
       "         [ 96, 121, 152],\n",
       "         [ 93, 120, 154],\n",
       "         ...,\n",
       "         [116, 147, 183],\n",
       "         [136, 166, 201],\n",
       "         [162, 191, 222]]], dtype=uint8),\n",
       " array([[[156, 179, 210],\n",
       "         [160, 183, 209],\n",
       "         [163, 186, 213],\n",
       "         ...,\n",
       "         [ 49,  64,  86],\n",
       "         [ 55,  68,  91],\n",
       "         [ 32,  41,  52]],\n",
       " \n",
       "        [[146, 168, 203],\n",
       "         [158, 179, 210],\n",
       "         [157, 178, 209],\n",
       "         ...,\n",
       "         [ 52,  67,  89],\n",
       "         [ 51,  63,  87],\n",
       "         [ 30,  39,  51]],\n",
       " \n",
       "        [[144, 166, 201],\n",
       "         [152, 173, 205],\n",
       "         [155, 176, 208],\n",
       "         ...,\n",
       "         [ 57,  73,  94],\n",
       "         [ 56,  66,  90],\n",
       "         [ 25,  35,  44]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 211, 233],\n",
       "         [176, 203, 229],\n",
       "         [174, 200, 230],\n",
       "         ...,\n",
       "         [184, 207, 229],\n",
       "         [176, 199, 221],\n",
       "         [160, 183, 205]],\n",
       " \n",
       "        [[187, 212, 233],\n",
       "         [178, 205, 231],\n",
       "         [175, 201, 231],\n",
       "         ...,\n",
       "         [186, 208, 233],\n",
       "         [181, 203, 228],\n",
       "         [165, 188, 213]],\n",
       " \n",
       "        [[187, 211, 233],\n",
       "         [181, 210, 232],\n",
       "         [177, 204, 231],\n",
       "         ...,\n",
       "         [188, 210, 235],\n",
       "         [182, 204, 229],\n",
       "         [165, 188, 213]]], dtype=uint8),\n",
       " array([[[215, 223, 222],\n",
       "         [219, 229, 227],\n",
       "         [222, 233, 230],\n",
       "         ...,\n",
       "         [144, 159, 185],\n",
       "         [143, 159, 185],\n",
       "         [140, 157, 184]],\n",
       " \n",
       "        [[219, 228, 226],\n",
       "         [227, 235, 233],\n",
       "         [235, 244, 237],\n",
       "         ...,\n",
       "         [142, 157, 183],\n",
       "         [141, 157, 184],\n",
       "         [140, 157, 184]],\n",
       " \n",
       "        [[224, 233, 232],\n",
       "         [231, 238, 234],\n",
       "         [236, 244, 239],\n",
       "         ...,\n",
       "         [139, 155, 183],\n",
       "         [138, 156, 183],\n",
       "         [139, 158, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[220, 237, 243],\n",
       "         [212, 230, 238],\n",
       "         [202, 220, 229],\n",
       "         ...,\n",
       "         [167, 192, 212],\n",
       "         [169, 193, 214],\n",
       "         [169, 195, 216]],\n",
       " \n",
       "        [[216, 234, 241],\n",
       "         [205, 224, 232],\n",
       "         [197, 218, 226],\n",
       "         ...,\n",
       "         [171, 196, 216],\n",
       "         [172, 197, 218],\n",
       "         [174, 197, 219]],\n",
       " \n",
       "        [[216, 235, 244],\n",
       "         [202, 223, 235],\n",
       "         [193, 212, 224],\n",
       "         ...,\n",
       "         [171, 197, 217],\n",
       "         [174, 199, 219],\n",
       "         [177, 200, 220]]], dtype=uint8),\n",
       " array([[[126, 141, 173],\n",
       "         [126, 142, 172],\n",
       "         [125, 141, 170],\n",
       "         ...,\n",
       "         [152, 150, 160],\n",
       "         [123, 123, 133],\n",
       "         [102,  93, 104]],\n",
       " \n",
       "        [[126, 141, 173],\n",
       "         [122, 138, 167],\n",
       "         [121, 138, 165],\n",
       "         ...,\n",
       "         [158, 154, 164],\n",
       "         [139, 135, 146],\n",
       "         [108, 101, 112]],\n",
       " \n",
       "        [[123, 138, 170],\n",
       "         [111, 126, 158],\n",
       "         [115, 131, 160],\n",
       "         ...,\n",
       "         [162, 161, 169],\n",
       "         [153, 155, 162],\n",
       "         [116, 111, 122]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 107, 144],\n",
       "         [ 89, 107, 144],\n",
       "         [ 87, 105, 142],\n",
       "         ...,\n",
       "         [181, 180, 190],\n",
       "         [183, 182, 191],\n",
       "         [178, 179, 188]],\n",
       " \n",
       "        [[ 91, 110, 147],\n",
       "         [ 89, 110, 146],\n",
       "         [ 91, 110, 148],\n",
       "         ...,\n",
       "         [180, 182, 191],\n",
       "         [182, 180, 189],\n",
       "         [176, 177, 189]],\n",
       " \n",
       "        [[ 92, 110, 151],\n",
       "         [ 93, 113, 151],\n",
       "         [ 93, 115, 150],\n",
       "         ...,\n",
       "         [177, 178, 191],\n",
       "         [179, 180, 191],\n",
       "         [173, 176, 190]]], dtype=uint8),\n",
       " array([[[103, 139, 185],\n",
       "         [ 68, 105, 158],\n",
       "         [ 70, 106, 162],\n",
       "         ...,\n",
       "         [164, 193, 237],\n",
       "         [164, 193, 237],\n",
       "         [165, 192, 236]],\n",
       " \n",
       "        [[ 85, 122, 167],\n",
       "         [ 79, 116, 168],\n",
       "         [ 65, 101, 156],\n",
       "         ...,\n",
       "         [164, 193, 237],\n",
       "         [166, 196, 240],\n",
       "         [168, 195, 239]],\n",
       " \n",
       "        [[105, 141, 187],\n",
       "         [ 83, 120, 170],\n",
       "         [ 80, 118, 170],\n",
       "         ...,\n",
       "         [163, 192, 236],\n",
       "         [163, 193, 237],\n",
       "         [166, 193, 237]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[115, 153, 211],\n",
       "         [123, 165, 218],\n",
       "         [131, 173, 222],\n",
       "         ...,\n",
       "         [154, 187, 226],\n",
       "         [151, 187, 227],\n",
       "         [151, 190, 228]],\n",
       " \n",
       "        [[111, 147, 208],\n",
       "         [120, 161, 217],\n",
       "         [127, 171, 221],\n",
       "         ...,\n",
       "         [153, 187, 225],\n",
       "         [154, 189, 229],\n",
       "         [155, 191, 231]],\n",
       " \n",
       "        [[107, 143, 204],\n",
       "         [118, 159, 216],\n",
       "         [125, 168, 219],\n",
       "         ...,\n",
       "         [152, 187, 224],\n",
       "         [153, 188, 230],\n",
       "         [153, 189, 231]]], dtype=uint8),\n",
       " array([[[ 95, 116, 139],\n",
       "         [122, 151, 184],\n",
       "         [136, 163, 196],\n",
       "         ...,\n",
       "         [112, 143, 182],\n",
       "         [117, 148, 185],\n",
       "         [123, 152, 189]],\n",
       " \n",
       "        [[112, 134, 156],\n",
       "         [126, 154, 188],\n",
       "         [132, 159, 194],\n",
       "         ...,\n",
       "         [105, 135, 176],\n",
       "         [110, 140, 180],\n",
       "         [113, 144, 182]],\n",
       " \n",
       "        [[118, 144, 167],\n",
       "         [128, 159, 191],\n",
       "         [134, 161, 197],\n",
       "         ...,\n",
       "         [100, 132, 169],\n",
       "         [105, 137, 176],\n",
       "         [103, 136, 174]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 159, 194],\n",
       "         [140, 172, 207],\n",
       "         [147, 177, 213],\n",
       "         ...,\n",
       "         [147, 177, 218],\n",
       "         [152, 183, 223],\n",
       "         [149, 179, 220]],\n",
       " \n",
       "        [[134, 161, 195],\n",
       "         [139, 172, 207],\n",
       "         [148, 177, 215],\n",
       "         ...,\n",
       "         [149, 180, 219],\n",
       "         [151, 181, 222],\n",
       "         [150, 180, 220]],\n",
       " \n",
       "        [[131, 158, 193],\n",
       "         [143, 173, 208],\n",
       "         [150, 178, 215],\n",
       "         ...,\n",
       "         [151, 181, 221],\n",
       "         [151, 181, 221],\n",
       "         [156, 182, 224]]], dtype=uint8),\n",
       " array([[[123, 145, 177],\n",
       "         [122, 146, 182],\n",
       "         [120, 146, 182],\n",
       "         ...,\n",
       "         [125, 141, 154],\n",
       "         [124, 136, 146],\n",
       "         [108, 120, 124]],\n",
       " \n",
       "        [[117, 141, 173],\n",
       "         [115, 141, 177],\n",
       "         [108, 136, 171],\n",
       "         ...,\n",
       "         [122, 138, 151],\n",
       "         [123, 135, 146],\n",
       "         [113, 125, 129]],\n",
       " \n",
       "        [[109, 133, 164],\n",
       "         [110, 136, 173],\n",
       "         [110, 136, 172],\n",
       "         ...,\n",
       "         [119, 133, 149],\n",
       "         [113, 126, 136],\n",
       "         [114, 126, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[143, 164, 195],\n",
       "         [132, 153, 184],\n",
       "         [124, 150, 180],\n",
       "         ...,\n",
       "         [150, 165, 182],\n",
       "         [138, 156, 173],\n",
       "         [133, 149, 166]],\n",
       " \n",
       "        [[138, 159, 190],\n",
       "         [130, 151, 182],\n",
       "         [125, 151, 181],\n",
       "         ...,\n",
       "         [148, 163, 180],\n",
       "         [141, 158, 175],\n",
       "         [133, 149, 166]],\n",
       " \n",
       "        [[139, 161, 192],\n",
       "         [128, 151, 182],\n",
       "         [123, 148, 178],\n",
       "         ...,\n",
       "         [150, 164, 183],\n",
       "         [138, 155, 174],\n",
       "         [132, 149, 166]]], dtype=uint8),\n",
       " array([[[114, 140, 175],\n",
       "         [131, 159, 194],\n",
       "         [134, 163, 200],\n",
       "         ...,\n",
       "         [177, 187, 217],\n",
       "         [182, 192, 222],\n",
       "         [181, 192, 221]],\n",
       " \n",
       "        [[126, 152, 187],\n",
       "         [135, 164, 199],\n",
       "         [132, 162, 197],\n",
       "         ...,\n",
       "         [173, 183, 213],\n",
       "         [175, 185, 216],\n",
       "         [175, 186, 218]],\n",
       " \n",
       "        [[129, 155, 189],\n",
       "         [139, 167, 202],\n",
       "         [141, 170, 205],\n",
       "         ...,\n",
       "         [147, 162, 192],\n",
       "         [148, 164, 194],\n",
       "         [163, 176, 208]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[139, 167, 200],\n",
       "         [140, 168, 204],\n",
       "         [133, 166, 203],\n",
       "         ...,\n",
       "         [ 92, 128, 184],\n",
       "         [ 89, 125, 181],\n",
       "         [ 88, 125, 183]],\n",
       " \n",
       "        [[140, 169, 199],\n",
       "         [142, 170, 204],\n",
       "         [139, 171, 209],\n",
       "         ...,\n",
       "         [ 89, 125, 181],\n",
       "         [ 87, 123, 179],\n",
       "         [ 86, 123, 179]],\n",
       " \n",
       "        [[142, 169, 201],\n",
       "         [143, 171, 207],\n",
       "         [143, 172, 211],\n",
       "         ...,\n",
       "         [ 88, 126, 180],\n",
       "         [ 89, 127, 181],\n",
       "         [ 89, 127, 182]]], dtype=uint8),\n",
       " array([[[142, 161, 202],\n",
       "         [137, 156, 199],\n",
       "         [128, 150, 195],\n",
       "         ...,\n",
       "         [  9,  14,  23],\n",
       "         [  8,  13,  22],\n",
       "         [  9,  15,  20]],\n",
       " \n",
       "        [[142, 161, 202],\n",
       "         [136, 155, 198],\n",
       "         [126, 150, 192],\n",
       "         ...,\n",
       "         [ 10,  15,  24],\n",
       "         [  9,  15,  23],\n",
       "         [ 14,  20,  24]],\n",
       " \n",
       "        [[138, 158, 201],\n",
       "         [128, 150, 192],\n",
       "         [121, 145, 188],\n",
       "         ...,\n",
       "         [  9,  12,  25],\n",
       "         [  8,  14,  19],\n",
       "         [  8,  14,  19]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 39,  64, 116],\n",
       "         [ 41,  64, 116],\n",
       "         [ 40,  64, 116],\n",
       "         ...,\n",
       "         [ 62,  85, 132],\n",
       "         [ 54,  77, 119],\n",
       "         [ 53,  74, 111]],\n",
       " \n",
       "        [[ 40,  64, 117],\n",
       "         [ 39,  63, 115],\n",
       "         [ 37,  61, 113],\n",
       "         ...,\n",
       "         [ 63,  85, 132],\n",
       "         [ 58,  81, 123],\n",
       "         [ 51,  74, 112]],\n",
       " \n",
       "        [[ 38,  64, 117],\n",
       "         [ 40,  64, 118],\n",
       "         [ 37,  63, 115],\n",
       "         ...,\n",
       "         [ 64,  88, 135],\n",
       "         [ 57,  81, 123],\n",
       "         [ 49,  72, 110]]], dtype=uint8),\n",
       " array([[[ 41,  61,  58],\n",
       "         [ 89, 114, 118],\n",
       "         [ 78, 106, 113],\n",
       "         ...,\n",
       "         [117, 136, 157],\n",
       "         [119, 137, 160],\n",
       "         [122, 140, 163]],\n",
       " \n",
       "        [[ 56,  77,  73],\n",
       "         [ 86, 111, 113],\n",
       "         [ 76, 103, 110],\n",
       "         ...,\n",
       "         [118, 139, 160],\n",
       "         [119, 136, 160],\n",
       "         [119, 138, 158]],\n",
       " \n",
       "        [[ 67,  87,  87],\n",
       "         [ 83, 108, 112],\n",
       "         [ 72, 100, 106],\n",
       "         ...,\n",
       "         [117, 136, 157],\n",
       "         [115, 134, 155],\n",
       "         [117, 136, 157]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87, 114, 130],\n",
       "         [ 82, 109, 126],\n",
       "         [ 78, 104, 120],\n",
       "         ...,\n",
       "         [ 78, 101, 129],\n",
       "         [ 77, 100, 128],\n",
       "         [ 77, 101, 129]],\n",
       " \n",
       "        [[ 84, 109, 129],\n",
       "         [ 78, 106, 124],\n",
       "         [ 79, 105, 122],\n",
       "         ...,\n",
       "         [ 73,  98, 124],\n",
       "         [ 77,  99, 126],\n",
       "         [ 78, 101, 127]],\n",
       " \n",
       "        [[ 80, 107, 126],\n",
       "         [ 80, 105, 124],\n",
       "         [ 82, 108, 125],\n",
       "         ...,\n",
       "         [ 72,  97, 122],\n",
       "         [ 79, 102, 128],\n",
       "         [ 80, 105, 131]]], dtype=uint8),\n",
       " array([[[ 58,  75, 111],\n",
       "         [ 57,  79, 123],\n",
       "         [ 77,  99, 148],\n",
       "         ...,\n",
       "         [166, 196, 237],\n",
       "         [166, 195, 236],\n",
       "         [167, 196, 240]],\n",
       " \n",
       "        [[ 62,  82, 117],\n",
       "         [ 61,  86, 129],\n",
       "         [ 75,  98, 147],\n",
       "         ...,\n",
       "         [165, 194, 238],\n",
       "         [165, 194, 235],\n",
       "         [165, 194, 238]],\n",
       " \n",
       "        [[ 59,  80, 115],\n",
       "         [ 58,  85, 127],\n",
       "         [ 59,  84, 133],\n",
       "         ...,\n",
       "         [164, 193, 238],\n",
       "         [164, 192, 236],\n",
       "         [163, 192, 236]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 169, 227],\n",
       "         [134, 172, 227],\n",
       "         [133, 171, 225],\n",
       "         ...,\n",
       "         [ 68, 102, 166],\n",
       "         [ 59,  87, 162],\n",
       "         [ 67,  98, 175]],\n",
       " \n",
       "        [[125, 160, 221],\n",
       "         [135, 172, 230],\n",
       "         [139, 176, 232],\n",
       "         ...,\n",
       "         [ 58,  91, 156],\n",
       "         [ 58,  86, 161],\n",
       "         [ 78, 106, 183]],\n",
       " \n",
       "        [[125, 160, 223],\n",
       "         [133, 170, 229],\n",
       "         [141, 178, 235],\n",
       "         ...,\n",
       "         [ 60,  92, 158],\n",
       "         [ 58,  84, 157],\n",
       "         [ 81, 108, 185]]], dtype=uint8),\n",
       " array([[[128, 140, 164],\n",
       "         [130, 141, 164],\n",
       "         [141, 148, 168],\n",
       "         ...,\n",
       "         [176, 173, 171],\n",
       "         [170, 166, 164],\n",
       "         [134, 131, 124]],\n",
       " \n",
       "        [[129, 142, 164],\n",
       "         [141, 153, 175],\n",
       "         [150, 157, 177],\n",
       "         ...,\n",
       "         [183, 180, 173],\n",
       "         [169, 167, 159],\n",
       "         [156, 154, 143]],\n",
       " \n",
       "        [[134, 148, 167],\n",
       "         [145, 154, 173],\n",
       "         [143, 153, 171],\n",
       "         ...,\n",
       "         [177, 175, 166],\n",
       "         [177, 175, 167],\n",
       "         [161, 160, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 165, 186],\n",
       "         [169, 170, 191],\n",
       "         [176, 177, 197],\n",
       "         ...,\n",
       "         [212, 207, 205],\n",
       "         [246, 243, 235],\n",
       "         [210, 209, 207]],\n",
       " \n",
       "        [[166, 167, 188],\n",
       "         [164, 165, 186],\n",
       "         [174, 176, 196],\n",
       "         ...,\n",
       "         [250, 246, 240],\n",
       "         [220, 217, 211],\n",
       "         [192, 195, 199]],\n",
       " \n",
       "        [[159, 159, 178],\n",
       "         [159, 158, 178],\n",
       "         [176, 178, 196],\n",
       "         ...,\n",
       "         [237, 234, 227],\n",
       "         [196, 197, 194],\n",
       "         [180, 186, 195]]], dtype=uint8),\n",
       " array([[[ 76,  83,  77],\n",
       "         [ 76,  87,  85],\n",
       "         [ 94, 106, 112],\n",
       "         ...,\n",
       "         [106, 123, 152],\n",
       "         [106, 122, 151],\n",
       "         [109, 126, 155]],\n",
       " \n",
       "        [[ 77,  83,  76],\n",
       "         [ 79,  87,  87],\n",
       "         [ 93, 107, 113],\n",
       "         ...,\n",
       "         [101, 114, 142],\n",
       "         [100, 113, 142],\n",
       "         [101, 119, 146]],\n",
       " \n",
       "        [[ 75,  81,  75],\n",
       "         [ 79,  88,  89],\n",
       "         [103, 115, 121],\n",
       "         ...,\n",
       "         [ 88, 102, 129],\n",
       "         [ 88, 103, 129],\n",
       "         [ 94, 109, 135]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[158, 171, 171],\n",
       "         [157, 170, 178],\n",
       "         [156, 169, 178],\n",
       "         ...,\n",
       "         [110, 130, 161],\n",
       "         [124, 143, 170],\n",
       "         [133, 149, 178]],\n",
       " \n",
       "        [[160, 173, 173],\n",
       "         [157, 170, 178],\n",
       "         [157, 170, 179],\n",
       "         ...,\n",
       "         [122, 140, 171],\n",
       "         [133, 149, 177],\n",
       "         [135, 151, 181]],\n",
       " \n",
       "        [[161, 174, 175],\n",
       "         [158, 171, 179],\n",
       "         [160, 174, 180],\n",
       "         ...,\n",
       "         [129, 146, 178],\n",
       "         [136, 152, 181],\n",
       "         [138, 154, 183]]], dtype=uint8),\n",
       " array([[[121, 141, 172],\n",
       "         [123, 144, 171],\n",
       "         [124, 144, 171],\n",
       "         ...,\n",
       "         [198, 202, 204],\n",
       "         [157, 163, 168],\n",
       "         [121, 125, 127]],\n",
       " \n",
       "        [[122, 142, 170],\n",
       "         [121, 142, 167],\n",
       "         [123, 141, 168],\n",
       "         ...,\n",
       "         [213, 215, 215],\n",
       "         [174, 180, 185],\n",
       "         [135, 139, 143]],\n",
       " \n",
       "        [[121, 140, 167],\n",
       "         [122, 142, 167],\n",
       "         [117, 136, 162],\n",
       "         ...,\n",
       "         [226, 227, 224],\n",
       "         [192, 197, 200],\n",
       "         [148, 155, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[230, 231, 241],\n",
       "         [238, 240, 249],\n",
       "         [209, 216, 234],\n",
       "         ...,\n",
       "         [213, 217, 222],\n",
       "         [216, 219, 228],\n",
       "         [221, 221, 231]],\n",
       " \n",
       "        [[230, 232, 243],\n",
       "         [233, 236, 242],\n",
       "         [214, 221, 238],\n",
       "         ...,\n",
       "         [213, 217, 222],\n",
       "         [211, 217, 224],\n",
       "         [218, 220, 230]],\n",
       " \n",
       "        [[230, 234, 244],\n",
       "         [239, 240, 249],\n",
       "         [217, 225, 241],\n",
       "         ...,\n",
       "         [209, 215, 222],\n",
       "         [210, 216, 224],\n",
       "         [213, 218, 228]]], dtype=uint8),\n",
       " array([[[255, 255, 255],\n",
       "         [254, 254, 254],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [123, 136, 174],\n",
       "         [123, 136, 175],\n",
       "         [123, 138, 175]],\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [121, 134, 173],\n",
       "         [124, 138, 175],\n",
       "         [124, 141, 175]],\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [112, 127, 165],\n",
       "         [120, 136, 173],\n",
       "         [124, 140, 176]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [242, 233, 245],\n",
       "         [250, 243, 253],\n",
       "         [255, 252, 254]],\n",
       " \n",
       "        [[254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [249, 240, 249],\n",
       "         [255, 252, 254],\n",
       "         [255, 252, 254]],\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [254, 254, 254],\n",
       "         ...,\n",
       "         [252, 245, 253],\n",
       "         [255, 252, 254],\n",
       "         [255, 253, 255]]], dtype=uint8),\n",
       " array([[[ 92, 113, 165],\n",
       "         [ 85, 108, 162],\n",
       "         [ 86, 108, 159],\n",
       "         ...,\n",
       "         [ 36,  46,  79],\n",
       "         [ 33,  35,  49],\n",
       "         [ 26,  28,  30]],\n",
       " \n",
       "        [[ 93, 117, 167],\n",
       "         [ 90, 112, 164],\n",
       "         [ 85, 108, 158],\n",
       "         ...,\n",
       "         [ 32,  42,  78],\n",
       "         [ 33,  40,  59],\n",
       "         [ 25,  25,  30]],\n",
       " \n",
       "        [[ 93, 113, 168],\n",
       "         [ 90, 111, 165],\n",
       "         [ 86, 107, 158],\n",
       "         ...,\n",
       "         [ 31,  42,  86],\n",
       "         [ 32,  40,  64],\n",
       "         [ 27,  28,  35]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 58,  69, 118],\n",
       "         [ 50,  62, 111],\n",
       "         [ 46,  59, 111],\n",
       "         ...,\n",
       "         [ 39,  60, 122],\n",
       "         [ 40,  61, 123],\n",
       "         [ 43,  59, 122]],\n",
       " \n",
       "        [[ 54,  65, 115],\n",
       "         [ 49,  60, 112],\n",
       "         [ 46,  57, 107],\n",
       "         ...,\n",
       "         [ 42,  64, 129],\n",
       "         [ 42,  64, 129],\n",
       "         [ 42,  60, 125]],\n",
       " \n",
       "        [[ 60,  73, 123],\n",
       "         [ 53,  66, 114],\n",
       "         [ 47,  58, 108],\n",
       "         ...,\n",
       "         [ 45,  67, 132],\n",
       "         [ 42,  65, 130],\n",
       "         [ 43,  63, 128]]], dtype=uint8),\n",
       " array([[[163, 192, 236],\n",
       "         [162, 191, 235],\n",
       "         [162, 192, 236],\n",
       "         ...,\n",
       "         [119, 155, 206],\n",
       "         [114, 151, 200],\n",
       "         [116, 154, 201]],\n",
       " \n",
       "        [[163, 192, 236],\n",
       "         [162, 191, 235],\n",
       "         [163, 192, 236],\n",
       "         ...,\n",
       "         [118, 155, 205],\n",
       "         [119, 156, 204],\n",
       "         [120, 155, 201]],\n",
       " \n",
       "        [[161, 192, 236],\n",
       "         [162, 191, 235],\n",
       "         [163, 191, 236],\n",
       "         ...,\n",
       "         [122, 159, 209],\n",
       "         [118, 156, 204],\n",
       "         [123, 158, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[155, 192, 230],\n",
       "         [150, 188, 227],\n",
       "         [138, 179, 216],\n",
       "         ...,\n",
       "         [134, 172, 226],\n",
       "         [129, 167, 220],\n",
       "         [126, 167, 219]],\n",
       " \n",
       "        [[151, 189, 227],\n",
       "         [147, 187, 225],\n",
       "         [141, 183, 221],\n",
       "         ...,\n",
       "         [126, 164, 218],\n",
       "         [126, 165, 219],\n",
       "         [124, 163, 218]],\n",
       " \n",
       "        [[149, 188, 227],\n",
       "         [141, 184, 223],\n",
       "         [137, 182, 220],\n",
       "         ...,\n",
       "         [119, 160, 215],\n",
       "         [119, 161, 215],\n",
       "         [114, 154, 207]]], dtype=uint8),\n",
       " array([[[ 93, 113, 160],\n",
       "         [101, 121, 168],\n",
       "         [108, 128, 175],\n",
       "         ...,\n",
       "         [148, 166, 207],\n",
       "         [143, 161, 202],\n",
       "         [147, 164, 205]],\n",
       " \n",
       "        [[ 95, 114, 162],\n",
       "         [104, 124, 171],\n",
       "         [110, 130, 177],\n",
       "         ...,\n",
       "         [149, 167, 208],\n",
       "         [143, 161, 202],\n",
       "         [146, 164, 205]],\n",
       " \n",
       "        [[100, 118, 165],\n",
       "         [106, 127, 173],\n",
       "         [113, 133, 180],\n",
       "         ...,\n",
       "         [150, 168, 209],\n",
       "         [141, 159, 200],\n",
       "         [145, 163, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[106, 124, 171],\n",
       "         [109, 127, 174],\n",
       "         [107, 125, 172],\n",
       "         ...,\n",
       "         [129, 144, 183],\n",
       "         [134, 149, 188],\n",
       "         [144, 159, 198]],\n",
       " \n",
       "        [[109, 126, 175],\n",
       "         [115, 131, 181],\n",
       "         [116, 133, 182],\n",
       "         ...,\n",
       "         [141, 156, 195],\n",
       "         [145, 160, 199],\n",
       "         [154, 169, 208]],\n",
       " \n",
       "        [[115, 134, 182],\n",
       "         [115, 134, 182],\n",
       "         [118, 136, 185],\n",
       "         ...,\n",
       "         [144, 157, 197],\n",
       "         [151, 164, 204],\n",
       "         [161, 175, 214]]], dtype=uint8),\n",
       " array([[[168, 185, 227],\n",
       "         [158, 176, 218],\n",
       "         [154, 172, 214],\n",
       "         ...,\n",
       "         [ 50,  59, 102],\n",
       "         [ 36,  45,  88],\n",
       "         [ 29,  38,  78]],\n",
       " \n",
       "        [[170, 187, 230],\n",
       "         [160, 177, 220],\n",
       "         [154, 171, 214],\n",
       "         ...,\n",
       "         [ 50,  59, 102],\n",
       "         [ 38,  47,  90],\n",
       "         [ 28,  38,  77]],\n",
       " \n",
       "        [[170, 187, 230],\n",
       "         [162, 179, 222],\n",
       "         [157, 174, 217],\n",
       "         ...,\n",
       "         [ 49,  58, 100],\n",
       "         [ 38,  47,  89],\n",
       "         [ 33,  42,  82]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 148, 186],\n",
       "         [112, 130, 171],\n",
       "         [104, 120, 164],\n",
       "         ...,\n",
       "         [ 72,  82, 123],\n",
       "         [ 76,  85, 126],\n",
       "         [ 76,  85, 130]],\n",
       " \n",
       "        [[130, 149, 187],\n",
       "         [115, 133, 174],\n",
       "         [105, 122, 165],\n",
       "         ...,\n",
       "         [ 77,  86, 129],\n",
       "         [ 79,  88, 131],\n",
       "         [ 77,  86, 130]],\n",
       " \n",
       "        [[133, 152, 190],\n",
       "         [118, 136, 178],\n",
       "         [104, 121, 164],\n",
       "         ...,\n",
       "         [ 86,  95, 139],\n",
       "         [ 85,  94, 138],\n",
       "         [ 80,  89, 133]]], dtype=uint8),\n",
       " array([[[113, 140, 177],\n",
       "         [114, 141, 178],\n",
       "         [117, 144, 181],\n",
       "         ...,\n",
       "         [152, 169, 199],\n",
       "         [150, 166, 198],\n",
       "         [149, 165, 196]],\n",
       " \n",
       "        [[114, 141, 178],\n",
       "         [113, 139, 179],\n",
       "         [117, 143, 183],\n",
       "         ...,\n",
       "         [146, 164, 197],\n",
       "         [144, 161, 194],\n",
       "         [145, 163, 194]],\n",
       " \n",
       "        [[113, 141, 177],\n",
       "         [111, 140, 179],\n",
       "         [117, 143, 183],\n",
       "         ...,\n",
       "         [137, 157, 190],\n",
       "         [138, 155, 188],\n",
       "         [143, 161, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[137, 163, 200],\n",
       "         [139, 165, 201],\n",
       "         [140, 167, 202],\n",
       "         ...,\n",
       "         [121, 147, 184],\n",
       "         [123, 149, 185],\n",
       "         [125, 151, 187]],\n",
       " \n",
       "        [[137, 163, 199],\n",
       "         [141, 167, 203],\n",
       "         [142, 168, 204],\n",
       "         ...,\n",
       "         [126, 152, 188],\n",
       "         [128, 154, 190],\n",
       "         [127, 153, 189]],\n",
       " \n",
       "        [[138, 164, 200],\n",
       "         [143, 169, 205],\n",
       "         [142, 168, 204],\n",
       "         ...,\n",
       "         [130, 156, 192],\n",
       "         [130, 156, 192],\n",
       "         [131, 157, 193]]], dtype=uint8),\n",
       " array([[[119, 142, 173],\n",
       "         [120, 142, 171],\n",
       "         [121, 142, 173],\n",
       "         ...,\n",
       "         [ 85, 106, 138],\n",
       "         [ 74,  96, 127],\n",
       "         [ 61,  77, 105]],\n",
       " \n",
       "        [[113, 138, 169],\n",
       "         [116, 140, 169],\n",
       "         [118, 139, 168],\n",
       "         ...,\n",
       "         [ 87, 108, 140],\n",
       "         [ 78,  99, 130],\n",
       "         [ 66,  84, 114]],\n",
       " \n",
       "        [[111, 136, 170],\n",
       "         [113, 137, 167],\n",
       "         [113, 137, 167],\n",
       "         ...,\n",
       "         [ 87, 104, 133],\n",
       "         [ 82, 102, 130],\n",
       "         [ 70,  89, 117]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 84, 108, 154],\n",
       "         [ 74,  98, 144],\n",
       "         [ 70,  92, 134],\n",
       "         ...,\n",
       "         [ 94, 111, 142],\n",
       "         [ 94, 110, 137],\n",
       "         [ 94, 109, 135]],\n",
       " \n",
       "        [[ 89, 112, 157],\n",
       "         [ 78, 101, 146],\n",
       "         [ 72,  94, 138],\n",
       "         ...,\n",
       "         [ 97, 117, 148],\n",
       "         [ 96, 114, 144],\n",
       "         [ 93, 112, 139]],\n",
       " \n",
       "        [[ 91, 116, 160],\n",
       "         [ 80, 105, 149],\n",
       "         [ 73,  97, 141],\n",
       "         ...,\n",
       "         [100, 121, 152],\n",
       "         [ 98, 118, 148],\n",
       "         [ 97, 115, 146]]], dtype=uint8),\n",
       " array([[[178, 195, 218],\n",
       "         [177, 191, 215],\n",
       "         [176, 193, 214],\n",
       "         ...,\n",
       "         [141, 156, 196],\n",
       "         [132, 147, 193],\n",
       "         [125, 140, 187]],\n",
       " \n",
       "        [[182, 198, 221],\n",
       "         [180, 199, 221],\n",
       "         [170, 187, 214],\n",
       "         ...,\n",
       "         [138, 152, 195],\n",
       "         [122, 141, 187],\n",
       "         [125, 141, 186]],\n",
       " \n",
       "        [[171, 191, 212],\n",
       "         [171, 193, 213],\n",
       "         [172, 191, 217],\n",
       "         ...,\n",
       "         [117, 130, 176],\n",
       "         [126, 141, 184],\n",
       "         [117, 136, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[172, 186, 204],\n",
       "         [169, 184, 203],\n",
       "         [165, 179, 200],\n",
       "         ...,\n",
       "         [188, 199, 226],\n",
       "         [184, 196, 226],\n",
       "         [191, 200, 228]],\n",
       " \n",
       "        [[178, 191, 209],\n",
       "         [175, 188, 206],\n",
       "         [169, 183, 202],\n",
       "         ...,\n",
       "         [178, 191, 221],\n",
       "         [183, 196, 226],\n",
       "         [193, 202, 226]],\n",
       " \n",
       "        [[177, 191, 209],\n",
       "         [185, 196, 210],\n",
       "         [173, 186, 203],\n",
       "         ...,\n",
       "         [196, 204, 229],\n",
       "         [182, 194, 223],\n",
       "         [202, 208, 231]]], dtype=uint8),\n",
       " array([[[104, 114, 146],\n",
       "         [127, 142, 185],\n",
       "         [142, 160, 203],\n",
       "         ...,\n",
       "         [192, 204, 245],\n",
       "         [194, 206, 249],\n",
       "         [192, 205, 249]],\n",
       " \n",
       "        [[117, 130, 168],\n",
       "         [133, 149, 194],\n",
       "         [142, 161, 203],\n",
       "         ...,\n",
       "         [193, 204, 247],\n",
       "         [194, 206, 248],\n",
       "         [194, 204, 248]],\n",
       " \n",
       "        [[121, 138, 179],\n",
       "         [135, 153, 196],\n",
       "         [146, 165, 208],\n",
       "         ...,\n",
       "         [191, 202, 245],\n",
       "         [192, 204, 246],\n",
       "         [192, 203, 247]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[170, 195, 240],\n",
       "         [168, 192, 238],\n",
       "         [168, 191, 237],\n",
       "         ...,\n",
       "         [159, 181, 228],\n",
       "         [160, 183, 232],\n",
       "         [161, 184, 234]],\n",
       " \n",
       "        [[176, 199, 244],\n",
       "         [171, 194, 239],\n",
       "         [176, 199, 244],\n",
       "         ...,\n",
       "         [164, 186, 234],\n",
       "         [164, 187, 235],\n",
       "         [164, 187, 238]],\n",
       " \n",
       "        [[178, 201, 246],\n",
       "         [178, 201, 246],\n",
       "         [178, 201, 246],\n",
       "         ...,\n",
       "         [164, 186, 234],\n",
       "         [162, 185, 233],\n",
       "         [164, 187, 237]]], dtype=uint8),\n",
       " array([[[183, 198, 244],\n",
       "         [182, 198, 244],\n",
       "         [179, 195, 241],\n",
       "         ...,\n",
       "         [ 74,  82, 101],\n",
       "         [ 72,  79,  95],\n",
       "         [ 69,  74,  87]],\n",
       " \n",
       "        [[184, 199, 245],\n",
       "         [181, 197, 243],\n",
       "         [179, 195, 241],\n",
       "         ...,\n",
       "         [ 80,  91, 117],\n",
       "         [ 74,  80, 100],\n",
       "         [ 71,  78,  92]],\n",
       " \n",
       "        [[183, 198, 244],\n",
       "         [183, 198, 244],\n",
       "         [182, 197, 243],\n",
       "         ...,\n",
       "         [ 87,  98, 129],\n",
       "         [ 80,  88, 113],\n",
       "         [ 72,  79,  98]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 136, 197],\n",
       "         [116, 134, 195],\n",
       "         [113, 132, 191],\n",
       "         ...,\n",
       "         [138, 160, 208],\n",
       "         [139, 160, 208],\n",
       "         [141, 163, 211]],\n",
       " \n",
       "        [[117, 136, 197],\n",
       "         [117, 135, 196],\n",
       "         [117, 135, 196],\n",
       "         ...,\n",
       "         [145, 166, 214],\n",
       "         [147, 169, 217],\n",
       "         [146, 169, 217]],\n",
       " \n",
       "        [[116, 136, 197],\n",
       "         [118, 136, 197],\n",
       "         [117, 135, 194],\n",
       "         ...,\n",
       "         [151, 173, 221],\n",
       "         [150, 172, 220],\n",
       "         [148, 170, 218]]], dtype=uint8),\n",
       " array([[[145, 159, 197],\n",
       "         [154, 171, 210],\n",
       "         [154, 170, 212],\n",
       "         ...,\n",
       "         [221, 224, 253],\n",
       "         [216, 221, 252],\n",
       "         [216, 220, 254]],\n",
       " \n",
       "        [[151, 166, 204],\n",
       "         [153, 172, 210],\n",
       "         [158, 174, 216],\n",
       "         ...,\n",
       "         [225, 229, 254],\n",
       "         [220, 226, 255],\n",
       "         [219, 225, 255]],\n",
       " \n",
       "        [[151, 167, 206],\n",
       "         [155, 173, 214],\n",
       "         [162, 179, 220],\n",
       "         ...,\n",
       "         [224, 228, 254],\n",
       "         [221, 225, 254],\n",
       "         [215, 220, 252]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[168, 180, 220],\n",
       "         [164, 176, 216],\n",
       "         [165, 177, 215],\n",
       "         ...,\n",
       "         [194, 204, 251],\n",
       "         [194, 204, 252],\n",
       "         [187, 197, 245]],\n",
       " \n",
       "        [[166, 178, 218],\n",
       "         [167, 179, 218],\n",
       "         [170, 183, 221],\n",
       "         ...,\n",
       "         [197, 205, 252],\n",
       "         [195, 204, 252],\n",
       "         [187, 197, 245]],\n",
       " \n",
       "        [[163, 176, 215],\n",
       "         [167, 180, 219],\n",
       "         [172, 185, 223],\n",
       "         ...,\n",
       "         [196, 204, 252],\n",
       "         [186, 196, 244],\n",
       "         [190, 199, 247]]], dtype=uint8),\n",
       " array([[[212, 218, 253],\n",
       "         [212, 218, 252],\n",
       "         [206, 213, 251],\n",
       "         ...,\n",
       "         [ 74,  85, 113],\n",
       "         [ 75,  83, 112],\n",
       "         [ 76,  84, 110]],\n",
       " \n",
       "        [[211, 217, 252],\n",
       "         [212, 220, 254],\n",
       "         [207, 216, 253],\n",
       "         ...,\n",
       "         [ 76,  83, 112],\n",
       "         [ 75,  83, 112],\n",
       "         [ 75,  85, 110]],\n",
       " \n",
       "        [[208, 216, 252],\n",
       "         [209, 216, 254],\n",
       "         [198, 209, 249],\n",
       "         ...,\n",
       "         [ 75,  83, 112],\n",
       "         [ 76,  83, 112],\n",
       "         [ 73,  82, 109]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 114, 174],\n",
       "         [100, 110, 167],\n",
       "         [101, 110, 167],\n",
       "         ...,\n",
       "         [ 86,  93, 132],\n",
       "         [ 85,  97, 135],\n",
       "         [ 85,  98, 137]],\n",
       " \n",
       "        [[109, 117, 177],\n",
       "         [ 99, 109, 167],\n",
       "         [ 96, 107, 164],\n",
       "         ...,\n",
       "         [ 86,  96, 134],\n",
       "         [ 85,  99, 136],\n",
       "         [ 90, 101, 140]],\n",
       " \n",
       "        [[111, 121, 181],\n",
       "         [102, 110, 168],\n",
       "         [ 96, 108, 162],\n",
       "         ...,\n",
       "         [ 88,  99, 137],\n",
       "         [ 89, 101, 139],\n",
       "         [ 88, 100, 139]]], dtype=uint8),\n",
       " array([[[ 71,  91, 143],\n",
       "         [ 79, 100, 154],\n",
       "         [ 70,  89, 146],\n",
       "         ...,\n",
       "         [145, 163, 228],\n",
       "         [149, 169, 230],\n",
       "         [140, 156, 213]],\n",
       " \n",
       "        [[ 81,  98, 151],\n",
       "         [ 81, 100, 151],\n",
       "         [ 66,  85, 142],\n",
       "         ...,\n",
       "         [125, 145, 214],\n",
       "         [168, 185, 232],\n",
       "         [192, 206, 245]],\n",
       " \n",
       "        [[ 74,  91, 142],\n",
       "         [ 66,  81, 134],\n",
       "         [ 77,  97, 153],\n",
       "         ...,\n",
       "         [163, 181, 224],\n",
       "         [176, 188, 225],\n",
       "         [177, 189, 234]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 139, 195],\n",
       "         [122, 143, 204],\n",
       "         [129, 155, 217],\n",
       "         ...,\n",
       "         [ 95, 121, 181],\n",
       "         [ 90, 118, 186],\n",
       "         [106, 132, 199]],\n",
       " \n",
       "        [[110, 133, 189],\n",
       "         [119, 143, 202],\n",
       "         [130, 155, 217],\n",
       "         ...,\n",
       "         [ 85, 110, 177],\n",
       "         [ 98, 125, 192],\n",
       "         [101, 127, 194]],\n",
       " \n",
       "        [[102, 125, 181],\n",
       "         [119, 144, 204],\n",
       "         [128, 153, 212],\n",
       "         ...,\n",
       "         [ 96, 123, 190],\n",
       "         [101, 127, 194],\n",
       "         [100, 127, 193]]], dtype=uint8),\n",
       " array([[[151, 164, 219],\n",
       "         [169, 184, 235],\n",
       "         [166, 185, 234],\n",
       "         ...,\n",
       "         [173, 168, 198],\n",
       "         [162, 163, 191],\n",
       "         [149, 150, 176]],\n",
       " \n",
       "        [[152, 170, 224],\n",
       "         [147, 168, 225],\n",
       "         [149, 171, 225],\n",
       "         ...,\n",
       "         [153, 144, 165],\n",
       "         [172, 169, 196],\n",
       "         [141, 142, 167]],\n",
       " \n",
       "        [[136, 157, 216],\n",
       "         [143, 166, 228],\n",
       "         [132, 159, 219],\n",
       "         ...,\n",
       "         [ 91,  86,  99],\n",
       "         [116, 111, 127],\n",
       "         [146, 146, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 156, 233],\n",
       "         [124, 149, 224],\n",
       "         [157, 164, 227],\n",
       "         ...,\n",
       "         [166, 178, 226],\n",
       "         [175, 181, 222],\n",
       "         [175, 175, 212]],\n",
       " \n",
       "        [[136, 160, 236],\n",
       "         [130, 153, 228],\n",
       "         [164, 164, 224],\n",
       "         ...,\n",
       "         [172, 181, 231],\n",
       "         [172, 178, 220],\n",
       "         [170, 174, 214]],\n",
       " \n",
       "        [[128, 152, 228],\n",
       "         [129, 152, 225],\n",
       "         [178, 181, 234],\n",
       "         ...,\n",
       "         [164, 177, 225],\n",
       "         [177, 183, 226],\n",
       "         [170, 173, 211]]], dtype=uint8),\n",
       " array([[[199, 213, 237],\n",
       "         [203, 215, 243],\n",
       "         [203, 216, 243],\n",
       "         ...,\n",
       "         [225, 233, 253],\n",
       "         [225, 234, 252],\n",
       "         [226, 233, 252]],\n",
       " \n",
       "        [[198, 211, 237],\n",
       "         [201, 214, 240],\n",
       "         [202, 215, 242],\n",
       "         ...,\n",
       "         [225, 231, 252],\n",
       "         [225, 233, 251],\n",
       "         [224, 234, 252]],\n",
       " \n",
       "        [[197, 210, 236],\n",
       "         [199, 211, 238],\n",
       "         [200, 213, 239],\n",
       "         ...,\n",
       "         [224, 231, 251],\n",
       "         [223, 233, 251],\n",
       "         [222, 234, 252]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[189, 211, 246],\n",
       "         [187, 209, 245],\n",
       "         [188, 210, 245],\n",
       "         ...,\n",
       "         [209, 224, 248],\n",
       "         [211, 225, 245],\n",
       "         [214, 226, 244]],\n",
       " \n",
       "        [[182, 206, 242],\n",
       "         [181, 205, 241],\n",
       "         [185, 209, 245],\n",
       "         ...,\n",
       "         [212, 226, 244],\n",
       "         [215, 229, 247],\n",
       "         [214, 228, 247]],\n",
       " \n",
       "        [[184, 207, 243],\n",
       "         [184, 208, 244],\n",
       "         [189, 212, 248],\n",
       "         ...,\n",
       "         [215, 228, 247],\n",
       "         [215, 229, 248],\n",
       "         [214, 228, 247]]], dtype=uint8),\n",
       " array([[[ 53,  59,  69],\n",
       "         [ 76,  84, 103],\n",
       "         [ 88, 103, 122],\n",
       "         ...,\n",
       "         [109, 144, 194],\n",
       "         [119, 152, 202],\n",
       "         [119, 151, 201]],\n",
       " \n",
       "        [[ 56,  65,  75],\n",
       "         [ 78,  90, 108],\n",
       "         [ 91, 106, 125],\n",
       "         ...,\n",
       "         [110, 143, 193],\n",
       "         [111, 144, 194],\n",
       "         [111, 144, 194]],\n",
       " \n",
       "        [[ 56,  63,  75],\n",
       "         [ 78,  91, 108],\n",
       "         [ 88, 103, 121],\n",
       "         ...,\n",
       "         [108, 141, 191],\n",
       "         [104, 137, 187],\n",
       "         [110, 143, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 28,  49,  77],\n",
       "         [ 79, 101, 129],\n",
       "         [ 85, 108, 138],\n",
       "         ...,\n",
       "         [ 42,  60,  87],\n",
       "         [ 41,  58,  87],\n",
       "         [ 41,  62,  90]],\n",
       " \n",
       "        [[ 26,  50,  78],\n",
       "         [ 76,  99, 126],\n",
       "         [ 85, 109, 139],\n",
       "         ...,\n",
       "         [ 44,  65,  93],\n",
       "         [ 43,  64,  94],\n",
       "         [ 45,  65,  98]],\n",
       " \n",
       "        [[ 26,  50,  79],\n",
       "         [ 67,  88, 115],\n",
       "         [ 83, 105, 133],\n",
       "         ...,\n",
       "         [ 45,  66,  94],\n",
       "         [ 43,  63,  94],\n",
       "         [ 47,  67,  99]]], dtype=uint8),\n",
       " array([[[119, 151, 201],\n",
       "         [124, 155, 206],\n",
       "         [131, 159, 210],\n",
       "         ...,\n",
       "         [134, 174, 222],\n",
       "         [127, 167, 215],\n",
       "         [ 83, 112, 151]],\n",
       " \n",
       "        [[121, 151, 201],\n",
       "         [122, 152, 202],\n",
       "         [125, 152, 202],\n",
       "         ...,\n",
       "         [134, 174, 221],\n",
       "         [120, 160, 208],\n",
       "         [119, 152, 194]],\n",
       " \n",
       "        [[130, 159, 208],\n",
       "         [128, 155, 205],\n",
       "         [129, 156, 203],\n",
       "         ...,\n",
       "         [136, 171, 217],\n",
       "         [134, 171, 219],\n",
       "         [130, 168, 213]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[123, 168, 227],\n",
       "         [124, 168, 224],\n",
       "         [133, 174, 227],\n",
       "         ...,\n",
       "         [170, 207, 254],\n",
       "         [167, 204, 253],\n",
       "         [163, 202, 250]],\n",
       " \n",
       "        [[126, 172, 230],\n",
       "         [122, 168, 226],\n",
       "         [137, 177, 228],\n",
       "         ...,\n",
       "         [169, 207, 255],\n",
       "         [166, 204, 252],\n",
       "         [160, 200, 249]],\n",
       " \n",
       "        [[126, 172, 230],\n",
       "         [126, 172, 230],\n",
       "         [133, 174, 227],\n",
       "         ...,\n",
       "         [166, 204, 253],\n",
       "         [165, 202, 252],\n",
       "         [163, 201, 250]]], dtype=uint8),\n",
       " array([[[ 15,  11,  22],\n",
       "         [ 16,  12,  23],\n",
       "         [ 14,  15,  25],\n",
       "         ...,\n",
       "         [165, 177, 204],\n",
       "         [169, 182, 208],\n",
       "         [175, 188, 214]],\n",
       " \n",
       "        [[ 12,   8,  20],\n",
       "         [ 15,  11,  23],\n",
       "         [ 14,  14,  25],\n",
       "         ...,\n",
       "         [153, 166, 192],\n",
       "         [167, 180, 205],\n",
       "         [170, 183, 209]],\n",
       " \n",
       "        [[ 12,   9,  21],\n",
       "         [ 17,  14,  26],\n",
       "         [ 22,  22,  34],\n",
       "         ...,\n",
       "         [135, 148, 174],\n",
       "         [164, 177, 203],\n",
       "         [163, 175, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  75, 104],\n",
       "         [ 59,  68, 100],\n",
       "         [ 53,  67,  99],\n",
       "         ...,\n",
       "         [ 57,  72, 105],\n",
       "         [ 76,  91, 124],\n",
       "         [ 89, 104, 136]],\n",
       " \n",
       "        [[ 65,  75, 105],\n",
       "         [ 58,  70, 101],\n",
       "         [ 55,  68, 100],\n",
       "         ...,\n",
       "         [ 71,  86, 119],\n",
       "         [ 90, 105, 138],\n",
       "         [ 94, 109, 141]],\n",
       " \n",
       "        [[ 65,  77, 107],\n",
       "         [ 55,  68, 100],\n",
       "         [ 56,  70, 102],\n",
       "         ...,\n",
       "         [ 83,  98, 131],\n",
       "         [ 96, 111, 144],\n",
       "         [ 97, 112, 144]]], dtype=uint8),\n",
       " array([[[117, 139, 167],\n",
       "         [115, 137, 165],\n",
       "         [116, 137, 165],\n",
       "         ...,\n",
       "         [141, 167, 212],\n",
       "         [146, 173, 218],\n",
       "         [163, 190, 234]],\n",
       " \n",
       "        [[116, 138, 166],\n",
       "         [113, 135, 163],\n",
       "         [108, 129, 157],\n",
       "         ...,\n",
       "         [123, 147, 192],\n",
       "         [140, 165, 209],\n",
       "         [151, 175, 219]],\n",
       " \n",
       "        [[122, 144, 172],\n",
       "         [117, 139, 167],\n",
       "         [102, 123, 151],\n",
       "         ...,\n",
       "         [ 99, 121, 166],\n",
       "         [121, 145, 189],\n",
       "         [132, 157, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 141, 185],\n",
       "         [116, 145, 189],\n",
       "         [120, 149, 194],\n",
       "         ...,\n",
       "         [130, 162, 214],\n",
       "         [121, 153, 205],\n",
       "         [112, 144, 197]],\n",
       " \n",
       "        [[112, 141, 185],\n",
       "         [116, 145, 189],\n",
       "         [120, 149, 194],\n",
       "         ...,\n",
       "         [131, 162, 212],\n",
       "         [122, 153, 204],\n",
       "         [112, 143, 194]],\n",
       " \n",
       "        [[111, 143, 186],\n",
       "         [113, 145, 188],\n",
       "         [115, 146, 191],\n",
       "         ...,\n",
       "         [129, 161, 210],\n",
       "         [123, 155, 204],\n",
       "         [116, 148, 197]]], dtype=uint8),\n",
       " array([[[194, 203, 220],\n",
       "         [200, 208, 224],\n",
       "         [199, 207, 222],\n",
       "         ...,\n",
       "         [ 86,  92,  99],\n",
       "         [ 76,  79,  84],\n",
       "         [ 67,  69,  72]],\n",
       " \n",
       "        [[190, 199, 218],\n",
       "         [196, 204, 222],\n",
       "         [197, 205, 222],\n",
       "         ...,\n",
       "         [ 95, 101, 108],\n",
       "         [ 85,  89,  94],\n",
       "         [ 70,  72,  76]],\n",
       " \n",
       "        [[187, 197, 215],\n",
       "         [187, 198, 216],\n",
       "         [192, 200, 218],\n",
       "         ...,\n",
       "         [124, 130, 135],\n",
       "         [ 99, 103, 110],\n",
       "         [ 74,  78,  82]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[210, 217, 236],\n",
       "         [201, 210, 230],\n",
       "         [193, 202, 222],\n",
       "         ...,\n",
       "         [202, 214, 227],\n",
       "         [202, 212, 222],\n",
       "         [202, 212, 222]],\n",
       " \n",
       "        [[216, 224, 241],\n",
       "         [206, 216, 235],\n",
       "         [200, 209, 229],\n",
       "         ...,\n",
       "         [205, 214, 227],\n",
       "         [204, 214, 226],\n",
       "         [204, 213, 226]],\n",
       " \n",
       "        [[221, 229, 246],\n",
       "         [211, 221, 239],\n",
       "         [205, 216, 234],\n",
       "         ...,\n",
       "         [208, 217, 230],\n",
       "         [207, 216, 229],\n",
       "         [206, 215, 227]]], dtype=uint8),\n",
       " array([[[ 99, 126, 160],\n",
       "         [ 97, 124, 158],\n",
       "         [ 95, 118, 150],\n",
       "         ...,\n",
       "         [ 69,  79, 115],\n",
       "         [ 67,  77, 111],\n",
       "         [ 67,  77, 111]],\n",
       " \n",
       "        [[105, 132, 166],\n",
       "         [103, 130, 164],\n",
       "         [ 93, 119, 155],\n",
       "         ...,\n",
       "         [ 72,  81, 116],\n",
       "         [ 70,  80, 114],\n",
       "         [ 68,  78, 112]],\n",
       " \n",
       "        [[105, 132, 166],\n",
       "         [101, 128, 162],\n",
       "         [ 96, 122, 158],\n",
       "         ...,\n",
       "         [ 73,  83, 121],\n",
       "         [ 70,  81, 115],\n",
       "         [ 67,  79, 113]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[124, 149, 191],\n",
       "         [119, 144, 187],\n",
       "         [119, 142, 185],\n",
       "         ...,\n",
       "         [ 89, 109, 144],\n",
       "         [ 87, 107, 142],\n",
       "         [ 92, 113, 149]],\n",
       " \n",
       "        [[120, 145, 189],\n",
       "         [118, 142, 186],\n",
       "         [118, 141, 186],\n",
       "         ...,\n",
       "         [ 87, 109, 145],\n",
       "         [ 90, 112, 148],\n",
       "         [ 91, 114, 151]],\n",
       " \n",
       "        [[116, 141, 185],\n",
       "         [116, 141, 185],\n",
       "         [115, 137, 182],\n",
       "         ...,\n",
       "         [ 90, 112, 148],\n",
       "         [ 92, 114, 150],\n",
       "         [ 90, 112, 149]]], dtype=uint8),\n",
       " array([[[ 71,  83, 121],\n",
       "         [ 64,  76, 104],\n",
       "         [ 66,  74,  98],\n",
       "         ...,\n",
       "         [142, 158, 181],\n",
       "         [167, 190, 216],\n",
       "         [165, 194, 229]],\n",
       " \n",
       "        [[ 68,  84, 120],\n",
       "         [ 69,  80, 115],\n",
       "         [ 63,  73, 101],\n",
       "         ...,\n",
       "         [114, 130, 153],\n",
       "         [159, 182, 208],\n",
       "         [159, 189, 224]],\n",
       " \n",
       "        [[ 65,  81, 119],\n",
       "         [ 66,  79, 118],\n",
       "         [ 69,  78, 114],\n",
       "         ...,\n",
       "         [135, 148, 172],\n",
       "         [160, 182, 208],\n",
       "         [162, 192, 224]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 193, 233],\n",
       "         [147, 174, 219],\n",
       "         [144, 168, 213],\n",
       "         ...,\n",
       "         [191, 213, 241],\n",
       "         [187, 210, 241],\n",
       "         [188, 212, 242]],\n",
       " \n",
       "        [[181, 204, 241],\n",
       "         [153, 178, 223],\n",
       "         [145, 170, 214],\n",
       "         ...,\n",
       "         [187, 211, 241],\n",
       "         [189, 212, 245],\n",
       "         [184, 207, 239]],\n",
       " \n",
       "        [[178, 199, 233],\n",
       "         [159, 182, 224],\n",
       "         [146, 171, 214],\n",
       "         ...,\n",
       "         [189, 213, 243],\n",
       "         [189, 213, 244],\n",
       "         [184, 206, 238]]], dtype=uint8),\n",
       " array([[[ 56,  70,  94],\n",
       "         [ 58,  75, 102],\n",
       "         [ 58,  77, 104],\n",
       "         ...,\n",
       "         [117, 132, 164],\n",
       "         [119, 136, 169],\n",
       "         [114, 133, 166]],\n",
       " \n",
       "        [[ 58,  70,  96],\n",
       "         [ 55,  72,  99],\n",
       "         [ 60,  79, 106],\n",
       "         ...,\n",
       "         [108, 127, 158],\n",
       "         [107, 127, 159],\n",
       "         [106, 125, 158]],\n",
       " \n",
       "        [[ 60,  71, 100],\n",
       "         [ 63,  79, 107],\n",
       "         [ 62,  81, 108],\n",
       "         ...,\n",
       "         [100, 115, 147],\n",
       "         [ 81,  98, 131],\n",
       "         [100, 119, 152]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82, 104, 130],\n",
       "         [ 90, 113, 139],\n",
       "         [100, 122, 150],\n",
       "         ...,\n",
       "         [ 87, 109, 150],\n",
       "         [ 84, 106, 148],\n",
       "         [ 82, 104, 149]],\n",
       " \n",
       "        [[ 81, 107, 129],\n",
       "         [ 88, 113, 139],\n",
       "         [ 99, 123, 151],\n",
       "         ...,\n",
       "         [ 87, 109, 152],\n",
       "         [ 86, 108, 150],\n",
       "         [ 87, 109, 154]],\n",
       " \n",
       "        [[ 88, 109, 135],\n",
       "         [ 97, 121, 147],\n",
       "         [105, 130, 160],\n",
       "         ...,\n",
       "         [ 87, 109, 151],\n",
       "         [ 89, 110, 153],\n",
       "         [ 92, 114, 159]]], dtype=uint8),\n",
       " array([[[118, 137, 170],\n",
       "         [120, 139, 172],\n",
       "         [117, 136, 169],\n",
       "         ...,\n",
       "         [ 40,  55,  86],\n",
       "         [ 43,  51,  77],\n",
       "         [ 32,  37,  53]],\n",
       " \n",
       "        [[118, 136, 172],\n",
       "         [117, 136, 169],\n",
       "         [113, 132, 165],\n",
       "         ...,\n",
       "         [ 39,  56,  84],\n",
       "         [ 42,  51,  73],\n",
       "         [ 34,  39,  55]],\n",
       " \n",
       "        [[113, 133, 169],\n",
       "         [111, 131, 163],\n",
       "         [111, 130, 163],\n",
       "         ...,\n",
       "         [ 41,  55,  83],\n",
       "         [ 36,  48,  73],\n",
       "         [ 28,  33,  48]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 76,  96, 136],\n",
       "         [ 68,  90, 133],\n",
       "         [ 76,  97, 141],\n",
       "         ...,\n",
       "         [ 76,  90, 118],\n",
       "         [ 67,  79, 106],\n",
       "         [ 52,  57,  82]],\n",
       " \n",
       "        [[ 82, 103, 147],\n",
       "         [ 70,  93, 138],\n",
       "         [ 75,  97, 142],\n",
       "         ...,\n",
       "         [ 71,  93, 120],\n",
       "         [ 68,  82, 108],\n",
       "         [ 62,  68,  91]],\n",
       " \n",
       "        [[ 79, 100, 145],\n",
       "         [ 71,  95, 139],\n",
       "         [ 72,  95, 140],\n",
       "         ...,\n",
       "         [ 69,  92, 118],\n",
       "         [ 73,  88, 114],\n",
       "         [ 70,  79, 102]]], dtype=uint8),\n",
       " array([[[ 81,  79,  91],\n",
       "         [ 91,  92, 105],\n",
       "         [111, 111, 131],\n",
       "         ...,\n",
       "         [186, 189, 220],\n",
       "         [189, 190, 221],\n",
       "         [187, 189, 220]],\n",
       " \n",
       "        [[ 84,  78,  96],\n",
       "         [102, 102, 123],\n",
       "         [114, 116, 136],\n",
       "         ...,\n",
       "         [193, 190, 221],\n",
       "         [190, 191, 222],\n",
       "         [189, 191, 222]],\n",
       " \n",
       "        [[ 83,  85,  96],\n",
       "         [112, 106, 128],\n",
       "         [119, 116, 136],\n",
       "         ...,\n",
       "         [195, 195, 216],\n",
       "         [193, 194, 217],\n",
       "         [195, 191, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[153, 151, 175],\n",
       "         [152, 153, 174],\n",
       "         [160, 158, 179],\n",
       "         ...,\n",
       "         [171, 169, 204],\n",
       "         [172, 172, 205],\n",
       "         [173, 174, 208]],\n",
       " \n",
       "        [[152, 152, 171],\n",
       "         [157, 155, 177],\n",
       "         [158, 157, 176],\n",
       "         ...,\n",
       "         [170, 169, 204],\n",
       "         [170, 169, 206],\n",
       "         [172, 173, 208]],\n",
       " \n",
       "        [[159, 154, 180],\n",
       "         [156, 152, 179],\n",
       "         [159, 160, 178],\n",
       "         ...,\n",
       "         [171, 168, 206],\n",
       "         [173, 169, 206],\n",
       "         [175, 174, 210]]], dtype=uint8),\n",
       " array([[[194, 193, 226],\n",
       "         [197, 196, 226],\n",
       "         [191, 194, 224],\n",
       "         ...,\n",
       "         [144, 162, 201],\n",
       "         [129, 145, 182],\n",
       "         [118, 132, 162]],\n",
       " \n",
       "        [[200, 195, 226],\n",
       "         [199, 194, 225],\n",
       "         [196, 194, 223],\n",
       "         ...,\n",
       "         [142, 160, 200],\n",
       "         [133, 147, 186],\n",
       "         [121, 130, 169]],\n",
       " \n",
       "        [[202, 198, 224],\n",
       "         [198, 194, 224],\n",
       "         [198, 194, 225],\n",
       "         ...,\n",
       "         [143, 160, 203],\n",
       "         [136, 155, 190],\n",
       "         [123, 135, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 183, 227],\n",
       "         [165, 178, 226],\n",
       "         [158, 174, 221],\n",
       "         ...,\n",
       "         [173, 193, 228],\n",
       "         [174, 190, 226],\n",
       "         [173, 191, 226]],\n",
       " \n",
       "        [[168, 182, 227],\n",
       "         [162, 178, 225],\n",
       "         [158, 176, 223],\n",
       "         ...,\n",
       "         [175, 193, 228],\n",
       "         [176, 190, 226],\n",
       "         [176, 191, 224]],\n",
       " \n",
       "        [[169, 181, 227],\n",
       "         [165, 181, 228],\n",
       "         [160, 177, 226],\n",
       "         ...,\n",
       "         [175, 192, 228],\n",
       "         [176, 192, 228],\n",
       "         [173, 193, 226]]], dtype=uint8),\n",
       " array([[[217, 229, 247],\n",
       "         [217, 229, 247],\n",
       "         [217, 228, 248],\n",
       "         ...,\n",
       "         [141, 159, 196],\n",
       "         [144, 162, 199],\n",
       "         [138, 156, 193]],\n",
       " \n",
       "        [[215, 229, 248],\n",
       "         [215, 229, 248],\n",
       "         [214, 227, 247],\n",
       "         ...,\n",
       "         [136, 156, 193],\n",
       "         [140, 160, 196],\n",
       "         [134, 153, 191]],\n",
       " \n",
       "        [[214, 227, 248],\n",
       "         [214, 228, 247],\n",
       "         [211, 225, 244],\n",
       "         ...,\n",
       "         [137, 156, 193],\n",
       "         [140, 159, 196],\n",
       "         [134, 153, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[216, 229, 251],\n",
       "         [213, 225, 248],\n",
       "         [207, 219, 245],\n",
       "         ...,\n",
       "         [191, 210, 243],\n",
       "         [186, 205, 238],\n",
       "         [189, 208, 242]],\n",
       " \n",
       "        [[217, 225, 249],\n",
       "         [221, 231, 255],\n",
       "         [212, 223, 247],\n",
       "         ...,\n",
       "         [190, 209, 244],\n",
       "         [187, 206, 241],\n",
       "         [187, 206, 241]],\n",
       " \n",
       "        [[217, 223, 247],\n",
       "         [221, 228, 253],\n",
       "         [214, 225, 249],\n",
       "         ...,\n",
       "         [191, 209, 246],\n",
       "         [187, 205, 242],\n",
       "         [187, 204, 242]]], dtype=uint8),\n",
       " array([[[ 33,  40,  54],\n",
       "         [ 49,  60,  88],\n",
       "         [ 38,  53,  83],\n",
       "         ...,\n",
       "         [107, 127, 182],\n",
       "         [106, 126, 181],\n",
       "         [113, 134, 186]],\n",
       " \n",
       "        [[ 42,  49,  64],\n",
       "         [ 49,  59,  83],\n",
       "         [ 41,  56,  84],\n",
       "         ...,\n",
       "         [ 97, 117, 172],\n",
       "         [104, 124, 179],\n",
       "         [115, 135, 190]],\n",
       " \n",
       "        [[ 45,  51,  68],\n",
       "         [ 53,  62,  86],\n",
       "         [ 45,  58,  89],\n",
       "         ...,\n",
       "         [ 92, 112, 167],\n",
       "         [ 90, 111, 166],\n",
       "         [ 99, 117, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 43,  60,  99],\n",
       "         [ 42,  61, 104],\n",
       "         [ 41,  60, 103],\n",
       "         ...,\n",
       "         [ 42,  59, 110],\n",
       "         [ 45,  62, 111],\n",
       "         [ 41,  58, 108]],\n",
       " \n",
       "        [[ 43,  60,  98],\n",
       "         [ 43,  61, 106],\n",
       "         [ 43,  61, 108],\n",
       "         ...,\n",
       "         [ 50,  67, 118],\n",
       "         [ 49,  66, 115],\n",
       "         [ 39,  56, 105]],\n",
       " \n",
       "        [[ 41,  62, 101],\n",
       "         [ 42,  62, 108],\n",
       "         [ 45,  62, 111],\n",
       "         ...,\n",
       "         [ 51,  71, 122],\n",
       "         [ 46,  65, 116],\n",
       "         [ 38,  55, 111]]], dtype=uint8),\n",
       " array([[[131, 151, 206],\n",
       "         [132, 152, 207],\n",
       "         [132, 152, 207],\n",
       "         ...,\n",
       "         [155, 162, 201],\n",
       "         [138, 146, 186],\n",
       "         [108, 114, 156]],\n",
       " \n",
       "        [[127, 148, 203],\n",
       "         [127, 148, 201],\n",
       "         [130, 151, 203],\n",
       "         ...,\n",
       "         [158, 165, 204],\n",
       "         [152, 159, 198],\n",
       "         [120, 129, 167]],\n",
       " \n",
       "        [[117, 138, 193],\n",
       "         [114, 134, 189],\n",
       "         [119, 140, 192],\n",
       "         ...,\n",
       "         [162, 169, 208],\n",
       "         [150, 157, 196],\n",
       "         [131, 140, 178]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[172, 182, 232],\n",
       "         [172, 182, 232],\n",
       "         [176, 182, 227],\n",
       "         ...,\n",
       "         [254, 254, 254],\n",
       "         [253, 255, 255],\n",
       "         [252, 254, 255]],\n",
       " \n",
       "        [[185, 191, 246],\n",
       "         [183, 191, 238],\n",
       "         [185, 193, 240],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [253, 255, 255],\n",
       "         [250, 252, 253]],\n",
       " \n",
       "        [[201, 209, 252],\n",
       "         [192, 199, 246],\n",
       "         [186, 194, 241],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255]]], dtype=uint8),\n",
       " array([[[167, 195, 231],\n",
       "         [166, 193, 230],\n",
       "         [165, 192, 229],\n",
       "         ...,\n",
       "         [145, 165, 201],\n",
       "         [144, 164, 199],\n",
       "         [148, 169, 201]],\n",
       " \n",
       "        [[163, 190, 227],\n",
       "         [165, 192, 229],\n",
       "         [164, 190, 227],\n",
       "         ...,\n",
       "         [141, 163, 198],\n",
       "         [144, 164, 198],\n",
       "         [146, 170, 200]],\n",
       " \n",
       "        [[160, 186, 226],\n",
       "         [160, 186, 225],\n",
       "         [156, 182, 222],\n",
       "         ...,\n",
       "         [141, 164, 199],\n",
       "         [144, 167, 199],\n",
       "         [145, 171, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[139, 168, 217],\n",
       "         [130, 161, 214],\n",
       "         [125, 157, 212],\n",
       "         ...,\n",
       "         [141, 173, 216],\n",
       "         [140, 172, 214],\n",
       "         [145, 173, 214]],\n",
       " \n",
       "        [[139, 168, 219],\n",
       "         [133, 164, 217],\n",
       "         [128, 160, 213],\n",
       "         ...,\n",
       "         [141, 173, 216],\n",
       "         [141, 173, 215],\n",
       "         [145, 173, 214]],\n",
       " \n",
       "        [[139, 170, 221],\n",
       "         [135, 165, 217],\n",
       "         [131, 162, 214],\n",
       "         ...,\n",
       "         [141, 173, 216],\n",
       "         [143, 172, 216],\n",
       "         [145, 173, 214]]], dtype=uint8),\n",
       " array([[[ 83,  81,  85],\n",
       "         [ 98, 100, 125],\n",
       "         [106, 120, 142],\n",
       "         ...,\n",
       "         [ 94, 121, 161],\n",
       "         [107, 135, 176],\n",
       "         [107, 137, 181]],\n",
       " \n",
       "        [[ 85,  90,  96],\n",
       "         [105, 110, 130],\n",
       "         [106, 119, 142],\n",
       "         ...,\n",
       "         [ 93, 116, 150],\n",
       "         [101, 125, 167],\n",
       "         [103, 128, 168]],\n",
       " \n",
       "        [[ 95, 101, 112],\n",
       "         [101, 113, 131],\n",
       "         [113, 125, 153],\n",
       "         ...,\n",
       "         [ 92, 113, 143],\n",
       "         [ 99, 122, 157],\n",
       "         [106, 131, 170]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 137, 179],\n",
       "         [114, 137, 182],\n",
       "         [113, 136, 182],\n",
       "         ...,\n",
       "         [111, 148, 200],\n",
       "         [117, 154, 203],\n",
       "         [121, 159, 207]],\n",
       " \n",
       "        [[115, 140, 181],\n",
       "         [113, 139, 180],\n",
       "         [112, 141, 186],\n",
       "         ...,\n",
       "         [116, 155, 207],\n",
       "         [122, 159, 208],\n",
       "         [122, 160, 208]],\n",
       " \n",
       "        [[113, 141, 185],\n",
       "         [112, 146, 189],\n",
       "         [112, 144, 189],\n",
       "         ...,\n",
       "         [120, 160, 209],\n",
       "         [121, 161, 209],\n",
       "         [122, 163, 210]]], dtype=uint8),\n",
       " array([[[126, 150, 193],\n",
       "         [129, 153, 194],\n",
       "         [128, 154, 191],\n",
       "         ...,\n",
       "         [168, 147, 142],\n",
       "         [160, 131, 113],\n",
       "         [159, 127,  96]],\n",
       " \n",
       "        [[125, 152, 194],\n",
       "         [124, 152, 192],\n",
       "         [125, 151, 188],\n",
       "         ...,\n",
       "         [173, 160, 152],\n",
       "         [164, 141, 125],\n",
       "         [159, 130, 102]],\n",
       " \n",
       "        [[126, 152, 194],\n",
       "         [123, 148, 188],\n",
       "         [127, 152, 187],\n",
       "         ...,\n",
       "         [196, 186, 174],\n",
       "         [175, 155, 143],\n",
       "         [160, 131, 108]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 163, 193],\n",
       "         [134, 146, 182],\n",
       "         [128, 144, 180],\n",
       "         ...,\n",
       "         [184, 173, 169],\n",
       "         [194, 187, 181],\n",
       "         [204, 195, 190]],\n",
       " \n",
       "        [[188, 196, 213],\n",
       "         [142, 154, 184],\n",
       "         [134, 150, 183],\n",
       "         ...,\n",
       "         [201, 192, 188],\n",
       "         [206, 202, 194],\n",
       "         [209, 202, 200]],\n",
       " \n",
       "        [[209, 213, 221],\n",
       "         [167, 178, 199],\n",
       "         [141, 150, 185],\n",
       "         ...,\n",
       "         [205, 200, 197],\n",
       "         [205, 200, 197],\n",
       "         [207, 203, 199]]], dtype=uint8),\n",
       " array([[[186, 198, 210],\n",
       "         [185, 200, 215],\n",
       "         [177, 193, 210],\n",
       "         ...,\n",
       "         [ 76,  81, 103],\n",
       "         [ 59,  60,  80],\n",
       "         [ 42,  38,  41]],\n",
       " \n",
       "        [[178, 194, 207],\n",
       "         [178, 196, 212],\n",
       "         [175, 194, 209],\n",
       "         ...,\n",
       "         [ 58,  61,  73],\n",
       "         [ 66,  67,  88],\n",
       "         [ 44,  42,  47]],\n",
       " \n",
       "        [[180, 197, 212],\n",
       "         [175, 193, 211],\n",
       "         [176, 194, 212],\n",
       "         ...,\n",
       "         [ 39,  39,  42],\n",
       "         [ 57,  59,  79],\n",
       "         [ 51,  46,  53]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  85, 119],\n",
       "         [ 72,  83, 115],\n",
       "         [ 79,  88, 122],\n",
       "         ...,\n",
       "         [ 67,  81, 113],\n",
       "         [ 59,  65,  92],\n",
       "         [ 45,  44,  54]],\n",
       " \n",
       "        [[ 92, 105, 136],\n",
       "         [ 68,  79, 110],\n",
       "         [ 85,  95, 128],\n",
       "         ...,\n",
       "         [ 81,  96, 128],\n",
       "         [ 75,  82, 110],\n",
       "         [ 47,  46,  56]],\n",
       " \n",
       "        [[ 87, 104, 137],\n",
       "         [ 70,  81, 113],\n",
       "         [ 79,  89, 123],\n",
       "         ...,\n",
       "         [ 78,  92, 127],\n",
       "         [ 63,  71,  99],\n",
       "         [ 46,  44,  55]]], dtype=uint8),\n",
       " array([[[131, 141, 191],\n",
       "         [125, 136, 187],\n",
       "         [121, 133, 187],\n",
       "         ...,\n",
       "         [ 88,  94, 135],\n",
       "         [ 87,  93, 134],\n",
       "         [ 78,  82, 118]],\n",
       " \n",
       "        [[132, 141, 191],\n",
       "         [128, 138, 189],\n",
       "         [122, 136, 187],\n",
       "         ...,\n",
       "         [ 92,  98, 139],\n",
       "         [ 96, 100, 141],\n",
       "         [ 88,  96, 136]],\n",
       " \n",
       "        [[128, 139, 189],\n",
       "         [115, 127, 178],\n",
       "         [117, 127, 181],\n",
       "         ...,\n",
       "         [ 94, 101, 141],\n",
       "         [ 98, 105, 144],\n",
       "         [ 92,  98, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 111, 163],\n",
       "         [ 89, 102, 155],\n",
       "         [ 87,  99, 152],\n",
       "         ...,\n",
       "         [129, 138, 175],\n",
       "         [124, 134, 168],\n",
       "         [123, 133, 167]],\n",
       " \n",
       "        [[106, 120, 175],\n",
       "         [ 96, 107, 163],\n",
       "         [ 92, 104, 159],\n",
       "         ...,\n",
       "         [127, 139, 175],\n",
       "         [124, 137, 171],\n",
       "         [125, 135, 169]],\n",
       " \n",
       "        [[111, 129, 180],\n",
       "         [105, 121, 173],\n",
       "         [ 98, 112, 165],\n",
       "         ...,\n",
       "         [125, 138, 176],\n",
       "         [123, 136, 174],\n",
       "         [126, 135, 171]]], dtype=uint8),\n",
       " array([[[156, 168, 193],\n",
       "         [164, 173, 197],\n",
       "         [169, 177, 197],\n",
       "         ...,\n",
       "         [ 97, 102, 130],\n",
       "         [ 94,  98, 126],\n",
       "         [ 86,  91, 119]],\n",
       " \n",
       "        [[155, 165, 192],\n",
       "         [160, 169, 190],\n",
       "         [173, 180, 199],\n",
       "         ...,\n",
       "         [ 99, 104, 128],\n",
       "         [ 92,  96, 124],\n",
       "         [ 83,  89, 116]],\n",
       " \n",
       "        [[159, 173, 196],\n",
       "         [165, 174, 194],\n",
       "         [184, 191, 209],\n",
       "         ...,\n",
       "         [101, 107, 127],\n",
       "         [ 94, 100, 123],\n",
       "         [ 83,  87, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[168, 172, 200],\n",
       "         [166, 170, 199],\n",
       "         [157, 159, 189],\n",
       "         ...,\n",
       "         [147, 158, 188],\n",
       "         [139, 150, 180],\n",
       "         [138, 149, 181]],\n",
       " \n",
       "        [[171, 175, 203],\n",
       "         [174, 178, 206],\n",
       "         [169, 171, 201],\n",
       "         ...,\n",
       "         [150, 161, 191],\n",
       "         [152, 163, 193],\n",
       "         [139, 150, 182]],\n",
       " \n",
       "        [[175, 179, 208],\n",
       "         [178, 182, 211],\n",
       "         [174, 177, 207],\n",
       "         ...,\n",
       "         [149, 159, 189],\n",
       "         [145, 155, 188],\n",
       "         [141, 150, 184]]], dtype=uint8),\n",
       " array([[[ 78,  90, 118],\n",
       "         [ 82,  92, 121],\n",
       "         [ 81,  89, 118],\n",
       "         ...,\n",
       "         [ 91,  93, 104],\n",
       "         [ 96,  98, 108],\n",
       "         [ 86,  88,  96]],\n",
       " \n",
       "        [[ 86,  97, 125],\n",
       "         [ 84,  92, 121],\n",
       "         [ 81,  87, 116],\n",
       "         ...,\n",
       "         [ 76,  78,  88],\n",
       "         [ 94, 100, 107],\n",
       "         [ 94,  98, 106]],\n",
       " \n",
       "        [[ 83,  94, 122],\n",
       "         [ 84,  92, 121],\n",
       "         [ 80,  86, 114],\n",
       "         ...,\n",
       "         [ 74,  76,  86],\n",
       "         [ 88,  90, 100],\n",
       "         [ 92,  96, 105]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 58,  65,  92],\n",
       "         [ 57,  64,  91],\n",
       "         [ 48,  56,  84],\n",
       "         ...,\n",
       "         [ 81,  90, 103],\n",
       "         [ 82,  91, 105],\n",
       "         [ 87,  95, 110]],\n",
       " \n",
       "        [[ 63,  71, 100],\n",
       "         [ 58,  66,  95],\n",
       "         [ 52,  62,  91],\n",
       "         ...,\n",
       "         [ 82,  92, 107],\n",
       "         [ 83,  92, 108],\n",
       "         [ 87,  95, 112]],\n",
       " \n",
       "        [[ 63,  74, 102],\n",
       "         [ 60,  72, 100],\n",
       "         [ 59,  71,  99],\n",
       "         ...,\n",
       "         [ 84,  93, 110],\n",
       "         [ 87,  97, 114],\n",
       "         [ 88,  98, 116]]], dtype=uint8),\n",
       " array([[[186, 185, 204],\n",
       "         [188, 184, 203],\n",
       "         [185, 176, 195],\n",
       "         ...,\n",
       "         [118, 119, 157],\n",
       "         [126, 126, 166],\n",
       "         [129, 129, 169]],\n",
       " \n",
       "        [[177, 168, 186],\n",
       "         [183, 174, 189],\n",
       "         [185, 175, 191],\n",
       "         ...,\n",
       "         [116, 118, 155],\n",
       "         [120, 120, 160],\n",
       "         [123, 123, 162]],\n",
       " \n",
       "        [[195, 189, 206],\n",
       "         [181, 173, 188],\n",
       "         [175, 166, 178],\n",
       "         ...,\n",
       "         [117, 118, 155],\n",
       "         [123, 123, 163],\n",
       "         [113, 113, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[178, 188, 214],\n",
       "         [187, 192, 219],\n",
       "         [182, 191, 220],\n",
       "         ...,\n",
       "         [176, 171, 192],\n",
       "         [177, 171, 194],\n",
       "         [182, 180, 200]],\n",
       " \n",
       "        [[177, 192, 218],\n",
       "         [182, 192, 220],\n",
       "         [184, 196, 223],\n",
       "         ...,\n",
       "         [185, 183, 203],\n",
       "         [189, 183, 206],\n",
       "         [181, 179, 199]],\n",
       " \n",
       "        [[163, 183, 207],\n",
       "         [180, 192, 219],\n",
       "         [178, 189, 217],\n",
       "         ...,\n",
       "         [183, 180, 201],\n",
       "         [187, 181, 204],\n",
       "         [183, 177, 200]]], dtype=uint8),\n",
       " array([[[55, 56, 94],\n",
       "         [57, 58, 96],\n",
       "         [54, 55, 93],\n",
       "         ...,\n",
       "         [19, 12, 23],\n",
       "         [27, 19, 30],\n",
       "         [29, 24, 34]],\n",
       " \n",
       "        [[56, 57, 95],\n",
       "         [51, 52, 90],\n",
       "         [46, 47, 84],\n",
       "         ...,\n",
       "         [24, 16, 27],\n",
       "         [30, 22, 33],\n",
       "         [31, 23, 34]],\n",
       " \n",
       "        [[53, 54, 92],\n",
       "         [54, 55, 91],\n",
       "         [49, 51, 84],\n",
       "         ...,\n",
       "         [25, 19, 30],\n",
       "         [26, 20, 32],\n",
       "         [28, 23, 35]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[48, 43, 74],\n",
       "         [47, 45, 75],\n",
       "         [45, 46, 74],\n",
       "         ...,\n",
       "         [46, 42, 70],\n",
       "         [44, 41, 66],\n",
       "         [47, 45, 68]],\n",
       " \n",
       "        [[50, 45, 76],\n",
       "         [48, 46, 75],\n",
       "         [50, 51, 79],\n",
       "         ...,\n",
       "         [44, 40, 69],\n",
       "         [48, 44, 71],\n",
       "         [47, 44, 69]],\n",
       " \n",
       "        [[55, 50, 81],\n",
       "         [52, 48, 79],\n",
       "         [53, 52, 82],\n",
       "         ...,\n",
       "         [47, 43, 72],\n",
       "         [49, 45, 73],\n",
       "         [47, 44, 69]]], dtype=uint8),\n",
       " array([[[ 94, 119, 164],\n",
       "         [102, 125, 169],\n",
       "         [ 67,  80, 114],\n",
       "         ...,\n",
       "         [145, 149, 199],\n",
       "         [141, 147, 200],\n",
       "         [145, 154, 212]],\n",
       " \n",
       "        [[ 89, 111, 156],\n",
       "         [ 90, 110, 149],\n",
       "         [ 51,  57,  86],\n",
       "         ...,\n",
       "         [147, 151, 197],\n",
       "         [149, 153, 205],\n",
       "         [149, 156, 212]],\n",
       " \n",
       "        [[ 73,  91, 135],\n",
       "         [ 47,  67,  98],\n",
       "         [ 52,  58,  85],\n",
       "         ...,\n",
       "         [132, 134, 175],\n",
       "         [138, 142, 191],\n",
       "         [155, 161, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 146, 210],\n",
       "         [122, 150, 214],\n",
       "         [119, 149, 214],\n",
       "         ...,\n",
       "         [102, 131, 193],\n",
       "         [104, 135, 198],\n",
       "         [102, 132, 197]],\n",
       " \n",
       "        [[121, 149, 212],\n",
       "         [124, 152, 215],\n",
       "         [123, 152, 217],\n",
       "         ...,\n",
       "         [102, 131, 195],\n",
       "         [105, 136, 200],\n",
       "         [101, 130, 198]],\n",
       " \n",
       "        [[125, 154, 215],\n",
       "         [126, 155, 216],\n",
       "         [127, 155, 219],\n",
       "         ...,\n",
       "         [106, 136, 201],\n",
       "         [107, 136, 203],\n",
       "         [ 95, 123, 194]]], dtype=uint8),\n",
       " array([[[249, 250, 252],\n",
       "         [254, 254, 254],\n",
       "         [251, 253, 252],\n",
       "         ...,\n",
       "         [167, 190, 239],\n",
       "         [168, 191, 237],\n",
       "         [169, 191, 237]],\n",
       " \n",
       "        [[250, 249, 251],\n",
       "         [253, 254, 253],\n",
       "         [247, 250, 249],\n",
       "         ...,\n",
       "         [166, 190, 241],\n",
       "         [167, 190, 239],\n",
       "         [166, 187, 237]],\n",
       " \n",
       "        [[254, 251, 253],\n",
       "         [254, 252, 252],\n",
       "         [241, 245, 244],\n",
       "         ...,\n",
       "         [146, 170, 225],\n",
       "         [153, 175, 227],\n",
       "         [159, 181, 233]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[168, 190, 238],\n",
       "         [167, 190, 238],\n",
       "         [167, 190, 239],\n",
       "         ...,\n",
       "         [198, 214, 250],\n",
       "         [199, 212, 251],\n",
       "         [199, 212, 250]],\n",
       " \n",
       "        [[165, 188, 235],\n",
       "         [165, 188, 236],\n",
       "         [165, 188, 236],\n",
       "         ...,\n",
       "         [200, 214, 247],\n",
       "         [200, 213, 249],\n",
       "         [198, 211, 249]],\n",
       " \n",
       "        [[173, 196, 242],\n",
       "         [174, 197, 243],\n",
       "         [174, 197, 243],\n",
       "         ...,\n",
       "         [199, 213, 244],\n",
       "         [202, 212, 245],\n",
       "         [199, 210, 244]]], dtype=uint8),\n",
       " array([[[ 86, 114, 148],\n",
       "         [104, 134, 170],\n",
       "         [121, 152, 193],\n",
       "         ...,\n",
       "         [152, 170, 217],\n",
       "         [151, 169, 216],\n",
       "         [151, 169, 216]],\n",
       " \n",
       "        [[ 88, 116, 150],\n",
       "         [111, 141, 178],\n",
       "         [124, 156, 196],\n",
       "         ...,\n",
       "         [151, 169, 216],\n",
       "         [150, 168, 215],\n",
       "         [150, 168, 215]],\n",
       " \n",
       "        [[ 93, 121, 157],\n",
       "         [121, 150, 188],\n",
       "         [129, 160, 200],\n",
       "         ...,\n",
       "         [151, 169, 216],\n",
       "         [150, 168, 215],\n",
       "         [150, 168, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 160, 206],\n",
       "         [137, 162, 206],\n",
       "         [138, 163, 206],\n",
       "         ...,\n",
       "         [140, 161, 212],\n",
       "         [136, 157, 208],\n",
       "         [137, 158, 209]],\n",
       " \n",
       "        [[135, 160, 203],\n",
       "         [137, 162, 206],\n",
       "         [140, 165, 208],\n",
       "         ...,\n",
       "         [141, 162, 213],\n",
       "         [139, 160, 211],\n",
       "         [138, 159, 209]],\n",
       " \n",
       "        [[137, 163, 204],\n",
       "         [136, 161, 203],\n",
       "         [139, 164, 208],\n",
       "         ...,\n",
       "         [140, 161, 212],\n",
       "         [138, 159, 210],\n",
       "         [137, 158, 209]]], dtype=uint8),\n",
       " array([[[218, 228, 251],\n",
       "         [218, 228, 251],\n",
       "         [218, 229, 251],\n",
       "         ...,\n",
       "         [132, 161, 216],\n",
       "         [129, 159, 214],\n",
       "         [132, 162, 217]],\n",
       " \n",
       "        [[215, 227, 251],\n",
       "         [215, 227, 251],\n",
       "         [215, 227, 251],\n",
       "         ...,\n",
       "         [132, 162, 218],\n",
       "         [127, 155, 212],\n",
       "         [129, 157, 216]],\n",
       " \n",
       "        [[212, 224, 251],\n",
       "         [213, 224, 252],\n",
       "         [212, 223, 251],\n",
       "         ...,\n",
       "         [130, 159, 219],\n",
       "         [129, 157, 217],\n",
       "         [126, 154, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 178, 236],\n",
       "         [159, 185, 239],\n",
       "         [168, 190, 241],\n",
       "         ...,\n",
       "         [170, 193, 239],\n",
       "         [168, 191, 237],\n",
       "         [165, 186, 237]],\n",
       " \n",
       "        [[151, 177, 236],\n",
       "         [158, 184, 238],\n",
       "         [166, 188, 238],\n",
       "         ...,\n",
       "         [171, 194, 239],\n",
       "         [169, 192, 238],\n",
       "         [164, 185, 236]],\n",
       " \n",
       "        [[149, 176, 233],\n",
       "         [157, 183, 237],\n",
       "         [164, 185, 237],\n",
       "         ...,\n",
       "         [171, 194, 239],\n",
       "         [168, 191, 237],\n",
       "         [162, 184, 235]]], dtype=uint8),\n",
       " array([[[151, 154, 192],\n",
       "         [158, 162, 199],\n",
       "         [172, 174, 209],\n",
       "         ...,\n",
       "         [ 78,  90, 126],\n",
       "         [ 71,  80, 117],\n",
       "         [ 62,  71, 108]],\n",
       " \n",
       "        [[152, 155, 193],\n",
       "         [159, 163, 198],\n",
       "         [166, 169, 204],\n",
       "         ...,\n",
       "         [ 82,  92, 129],\n",
       "         [ 73,  83, 117],\n",
       "         [ 64,  74, 108]],\n",
       " \n",
       "        [[152, 155, 193],\n",
       "         [160, 163, 199],\n",
       "         [161, 163, 198],\n",
       "         ...,\n",
       "         [ 84,  92, 128],\n",
       "         [ 74,  85, 118],\n",
       "         [ 67,  78, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101, 115, 157],\n",
       "         [ 98, 111, 150],\n",
       "         [102, 113, 152],\n",
       "         ...,\n",
       "         [114, 125, 165],\n",
       "         [109, 122, 160],\n",
       "         [107, 118, 156]],\n",
       " \n",
       "        [[106, 120, 162],\n",
       "         [103, 116, 156],\n",
       "         [104, 116, 156],\n",
       "         ...,\n",
       "         [115, 127, 167],\n",
       "         [110, 123, 161],\n",
       "         [107, 119, 157]],\n",
       " \n",
       "        [[109, 125, 167],\n",
       "         [106, 120, 163],\n",
       "         [106, 118, 160],\n",
       "         ...,\n",
       "         [112, 125, 165],\n",
       "         [110, 123, 161],\n",
       "         [104, 117, 156]]], dtype=uint8),\n",
       " array([[[142, 141, 151],\n",
       "         [158, 149, 159],\n",
       "         [156, 149, 153],\n",
       "         ...,\n",
       "         [104, 101, 126],\n",
       "         [105, 106, 132],\n",
       "         [117, 108, 125]],\n",
       " \n",
       "        [[146, 144, 149],\n",
       "         [148, 145, 150],\n",
       "         [151, 144, 149],\n",
       "         ...,\n",
       "         [101,  95, 121],\n",
       "         [ 87,  95, 123],\n",
       "         [117, 111, 133]],\n",
       " \n",
       "        [[142, 140, 148],\n",
       "         [148, 142, 151],\n",
       "         [134, 131, 137],\n",
       "         ...,\n",
       "         [ 92,  91, 116],\n",
       "         [ 97,  96, 106],\n",
       "         [107, 105, 125]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[157, 150, 154],\n",
       "         [159, 153, 154],\n",
       "         [163, 153, 155],\n",
       "         ...,\n",
       "         [201, 187, 207],\n",
       "         [181, 174, 193],\n",
       "         [191, 182, 203]],\n",
       " \n",
       "        [[156, 150, 155],\n",
       "         [161, 154, 156],\n",
       "         [162, 155, 156],\n",
       "         ...,\n",
       "         [189, 179, 195],\n",
       "         [187, 180, 199],\n",
       "         [198, 187, 208]],\n",
       " \n",
       "        [[145, 143, 150],\n",
       "         [159, 152, 155],\n",
       "         [175, 164, 167],\n",
       "         ...,\n",
       "         [193, 180, 202],\n",
       "         [202, 193, 215],\n",
       "         [202, 192, 205]]], dtype=uint8),\n",
       " array([[[137, 168, 213],\n",
       "         [138, 172, 219],\n",
       "         [135, 172, 220],\n",
       "         ...,\n",
       "         [167, 201, 241],\n",
       "         [170, 201, 240],\n",
       "         [184, 210, 250]],\n",
       " \n",
       "        [[132, 163, 208],\n",
       "         [129, 162, 208],\n",
       "         [139, 174, 222],\n",
       "         ...,\n",
       "         [155, 190, 233],\n",
       "         [162, 194, 235],\n",
       "         [168, 196, 237]],\n",
       " \n",
       "        [[130, 160, 205],\n",
       "         [137, 170, 215],\n",
       "         [139, 173, 217],\n",
       "         ...,\n",
       "         [144, 179, 224],\n",
       "         [153, 185, 230],\n",
       "         [163, 193, 236]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[168, 203, 247],\n",
       "         [167, 202, 246],\n",
       "         [172, 205, 249],\n",
       "         ...,\n",
       "         [135, 172, 225],\n",
       "         [157, 194, 243],\n",
       "         [155, 194, 239]],\n",
       " \n",
       "        [[166, 201, 245],\n",
       "         [166, 201, 245],\n",
       "         [171, 204, 249],\n",
       "         ...,\n",
       "         [141, 175, 229],\n",
       "         [159, 194, 244],\n",
       "         [160, 196, 242]],\n",
       " \n",
       "        [[167, 202, 246],\n",
       "         [167, 202, 246],\n",
       "         [169, 202, 247],\n",
       "         ...,\n",
       "         [154, 186, 239],\n",
       "         [165, 198, 247],\n",
       "         [167, 200, 246]]], dtype=uint8),\n",
       " array([[[197, 219, 250],\n",
       "         [191, 218, 249],\n",
       "         [185, 215, 249],\n",
       "         ...,\n",
       "         [147, 190, 233],\n",
       "         [136, 181, 227],\n",
       "         [124, 165, 216]],\n",
       " \n",
       "        [[192, 214, 251],\n",
       "         [187, 213, 250],\n",
       "         [176, 208, 244],\n",
       "         ...,\n",
       "         [147, 187, 231],\n",
       "         [140, 183, 229],\n",
       "         [126, 168, 218]],\n",
       " \n",
       "        [[187, 210, 252],\n",
       "         [180, 208, 249],\n",
       "         [169, 200, 241],\n",
       "         ...,\n",
       "         [158, 191, 236],\n",
       "         [140, 180, 227],\n",
       "         [127, 167, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[175, 204, 242],\n",
       "         [172, 204, 246],\n",
       "         [174, 205, 250],\n",
       "         ...,\n",
       "         [195, 223, 254],\n",
       "         [193, 224, 255],\n",
       "         [189, 221, 255]],\n",
       " \n",
       "        [[183, 211, 247],\n",
       "         [179, 210, 250],\n",
       "         [170, 201, 246],\n",
       "         ...,\n",
       "         [195, 223, 253],\n",
       "         [190, 220, 253],\n",
       "         [187, 219, 253]],\n",
       " \n",
       "        [[190, 215, 246],\n",
       "         [187, 215, 250],\n",
       "         [176, 204, 245],\n",
       "         ...,\n",
       "         [194, 222, 254],\n",
       "         [185, 217, 251],\n",
       "         [179, 213, 252]]], dtype=uint8),\n",
       " array([[[35, 45, 45],\n",
       "         [35, 45, 45],\n",
       "         [33, 42, 46],\n",
       "         ...,\n",
       "         [61, 77, 93],\n",
       "         [66, 81, 98],\n",
       "         [65, 80, 96]],\n",
       " \n",
       "        [[35, 45, 45],\n",
       "         [35, 45, 45],\n",
       "         [33, 42, 45],\n",
       "         ...,\n",
       "         [57, 73, 90],\n",
       "         [56, 71, 89],\n",
       "         [67, 82, 98]],\n",
       " \n",
       "        [[35, 45, 45],\n",
       "         [35, 45, 45],\n",
       "         [36, 45, 48],\n",
       "         ...,\n",
       "         [58, 74, 91],\n",
       "         [55, 71, 88],\n",
       "         [61, 78, 96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[33, 43, 53],\n",
       "         [31, 43, 54],\n",
       "         [31, 43, 52],\n",
       "         ...,\n",
       "         [37, 46, 59],\n",
       "         [36, 47, 58],\n",
       "         [31, 46, 62]],\n",
       " \n",
       "        [[30, 43, 53],\n",
       "         [32, 45, 56],\n",
       "         [32, 44, 53],\n",
       "         ...,\n",
       "         [33, 49, 58],\n",
       "         [33, 47, 58],\n",
       "         [33, 46, 60]],\n",
       " \n",
       "        [[31, 43, 53],\n",
       "         [30, 45, 55],\n",
       "         [33, 48, 58],\n",
       "         ...,\n",
       "         [32, 47, 56],\n",
       "         [32, 46, 57],\n",
       "         [33, 48, 64]]], dtype=uint8),\n",
       " array([[[ 75,  87, 105],\n",
       "         [ 76,  88, 106],\n",
       "         [ 75,  87, 105],\n",
       "         ...,\n",
       "         [ 51,  67,  83],\n",
       "         [ 44,  60,  76],\n",
       "         [ 37,  53,  69]],\n",
       " \n",
       "        [[ 82,  96, 114],\n",
       "         [ 78,  92, 110],\n",
       "         [ 81,  95, 113],\n",
       "         ...,\n",
       "         [ 52,  67,  83],\n",
       "         [ 46,  61,  77],\n",
       "         [ 39,  54,  70]],\n",
       " \n",
       "        [[ 76,  91, 108],\n",
       "         [ 80,  95, 113],\n",
       "         [ 73,  88, 106],\n",
       "         ...,\n",
       "         [ 48,  62,  78],\n",
       "         [ 40,  54,  70],\n",
       "         [ 42,  56,  72]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  85, 106],\n",
       "         [ 65,  85, 106],\n",
       "         [ 65,  85, 106],\n",
       "         ...,\n",
       "         [ 59,  75,  91],\n",
       "         [ 56,  72,  88],\n",
       "         [ 53,  69,  85]],\n",
       " \n",
       "        [[ 64,  85, 107],\n",
       "         [ 64,  85, 107],\n",
       "         [ 64,  85, 107],\n",
       "         ...,\n",
       "         [ 61,  78,  92],\n",
       "         [ 61,  78,  91],\n",
       "         [ 58,  76,  89]],\n",
       " \n",
       "        [[ 63,  86, 106],\n",
       "         [ 64,  87, 105],\n",
       "         [ 63,  85, 103],\n",
       "         ...,\n",
       "         [ 65,  83, 100],\n",
       "         [ 62,  80,  97],\n",
       "         [ 59,  77,  94]]], dtype=uint8),\n",
       " array([[[ 27,  37,  49],\n",
       "         [ 39,  50,  66],\n",
       "         [ 55,  69,  90],\n",
       "         ...,\n",
       "         [172, 182, 220],\n",
       "         [170, 178, 218],\n",
       "         [170, 178, 218]],\n",
       " \n",
       "        [[ 26,  36,  53],\n",
       "         [ 45,  57,  81],\n",
       "         [ 53,  68,  97],\n",
       "         ...,\n",
       "         [171, 177, 220],\n",
       "         [170, 179, 217],\n",
       "         [172, 181, 219]],\n",
       " \n",
       "        [[ 34,  45,  62],\n",
       "         [ 50,  64,  88],\n",
       "         [ 53,  69,  99],\n",
       "         ...,\n",
       "         [172, 181, 219],\n",
       "         [172, 181, 219],\n",
       "         [173, 182, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  61,  97],\n",
       "         [ 61,  81, 116],\n",
       "         [ 67,  86, 121],\n",
       "         ...,\n",
       "         [ 53,  71, 118],\n",
       "         [ 58,  77, 125],\n",
       "         [ 93, 109, 163]],\n",
       " \n",
       "        [[ 39,  53,  89],\n",
       "         [ 64,  83, 118],\n",
       "         [ 66,  85, 120],\n",
       "         ...,\n",
       "         [ 54,  72, 119],\n",
       "         [ 63,  83, 130],\n",
       "         [ 96, 111, 166]],\n",
       " \n",
       "        [[ 36,  50,  86],\n",
       "         [ 63,  82, 117],\n",
       "         [ 65,  84, 119],\n",
       "         ...,\n",
       "         [ 54,  72, 119],\n",
       "         [ 65,  85, 132],\n",
       "         [ 96, 113, 165]]], dtype=uint8),\n",
       " array([[[182, 187, 226],\n",
       "         [178, 183, 222],\n",
       "         [184, 189, 228],\n",
       "         ...,\n",
       "         [ 92, 111, 148],\n",
       "         [112, 131, 168],\n",
       "         [114, 135, 173]],\n",
       " \n",
       "        [[183, 184, 224],\n",
       "         [174, 179, 218],\n",
       "         [179, 184, 223],\n",
       "         ...,\n",
       "         [ 89, 107, 144],\n",
       "         [ 84, 103, 140],\n",
       "         [112, 133, 171]],\n",
       " \n",
       "        [[173, 177, 217],\n",
       "         [173, 178, 217],\n",
       "         [169, 174, 213],\n",
       "         ...,\n",
       "         [ 98, 110, 147],\n",
       "         [ 84,  96, 133],\n",
       "         [ 88, 107, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[134, 160, 214],\n",
       "         [135, 161, 215],\n",
       "         [139, 165, 219],\n",
       "         ...,\n",
       "         [146, 162, 208],\n",
       "         [145, 162, 205],\n",
       "         [145, 161, 203]],\n",
       " \n",
       "        [[133, 161, 215],\n",
       "         [134, 162, 216],\n",
       "         [136, 165, 219],\n",
       "         ...,\n",
       "         [147, 163, 209],\n",
       "         [145, 161, 206],\n",
       "         [143, 159, 201]],\n",
       " \n",
       "        [[133, 161, 215],\n",
       "         [135, 161, 215],\n",
       "         [138, 165, 219],\n",
       "         ...,\n",
       "         [145, 161, 208],\n",
       "         [144, 160, 206],\n",
       "         [145, 162, 203]]], dtype=uint8),\n",
       " array([[[20,  9, 11],\n",
       "         [20,  9, 11],\n",
       "         [24, 15, 17],\n",
       "         ...,\n",
       "         [82, 77, 78],\n",
       "         [82, 77, 78],\n",
       "         [82, 77, 78]],\n",
       " \n",
       "        [[14,  7,  8],\n",
       "         [16,  9, 10],\n",
       "         [21, 15, 17],\n",
       "         ...,\n",
       "         [83, 78, 79],\n",
       "         [84, 79, 80],\n",
       "         [86, 81, 82]],\n",
       " \n",
       "        [[13,  7,  8],\n",
       "         [15,  9, 10],\n",
       "         [21, 15, 17],\n",
       "         ...,\n",
       "         [84, 78, 79],\n",
       "         [85, 80, 81],\n",
       "         [87, 82, 83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[36, 31, 32],\n",
       "         [38, 33, 34],\n",
       "         [43, 38, 39],\n",
       "         ...,\n",
       "         [46, 49, 53],\n",
       "         [47, 50, 54],\n",
       "         [49, 52, 57]],\n",
       " \n",
       "        [[36, 31, 32],\n",
       "         [41, 36, 37],\n",
       "         [45, 40, 41],\n",
       "         ...,\n",
       "         [47, 51, 52],\n",
       "         [47, 50, 54],\n",
       "         [50, 52, 57]],\n",
       " \n",
       "        [[36, 31, 32],\n",
       "         [41, 36, 37],\n",
       "         [45, 40, 41],\n",
       "         ...,\n",
       "         [50, 52, 53],\n",
       "         [50, 52, 53],\n",
       "         [54, 54, 58]]], dtype=uint8),\n",
       " array([[[149, 165, 207],\n",
       "         [149, 167, 206],\n",
       "         [150, 167, 206],\n",
       "         ...,\n",
       "         [176, 178, 196],\n",
       "         [174, 176, 194],\n",
       "         [171, 173, 190]],\n",
       " \n",
       "        [[148, 164, 206],\n",
       "         [148, 165, 204],\n",
       "         [148, 165, 204],\n",
       "         ...,\n",
       "         [177, 179, 197],\n",
       "         [176, 179, 196],\n",
       "         [174, 176, 193]],\n",
       " \n",
       "        [[148, 164, 206],\n",
       "         [147, 164, 203],\n",
       "         [146, 163, 202],\n",
       "         ...,\n",
       "         [175, 181, 195],\n",
       "         [177, 180, 195],\n",
       "         [175, 178, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[163, 167, 191],\n",
       "         [161, 165, 190],\n",
       "         [158, 162, 188],\n",
       "         ...,\n",
       "         [181, 184, 199],\n",
       "         [186, 186, 202],\n",
       "         [191, 191, 205]],\n",
       " \n",
       "        [[163, 167, 191],\n",
       "         [161, 165, 190],\n",
       "         [160, 164, 189],\n",
       "         ...,\n",
       "         [182, 185, 200],\n",
       "         [187, 187, 203],\n",
       "         [193, 193, 206]],\n",
       " \n",
       "        [[164, 168, 192],\n",
       "         [162, 166, 191],\n",
       "         [161, 165, 190],\n",
       "         ...,\n",
       "         [185, 188, 203],\n",
       "         [189, 190, 205],\n",
       "         [194, 194, 208]]], dtype=uint8),\n",
       " array([[[ 99, 107, 114],\n",
       "         [108, 115, 122],\n",
       "         [108, 114, 121],\n",
       "         ...,\n",
       "         [114, 135, 157],\n",
       "         [111, 131, 156],\n",
       "         [108, 128, 153]],\n",
       " \n",
       "        [[107, 113, 118],\n",
       "         [108, 114, 119],\n",
       "         [ 91,  97, 102],\n",
       "         ...,\n",
       "         [123, 143, 166],\n",
       "         [119, 139, 164],\n",
       "         [114, 133, 159]],\n",
       " \n",
       "        [[102, 107, 110],\n",
       "         [ 76,  81,  84],\n",
       "         [ 58,  63,  66],\n",
       "         ...,\n",
       "         [118, 136, 159],\n",
       "         [114, 131, 157],\n",
       "         [111, 127, 154]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[106, 124, 151],\n",
       "         [106, 124, 151],\n",
       "         [106, 122, 151],\n",
       "         ...,\n",
       "         [ 97, 118, 149],\n",
       "         [ 97, 118, 149],\n",
       "         [ 97, 118, 148]],\n",
       " \n",
       "        [[104, 123, 150],\n",
       "         [104, 122, 151],\n",
       "         [103, 121, 150],\n",
       "         ...,\n",
       "         [100, 121, 152],\n",
       "         [100, 121, 152],\n",
       "         [ 99, 120, 149]],\n",
       " \n",
       "        [[102, 121, 150],\n",
       "         [101, 120, 150],\n",
       "         [101, 119, 150],\n",
       "         ...,\n",
       "         [102, 123, 154],\n",
       "         [101, 122, 153],\n",
       "         [ 97, 117, 147]]], dtype=uint8),\n",
       " array([[[ 71,  99, 160],\n",
       "         [ 73, 100, 162],\n",
       "         [ 76,  99, 157],\n",
       "         ...,\n",
       "         [ 61,  87, 142],\n",
       "         [ 61,  81, 139],\n",
       "         [ 63,  83, 141]],\n",
       " \n",
       "        [[ 71,  99, 159],\n",
       "         [ 68,  96, 156],\n",
       "         [ 75, 102, 159],\n",
       "         ...,\n",
       "         [ 61,  86, 142],\n",
       "         [ 60,  79, 137],\n",
       "         [ 61,  82, 139]],\n",
       " \n",
       "        [[ 70,  98, 158],\n",
       "         [ 71,  99, 159],\n",
       "         [ 77, 101, 159],\n",
       "         ...,\n",
       "         [ 58,  83, 139],\n",
       "         [ 60,  81, 136],\n",
       "         [ 62,  83, 138]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[181, 192, 222],\n",
       "         [183, 194, 224],\n",
       "         [178, 190, 221],\n",
       "         ...,\n",
       "         [173, 184, 214],\n",
       "         [177, 186, 220],\n",
       "         [179, 188, 222]],\n",
       " \n",
       "        [[185, 196, 226],\n",
       "         [184, 195, 225],\n",
       "         [178, 189, 223],\n",
       "         ...,\n",
       "         [175, 186, 216],\n",
       "         [179, 188, 222],\n",
       "         [180, 189, 223]],\n",
       " \n",
       "        [[185, 198, 226],\n",
       "         [186, 199, 228],\n",
       "         [176, 191, 224],\n",
       "         ...,\n",
       "         [177, 189, 222],\n",
       "         [178, 189, 223],\n",
       "         [180, 191, 225]]], dtype=uint8),\n",
       " array([[[124, 143, 181],\n",
       "         [126, 142, 183],\n",
       "         [127, 143, 185],\n",
       "         ...,\n",
       "         [ 28,  61, 106],\n",
       "         [ 32,  66, 109],\n",
       "         [ 26,  56,  92]],\n",
       " \n",
       "        [[125, 145, 183],\n",
       "         [124, 140, 181],\n",
       "         [122, 138, 180],\n",
       "         ...,\n",
       "         [ 28,  62, 106],\n",
       "         [ 27,  61, 104],\n",
       "         [ 26,  61,  99]],\n",
       " \n",
       "        [[126, 145, 183],\n",
       "         [125, 143, 182],\n",
       "         [121, 137, 180],\n",
       "         ...,\n",
       "         [ 29,  62, 107],\n",
       "         [ 27,  61, 104],\n",
       "         [ 25,  61, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 129, 175],\n",
       "         [ 88, 120, 169],\n",
       "         [ 61,  91, 148],\n",
       "         ...,\n",
       "         [ 60,  94, 138],\n",
       "         [ 60,  95, 139],\n",
       "         [ 57,  93, 137]],\n",
       " \n",
       "        [[100, 128, 176],\n",
       "         [ 90, 117, 171],\n",
       "         [ 61,  91, 146],\n",
       "         ...,\n",
       "         [ 62,  96, 140],\n",
       "         [ 60,  95, 139],\n",
       "         [ 57,  93, 137]],\n",
       " \n",
       "        [[ 99, 125, 175],\n",
       "         [ 91, 118, 172],\n",
       "         [ 69,  96, 152],\n",
       "         ...,\n",
       "         [ 63,  95, 140],\n",
       "         [ 60,  95, 139],\n",
       "         [ 58,  93, 137]]], dtype=uint8),\n",
       " array([[[ 46,  54,  63],\n",
       "         [ 48,  57,  67],\n",
       "         [ 52,  61,  73],\n",
       "         ...,\n",
       "         [150, 172, 225],\n",
       "         [139, 158, 219],\n",
       "         [154, 174, 233]],\n",
       " \n",
       "        [[ 44,  52,  60],\n",
       "         [ 38,  47,  57],\n",
       "         [ 46,  55,  68],\n",
       "         ...,\n",
       "         [161, 183, 235],\n",
       "         [147, 167, 225],\n",
       "         [144, 164, 222]],\n",
       " \n",
       "        [[ 37,  45,  54],\n",
       "         [ 42,  51,  61],\n",
       "         [ 50,  60,  72],\n",
       "         ...,\n",
       "         [149, 172, 222],\n",
       "         [155, 175, 232],\n",
       "         [150, 170, 227]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  99, 151],\n",
       "         [ 79, 103, 155],\n",
       "         [ 85, 109, 161],\n",
       "         ...,\n",
       "         [128, 157, 218],\n",
       "         [134, 165, 226],\n",
       "         [132, 163, 224]],\n",
       " \n",
       "        [[ 74,  98, 150],\n",
       "         [ 77, 101, 153],\n",
       "         [ 88, 112, 164],\n",
       "         ...,\n",
       "         [121, 155, 215],\n",
       "         [128, 164, 224],\n",
       "         [126, 162, 222]],\n",
       " \n",
       "        [[ 79, 103, 155],\n",
       "         [ 83, 108, 159],\n",
       "         [ 91, 115, 167],\n",
       "         ...,\n",
       "         [131, 167, 231],\n",
       "         [122, 160, 224],\n",
       "         [116, 154, 218]]], dtype=uint8),\n",
       " array([[[173, 189, 237],\n",
       "         [150, 168, 216],\n",
       "         [153, 174, 222],\n",
       "         ...,\n",
       "         [ 21,  30,  34],\n",
       "         [ 41,  47,  51],\n",
       "         [ 44,  49,  51]],\n",
       " \n",
       "        [[161, 178, 228],\n",
       "         [143, 163, 212],\n",
       "         [152, 175, 223],\n",
       "         ...,\n",
       "         [ 25,  33,  40],\n",
       "         [ 31,  36,  40],\n",
       "         [ 44,  48,  50]],\n",
       " \n",
       "        [[148, 169, 222],\n",
       "         [151, 172, 224],\n",
       "         [154, 176, 227],\n",
       "         ...,\n",
       "         [ 36,  43,  54],\n",
       "         [ 27,  30,  35],\n",
       "         [ 39,  43,  43]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 160, 220],\n",
       "         [126, 159, 218],\n",
       "         [124, 157, 216],\n",
       "         ...,\n",
       "         [ 65,  84, 121],\n",
       "         [ 57,  76, 112],\n",
       "         [ 52,  70, 103]],\n",
       " \n",
       "        [[119, 155, 217],\n",
       "         [124, 160, 219],\n",
       "         [128, 161, 220],\n",
       "         ...,\n",
       "         [ 62,  83, 121],\n",
       "         [ 61,  80, 117],\n",
       "         [ 55,  74, 109]],\n",
       " \n",
       "        [[119, 154, 217],\n",
       "         [130, 166, 225],\n",
       "         [141, 175, 234],\n",
       "         ...,\n",
       "         [ 65,  85, 124],\n",
       "         [ 64,  83, 121],\n",
       "         [ 60,  79, 115]]], dtype=uint8),\n",
       " array([[[ 42,  66, 108],\n",
       "         [ 63,  88, 134],\n",
       "         [ 70, 101, 154],\n",
       "         ...,\n",
       "         [146, 172, 227],\n",
       "         [144, 170, 225],\n",
       "         [145, 170, 226]],\n",
       " \n",
       "        [[ 43,  67, 109],\n",
       "         [ 60,  85, 132],\n",
       "         [ 52,  83, 136],\n",
       "         ...,\n",
       "         [138, 165, 221],\n",
       "         [133, 160, 217],\n",
       "         [139, 166, 223]],\n",
       " \n",
       "        [[ 46,  71, 111],\n",
       "         [ 66,  91, 136],\n",
       "         [ 59,  90, 143],\n",
       "         ...,\n",
       "         [130, 160, 219],\n",
       "         [132, 161, 221],\n",
       "         [128, 157, 216]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 102, 163],\n",
       "         [ 84, 115, 176],\n",
       "         [ 81, 113, 172],\n",
       "         ...,\n",
       "         [ 35,  59, 119],\n",
       "         [ 53,  81, 141],\n",
       "         [ 46,  73, 133]],\n",
       " \n",
       "        [[ 82, 110, 171],\n",
       "         [ 75, 104, 164],\n",
       "         [ 87, 117, 175],\n",
       "         ...,\n",
       "         [ 47,  71, 133],\n",
       "         [ 51,  74, 136],\n",
       "         [ 58,  81, 143]],\n",
       " \n",
       "        [[ 86, 112, 174],\n",
       "         [ 73, 102, 162],\n",
       "         [ 93, 123, 180],\n",
       "         ...,\n",
       "         [ 54,  79, 141],\n",
       "         [ 55,  78, 140],\n",
       "         [ 52,  74, 136]]], dtype=uint8),\n",
       " array([[[149, 178, 232],\n",
       "         [150, 176, 230],\n",
       "         [164, 188, 240],\n",
       "         ...,\n",
       "         [105, 141, 199],\n",
       "         [108, 145, 205],\n",
       "         [ 96, 133, 195]],\n",
       " \n",
       "        [[145, 177, 230],\n",
       "         [143, 174, 225],\n",
       "         [167, 191, 241],\n",
       "         ...,\n",
       "         [107, 142, 197],\n",
       "         [109, 145, 203],\n",
       "         [ 98, 134, 199]],\n",
       " \n",
       "        [[139, 171, 225],\n",
       "         [142, 173, 225],\n",
       "         [165, 189, 241],\n",
       "         ...,\n",
       "         [107, 143, 199],\n",
       "         [105, 141, 200],\n",
       "         [103, 139, 203]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 160, 220],\n",
       "         [117, 152, 215],\n",
       "         [112, 148, 212],\n",
       "         ...,\n",
       "         [100, 142, 205],\n",
       "         [114, 154, 217],\n",
       "         [116, 152, 215]],\n",
       " \n",
       "        [[120, 150, 208],\n",
       "         [119, 147, 211],\n",
       "         [118, 145, 211],\n",
       "         ...,\n",
       "         [109, 148, 208],\n",
       "         [118, 152, 216],\n",
       "         [117, 150, 213]],\n",
       " \n",
       "        [[123, 150, 213],\n",
       "         [115, 146, 211],\n",
       "         [113, 144, 213],\n",
       "         ...,\n",
       "         [111, 148, 208],\n",
       "         [120, 153, 215],\n",
       "         [118, 149, 212]]], dtype=uint8),\n",
       " array([[[177, 198, 226],\n",
       "         [177, 198, 226],\n",
       "         [177, 198, 226],\n",
       "         ...,\n",
       "         [105, 129, 171],\n",
       "         [103, 129, 168],\n",
       "         [102, 130, 165]],\n",
       " \n",
       "        [[178, 199, 227],\n",
       "         [178, 199, 227],\n",
       "         [178, 199, 227],\n",
       "         ...,\n",
       "         [100, 125, 165],\n",
       "         [101, 128, 165],\n",
       "         [102, 130, 165]],\n",
       " \n",
       "        [[176, 197, 225],\n",
       "         [177, 198, 226],\n",
       "         [176, 197, 225],\n",
       "         ...,\n",
       "         [101, 126, 168],\n",
       "         [102, 128, 166],\n",
       "         [102, 130, 165]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[189, 206, 230],\n",
       "         [188, 204, 230],\n",
       "         [176, 194, 221],\n",
       "         ...,\n",
       "         [161, 187, 223],\n",
       "         [153, 181, 220],\n",
       "         [146, 175, 220]],\n",
       " \n",
       "        [[194, 208, 230],\n",
       "         [191, 207, 230],\n",
       "         [181, 196, 222],\n",
       "         ...,\n",
       "         [159, 185, 221],\n",
       "         [150, 178, 217],\n",
       "         [142, 172, 219]],\n",
       " \n",
       "        [[196, 207, 234],\n",
       "         [192, 205, 230],\n",
       "         [185, 198, 225],\n",
       "         ...,\n",
       "         [156, 183, 221],\n",
       "         [147, 175, 218],\n",
       "         [138, 170, 218]]], dtype=uint8),\n",
       " array([[[ 32,  47,  49],\n",
       "         [ 24,  43,  48],\n",
       "         [ 33,  53,  68],\n",
       "         ...,\n",
       "         [157, 172, 225],\n",
       "         [161, 176, 229],\n",
       "         [166, 181, 234]],\n",
       " \n",
       "        [[ 34,  48,  46],\n",
       "         [ 35,  51,  54],\n",
       "         [ 28,  46,  60],\n",
       "         ...,\n",
       "         [146, 164, 217],\n",
       "         [151, 169, 222],\n",
       "         [155, 173, 226]],\n",
       " \n",
       "        [[ 35,  49,  47],\n",
       "         [ 47,  62,  65],\n",
       "         [ 26,  44,  56],\n",
       "         ...,\n",
       "         [142, 164, 215],\n",
       "         [147, 168, 219],\n",
       "         [150, 171, 223]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 168, 215],\n",
       "         [141, 169, 222],\n",
       "         [140, 169, 224],\n",
       "         ...,\n",
       "         [148, 165, 216],\n",
       "         [152, 170, 221],\n",
       "         [161, 175, 227]],\n",
       " \n",
       "        [[146, 172, 218],\n",
       "         [142, 170, 222],\n",
       "         [145, 170, 227],\n",
       "         ...,\n",
       "         [149, 165, 218],\n",
       "         [155, 172, 221],\n",
       "         [165, 179, 228]],\n",
       " \n",
       "        [[151, 174, 221],\n",
       "         [147, 171, 222],\n",
       "         [148, 174, 227],\n",
       "         ...,\n",
       "         [149, 167, 217],\n",
       "         [160, 176, 224],\n",
       "         [169, 183, 231]]], dtype=uint8),\n",
       " array([[[182, 196, 235],\n",
       "         [179, 196, 234],\n",
       "         [177, 196, 233],\n",
       "         ...,\n",
       "         [117, 149, 189],\n",
       "         [104, 133, 164],\n",
       "         [ 75, 101, 124]],\n",
       " \n",
       "        [[173, 191, 234],\n",
       "         [169, 188, 231],\n",
       "         [168, 191, 232],\n",
       "         ...,\n",
       "         [123, 156, 198],\n",
       "         [114, 147, 179],\n",
       "         [ 75, 103, 129]],\n",
       " \n",
       "        [[169, 189, 236],\n",
       "         [163, 188, 234],\n",
       "         [165, 190, 236],\n",
       "         ...,\n",
       "         [121, 154, 196],\n",
       "         [116, 146, 181],\n",
       "         [ 79, 107, 137]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 197, 233],\n",
       "         [176, 189, 233],\n",
       "         [171, 187, 233],\n",
       "         ...,\n",
       "         [176, 186, 233],\n",
       "         [176, 186, 233],\n",
       "         [174, 184, 232]],\n",
       " \n",
       "        [[187, 197, 235],\n",
       "         [177, 193, 233],\n",
       "         [175, 188, 232],\n",
       "         ...,\n",
       "         [175, 185, 232],\n",
       "         [172, 182, 230],\n",
       "         [172, 182, 230]],\n",
       " \n",
       "        [[185, 196, 233],\n",
       "         [183, 198, 237],\n",
       "         [182, 196, 238],\n",
       "         ...,\n",
       "         [169, 182, 228],\n",
       "         [168, 180, 228],\n",
       "         [166, 180, 226]]], dtype=uint8),\n",
       " array([[[  8,  14,  26],\n",
       "         [ 30,  38,  65],\n",
       "         [ 80,  90, 129],\n",
       "         ...,\n",
       "         [104, 125, 176],\n",
       "         [109, 130, 181],\n",
       "         [113, 134, 186]],\n",
       " \n",
       "        [[ 14,  20,  34],\n",
       "         [ 40,  48,  75],\n",
       "         [ 89, 100, 139],\n",
       "         ...,\n",
       "         [104, 123, 174],\n",
       "         [109, 128, 179],\n",
       "         [111, 132, 184]],\n",
       " \n",
       "        [[ 19,  25,  42],\n",
       "         [ 50,  59,  87],\n",
       "         [ 98, 109, 149],\n",
       "         ...,\n",
       "         [103, 119, 170],\n",
       "         [107, 126, 177],\n",
       "         [110, 131, 183]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[163, 174, 220],\n",
       "         [171, 185, 227],\n",
       "         [179, 195, 232],\n",
       "         ...,\n",
       "         [178, 192, 233],\n",
       "         [191, 201, 237],\n",
       "         [201, 209, 238]],\n",
       " \n",
       "        [[164, 176, 221],\n",
       "         [172, 186, 227],\n",
       "         [179, 195, 232],\n",
       "         ...,\n",
       "         [181, 195, 236],\n",
       "         [194, 202, 238],\n",
       "         [201, 207, 238]],\n",
       " \n",
       "        [[163, 177, 221],\n",
       "         [171, 186, 229],\n",
       "         [179, 195, 232],\n",
       "         ...,\n",
       "         [186, 196, 237],\n",
       "         [196, 203, 241],\n",
       "         [201, 207, 242]]], dtype=uint8),\n",
       " array([[[101, 113, 131],\n",
       "         [ 97, 111, 129],\n",
       "         [ 91, 108, 127],\n",
       "         ...,\n",
       "         [111, 134, 170],\n",
       "         [115, 139, 175],\n",
       "         [119, 143, 179]],\n",
       " \n",
       "        [[ 97, 111, 129],\n",
       "         [ 97, 112, 130],\n",
       "         [ 89, 106, 125],\n",
       "         ...,\n",
       "         [106, 128, 164],\n",
       "         [116, 138, 174],\n",
       "         [123, 145, 181]],\n",
       " \n",
       "        [[ 97, 111, 131],\n",
       "         [ 95, 111, 130],\n",
       "         [ 87, 106, 124],\n",
       "         ...,\n",
       "         [109, 131, 167],\n",
       "         [109, 131, 167],\n",
       "         [114, 136, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89, 111, 136],\n",
       "         [ 88, 111, 140],\n",
       "         [ 85, 112, 143],\n",
       "         ...,\n",
       "         [ 79, 108, 153],\n",
       "         [ 79, 108, 153],\n",
       "         [ 79, 108, 153]],\n",
       " \n",
       "        [[ 89, 111, 136],\n",
       "         [ 89, 113, 142],\n",
       "         [ 87, 113, 145],\n",
       "         ...,\n",
       "         [ 80, 109, 154],\n",
       "         [ 80, 109, 154],\n",
       "         [ 80, 109, 154]],\n",
       " \n",
       "        [[ 91, 112, 138],\n",
       "         [ 88, 112, 141],\n",
       "         [ 87, 114, 145],\n",
       "         ...,\n",
       "         [ 78, 107, 152],\n",
       "         [ 78, 107, 152],\n",
       "         [ 78, 107, 152]]], dtype=uint8),\n",
       " array([[[ 89,  96, 155],\n",
       "         [112, 116, 171],\n",
       "         [136, 138, 189],\n",
       "         ...,\n",
       "         [220, 214, 234],\n",
       "         [210, 203, 223],\n",
       "         [137, 136, 163]],\n",
       " \n",
       "        [[ 89,  97, 155],\n",
       "         [117, 121, 176],\n",
       "         [126, 129, 179],\n",
       "         ...,\n",
       "         [216, 210, 231],\n",
       "         [214, 207, 227],\n",
       "         [152, 151, 178]],\n",
       " \n",
       "        [[ 82,  90, 147],\n",
       "         [116, 121, 176],\n",
       "         [135, 138, 188],\n",
       "         ...,\n",
       "         [213, 208, 230],\n",
       "         [211, 208, 227],\n",
       "         [165, 163, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[199, 197, 226],\n",
       "         [181, 182, 216],\n",
       "         [142, 147, 188],\n",
       "         ...,\n",
       "         [222, 218, 236],\n",
       "         [224, 218, 236],\n",
       "         [223, 217, 236]],\n",
       " \n",
       "        [[208, 204, 231],\n",
       "         [191, 189, 226],\n",
       "         [166, 170, 209],\n",
       "         ...,\n",
       "         [224, 217, 238],\n",
       "         [222, 217, 238],\n",
       "         [222, 217, 238]],\n",
       " \n",
       "        [[213, 210, 235],\n",
       "         [194, 193, 227],\n",
       "         [180, 185, 221],\n",
       "         ...,\n",
       "         [224, 217, 237],\n",
       "         [222, 217, 238],\n",
       "         [222, 217, 238]]], dtype=uint8),\n",
       " array([[[ 27,  33,  56],\n",
       "         [ 30,  37,  62],\n",
       "         [ 30,  40,  67],\n",
       "         ...,\n",
       "         [ 79,  88, 138],\n",
       "         [ 85,  93, 147],\n",
       "         [ 87,  97, 152]],\n",
       " \n",
       "        [[ 28,  33,  57],\n",
       "         [ 30,  37,  62],\n",
       "         [ 32,  41,  68],\n",
       "         ...,\n",
       "         [ 79,  87, 137],\n",
       "         [ 79,  87, 139],\n",
       "         [ 84,  91, 146]],\n",
       " \n",
       "        [[ 29,  35,  59],\n",
       "         [ 32,  39,  64],\n",
       "         [ 34,  43,  70],\n",
       "         ...,\n",
       "         [ 79,  85, 134],\n",
       "         [ 80,  87, 137],\n",
       "         [ 82,  90, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 39,  47,  77],\n",
       "         [ 40,  47,  80],\n",
       "         [ 42,  49,  83],\n",
       "         ...,\n",
       "         [ 28,  34,  69],\n",
       "         [ 28,  34,  71],\n",
       "         [ 34,  39,  78]],\n",
       " \n",
       "        [[ 40,  48,  78],\n",
       "         [ 42,  49,  82],\n",
       "         [ 43,  49,  83],\n",
       "         ...,\n",
       "         [ 29,  35,  70],\n",
       "         [ 28,  34,  71],\n",
       "         [ 34,  39,  78]],\n",
       " \n",
       "        [[ 37,  45,  75],\n",
       "         [ 40,  47,  80],\n",
       "         [ 42,  48,  82],\n",
       "         ...,\n",
       "         [ 28,  34,  69],\n",
       "         [ 30,  36,  73],\n",
       "         [ 34,  39,  78]]], dtype=uint8),\n",
       " array([[[88, 80, 80],\n",
       "         [86, 78, 78],\n",
       "         [82, 76, 76],\n",
       "         ...,\n",
       "         [44, 45, 43],\n",
       "         [44, 45, 43],\n",
       "         [38, 41, 39]],\n",
       " \n",
       "        [[82, 74, 74],\n",
       "         [82, 74, 74],\n",
       "         [79, 73, 73],\n",
       "         ...,\n",
       "         [43, 44, 42],\n",
       "         [44, 45, 43],\n",
       "         [39, 42, 40]],\n",
       " \n",
       "        [[78, 70, 70],\n",
       "         [77, 69, 69],\n",
       "         [73, 67, 66],\n",
       "         ...,\n",
       "         [42, 42, 41],\n",
       "         [42, 42, 41],\n",
       "         [41, 43, 41]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[58, 57, 60],\n",
       "         [58, 57, 61],\n",
       "         [58, 57, 61],\n",
       "         ...,\n",
       "         [53, 51, 51],\n",
       "         [52, 50, 49],\n",
       "         [46, 49, 47]],\n",
       " \n",
       "        [[60, 59, 61],\n",
       "         [59, 58, 60],\n",
       "         [59, 58, 62],\n",
       "         ...,\n",
       "         [54, 53, 53],\n",
       "         [51, 52, 50],\n",
       "         [48, 51, 49]],\n",
       " \n",
       "        [[61, 61, 61],\n",
       "         [60, 60, 60],\n",
       "         [60, 59, 60],\n",
       "         ...,\n",
       "         [54, 54, 54],\n",
       "         [51, 51, 51],\n",
       "         [50, 51, 49]]], dtype=uint8),\n",
       " array([[[102, 124, 152],\n",
       "         [ 99, 120, 147],\n",
       "         [102, 120, 148],\n",
       "         ...,\n",
       "         [ 68,  66,  68],\n",
       "         [ 77,  74,  76],\n",
       "         [106, 104, 104]],\n",
       " \n",
       "        [[100, 120, 145],\n",
       "         [101, 118, 143],\n",
       "         [ 94, 109, 133],\n",
       "         ...,\n",
       "         [ 63,  66,  70],\n",
       "         [ 57,  58,  62],\n",
       "         [ 60,  59,  62]],\n",
       " \n",
       "        [[ 85,  98, 121],\n",
       "         [ 78,  92, 112],\n",
       "         [ 74,  85, 106],\n",
       "         ...,\n",
       "         [ 73,  81,  89],\n",
       "         [ 68,  73,  80],\n",
       "         [ 64,  66,  71]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 110, 133],\n",
       "         [ 93, 107, 130],\n",
       "         [ 94, 108, 133],\n",
       "         ...,\n",
       "         [ 77,  92, 131],\n",
       "         [ 81,  93, 130],\n",
       "         [ 85,  94, 131]],\n",
       " \n",
       "        [[ 99, 113, 136],\n",
       "         [ 94, 108, 131],\n",
       "         [ 95, 108, 134],\n",
       "         ...,\n",
       "         [ 73,  88, 130],\n",
       "         [ 76,  88, 127],\n",
       "         [ 80,  89, 126]],\n",
       " \n",
       "        [[101, 115, 138],\n",
       "         [ 97, 111, 134],\n",
       "         [ 91, 105, 130],\n",
       "         ...,\n",
       "         [ 72,  86, 128],\n",
       "         [ 75,  86, 125],\n",
       "         [ 80,  89, 127]]], dtype=uint8),\n",
       " array([[[144, 153, 217],\n",
       "         [142, 150, 213],\n",
       "         [151, 158, 221],\n",
       "         ...,\n",
       "         [ 22,  29,  43],\n",
       "         [ 16,  22,  28],\n",
       "         [ 12,  19,  24]],\n",
       " \n",
       "        [[142, 152, 213],\n",
       "         [138, 146, 208],\n",
       "         [140, 147, 210],\n",
       "         ...,\n",
       "         [ 33,  42,  63],\n",
       "         [ 19,  28,  40],\n",
       "         [ 13,  24,  34]],\n",
       " \n",
       "        [[135, 146, 204],\n",
       "         [140, 150, 205],\n",
       "         [138, 149, 202],\n",
       "         ...,\n",
       "         [ 45,  56,  85],\n",
       "         [ 31,  44,  64],\n",
       "         [ 19,  30,  45]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 154, 225],\n",
       "         [135, 160, 231],\n",
       "         [138, 164, 230],\n",
       "         ...,\n",
       "         [127, 150, 206],\n",
       "         [127, 150, 198],\n",
       "         [131, 149, 196]],\n",
       " \n",
       "        [[123, 151, 223],\n",
       "         [132, 157, 228],\n",
       "         [135, 161, 228],\n",
       "         ...,\n",
       "         [127, 149, 205],\n",
       "         [129, 151, 200],\n",
       "         [132, 150, 199]],\n",
       " \n",
       "        [[121, 150, 221],\n",
       "         [129, 154, 225],\n",
       "         [132, 156, 228],\n",
       "         ...,\n",
       "         [128, 149, 204],\n",
       "         [131, 152, 204],\n",
       "         [136, 156, 213]]], dtype=uint8),\n",
       " array([[[205, 224, 248],\n",
       "         [196, 214, 250],\n",
       "         [186, 202, 238],\n",
       "         ...,\n",
       "         [241, 250, 254],\n",
       "         [244, 250, 254],\n",
       "         [250, 253, 254]],\n",
       " \n",
       "        [[206, 223, 253],\n",
       "         [196, 213, 248],\n",
       "         [178, 196, 234],\n",
       "         ...,\n",
       "         [238, 250, 255],\n",
       "         [241, 251, 254],\n",
       "         [246, 252, 255]],\n",
       " \n",
       "        [[202, 218, 252],\n",
       "         [186, 201, 240],\n",
       "         [164, 189, 228],\n",
       "         ...,\n",
       "         [239, 250, 255],\n",
       "         [238, 250, 254],\n",
       "         [241, 252, 254]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[250, 255, 254],\n",
       "         [249, 254, 253],\n",
       "         [245, 252, 254],\n",
       "         ...,\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254]],\n",
       " \n",
       "        [[250, 255, 254],\n",
       "         [248, 253, 254],\n",
       "         [241, 251, 254],\n",
       "         ...,\n",
       "         [252, 254, 254],\n",
       "         [252, 254, 254],\n",
       "         [253, 254, 254]],\n",
       " \n",
       "        [[247, 254, 253],\n",
       "         [241, 252, 254],\n",
       "         [239, 250, 254],\n",
       "         ...,\n",
       "         [253, 254, 254],\n",
       "         [253, 254, 254],\n",
       "         [252, 254, 254]]], dtype=uint8),\n",
       " array([[[ 26,  34,  57],\n",
       "         [ 31,  38,  63],\n",
       "         [ 35,  42,  69],\n",
       "         ...,\n",
       "         [ 85,  95, 145],\n",
       "         [ 84,  95, 145],\n",
       "         [ 81,  94, 146]],\n",
       " \n",
       "        [[ 27,  35,  58],\n",
       "         [ 32,  39,  65],\n",
       "         [ 36,  42,  70],\n",
       "         ...,\n",
       "         [ 84,  95, 143],\n",
       "         [ 80,  93, 142],\n",
       "         [ 71,  84, 137]],\n",
       " \n",
       "        [[ 26,  34,  57],\n",
       "         [ 34,  40,  65],\n",
       "         [ 36,  41,  70],\n",
       "         ...,\n",
       "         [ 78,  91, 138],\n",
       "         [ 75,  90, 136],\n",
       "         [ 67,  79, 132]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 38,  44,  79],\n",
       "         [ 38,  44,  79],\n",
       "         [ 37,  42,  77],\n",
       "         ...,\n",
       "         [ 24,  30,  62],\n",
       "         [ 31,  37,  70],\n",
       "         [ 36,  44,  88]],\n",
       " \n",
       "        [[ 38,  45,  78],\n",
       "         [ 38,  45,  78],\n",
       "         [ 37,  44,  77],\n",
       "         ...,\n",
       "         [ 23,  31,  64],\n",
       "         [ 29,  37,  71],\n",
       "         [ 36,  44,  88]],\n",
       " \n",
       "        [[ 38,  46,  76],\n",
       "         [ 38,  45,  78],\n",
       "         [ 38,  44,  79],\n",
       "         ...,\n",
       "         [ 27,  34,  67],\n",
       "         [ 34,  40,  75],\n",
       "         [ 38,  44,  88]]], dtype=uint8),\n",
       " array([[[121, 130, 176],\n",
       "         [130, 139, 182],\n",
       "         [144, 151, 194],\n",
       "         ...,\n",
       "         [222, 216, 233],\n",
       "         [212, 206, 227],\n",
       "         [152, 147, 177]],\n",
       " \n",
       "        [[125, 133, 180],\n",
       "         [129, 137, 181],\n",
       "         [142, 149, 192],\n",
       "         ...,\n",
       "         [221, 216, 231],\n",
       "         [215, 209, 230],\n",
       "         [165, 160, 189]],\n",
       " \n",
       "        [[121, 129, 176],\n",
       "         [130, 139, 183],\n",
       "         [141, 149, 189],\n",
       "         ...,\n",
       "         [220, 215, 230],\n",
       "         [218, 211, 233],\n",
       "         [177, 173, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 187, 222],\n",
       "         [172, 179, 217],\n",
       "         [137, 146, 190],\n",
       "         ...,\n",
       "         [222, 217, 238],\n",
       "         [222, 217, 238],\n",
       "         [220, 215, 236]],\n",
       " \n",
       "        [[202, 200, 233],\n",
       "         [187, 190, 225],\n",
       "         [164, 170, 210],\n",
       "         ...,\n",
       "         [222, 217, 238],\n",
       "         [222, 217, 238],\n",
       "         [219, 214, 235]],\n",
       " \n",
       "        [[207, 203, 234],\n",
       "         [194, 193, 227],\n",
       "         [181, 186, 223],\n",
       "         ...,\n",
       "         [222, 217, 238],\n",
       "         [220, 215, 236],\n",
       "         [219, 214, 235]]], dtype=uint8),\n",
       " array([[[ 99, 111, 150],\n",
       "         [ 49,  65, 102],\n",
       "         [ 52,  71, 107],\n",
       "         ...,\n",
       "         [ 35,  51,  99],\n",
       "         [ 32,  48,  95],\n",
       "         [ 25,  40,  86]],\n",
       " \n",
       "        [[ 32,  48,  83],\n",
       "         [ 72,  89, 125],\n",
       "         [ 60,  78, 115],\n",
       "         ...,\n",
       "         [ 36,  55, 109],\n",
       "         [ 30,  47,  99],\n",
       "         [ 21,  37,  85]],\n",
       " \n",
       "        [[ 40,  57,  98],\n",
       "         [ 50,  66, 107],\n",
       "         [ 64,  81, 121],\n",
       "         ...,\n",
       "         [ 35,  53, 115],\n",
       "         [ 26,  45, 102],\n",
       "         [ 14,  31,  83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 18,  25,  64],\n",
       "         [ 15,  24,  58],\n",
       "         [ 25,  34,  64],\n",
       "         ...,\n",
       "         [152, 176, 210],\n",
       "         [142, 166, 201],\n",
       "         [127, 152, 186]],\n",
       " \n",
       "        [[ 15,  30,  76],\n",
       "         [ 18,  32,  75],\n",
       "         [ 25,  35,  75],\n",
       "         ...,\n",
       "         [136, 159, 194],\n",
       "         [131, 153, 188],\n",
       "         [128, 150, 186]],\n",
       " \n",
       "        [[ 15,  36,  88],\n",
       "         [ 15,  34,  84],\n",
       "         [ 21,  36,  86],\n",
       "         ...,\n",
       "         [138, 159, 193],\n",
       "         [129, 149, 184],\n",
       "         [123, 143, 178]]], dtype=uint8),\n",
       " array([[[113, 122, 174],\n",
       "         [112, 120, 172],\n",
       "         [118, 127, 177],\n",
       "         ...,\n",
       "         [123, 135, 187],\n",
       "         [121, 134, 186],\n",
       "         [117, 130, 182]],\n",
       " \n",
       "        [[114, 123, 173],\n",
       "         [115, 125, 175],\n",
       "         [118, 127, 177],\n",
       "         ...,\n",
       "         [122, 133, 185],\n",
       "         [124, 137, 189],\n",
       "         [120, 132, 186]],\n",
       " \n",
       "        [[117, 124, 174],\n",
       "         [116, 123, 173],\n",
       "         [124, 131, 181],\n",
       "         ...,\n",
       "         [113, 121, 174],\n",
       "         [119, 128, 183],\n",
       "         [118, 127, 181]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 141, 199],\n",
       "         [127, 140, 196],\n",
       "         [127, 141, 194],\n",
       "         ...,\n",
       "         [135, 150, 196],\n",
       "         [131, 145, 191],\n",
       "         [127, 142, 188]],\n",
       " \n",
       "        [[129, 141, 199],\n",
       "         [129, 141, 199],\n",
       "         [128, 141, 197],\n",
       "         ...,\n",
       "         [132, 147, 193],\n",
       "         [131, 146, 192],\n",
       "         [130, 144, 191]],\n",
       " \n",
       "        [[130, 142, 200],\n",
       "         [129, 141, 199],\n",
       "         [132, 144, 201],\n",
       "         ...,\n",
       "         [133, 148, 194],\n",
       "         [132, 147, 193],\n",
       "         [130, 144, 192]]], dtype=uint8),\n",
       " array([[[ 93, 117, 153],\n",
       "         [ 88, 112, 147],\n",
       "         [ 88, 110, 145],\n",
       "         ...,\n",
       "         [ 40,  49,  62],\n",
       "         [ 43,  50,  59],\n",
       "         [ 45,  52,  61]],\n",
       " \n",
       "        [[ 96, 120, 156],\n",
       "         [ 91, 114, 150],\n",
       "         [ 87, 109, 144],\n",
       "         ...,\n",
       "         [ 42,  51,  61],\n",
       "         [ 44,  52,  61],\n",
       "         [ 49,  56,  65]],\n",
       " \n",
       "        [[ 82, 107, 141],\n",
       "         [ 76, 100, 136],\n",
       "         [ 80, 102, 138],\n",
       "         ...,\n",
       "         [ 43,  52,  62],\n",
       "         [ 43,  51,  60],\n",
       "         [ 49,  56,  65]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 42,  60,  94],\n",
       "         [ 38,  57,  90],\n",
       "         [ 40,  59,  91],\n",
       "         ...,\n",
       "         [ 47,  67,  95],\n",
       "         [ 48,  64,  90],\n",
       "         [ 47,  64,  85]],\n",
       " \n",
       "        [[ 39,  58,  92],\n",
       "         [ 36,  54,  87],\n",
       "         [ 39,  57,  88],\n",
       "         ...,\n",
       "         [ 46,  65,  94],\n",
       "         [ 47,  62,  88],\n",
       "         [ 48,  62,  84]],\n",
       " \n",
       "        [[ 34,  53,  86],\n",
       "         [ 34,  53,  85],\n",
       "         [ 38,  56,  87],\n",
       "         ...,\n",
       "         [ 46,  63,  92],\n",
       "         [ 45,  61,  87],\n",
       "         [ 46,  60,  82]]], dtype=uint8),\n",
       " array([[[ 94, 132, 190],\n",
       "         [110, 147, 203],\n",
       "         [126, 163, 218],\n",
       "         ...,\n",
       "         [153, 177, 237],\n",
       "         [157, 181, 240],\n",
       "         [158, 185, 242]],\n",
       " \n",
       "        [[102, 138, 193],\n",
       "         [111, 147, 202],\n",
       "         [125, 160, 214],\n",
       "         ...,\n",
       "         [140, 165, 227],\n",
       "         [144, 170, 230],\n",
       "         [146, 174, 231]],\n",
       " \n",
       "        [[105, 139, 192],\n",
       "         [125, 159, 213],\n",
       "         [137, 170, 224],\n",
       "         ...,\n",
       "         [128, 152, 217],\n",
       "         [129, 157, 218],\n",
       "         [133, 161, 221]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 175, 228],\n",
       "         [149, 177, 231],\n",
       "         [155, 183, 237],\n",
       "         ...,\n",
       "         [164, 187, 249],\n",
       "         [162, 187, 249],\n",
       "         [167, 193, 251]],\n",
       " \n",
       "        [[140, 170, 225],\n",
       "         [144, 174, 229],\n",
       "         [150, 179, 235],\n",
       "         ...,\n",
       "         [164, 188, 250],\n",
       "         [161, 189, 250],\n",
       "         [167, 195, 253]],\n",
       " \n",
       "        [[136, 166, 221],\n",
       "         [140, 170, 225],\n",
       "         [145, 175, 230],\n",
       "         ...,\n",
       "         [165, 189, 251],\n",
       "         [162, 190, 250],\n",
       "         [166, 197, 253]]], dtype=uint8),\n",
       " array([[[167, 191, 236],\n",
       "         [168, 191, 237],\n",
       "         [167, 190, 238],\n",
       "         ...,\n",
       "         [ 72,  95, 142],\n",
       "         [ 41,  55,  98],\n",
       "         [  2,   6,  42]],\n",
       " \n",
       "        [[164, 187, 234],\n",
       "         [164, 187, 234],\n",
       "         [163, 186, 234],\n",
       "         ...,\n",
       "         [ 77, 100, 147],\n",
       "         [ 50,  64, 106],\n",
       "         [  3,   7,  43]],\n",
       " \n",
       "        [[159, 183, 229],\n",
       "         [158, 182, 230],\n",
       "         [158, 182, 230],\n",
       "         ...,\n",
       "         [ 86, 109, 154],\n",
       "         [ 59,  74, 115],\n",
       "         [  6,  10,  44]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 171, 223],\n",
       "         [150, 174, 225],\n",
       "         [155, 178, 226],\n",
       "         ...,\n",
       "         [140, 167, 204],\n",
       "         [136, 163, 200],\n",
       "         [126, 150, 188]],\n",
       " \n",
       "        [[139, 166, 220],\n",
       "         [145, 172, 224],\n",
       "         [153, 178, 229],\n",
       "         ...,\n",
       "         [135, 163, 203],\n",
       "         [133, 159, 199],\n",
       "         [125, 146, 187]],\n",
       " \n",
       "        [[134, 162, 216],\n",
       "         [142, 168, 222],\n",
       "         [153, 177, 229],\n",
       "         ...,\n",
       "         [133, 161, 201],\n",
       "         [132, 157, 197],\n",
       "         [124, 144, 185]]], dtype=uint8),\n",
       " array([[[ 76,  86, 133],\n",
       "         [ 78,  89, 136],\n",
       "         [ 80,  94, 142],\n",
       "         ...,\n",
       "         [110, 125, 181],\n",
       "         [113, 128, 183],\n",
       "         [114, 131, 187]],\n",
       " \n",
       "        [[ 75,  85, 132],\n",
       "         [ 76,  88, 134],\n",
       "         [ 77,  91, 138],\n",
       "         ...,\n",
       "         [107, 122, 178],\n",
       "         [108, 123, 179],\n",
       "         [110, 127, 183]],\n",
       " \n",
       "        [[ 73,  84, 130],\n",
       "         [ 71,  84, 130],\n",
       "         [ 69,  82, 128],\n",
       "         ...,\n",
       "         [102, 117, 170],\n",
       "         [104, 119, 172],\n",
       "         [105, 121, 177]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 103, 156],\n",
       "         [ 93, 105, 158],\n",
       "         [ 96, 109, 162],\n",
       "         ...,\n",
       "         [ 88,  95, 154],\n",
       "         [ 83,  90, 150],\n",
       "         [ 82,  90, 150]],\n",
       " \n",
       "        [[ 89, 101, 155],\n",
       "         [ 91, 103, 157],\n",
       "         [ 94, 106, 160],\n",
       "         ...,\n",
       "         [ 84,  94, 152],\n",
       "         [ 82,  92, 151],\n",
       "         [ 84,  92, 152]],\n",
       " \n",
       "        [[ 87,  99, 153],\n",
       "         [ 89, 100, 155],\n",
       "         [ 91, 102, 159],\n",
       "         ...,\n",
       "         [ 85,  96, 153],\n",
       "         [ 83,  94, 152],\n",
       "         [ 82,  92, 152]]], dtype=uint8),\n",
       " array([[[114, 127, 183],\n",
       "         [112, 126, 180],\n",
       "         [110, 126, 179],\n",
       "         ...,\n",
       "         [ 71,  84, 130],\n",
       "         [ 61,  73, 113],\n",
       "         [ 59,  70, 108]],\n",
       " \n",
       "        [[113, 126, 182],\n",
       "         [110, 123, 178],\n",
       "         [103, 119, 170],\n",
       "         ...,\n",
       "         [ 75,  87, 132],\n",
       "         [ 62,  74, 114],\n",
       "         [ 59,  70, 108]],\n",
       " \n",
       "        [[108, 122, 175],\n",
       "         [106, 120, 173],\n",
       "         [106, 120, 173],\n",
       "         ...,\n",
       "         [ 72,  85, 129],\n",
       "         [ 60,  72, 112],\n",
       "         [ 58,  69, 106]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 86,  98, 152],\n",
       "         [ 89, 102, 155],\n",
       "         [ 93, 107, 157],\n",
       "         ...,\n",
       "         [ 90, 105, 154],\n",
       "         [ 88, 103, 152],\n",
       "         [ 83,  95, 143]],\n",
       " \n",
       "        [[ 88, 100, 154],\n",
       "         [ 91, 104, 157],\n",
       "         [ 92, 106, 158],\n",
       "         ...,\n",
       "         [ 88, 104, 153],\n",
       "         [ 86, 100, 150],\n",
       "         [ 80,  93, 141]],\n",
       " \n",
       "        [[ 90, 102, 156],\n",
       "         [ 92, 104, 158],\n",
       "         [ 91, 105, 158],\n",
       "         ...,\n",
       "         [ 88, 103, 153],\n",
       "         [ 84,  99, 148],\n",
       "         [ 78,  92, 140]]], dtype=uint8),\n",
       " array([[[ 67,  63,  69],\n",
       "         [ 67,  68,  68],\n",
       "         [ 71,  73,  71],\n",
       "         ...,\n",
       "         [142, 138, 140],\n",
       "         [140, 138, 140],\n",
       "         [139, 138, 140]],\n",
       " \n",
       "        [[ 69,  65,  70],\n",
       "         [ 69,  69,  69],\n",
       "         [ 71,  71,  70],\n",
       "         ...,\n",
       "         [143, 139, 141],\n",
       "         [140, 139, 141],\n",
       "         [140, 139, 141]],\n",
       " \n",
       "        [[ 68,  65,  69],\n",
       "         [ 69,  69,  69],\n",
       "         [ 72,  70,  70],\n",
       "         ...,\n",
       "         [141, 137, 139],\n",
       "         [142, 139, 141],\n",
       "         [141, 140, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93,  87,  92],\n",
       "         [ 93,  89,  94],\n",
       "         [ 94,  90,  95],\n",
       "         ...,\n",
       "         [ 99,  97, 107],\n",
       "         [102,  98, 109],\n",
       "         [108, 104, 115]],\n",
       " \n",
       "        [[ 92,  87,  92],\n",
       "         [ 92,  90,  95],\n",
       "         [ 94,  93,  97],\n",
       "         ...,\n",
       "         [101,  98, 109],\n",
       "         [101, 100, 110],\n",
       "         [108, 107, 117]],\n",
       " \n",
       "        [[ 90,  88,  93],\n",
       "         [ 94,  93,  97],\n",
       "         [ 96,  97, 102],\n",
       "         ...,\n",
       "         [100, 100, 110],\n",
       "         [100, 101, 111],\n",
       "         [108, 107, 117]]], dtype=uint8),\n",
       " array([[[119, 182, 232],\n",
       "         [119, 183, 232],\n",
       "         [117, 179, 225],\n",
       "         ...,\n",
       "         [ 53,  97, 117],\n",
       "         [ 69, 111, 133],\n",
       "         [ 61, 104, 127]],\n",
       " \n",
       "        [[111, 177, 225],\n",
       "         [114, 181, 226],\n",
       "         [114, 178, 221],\n",
       "         ...,\n",
       "         [ 61,  89, 106],\n",
       "         [ 49,  81,  95],\n",
       "         [ 68, 100, 112]],\n",
       " \n",
       "        [[109, 179, 220],\n",
       "         [102, 172, 211],\n",
       "         [104, 169, 207],\n",
       "         ...,\n",
       "         [ 32,  50,  62],\n",
       "         [ 38,  60,  67],\n",
       "         [ 51,  73,  79]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68, 146, 197],\n",
       "         [ 71, 147, 200],\n",
       "         [ 69, 142, 194],\n",
       "         ...,\n",
       "         [ 62, 106, 157],\n",
       "         [ 48,  95, 147],\n",
       "         [ 43,  91, 144]],\n",
       " \n",
       "        [[ 72, 150, 198],\n",
       "         [ 70, 145, 198],\n",
       "         [ 70, 144, 196],\n",
       "         ...,\n",
       "         [ 58, 107, 162],\n",
       "         [ 56, 111, 164],\n",
       "         [ 46, 103, 158]],\n",
       " \n",
       "        [[ 77, 152, 200],\n",
       "         [ 74, 148, 196],\n",
       "         [ 76, 146, 199],\n",
       "         ...,\n",
       "         [ 74, 131, 186],\n",
       "         [ 70, 128, 183],\n",
       "         [ 58, 120, 176]]], dtype=uint8),\n",
       " array([[[ 29,  29,  35],\n",
       "         [ 31,  31,  37],\n",
       "         [ 29,  27,  37],\n",
       "         ...,\n",
       "         [ 87,  87, 119],\n",
       "         [ 87,  89, 120],\n",
       "         [ 85,  90, 121]],\n",
       " \n",
       "        [[ 34,  34,  40],\n",
       "         [ 32,  32,  39],\n",
       "         [ 28,  27,  36],\n",
       "         ...,\n",
       "         [ 89,  91, 121],\n",
       "         [ 90,  93, 123],\n",
       "         [ 85,  93, 123]],\n",
       " \n",
       "        [[ 34,  33,  42],\n",
       "         [ 31,  30,  39],\n",
       "         [ 26,  25,  34],\n",
       "         ...,\n",
       "         [ 92,  94, 124],\n",
       "         [ 92,  96, 125],\n",
       "         [ 98, 104, 135]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  56,  87],\n",
       "         [ 59,  61,  91],\n",
       "         [ 63,  66,  96],\n",
       "         ...,\n",
       "         [ 41,  44,  72],\n",
       "         [ 43,  45,  73],\n",
       "         [ 41,  42,  68]],\n",
       " \n",
       "        [[ 59,  58,  90],\n",
       "         [ 63,  65,  96],\n",
       "         [ 66,  68,  99],\n",
       "         ...,\n",
       "         [ 49,  52,  80],\n",
       "         [ 51,  54,  81],\n",
       "         [ 47,  48,  74]],\n",
       " \n",
       "        [[ 63,  62,  97],\n",
       "         [ 66,  66, 102],\n",
       "         [ 70,  72, 107],\n",
       "         ...,\n",
       "         [ 55,  58,  86],\n",
       "         [ 56,  58,  86],\n",
       "         [ 54,  55,  81]]], dtype=uint8),\n",
       " array([[[ 87,  95, 125],\n",
       "         [ 87,  95, 125],\n",
       "         [ 85,  91, 122],\n",
       "         ...,\n",
       "         [ 14,  16,  16],\n",
       "         [ 15,  17,  18],\n",
       "         [ 18,  20,  21]],\n",
       " \n",
       "        [[ 88,  98, 128],\n",
       "         [ 90,  98, 128],\n",
       "         [ 83,  91, 121],\n",
       "         ...,\n",
       "         [ 12,  14,  15],\n",
       "         [ 14,  16,  17],\n",
       "         [ 19,  21,  22]],\n",
       " \n",
       "        [[ 89, 100, 129],\n",
       "         [ 87,  96, 125],\n",
       "         [ 85,  92, 121],\n",
       "         ...,\n",
       "         [ 16,  15,  17],\n",
       "         [ 14,  13,  15],\n",
       "         [ 20,  19,  21]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 48,  51,  72],\n",
       "         [ 43,  46,  67],\n",
       "         [ 44,  47,  68],\n",
       "         ...,\n",
       "         [ 62,  63,  86],\n",
       "         [ 57,  57,  80],\n",
       "         [ 48,  49,  73]],\n",
       " \n",
       "        [[ 53,  56,  77],\n",
       "         [ 48,  51,  72],\n",
       "         [ 47,  50,  71],\n",
       "         ...,\n",
       "         [ 62,  63,  88],\n",
       "         [ 57,  58,  82],\n",
       "         [ 50,  51,  75]],\n",
       " \n",
       "        [[ 57,  59,  83],\n",
       "         [ 53,  55,  79],\n",
       "         [ 52,  54,  78],\n",
       "         ...,\n",
       "         [ 63,  64,  91],\n",
       "         [ 57,  58,  84],\n",
       "         [ 52,  52,  78]]], dtype=uint8),\n",
       " array([[[ 41,  48,  69],\n",
       "         [ 76,  83, 108],\n",
       "         [ 95, 104, 136],\n",
       "         ...,\n",
       "         [136, 133, 172],\n",
       "         [136, 133, 172],\n",
       "         [136, 133, 172]],\n",
       " \n",
       "        [[ 42,  50,  72],\n",
       "         [ 77,  85, 111],\n",
       "         [ 99, 107, 139],\n",
       "         ...,\n",
       "         [133, 132, 171],\n",
       "         [133, 132, 171],\n",
       "         [133, 132, 171]],\n",
       " \n",
       "        [[ 42,  52,  75],\n",
       "         [ 79,  88, 115],\n",
       "         [103, 111, 141],\n",
       "         ...,\n",
       "         [131, 131, 169],\n",
       "         [131, 132, 170],\n",
       "         [131, 132, 170]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 130, 163],\n",
       "         [133, 133, 169],\n",
       "         [134, 135, 175],\n",
       "         ...,\n",
       "         [123, 125, 156],\n",
       "         [122, 124, 155],\n",
       "         [121, 123, 154]],\n",
       " \n",
       "        [[129, 129, 161],\n",
       "         [131, 132, 167],\n",
       "         [131, 133, 173],\n",
       "         ...,\n",
       "         [124, 126, 157],\n",
       "         [121, 123, 154],\n",
       "         [121, 123, 154]],\n",
       " \n",
       "        [[128, 127, 158],\n",
       "         [129, 128, 167],\n",
       "         [130, 131, 169],\n",
       "         ...,\n",
       "         [122, 123, 157],\n",
       "         [121, 123, 154],\n",
       "         [119, 121, 152]]], dtype=uint8),\n",
       " array([[[145, 144, 184],\n",
       "         [147, 146, 186],\n",
       "         [144, 143, 183],\n",
       "         ...,\n",
       "         [ 79,  88, 115],\n",
       "         [ 48,  58,  80],\n",
       "         [ 35,  43,  66]],\n",
       " \n",
       "        [[142, 142, 181],\n",
       "         [142, 141, 181],\n",
       "         [140, 140, 179],\n",
       "         ...,\n",
       "         [ 91, 100, 127],\n",
       "         [ 58,  67,  91],\n",
       "         [ 33,  42,  65]],\n",
       " \n",
       "        [[139, 138, 179],\n",
       "         [138, 137, 177],\n",
       "         [136, 135, 175],\n",
       "         ...,\n",
       "         [101, 108, 136],\n",
       "         [ 70,  78, 102],\n",
       "         [ 42,  50,  73]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 120, 150],\n",
       "         [119, 120, 151],\n",
       "         [120, 122, 152],\n",
       "         ...,\n",
       "         [135, 141, 180],\n",
       "         [133, 139, 177],\n",
       "         [131, 137, 174]],\n",
       " \n",
       "        [[113, 115, 145],\n",
       "         [117, 119, 149],\n",
       "         [119, 121, 151],\n",
       "         ...,\n",
       "         [134, 136, 176],\n",
       "         [132, 134, 175],\n",
       "         [131, 133, 172]],\n",
       " \n",
       "        [[105, 107, 137],\n",
       "         [115, 117, 147],\n",
       "         [118, 120, 150],\n",
       "         ...,\n",
       "         [130, 132, 173],\n",
       "         [129, 131, 172],\n",
       "         [128, 130, 170]]], dtype=uint8),\n",
       " array([[[  1,  15,  34],\n",
       "         [  5,  20,  37],\n",
       "         [  4,  24,  48],\n",
       "         ...,\n",
       "         [ 94, 151, 207],\n",
       "         [105, 163, 212],\n",
       "         [111, 171, 214]],\n",
       " \n",
       "        [[  0,  14,  32],\n",
       "         [  3,  18,  35],\n",
       "         [  5,  24,  46],\n",
       "         ...,\n",
       "         [ 93, 150, 206],\n",
       "         [105, 164, 212],\n",
       "         [107, 168, 211]],\n",
       " \n",
       "        [[  1,  14,  31],\n",
       "         [  3,  17,  33],\n",
       "         [  6,  22,  43],\n",
       "         ...,\n",
       "         [ 98, 154, 209],\n",
       "         [ 97, 156, 204],\n",
       "         [108, 169, 212]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[  6,  29,  71],\n",
       "         [ 12,  37,  84],\n",
       "         [ 18,  47, 101],\n",
       "         ...,\n",
       "         [  3,  14,  44],\n",
       "         [  3,  17,  51],\n",
       "         [  2,  19,  64]],\n",
       " \n",
       "        [[  5,  29,  70],\n",
       "         [  8,  33,  80],\n",
       "         [ 13,  42,  96],\n",
       "         ...,\n",
       "         [  2,  13,  40],\n",
       "         [  4,  15,  46],\n",
       "         [  4,  18,  60]],\n",
       " \n",
       "        [[  3,  28,  67],\n",
       "         [ 10,  37,  82],\n",
       "         [ 13,  42,  96],\n",
       "         ...,\n",
       "         [  1,  12,  37],\n",
       "         [  3,  14,  42],\n",
       "         [  3,  17,  56]]], dtype=uint8),\n",
       " array([[[120, 126, 149],\n",
       "         [118, 122, 147],\n",
       "         [109, 113, 138],\n",
       "         ...,\n",
       "         [142, 160, 201],\n",
       "         [146, 164, 205],\n",
       "         [141, 159, 200]],\n",
       " \n",
       "        [[115, 122, 142],\n",
       "         [128, 133, 155],\n",
       "         [100, 105, 130],\n",
       "         ...,\n",
       "         [124, 142, 183],\n",
       "         [133, 151, 192],\n",
       "         [133, 153, 194]],\n",
       " \n",
       "        [[112, 119, 139],\n",
       "         [131, 137, 158],\n",
       "         [108, 113, 136],\n",
       "         ...,\n",
       "         [128, 146, 187],\n",
       "         [139, 158, 199],\n",
       "         [129, 149, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 86,  96, 130],\n",
       "         [ 81,  97, 135],\n",
       "         [ 83, 105, 147],\n",
       "         ...,\n",
       "         [112, 131, 174],\n",
       "         [100, 119, 162],\n",
       "         [108, 124, 168]],\n",
       " \n",
       "        [[ 91, 100, 134],\n",
       "         [ 80,  96, 134],\n",
       "         [ 78, 100, 142],\n",
       "         ...,\n",
       "         [103, 122, 165],\n",
       "         [102, 120, 163],\n",
       "         [113, 130, 174]],\n",
       " \n",
       "        [[ 95, 105, 139],\n",
       "         [ 80,  96, 133],\n",
       "         [ 74,  96, 137],\n",
       "         ...,\n",
       "         [ 99, 119, 161],\n",
       "         [106, 125, 168],\n",
       "         [112, 128, 172]]], dtype=uint8),\n",
       " array([[[165, 178, 216],\n",
       "         [165, 178, 217],\n",
       "         [166, 178, 218],\n",
       "         ...,\n",
       "         [134, 153, 196],\n",
       "         [132, 151, 194],\n",
       "         [130, 149, 192]],\n",
       " \n",
       "        [[159, 175, 213],\n",
       "         [166, 181, 220],\n",
       "         [166, 181, 220],\n",
       "         ...,\n",
       "         [131, 150, 193],\n",
       "         [131, 150, 193],\n",
       "         [130, 149, 192]],\n",
       " \n",
       "        [[148, 164, 203],\n",
       "         [158, 173, 212],\n",
       "         [157, 173, 212],\n",
       "         ...,\n",
       "         [129, 148, 191],\n",
       "         [129, 148, 191],\n",
       "         [129, 148, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 165, 217],\n",
       "         [146, 161, 210],\n",
       "         [139, 154, 203],\n",
       "         ...,\n",
       "         [126, 148, 195],\n",
       "         [119, 140, 186],\n",
       "         [121, 141, 187]],\n",
       " \n",
       "        [[153, 167, 219],\n",
       "         [146, 161, 210],\n",
       "         [140, 155, 204],\n",
       "         ...,\n",
       "         [124, 147, 194],\n",
       "         [115, 136, 182],\n",
       "         [124, 142, 188]],\n",
       " \n",
       "        [[154, 168, 220],\n",
       "         [147, 162, 211],\n",
       "         [141, 156, 205],\n",
       "         ...,\n",
       "         [116, 139, 186],\n",
       "         [119, 140, 185],\n",
       "         [129, 145, 191]]], dtype=uint8),\n",
       " array([[[ 84,  98, 149],\n",
       "         [ 83,  98, 147],\n",
       "         [ 81,  95, 142],\n",
       "         ...,\n",
       "         [ 72,  67,  76],\n",
       "         [ 61,  54,  61],\n",
       "         [ 37,  30,  34]],\n",
       " \n",
       "        [[ 81,  92, 144],\n",
       "         [ 81,  93, 143],\n",
       "         [ 74,  86, 133],\n",
       "         ...,\n",
       "         [ 80,  74,  85],\n",
       "         [ 60,  53,  60],\n",
       "         [ 40,  33,  36]],\n",
       " \n",
       "        [[ 84,  92, 145],\n",
       "         [ 78,  87, 136],\n",
       "         [ 72,  81, 127],\n",
       "         ...,\n",
       "         [ 82,  76,  87],\n",
       "         [ 62,  55,  62],\n",
       "         [ 41,  34,  37]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 86,  89, 118],\n",
       "         [ 75,  79, 107],\n",
       "         [ 77,  81, 106],\n",
       "         ...,\n",
       "         [ 89,  88, 106],\n",
       "         [ 87,  83,  99],\n",
       "         [ 78,  69,  81]],\n",
       " \n",
       "        [[ 93,  95, 125],\n",
       "         [ 81,  84, 112],\n",
       "         [ 81,  85, 109],\n",
       "         ...,\n",
       "         [ 95,  91, 111],\n",
       "         [ 94,  88, 104],\n",
       "         [ 84,  72,  85]],\n",
       " \n",
       "        [[ 96,  96, 126],\n",
       "         [ 90,  91, 119],\n",
       "         [ 83,  84, 110],\n",
       "         ...,\n",
       "         [ 90,  88, 109],\n",
       "         [ 93,  89, 106],\n",
       "         [ 82,  74,  86]]], dtype=uint8),\n",
       " array([[[ 73,  89, 106],\n",
       "         [ 73,  89, 106],\n",
       "         [ 72,  85, 103],\n",
       "         ...,\n",
       "         [ 48,  64,  83],\n",
       "         [ 42,  56,  75],\n",
       "         [ 39,  56,  73]],\n",
       " \n",
       "        [[ 74,  90, 107],\n",
       "         [ 71,  87, 104],\n",
       "         [ 79,  91, 109],\n",
       "         ...,\n",
       "         [ 50,  65,  83],\n",
       "         [ 43,  59,  76],\n",
       "         [ 37,  53,  70]],\n",
       " \n",
       "        [[ 68,  84, 101],\n",
       "         [ 73,  89, 106],\n",
       "         [ 76,  88, 107],\n",
       "         ...,\n",
       "         [ 44,  60,  77],\n",
       "         [ 41,  57,  74],\n",
       "         [ 40,  56,  73]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 56,  82, 103],\n",
       "         [ 62,  85, 107],\n",
       "         [ 68,  86, 109],\n",
       "         ...,\n",
       "         [ 68,  88, 111],\n",
       "         [ 68,  90, 112],\n",
       "         [ 63,  84, 107]],\n",
       " \n",
       "        [[ 53,  80, 101],\n",
       "         [ 60,  83, 105],\n",
       "         [ 67,  85, 108],\n",
       "         ...,\n",
       "         [ 69,  90, 111],\n",
       "         [ 63,  84, 105],\n",
       "         [ 60,  81, 102]],\n",
       " \n",
       "        [[ 56,  83, 104],\n",
       "         [ 62,  85, 106],\n",
       "         [ 63,  81, 104],\n",
       "         ...,\n",
       "         [ 65,  86, 107],\n",
       "         [ 65,  86, 107],\n",
       "         [ 60,  80, 102]]], dtype=uint8),\n",
       " array([[[ 72,  82, 107],\n",
       "         [ 74,  84, 111],\n",
       "         [ 71,  82, 112],\n",
       "         ...,\n",
       "         [108, 121, 165],\n",
       "         [117, 128, 169],\n",
       "         [116, 126, 166]],\n",
       " \n",
       "        [[ 72,  82, 113],\n",
       "         [ 76,  87, 119],\n",
       "         [ 79,  93, 128],\n",
       "         ...,\n",
       "         [111, 124, 170],\n",
       "         [115, 127, 168],\n",
       "         [111, 123, 164]],\n",
       " \n",
       "        [[ 73,  85, 122],\n",
       "         [ 77,  91, 129],\n",
       "         [ 80,  96, 136],\n",
       "         ...,\n",
       "         [110, 122, 170],\n",
       "         [112, 125, 168],\n",
       "         [103, 117, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 119, 171],\n",
       "         [117, 117, 169],\n",
       "         [117, 116, 172],\n",
       "         ...,\n",
       "         [103, 113, 164],\n",
       "         [ 99, 113, 157],\n",
       "         [100, 113, 157]],\n",
       " \n",
       "        [[113, 116, 165],\n",
       "         [109, 111, 160],\n",
       "         [114, 117, 167],\n",
       "         ...,\n",
       "         [101, 114, 160],\n",
       "         [105, 117, 158],\n",
       "         [103, 115, 157]],\n",
       " \n",
       "        [[110, 116, 160],\n",
       "         [ 99, 106, 150],\n",
       "         [100, 106, 151],\n",
       "         ...,\n",
       "         [103, 115, 154],\n",
       "         [104, 117, 155],\n",
       "         [109, 122, 160]]], dtype=uint8),\n",
       " array([[[167, 177, 221],\n",
       "         [160, 171, 215],\n",
       "         [157, 171, 215],\n",
       "         ...,\n",
       "         [ 58,  74, 111],\n",
       "         [129, 144, 188],\n",
       "         [135, 150, 196]],\n",
       " \n",
       "        [[124, 136, 184],\n",
       "         [123, 136, 184],\n",
       "         [ 97, 111, 159],\n",
       "         ...,\n",
       "         [106, 119, 157],\n",
       "         [ 97, 110, 150],\n",
       "         [ 91, 104, 145]],\n",
       " \n",
       "        [[119, 132, 182],\n",
       "         [122, 137, 186],\n",
       "         [ 81,  96, 145],\n",
       "         ...,\n",
       "         [112, 120, 167],\n",
       "         [ 86,  95, 138],\n",
       "         [ 77,  86, 128]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[191, 208, 251],\n",
       "         [187, 205, 244],\n",
       "         [196, 214, 251],\n",
       "         ...,\n",
       "         [147, 164, 221],\n",
       "         [149, 168, 226],\n",
       "         [155, 175, 231]],\n",
       " \n",
       "        [[189, 206, 249],\n",
       "         [190, 208, 247],\n",
       "         [198, 216, 253],\n",
       "         ...,\n",
       "         [158, 176, 227],\n",
       "         [161, 180, 231],\n",
       "         [163, 184, 232]],\n",
       " \n",
       "        [[188, 201, 247],\n",
       "         [193, 208, 247],\n",
       "         [199, 215, 252],\n",
       "         ...,\n",
       "         [168, 182, 235],\n",
       "         [170, 185, 233],\n",
       "         [174, 190, 237]]], dtype=uint8),\n",
       " array([[[182, 215, 235],\n",
       "         [184, 216, 239],\n",
       "         [184, 215, 240],\n",
       "         ...,\n",
       "         [115, 176, 219],\n",
       "         [119, 181, 220],\n",
       "         [116, 176, 214]],\n",
       " \n",
       "        [[180, 211, 236],\n",
       "         [180, 211, 236],\n",
       "         [180, 211, 236],\n",
       "         ...,\n",
       "         [110, 174, 216],\n",
       "         [121, 183, 220],\n",
       "         [117, 177, 215]],\n",
       " \n",
       "        [[178, 209, 239],\n",
       "         [176, 209, 237],\n",
       "         [174, 208, 234],\n",
       "         ...,\n",
       "         [108, 172, 213],\n",
       "         [117, 181, 215],\n",
       "         [120, 182, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 177, 221],\n",
       "         [110, 170, 214],\n",
       "         [127, 185, 226],\n",
       "         ...,\n",
       "         [111, 174, 217],\n",
       "         [120, 182, 221],\n",
       "         [122, 182, 219]],\n",
       " \n",
       "        [[114, 174, 220],\n",
       "         [114, 175, 220],\n",
       "         [119, 177, 221],\n",
       "         ...,\n",
       "         [110, 172, 218],\n",
       "         [119, 180, 220],\n",
       "         [120, 179, 218]],\n",
       " \n",
       "        [[111, 171, 219],\n",
       "         [115, 174, 223],\n",
       "         [118, 177, 223],\n",
       "         ...,\n",
       "         [108, 170, 218],\n",
       "         [117, 178, 219],\n",
       "         [119, 178, 217]]], dtype=uint8),\n",
       " array([[[ 60,  69, 102],\n",
       "         [ 57,  66, 100],\n",
       "         [ 81,  89, 124],\n",
       "         ...,\n",
       "         [139, 146, 192],\n",
       "         [140, 147, 196],\n",
       "         [142, 148, 199]],\n",
       " \n",
       "        [[ 59,  68, 100],\n",
       "         [ 68,  78, 108],\n",
       "         [ 81,  92, 121],\n",
       "         ...,\n",
       "         [135, 140, 191],\n",
       "         [135, 141, 194],\n",
       "         [132, 138, 189]],\n",
       " \n",
       "        [[ 61,  70, 100],\n",
       "         [ 67,  76, 104],\n",
       "         [ 70,  81, 105],\n",
       "         ...,\n",
       "         [130, 135, 189],\n",
       "         [133, 137, 193],\n",
       "         [134, 139, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87,  96, 140],\n",
       "         [ 87,  98, 142],\n",
       "         [ 93, 105, 153],\n",
       "         ...,\n",
       "         [ 75,  84, 137],\n",
       "         [ 63,  70, 128],\n",
       "         [ 84,  89, 148]],\n",
       " \n",
       "        [[ 87,  95, 138],\n",
       "         [ 91, 100, 145],\n",
       "         [ 95, 107, 155],\n",
       "         ...,\n",
       "         [ 73,  82, 136],\n",
       "         [ 70,  76, 135],\n",
       "         [ 89,  92, 153]],\n",
       " \n",
       "        [[ 87,  93, 137],\n",
       "         [ 94, 103, 147],\n",
       "         [ 99, 109, 157],\n",
       "         ...,\n",
       "         [ 71,  79, 135],\n",
       "         [ 77,  81, 141],\n",
       "         [ 92,  95, 156]]], dtype=uint8),\n",
       " array([[[115, 146, 192],\n",
       "         [116, 147, 192],\n",
       "         [118, 149, 194],\n",
       "         ...,\n",
       "         [ 17,  30,  66],\n",
       "         [ 11,  15,  38],\n",
       "         [  9,   9,  24]],\n",
       " \n",
       "        [[117, 148, 193],\n",
       "         [116, 147, 192],\n",
       "         [116, 148, 192],\n",
       "         ...,\n",
       "         [ 17,  33,  68],\n",
       "         [ 11,  16,  39],\n",
       "         [  6,   7,  22]],\n",
       " \n",
       "        [[115, 146, 191],\n",
       "         [115, 146, 191],\n",
       "         [116, 146, 191],\n",
       "         ...,\n",
       "         [ 20,  35,  70],\n",
       "         [  9,  15,  37],\n",
       "         [  6,   9,  23]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 131, 176],\n",
       "         [100, 133, 178],\n",
       "         [102, 135, 180],\n",
       "         ...,\n",
       "         [ 62,  91, 136],\n",
       "         [ 50,  79, 123],\n",
       "         [ 41,  65, 110]],\n",
       " \n",
       "        [[100, 131, 176],\n",
       "         [101, 133, 179],\n",
       "         [103, 136, 181],\n",
       "         ...,\n",
       "         [ 66,  97, 142],\n",
       "         [ 55,  84, 129],\n",
       "         [ 44,  71, 115]],\n",
       " \n",
       "        [[100, 133, 178],\n",
       "         [102, 135, 180],\n",
       "         [104, 137, 182],\n",
       "         ...,\n",
       "         [ 68,  98, 143],\n",
       "         [ 62,  91, 136],\n",
       "         [ 56,  85, 129]]], dtype=uint8),\n",
       " array([[[115, 131, 144],\n",
       "         [103, 120, 132],\n",
       "         [ 71,  87,  99],\n",
       "         ...,\n",
       "         [ 70,  77,  87],\n",
       "         [ 68,  74,  82],\n",
       "         [ 64,  69,  75]],\n",
       " \n",
       "        [[ 94, 111, 129],\n",
       "         [ 73,  91, 108],\n",
       "         [ 44,  61,  79],\n",
       "         ...,\n",
       "         [ 79,  86, 103],\n",
       "         [ 77,  84,  98],\n",
       "         [ 73,  79,  93]],\n",
       " \n",
       "        [[ 89, 103, 121],\n",
       "         [ 76,  89, 108],\n",
       "         [ 54,  68,  86],\n",
       "         ...,\n",
       "         [ 93, 102, 120],\n",
       "         [ 87,  95, 112],\n",
       "         [ 75,  82,  98]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 108, 136],\n",
       "         [ 90, 103, 129],\n",
       "         [ 84,  97, 123],\n",
       "         ...,\n",
       "         [120, 137, 160],\n",
       "         [123, 141, 164],\n",
       "         [125, 145, 167]],\n",
       " \n",
       "        [[ 92, 103, 131],\n",
       "         [ 91, 103, 130],\n",
       "         [ 90, 102, 129],\n",
       "         ...,\n",
       "         [122, 139, 162],\n",
       "         [126, 145, 166],\n",
       "         [127, 150, 170]],\n",
       " \n",
       "        [[ 91, 102, 130],\n",
       "         [ 93, 104, 131],\n",
       "         [ 96, 107, 134],\n",
       "         ...,\n",
       "         [125, 145, 166],\n",
       "         [129, 150, 171],\n",
       "         [128, 152, 172]]], dtype=uint8),\n",
       " array([[[145, 151, 196],\n",
       "         [148, 154, 199],\n",
       "         [154, 160, 205],\n",
       "         ...,\n",
       "         [ 88,  98, 141],\n",
       "         [ 86,  96, 139],\n",
       "         [ 86,  95, 138]],\n",
       " \n",
       "        [[149, 155, 201],\n",
       "         [147, 154, 200],\n",
       "         [146, 152, 198],\n",
       "         ...,\n",
       "         [ 91, 101, 147],\n",
       "         [ 85,  94, 140],\n",
       "         [ 87,  96, 139]],\n",
       " \n",
       "        [[142, 150, 197],\n",
       "         [145, 151, 199],\n",
       "         [143, 149, 196],\n",
       "         ...,\n",
       "         [ 92,  99, 149],\n",
       "         [ 87,  94, 143],\n",
       "         [ 86,  95, 139]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 104, 166],\n",
       "         [ 95, 108, 169],\n",
       "         [ 94, 107, 166],\n",
       "         ...,\n",
       "         [112, 125, 181],\n",
       "         [109, 122, 176],\n",
       "         [106, 119, 171]],\n",
       " \n",
       "        [[ 94, 105, 169],\n",
       "         [ 96, 107, 170],\n",
       "         [ 98, 109, 171],\n",
       "         ...,\n",
       "         [114, 126, 184],\n",
       "         [113, 124, 179],\n",
       "         [109, 119, 171]],\n",
       " \n",
       "        [[ 97, 106, 169],\n",
       "         [ 97, 107, 171],\n",
       "         [ 98, 108, 172],\n",
       "         ...,\n",
       "         [114, 126, 183],\n",
       "         [113, 123, 178],\n",
       "         [111, 118, 172]]], dtype=uint8),\n",
       " array([[[118, 122, 151],\n",
       "         [123, 127, 156],\n",
       "         [131, 133, 164],\n",
       "         ...,\n",
       "         [183, 176, 203],\n",
       "         [182, 175, 202],\n",
       "         [182, 175, 202]],\n",
       " \n",
       "        [[120, 125, 157],\n",
       "         [123, 128, 161],\n",
       "         [128, 133, 164],\n",
       "         ...,\n",
       "         [178, 171, 198],\n",
       "         [177, 170, 197],\n",
       "         [177, 169, 198]],\n",
       " \n",
       "        [[121, 128, 161],\n",
       "         [121, 128, 161],\n",
       "         [128, 133, 166],\n",
       "         ...,\n",
       "         [170, 166, 191],\n",
       "         [169, 164, 192],\n",
       "         [169, 164, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[145, 150, 181],\n",
       "         [151, 156, 187],\n",
       "         [158, 163, 194],\n",
       "         ...,\n",
       "         [177, 175, 204],\n",
       "         [177, 175, 204],\n",
       "         [178, 176, 205]],\n",
       " \n",
       "        [[145, 149, 180],\n",
       "         [150, 155, 186],\n",
       "         [156, 161, 192],\n",
       "         ...,\n",
       "         [178, 176, 205],\n",
       "         [177, 175, 204],\n",
       "         [175, 173, 202]],\n",
       " \n",
       "        [[144, 147, 177],\n",
       "         [149, 152, 183],\n",
       "         [156, 159, 190],\n",
       "         ...,\n",
       "         [174, 172, 201],\n",
       "         [172, 170, 199],\n",
       "         [173, 171, 200]]], dtype=uint8),\n",
       " array([[[176, 170, 195],\n",
       "         [172, 165, 192],\n",
       "         [172, 165, 192],\n",
       "         ...,\n",
       "         [ 74,  76,  92],\n",
       "         [ 59,  62,  75],\n",
       "         [ 41,  43,  53]],\n",
       " \n",
       "        [[170, 163, 190],\n",
       "         [168, 161, 188],\n",
       "         [169, 162, 189],\n",
       "         ...,\n",
       "         [ 75,  77,  93],\n",
       "         [ 57,  59,  72],\n",
       "         [ 39,  40,  50]],\n",
       " \n",
       "        [[164, 157, 184],\n",
       "         [164, 157, 184],\n",
       "         [165, 158, 185],\n",
       "         ...,\n",
       "         [ 75,  78,  94],\n",
       "         [ 54,  57,  70],\n",
       "         [ 38,  39,  48]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 108, 131],\n",
       "         [118, 111, 134],\n",
       "         [121, 113, 136],\n",
       "         ...,\n",
       "         [128, 128, 158],\n",
       "         [121, 122, 151],\n",
       "         [115, 116, 142]],\n",
       " \n",
       "        [[119, 115, 137],\n",
       "         [123, 116, 139],\n",
       "         [126, 118, 141],\n",
       "         ...,\n",
       "         [129, 129, 159],\n",
       "         [122, 123, 152],\n",
       "         [115, 116, 142]],\n",
       " \n",
       "        [[125, 122, 144],\n",
       "         [128, 121, 144],\n",
       "         [131, 123, 146],\n",
       "         ...,\n",
       "         [130, 130, 160],\n",
       "         [122, 123, 152],\n",
       "         [114, 115, 141]]], dtype=uint8),\n",
       " array([[[154, 167, 190],\n",
       "         [156, 168, 191],\n",
       "         [146, 159, 182],\n",
       "         ...,\n",
       "         [128, 149, 177],\n",
       "         [133, 154, 181],\n",
       "         [133, 154, 181]],\n",
       " \n",
       "        [[153, 166, 188],\n",
       "         [146, 159, 181],\n",
       "         [131, 144, 166],\n",
       "         ...,\n",
       "         [133, 154, 181],\n",
       "         [131, 151, 178],\n",
       "         [131, 151, 178]],\n",
       " \n",
       "        [[116, 130, 149],\n",
       "         [120, 134, 153],\n",
       "         [102, 116, 135],\n",
       "         ...,\n",
       "         [130, 153, 175],\n",
       "         [125, 146, 173],\n",
       "         [126, 147, 174]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 169, 196],\n",
       "         [150, 167, 194],\n",
       "         [151, 168, 195],\n",
       "         ...,\n",
       "         [154, 172, 210],\n",
       "         [156, 174, 211],\n",
       "         [153, 170, 207]],\n",
       " \n",
       "        [[157, 171, 199],\n",
       "         [155, 170, 197],\n",
       "         [155, 170, 197],\n",
       "         ...,\n",
       "         [152, 171, 209],\n",
       "         [156, 174, 211],\n",
       "         [153, 170, 207]],\n",
       " \n",
       "        [[158, 173, 201],\n",
       "         [157, 172, 201],\n",
       "         [157, 172, 200],\n",
       "         ...,\n",
       "         [152, 170, 208],\n",
       "         [154, 172, 209],\n",
       "         [152, 170, 207]]], dtype=uint8),\n",
       " array([[[ 44,  57,  70],\n",
       "         [ 26,  33,  44],\n",
       "         [ 42,  60,  79],\n",
       "         ...,\n",
       "         [163, 191, 226],\n",
       "         [166, 192, 228],\n",
       "         [167, 193, 227]],\n",
       " \n",
       "        [[ 49,  65,  78],\n",
       "         [ 31,  39,  54],\n",
       "         [ 50,  71,  91],\n",
       "         ...,\n",
       "         [159, 187, 222],\n",
       "         [159, 185, 221],\n",
       "         [160, 186, 222]],\n",
       " \n",
       "        [[ 26,  34,  44],\n",
       "         [ 37,  52,  67],\n",
       "         [ 65,  91, 113],\n",
       "         ...,\n",
       "         [153, 179, 219],\n",
       "         [153, 180, 218],\n",
       "         [158, 185, 219]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 148, 187],\n",
       "         [126, 161, 201],\n",
       "         [136, 168, 208],\n",
       "         ...,\n",
       "         [142, 174, 215],\n",
       "         [137, 170, 216],\n",
       "         [139, 172, 217]],\n",
       " \n",
       "        [[112, 146, 188],\n",
       "         [122, 157, 198],\n",
       "         [135, 168, 210],\n",
       "         ...,\n",
       "         [139, 173, 217],\n",
       "         [139, 172, 217],\n",
       "         [138, 170, 216]],\n",
       " \n",
       "        [[111, 146, 189],\n",
       "         [129, 162, 205],\n",
       "         [143, 176, 216],\n",
       "         ...,\n",
       "         [140, 173, 218],\n",
       "         [136, 169, 213],\n",
       "         [137, 170, 215]]], dtype=uint8),\n",
       " array([[[  9,  14,  17],\n",
       "         [ 11,  15,  21],\n",
       "         [ 10,  12,  22],\n",
       "         ...,\n",
       "         [119, 133, 178],\n",
       "         [134, 146, 188],\n",
       "         [128, 140, 181]],\n",
       " \n",
       "        [[ 10,  15,  16],\n",
       "         [ 10,  16,  20],\n",
       "         [  9,  16,  23],\n",
       "         ...,\n",
       "         [133, 146, 186],\n",
       "         [133, 144, 183],\n",
       "         [121, 133, 169]],\n",
       " \n",
       "        [[ 11,  15,  19],\n",
       "         [ 11,  17,  25],\n",
       "         [ 11,  19,  28],\n",
       "         ...,\n",
       "         [133, 143, 178],\n",
       "         [126, 138, 175],\n",
       "         [119, 131, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[167, 185, 221],\n",
       "         [163, 183, 220],\n",
       "         [166, 184, 224],\n",
       "         ...,\n",
       "         [151, 171, 214],\n",
       "         [148, 167, 212],\n",
       "         [175, 185, 219]],\n",
       " \n",
       "        [[165, 183, 222],\n",
       "         [161, 182, 220],\n",
       "         [167, 184, 223],\n",
       "         ...,\n",
       "         [149, 168, 214],\n",
       "         [158, 173, 216],\n",
       "         [174, 184, 216]],\n",
       " \n",
       "        [[166, 183, 222],\n",
       "         [162, 182, 220],\n",
       "         [166, 183, 222],\n",
       "         ...,\n",
       "         [133, 153, 205],\n",
       "         [168, 179, 216],\n",
       "         [190, 198, 225]]], dtype=uint8),\n",
       " array([[[ 91, 107, 155],\n",
       "         [ 81,  95, 145],\n",
       "         [ 83,  96, 143],\n",
       "         ...,\n",
       "         [  8,  12,  15],\n",
       "         [  6,  11,  12],\n",
       "         [ 12,  17,  19]],\n",
       " \n",
       "        [[118, 132, 175],\n",
       "         [110, 123, 169],\n",
       "         [104, 115, 158],\n",
       "         ...,\n",
       "         [  9,  14,  16],\n",
       "         [  5,  10,  11],\n",
       "         [ 10,  14,  18]],\n",
       " \n",
       "        [[131, 144, 182],\n",
       "         [107, 120, 164],\n",
       "         [115, 128, 170],\n",
       "         ...,\n",
       "         [ 10,  15,  17],\n",
       "         [  4,   9,  10],\n",
       "         [ 10,  15,  19]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 182, 211],\n",
       "         [159, 172, 204],\n",
       "         [163, 178, 211],\n",
       "         ...,\n",
       "         [ 85, 105, 151],\n",
       "         [ 88, 105, 151],\n",
       "         [ 80,  94, 135]],\n",
       " \n",
       "        [[176, 186, 214],\n",
       "         [158, 170, 203],\n",
       "         [156, 171, 207],\n",
       "         ...,\n",
       "         [ 88, 108, 154],\n",
       "         [ 90, 108, 153],\n",
       "         [ 88, 102, 144]],\n",
       " \n",
       "        [[177, 186, 215],\n",
       "         [157, 168, 203],\n",
       "         [144, 157, 197],\n",
       "         ...,\n",
       "         [ 98, 115, 159],\n",
       "         [ 98, 114, 157],\n",
       "         [ 89, 105, 148]]], dtype=uint8),\n",
       " array([[[167, 193, 239],\n",
       "         [171, 196, 242],\n",
       "         [173, 199, 245],\n",
       "         ...,\n",
       "         [173, 194, 249],\n",
       "         [173, 193, 250],\n",
       "         [170, 188, 248]],\n",
       " \n",
       "        [[168, 193, 237],\n",
       "         [175, 200, 243],\n",
       "         [174, 199, 243],\n",
       "         ...,\n",
       "         [169, 192, 247],\n",
       "         [167, 192, 248],\n",
       "         [164, 186, 243]],\n",
       " \n",
       "        [[167, 192, 236],\n",
       "         [175, 200, 244],\n",
       "         [178, 203, 247],\n",
       "         ...,\n",
       "         [161, 187, 243],\n",
       "         [163, 189, 245],\n",
       "         [161, 187, 244]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[174, 197, 248],\n",
       "         [174, 197, 248],\n",
       "         [160, 182, 233],\n",
       "         ...,\n",
       "         [147, 168, 230],\n",
       "         [149, 170, 231],\n",
       "         [152, 171, 232]],\n",
       " \n",
       "        [[170, 191, 243],\n",
       "         [170, 191, 243],\n",
       "         [181, 199, 252],\n",
       "         ...,\n",
       "         [148, 169, 231],\n",
       "         [147, 168, 230],\n",
       "         [150, 168, 231]],\n",
       " \n",
       "        [[169, 191, 243],\n",
       "         [175, 194, 247],\n",
       "         [174, 192, 245],\n",
       "         ...,\n",
       "         [148, 166, 230],\n",
       "         [147, 164, 231],\n",
       "         [147, 163, 232]]], dtype=uint8),\n",
       " array([[[174, 199, 249],\n",
       "         [174, 199, 250],\n",
       "         [173, 198, 247],\n",
       "         ...,\n",
       "         [115, 160, 212],\n",
       "         [ 92, 135, 187],\n",
       "         [109, 150, 199]],\n",
       " \n",
       "        [[175, 199, 251],\n",
       "         [174, 198, 250],\n",
       "         [175, 199, 250],\n",
       "         ...,\n",
       "         [121, 165, 217],\n",
       "         [101, 145, 196],\n",
       "         [107, 148, 197]],\n",
       " \n",
       "        [[170, 195, 248],\n",
       "         [173, 197, 252],\n",
       "         [172, 199, 252],\n",
       "         ...,\n",
       "         [125, 169, 220],\n",
       "         [108, 150, 200],\n",
       "         [105, 146, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[137, 169, 234],\n",
       "         [122, 158, 222],\n",
       "         [112, 147, 209],\n",
       "         ...,\n",
       "         [137, 174, 236],\n",
       "         [130, 167, 227],\n",
       "         [138, 176, 234]],\n",
       " \n",
       "        [[137, 167, 232],\n",
       "         [124, 157, 222],\n",
       "         [115, 149, 211],\n",
       "         ...,\n",
       "         [126, 164, 226],\n",
       "         [137, 174, 235],\n",
       "         [139, 177, 235]],\n",
       " \n",
       "        [[134, 166, 229],\n",
       "         [123, 156, 219],\n",
       "         [113, 146, 209],\n",
       "         ...,\n",
       "         [133, 170, 232],\n",
       "         [134, 171, 233],\n",
       "         [140, 177, 240]]], dtype=uint8),\n",
       " array([[[149, 170, 183],\n",
       "         [209, 220, 227],\n",
       "         [208, 220, 226],\n",
       "         ...,\n",
       "         [171, 195, 227],\n",
       "         [175, 198, 230],\n",
       "         [176, 199, 231]],\n",
       " \n",
       "        [[183, 199, 206],\n",
       "         [211, 222, 229],\n",
       "         [215, 225, 232],\n",
       "         ...,\n",
       "         [167, 192, 224],\n",
       "         [165, 190, 225],\n",
       "         [173, 197, 230]],\n",
       " \n",
       "        [[193, 208, 215],\n",
       "         [216, 224, 231],\n",
       "         [217, 226, 233],\n",
       "         ...,\n",
       "         [160, 184, 218],\n",
       "         [165, 189, 225],\n",
       "         [162, 189, 223]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[174, 200, 227],\n",
       "         [165, 195, 225],\n",
       "         [162, 192, 227],\n",
       "         ...,\n",
       "         [165, 191, 226],\n",
       "         [164, 192, 225],\n",
       "         [168, 193, 225]],\n",
       " \n",
       "        [[173, 198, 228],\n",
       "         [163, 193, 226],\n",
       "         [160, 194, 228],\n",
       "         ...,\n",
       "         [164, 189, 225],\n",
       "         [166, 193, 227],\n",
       "         [167, 192, 226]],\n",
       " \n",
       "        [[173, 201, 229],\n",
       "         [165, 196, 228],\n",
       "         [169, 197, 228],\n",
       "         ...,\n",
       "         [162, 188, 224],\n",
       "         [164, 190, 226],\n",
       "         [164, 190, 225]]], dtype=uint8),\n",
       " array([[[ 69, 112, 154],\n",
       "         [ 75, 124, 171],\n",
       "         [ 78, 133, 184],\n",
       "         ...,\n",
       "         [102, 160, 226],\n",
       "         [104, 160, 225],\n",
       "         [108, 164, 229]],\n",
       " \n",
       "        [[ 80, 123, 166],\n",
       "         [ 84, 132, 181],\n",
       "         [ 80, 133, 184],\n",
       "         ...,\n",
       "         [ 97, 155, 220],\n",
       "         [ 97, 155, 221],\n",
       "         [100, 158, 224]],\n",
       " \n",
       "        [[ 78, 124, 168],\n",
       "         [ 89, 136, 185],\n",
       "         [ 86, 137, 189],\n",
       "         ...,\n",
       "         [ 89, 148, 214],\n",
       "         [ 91, 151, 217],\n",
       "         [ 96, 153, 222]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 161, 224],\n",
       "         [111, 164, 227],\n",
       "         [117, 168, 230],\n",
       "         ...,\n",
       "         [103, 164, 231],\n",
       "         [102, 163, 227],\n",
       "         [104, 162, 227]],\n",
       " \n",
       "        [[108, 162, 225],\n",
       "         [111, 164, 227],\n",
       "         [118, 171, 232],\n",
       "         ...,\n",
       "         [100, 161, 228],\n",
       "         [103, 164, 228],\n",
       "         [103, 161, 226]],\n",
       " \n",
       "        [[103, 161, 226],\n",
       "         [105, 159, 222],\n",
       "         [109, 164, 229],\n",
       "         ...,\n",
       "         [105, 165, 231],\n",
       "         [105, 166, 230],\n",
       "         [ 99, 160, 224]]], dtype=uint8),\n",
       " array([[[ 45,  65,  72],\n",
       "         [ 38,  54,  61],\n",
       "         [ 30,  42,  47],\n",
       "         ...,\n",
       "         [ 44,  58,  60],\n",
       "         [ 56,  79,  84],\n",
       "         [ 47,  73,  83]],\n",
       " \n",
       "        [[ 49,  68,  78],\n",
       "         [ 41,  54,  62],\n",
       "         [ 37,  49,  56],\n",
       "         ...,\n",
       "         [ 25,  35,  34],\n",
       "         [ 45,  65,  69],\n",
       "         [ 48,  67,  73]],\n",
       " \n",
       "        [[ 49,  67,  81],\n",
       "         [ 47,  59,  71],\n",
       "         [ 35,  47,  53],\n",
       "         ...,\n",
       "         [ 13,  19,  14],\n",
       "         [ 32,  44,  44],\n",
       "         [ 41,  54,  58]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 50,  71, 101],\n",
       "         [ 46,  67,  99],\n",
       "         [ 44,  64,  99],\n",
       "         ...,\n",
       "         [ 32,  50,  61],\n",
       "         [ 26,  42,  49],\n",
       "         [  6,  13,  13]],\n",
       " \n",
       "        [[ 48,  66,  95],\n",
       "         [ 45,  64,  97],\n",
       "         [ 49,  69, 105],\n",
       "         ...,\n",
       "         [ 30,  50,  60],\n",
       "         [ 19,  37,  42],\n",
       "         [  1,   4,   5]],\n",
       " \n",
       "        [[ 50,  65,  98],\n",
       "         [ 48,  64, 100],\n",
       "         [ 56,  76, 111],\n",
       "         ...,\n",
       "         [ 24,  44,  52],\n",
       "         [ 17,  34,  40],\n",
       "         [  2,   4,   4]]], dtype=uint8),\n",
       " array([[[121, 149, 209],\n",
       "         [119, 147, 207],\n",
       "         [117, 145, 205],\n",
       "         ...,\n",
       "         [137, 163, 209],\n",
       "         [135, 162, 208],\n",
       "         [130, 156, 202]],\n",
       " \n",
       "        [[120, 148, 208],\n",
       "         [126, 154, 214],\n",
       "         [115, 143, 203],\n",
       "         ...,\n",
       "         [126, 152, 200],\n",
       "         [125, 151, 199],\n",
       "         [122, 148, 196]],\n",
       " \n",
       "        [[118, 146, 206],\n",
       "         [120, 148, 208],\n",
       "         [114, 142, 202],\n",
       "         ...,\n",
       "         [115, 139, 193],\n",
       "         [110, 133, 187],\n",
       "         [111, 135, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 163, 207],\n",
       "         [148, 166, 206],\n",
       "         [150, 168, 206],\n",
       "         ...,\n",
       "         [144, 164, 211],\n",
       "         [149, 168, 215],\n",
       "         [150, 171, 217]],\n",
       " \n",
       "        [[147, 163, 209],\n",
       "         [151, 167, 211],\n",
       "         [155, 173, 213],\n",
       "         ...,\n",
       "         [150, 170, 217],\n",
       "         [153, 173, 220],\n",
       "         [155, 175, 222]],\n",
       " \n",
       "        [[148, 164, 210],\n",
       "         [152, 168, 214],\n",
       "         [158, 176, 217],\n",
       "         ...,\n",
       "         [154, 174, 221],\n",
       "         [155, 175, 222],\n",
       "         [157, 177, 224]]], dtype=uint8),\n",
       " array([[[120, 174, 235],\n",
       "         [119, 173, 234],\n",
       "         [120, 174, 234],\n",
       "         ...,\n",
       "         [ 43,  73, 102],\n",
       "         [ 39,  61,  83],\n",
       "         [ 41,  58,  75]],\n",
       " \n",
       "        [[114, 168, 230],\n",
       "         [113, 166, 228],\n",
       "         [113, 168, 230],\n",
       "         ...,\n",
       "         [ 54,  87, 117],\n",
       "         [ 55,  81, 103],\n",
       "         [ 62,  83, 100]],\n",
       " \n",
       "        [[110, 164, 227],\n",
       "         [107, 161, 224],\n",
       "         [104, 158, 221],\n",
       "         ...,\n",
       "         [ 61,  98, 129],\n",
       "         [ 57,  85, 111],\n",
       "         [ 66,  91, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 148, 210],\n",
       "         [ 86, 143, 205],\n",
       "         [ 90, 146, 211],\n",
       "         ...,\n",
       "         [ 98, 153, 213],\n",
       "         [ 94, 145, 202],\n",
       "         [100, 146, 197]],\n",
       " \n",
       "        [[ 93, 147, 210],\n",
       "         [ 89, 143, 206],\n",
       "         [ 88, 146, 211],\n",
       "         ...,\n",
       "         [ 98, 152, 213],\n",
       "         [ 95, 147, 205],\n",
       "         [ 98, 144, 197]],\n",
       " \n",
       "        [[ 93, 147, 210],\n",
       "         [ 93, 147, 210],\n",
       "         [ 84, 142, 207],\n",
       "         ...,\n",
       "         [ 98, 152, 213],\n",
       "         [ 94, 144, 203],\n",
       "         [ 99, 144, 197]]], dtype=uint8),\n",
       " array([[[110, 134, 154],\n",
       "         [106, 128, 148],\n",
       "         [ 98, 118, 136],\n",
       "         ...,\n",
       "         [ 50,  60,  65],\n",
       "         [ 49,  59,  59],\n",
       "         [ 40,  50,  50]],\n",
       " \n",
       "        [[105, 127, 147],\n",
       "         [103, 123, 141],\n",
       "         [ 96, 115, 132],\n",
       "         ...,\n",
       "         [ 36,  45,  48],\n",
       "         [ 39,  47,  47],\n",
       "         [ 40,  48,  48]],\n",
       " \n",
       "        [[ 98, 118, 136],\n",
       "         [ 93, 112, 128],\n",
       "         [ 87, 104, 119],\n",
       "         ...,\n",
       "         [ 27,  33,  36],\n",
       "         [ 27,  32,  33],\n",
       "         [ 27,  32,  33]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  56,  66],\n",
       "         [ 49,  58,  68],\n",
       "         [ 51,  60,  70],\n",
       "         ...,\n",
       "         [ 86, 100, 116],\n",
       "         [ 84,  97, 113],\n",
       "         [ 81,  94, 108]],\n",
       " \n",
       "        [[ 46,  55,  65],\n",
       "         [ 46,  55,  65],\n",
       "         [ 50,  59,  69],\n",
       "         ...,\n",
       "         [ 85,  99, 116],\n",
       "         [ 83,  96, 112],\n",
       "         [ 79,  92, 106]],\n",
       " \n",
       "        [[ 47,  56,  66],\n",
       "         [ 46,  55,  65],\n",
       "         [ 44,  53,  63],\n",
       "         ...,\n",
       "         [ 85,  99, 117],\n",
       "         [ 83,  96, 112],\n",
       "         [ 79,  92, 106]]], dtype=uint8),\n",
       " array([[[ 47,  58,  77],\n",
       "         [ 74,  89, 116],\n",
       "         [ 75,  94, 122],\n",
       "         ...,\n",
       "         [179, 196, 225],\n",
       "         [176, 194, 223],\n",
       "         [176, 194, 223]],\n",
       " \n",
       "        [[ 47,  58,  77],\n",
       "         [ 75,  90, 117],\n",
       "         [ 79,  96, 124],\n",
       "         ...,\n",
       "         [177, 193, 222],\n",
       "         [175, 191, 220],\n",
       "         [174, 192, 221]],\n",
       " \n",
       "        [[ 48,  59,  78],\n",
       "         [ 70,  83, 112],\n",
       "         [ 79,  95, 125],\n",
       "         ...,\n",
       "         [173, 190, 220],\n",
       "         [176, 194, 223],\n",
       "         [168, 190, 222]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 116, 157],\n",
       "         [ 97, 122, 161],\n",
       "         [103, 129, 168],\n",
       "         ...,\n",
       "         [138, 165, 199],\n",
       "         [132, 159, 195],\n",
       "         [132, 159, 195]],\n",
       " \n",
       "        [[ 95, 115, 156],\n",
       "         [ 98, 123, 164],\n",
       "         [103, 129, 170],\n",
       "         ...,\n",
       "         [136, 163, 199],\n",
       "         [133, 159, 198],\n",
       "         [126, 153, 193]],\n",
       " \n",
       "        [[ 94, 115, 156],\n",
       "         [ 97, 121, 163],\n",
       "         [103, 128, 170],\n",
       "         ...,\n",
       "         [135, 163, 200],\n",
       "         [129, 157, 197],\n",
       "         [121, 147, 189]]], dtype=uint8),\n",
       " array([[[174, 191, 224],\n",
       "         [180, 197, 226],\n",
       "         [177, 196, 227],\n",
       "         ...,\n",
       "         [ 75,  97, 128],\n",
       "         [ 57,  70,  93],\n",
       "         [ 42,  49,  66]],\n",
       " \n",
       "        [[180, 196, 228],\n",
       "         [183, 197, 228],\n",
       "         [182, 197, 226],\n",
       "         ...,\n",
       "         [ 75,  96, 130],\n",
       "         [ 53,  65,  90],\n",
       "         [ 47,  54,  71]],\n",
       " \n",
       "        [[181, 197, 226],\n",
       "         [180, 195, 226],\n",
       "         [183, 198, 226],\n",
       "         ...,\n",
       "         [ 76,  97, 133],\n",
       "         [ 54,  67,  93],\n",
       "         [ 40,  50,  67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[140, 166, 202],\n",
       "         [136, 162, 201],\n",
       "         [146, 172, 206],\n",
       "         ...,\n",
       "         [100, 130, 171],\n",
       "         [ 96, 127, 166],\n",
       "         [ 91, 116, 158]],\n",
       " \n",
       "        [[134, 160, 198],\n",
       "         [135, 162, 199],\n",
       "         [135, 163, 202],\n",
       "         ...,\n",
       "         [108, 138, 179],\n",
       "         [ 99, 130, 170],\n",
       "         [ 94, 119, 162]],\n",
       " \n",
       "        [[137, 163, 204],\n",
       "         [140, 168, 203],\n",
       "         [137, 165, 202],\n",
       "         ...,\n",
       "         [105, 135, 176],\n",
       "         [ 97, 127, 168],\n",
       "         [ 92, 118, 162]]], dtype=uint8),\n",
       " array([[[ 20,  23,  27],\n",
       "         [ 17,  20,  24],\n",
       "         [ 16,  20,  21],\n",
       "         ...,\n",
       "         [174, 199, 233],\n",
       "         [182, 204, 236],\n",
       "         [183, 206, 239]],\n",
       " \n",
       "        [[ 17,  20,  24],\n",
       "         [ 16,  19,  23],\n",
       "         [ 14,  17,  18],\n",
       "         ...,\n",
       "         [167, 195, 232],\n",
       "         [169, 195, 231],\n",
       "         [175, 199, 236]],\n",
       " \n",
       "        [[ 15,  17,  20],\n",
       "         [ 16,  18,  21],\n",
       "         [ 11,  13,  14],\n",
       "         ...,\n",
       "         [158, 184, 225],\n",
       "         [165, 189, 229],\n",
       "         [166, 193, 230]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 27,  39,  51],\n",
       "         [ 46,  64,  86],\n",
       "         [ 60,  87, 112],\n",
       "         ...,\n",
       "         [116, 158, 205],\n",
       "         [129, 170, 224],\n",
       "         [144, 183, 236]],\n",
       " \n",
       "        [[ 31,  48,  63],\n",
       "         [ 53,  76, 102],\n",
       "         [ 70, 100, 130],\n",
       "         ...,\n",
       "         [110, 151, 201],\n",
       "         [127, 170, 222],\n",
       "         [146, 186, 238]],\n",
       " \n",
       "        [[ 41,  60,  80],\n",
       "         [ 67,  96, 125],\n",
       "         [ 82, 113, 147],\n",
       "         ...,\n",
       "         [118, 160, 211],\n",
       "         [135, 175, 227],\n",
       "         [150, 190, 240]]], dtype=uint8),\n",
       " array([[[181, 205, 236],\n",
       "         [185, 208, 240],\n",
       "         [184, 208, 238],\n",
       "         ...,\n",
       "         [ 42,  62,  86],\n",
       "         [ 32,  45,  57],\n",
       "         [ 20,  26,  32]],\n",
       " \n",
       "        [[176, 200, 236],\n",
       "         [176, 201, 234],\n",
       "         [183, 206, 239],\n",
       "         ...,\n",
       "         [ 45,  68,  92],\n",
       "         [ 31,  46,  62],\n",
       "         [ 21,  29,  36]],\n",
       " \n",
       "        [[165, 192, 228],\n",
       "         [164, 190, 227],\n",
       "         [167, 193, 230],\n",
       "         ...,\n",
       "         [ 47,  69,  95],\n",
       "         [ 32,  50,  68],\n",
       "         [ 22,  30,  40]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[108, 152, 199],\n",
       "         [107, 151, 198],\n",
       "         [111, 155, 202],\n",
       "         ...,\n",
       "         [ 98, 140, 179],\n",
       "         [ 84, 121, 158],\n",
       "         [ 69, 103, 136]],\n",
       " \n",
       "        [[103, 147, 194],\n",
       "         [107, 151, 198],\n",
       "         [106, 150, 197],\n",
       "         ...,\n",
       "         [ 99, 139, 183],\n",
       "         [ 86, 123, 160],\n",
       "         [ 70, 104, 137]],\n",
       " \n",
       "        [[103, 148, 192],\n",
       "         [112, 154, 199],\n",
       "         [108, 152, 198],\n",
       "         ...,\n",
       "         [ 97, 138, 180],\n",
       "         [ 85, 122, 160],\n",
       "         [ 73, 105, 138]]], dtype=uint8),\n",
       " array([[[158, 184, 214],\n",
       "         [157, 184, 215],\n",
       "         [152, 178, 208],\n",
       "         ...,\n",
       "         [ 56,  65, 116],\n",
       "         [ 48,  60, 107],\n",
       "         [ 49,  59, 106]],\n",
       " \n",
       "        [[162, 190, 217],\n",
       "         [160, 183, 213],\n",
       "         [154, 175, 208],\n",
       "         ...,\n",
       "         [ 51,  61, 109],\n",
       "         [ 51,  60, 107],\n",
       "         [ 50,  60, 107]],\n",
       " \n",
       "        [[165, 189, 216],\n",
       "         [167, 186, 213],\n",
       "         [153, 173, 204],\n",
       "         ...,\n",
       "         [ 50,  61, 109],\n",
       "         [ 49,  59, 105],\n",
       "         [ 49,  57, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 157, 202],\n",
       "         [118, 143, 193],\n",
       "         [117, 139, 192],\n",
       "         ...,\n",
       "         [ 79, 103, 173],\n",
       "         [ 85, 111, 178],\n",
       "         [ 88, 109, 175]],\n",
       " \n",
       "        [[132, 159, 204],\n",
       "         [119, 143, 195],\n",
       "         [116, 138, 190],\n",
       "         ...,\n",
       "         [ 89, 116, 181],\n",
       "         [ 95, 123, 187],\n",
       "         [ 93, 119, 180]],\n",
       " \n",
       "        [[129, 161, 203],\n",
       "         [121, 149, 197],\n",
       "         [109, 135, 190],\n",
       "         ...,\n",
       "         [ 94, 126, 185],\n",
       "         [ 98, 126, 187],\n",
       "         [ 97, 124, 188]]], dtype=uint8),\n",
       " array([[[ 50,  57,  90],\n",
       "         [ 48,  56,  85],\n",
       "         [ 51,  55,  84],\n",
       "         ...,\n",
       "         [115, 131, 161],\n",
       "         [122, 143, 175],\n",
       "         [182, 208, 222]],\n",
       " \n",
       "        [[ 52,  60,  96],\n",
       "         [ 49,  56,  89],\n",
       "         [ 50,  55,  86],\n",
       "         ...,\n",
       "         [106, 125, 159],\n",
       "         [158, 180, 199],\n",
       "         [173, 193, 210]],\n",
       " \n",
       "        [[ 48,  57,  92],\n",
       "         [ 46,  55,  89],\n",
       "         [ 49,  55,  88],\n",
       "         ...,\n",
       "         [104, 115, 151],\n",
       "         [155, 178, 201],\n",
       "         [178, 198, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 49,  51,  56],\n",
       "         [ 51,  52,  59],\n",
       "         [ 45,  44,  52],\n",
       "         ...,\n",
       "         [ 78,  84, 103],\n",
       "         [ 80,  87, 109],\n",
       "         [ 87,  97, 128]],\n",
       " \n",
       "        [[ 53,  56,  67],\n",
       "         [ 53,  55,  63],\n",
       "         [ 48,  47,  56],\n",
       "         ...,\n",
       "         [ 71,  78,  96],\n",
       "         [ 79,  84, 106],\n",
       "         [ 88,  97, 132]],\n",
       " \n",
       "        [[ 57,  58,  72],\n",
       "         [ 58,  60,  69],\n",
       "         [ 55,  56,  64],\n",
       "         ...,\n",
       "         [ 74,  78,  98],\n",
       "         [ 75,  81, 102],\n",
       "         [ 85,  95, 126]]], dtype=uint8),\n",
       " array([[[148, 180, 220],\n",
       "         [161, 191, 230],\n",
       "         [170, 197, 236],\n",
       "         ...,\n",
       "         [151, 183, 226],\n",
       "         [153, 185, 229],\n",
       "         [153, 184, 229]],\n",
       " \n",
       "        [[160, 188, 226],\n",
       "         [168, 196, 232],\n",
       "         [174, 200, 236],\n",
       "         ...,\n",
       "         [149, 179, 220],\n",
       "         [147, 179, 222],\n",
       "         [147, 180, 223]],\n",
       " \n",
       "        [[173, 196, 232],\n",
       "         [174, 199, 235],\n",
       "         [172, 199, 233],\n",
       "         ...,\n",
       "         [139, 169, 207],\n",
       "         [144, 176, 216],\n",
       "         [143, 178, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[201, 217, 249],\n",
       "         [208, 222, 254],\n",
       "         [213, 225, 253],\n",
       "         ...,\n",
       "         [213, 224, 253],\n",
       "         [206, 219, 249],\n",
       "         [201, 220, 253]],\n",
       " \n",
       "        [[202, 219, 252],\n",
       "         [205, 220, 252],\n",
       "         [213, 225, 253],\n",
       "         ...,\n",
       "         [208, 222, 251],\n",
       "         [202, 217, 250],\n",
       "         [198, 216, 251]],\n",
       " \n",
       "        [[186, 210, 249],\n",
       "         [195, 217, 251],\n",
       "         [206, 223, 254],\n",
       "         ...,\n",
       "         [201, 218, 251],\n",
       "         [197, 215, 251],\n",
       "         [200, 219, 254]]], dtype=uint8),\n",
       " array([[[161, 195, 236],\n",
       "         [162, 191, 235],\n",
       "         [163, 190, 234],\n",
       "         ...,\n",
       "         [ 87, 113, 161],\n",
       "         [ 79, 102, 149],\n",
       "         [ 60,  83, 129]],\n",
       " \n",
       "        [[156, 187, 232],\n",
       "         [157, 187, 232],\n",
       "         [156, 185, 230],\n",
       "         ...,\n",
       "         [ 84, 108, 152],\n",
       "         [ 86, 108, 153],\n",
       "         [ 64,  86, 131]],\n",
       " \n",
       "        [[151, 181, 228],\n",
       "         [150, 181, 226],\n",
       "         [150, 182, 225],\n",
       "         ...,\n",
       "         [ 70,  88, 127],\n",
       "         [ 69,  86, 127],\n",
       "         [ 65,  82, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[166, 196, 240],\n",
       "         [165, 197, 240],\n",
       "         [164, 196, 238],\n",
       "         ...,\n",
       "         [126, 163, 213],\n",
       "         [124, 161, 211],\n",
       "         [125, 162, 212]],\n",
       " \n",
       "        [[161, 194, 239],\n",
       "         [160, 194, 239],\n",
       "         [161, 194, 240],\n",
       "         ...,\n",
       "         [129, 169, 218],\n",
       "         [125, 165, 213],\n",
       "         [125, 165, 214]],\n",
       " \n",
       "        [[161, 193, 239],\n",
       "         [158, 191, 237],\n",
       "         [157, 190, 236],\n",
       "         ...,\n",
       "         [134, 174, 223],\n",
       "         [127, 167, 216],\n",
       "         [128, 168, 216]]], dtype=uint8),\n",
       " array([[[ 31,  56, 107],\n",
       "         [ 38,  66, 130],\n",
       "         [ 48,  77, 149],\n",
       "         ...,\n",
       "         [164, 187, 243],\n",
       "         [163, 188, 243],\n",
       "         [167, 192, 241]],\n",
       " \n",
       "        [[ 29,  53, 107],\n",
       "         [ 44,  73, 138],\n",
       "         [ 51,  81, 154],\n",
       "         ...,\n",
       "         [163, 187, 243],\n",
       "         [165, 189, 244],\n",
       "         [170, 193, 243]],\n",
       " \n",
       "        [[ 34,  59, 117],\n",
       "         [ 42,  71, 139],\n",
       "         [ 47,  78, 152],\n",
       "         ...,\n",
       "         [156, 179, 236],\n",
       "         [165, 187, 242],\n",
       "         [171, 193, 243]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 85, 123, 199],\n",
       "         [ 88, 128, 203],\n",
       "         [ 96, 134, 209],\n",
       "         ...,\n",
       "         [ 89, 129, 211],\n",
       "         [ 82, 122, 205],\n",
       "         [ 78, 118, 200]],\n",
       " \n",
       "        [[ 86, 124, 199],\n",
       "         [ 90, 130, 205],\n",
       "         [ 97, 136, 211],\n",
       "         ...,\n",
       "         [ 87, 126, 211],\n",
       "         [ 81, 122, 205],\n",
       "         [ 78, 119, 202]],\n",
       " \n",
       "        [[ 85, 123, 198],\n",
       "         [ 91, 131, 206],\n",
       "         [ 97, 136, 211],\n",
       "         ...,\n",
       "         [ 85, 125, 208],\n",
       "         [ 78, 119, 204],\n",
       "         [ 77, 119, 202]]], dtype=uint8),\n",
       " array([[[247, 244, 230],\n",
       "         [248, 245, 230],\n",
       "         [244, 241, 225],\n",
       "         ...,\n",
       "         [  8,  28,  35],\n",
       "         [ 16,  37,  45],\n",
       "         [ 17,  44,  54]],\n",
       " \n",
       "        [[250, 247, 233],\n",
       "         [247, 244, 229],\n",
       "         [244, 241, 227],\n",
       "         ...,\n",
       "         [ 13,  28,  36],\n",
       "         [ 13,  28,  37],\n",
       "         [ 17,  39,  48]],\n",
       " \n",
       "        [[247, 245, 231],\n",
       "         [245, 242, 227],\n",
       "         [228, 226, 209],\n",
       "         ...,\n",
       "         [ 11,  25,  32],\n",
       "         [ 12,  30,  37],\n",
       "         [ 17,  37,  44]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[216, 225, 230],\n",
       "         [222, 230, 233],\n",
       "         [235, 242, 242],\n",
       "         ...,\n",
       "         [130, 137, 156],\n",
       "         [171, 177, 186],\n",
       "         [193, 200, 211]],\n",
       " \n",
       "        [[204, 215, 222],\n",
       "         [218, 228, 232],\n",
       "         [219, 228, 232],\n",
       "         ...,\n",
       "         [154, 161, 179],\n",
       "         [189, 194, 206],\n",
       "         [196, 200, 211]],\n",
       " \n",
       "        [[197, 208, 215],\n",
       "         [209, 219, 226],\n",
       "         [218, 229, 233],\n",
       "         ...,\n",
       "         [166, 172, 191],\n",
       "         [195, 199, 208],\n",
       "         [203, 207, 217]]], dtype=uint8),\n",
       " array([[[ 80,  75,  93],\n",
       "         [ 83,  81, 102],\n",
       "         [ 80,  81, 101],\n",
       "         ...,\n",
       "         [137, 130, 151],\n",
       "         [134, 125, 146],\n",
       "         [134, 126, 147]],\n",
       " \n",
       "        [[ 83,  79,  96],\n",
       "         [ 86,  84, 104],\n",
       "         [ 81,  81, 102],\n",
       "         ...,\n",
       "         [144, 133, 152],\n",
       "         [144, 132, 151],\n",
       "         [142, 131, 151]],\n",
       " \n",
       "        [[ 85,  79,  96],\n",
       "         [ 89,  83, 105],\n",
       "         [ 87,  83, 105],\n",
       "         ...,\n",
       "         [142, 132, 148],\n",
       "         [139, 132, 147],\n",
       "         [138, 130, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99,  96, 120],\n",
       "         [101,  98, 125],\n",
       "         [105, 101, 130],\n",
       "         ...,\n",
       "         [107, 110, 141],\n",
       "         [102, 104, 137],\n",
       "         [ 96,  97, 133]],\n",
       " \n",
       "        [[ 99,  96, 121],\n",
       "         [105, 102, 129],\n",
       "         [105, 102, 130],\n",
       "         ...,\n",
       "         [108, 111, 142],\n",
       "         [102, 104, 138],\n",
       "         [ 97,  98, 133]],\n",
       " \n",
       "        [[102,  98, 123],\n",
       "         [106, 101, 129],\n",
       "         [104, 100, 129],\n",
       "         ...,\n",
       "         [106, 108, 142],\n",
       "         [100, 102, 136],\n",
       "         [ 95,  97, 131]]], dtype=uint8),\n",
       " array([[[147, 175, 205],\n",
       "         [ 81, 100, 129],\n",
       "         [ 72,  82, 111],\n",
       "         ...,\n",
       "         [194, 211, 250],\n",
       "         [193, 210, 249],\n",
       "         [191, 208, 247]],\n",
       " \n",
       "        [[112, 134, 163],\n",
       "         [ 57,  72, 100],\n",
       "         [ 75,  81, 109],\n",
       "         ...,\n",
       "         [188, 209, 249],\n",
       "         [188, 209, 248],\n",
       "         [187, 208, 247]],\n",
       " \n",
       "        [[ 85, 103, 130],\n",
       "         [ 45,  57,  86],\n",
       "         [ 38,  43,  72],\n",
       "         ...,\n",
       "         [181, 206, 248],\n",
       "         [182, 206, 248],\n",
       "         [183, 207, 249]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[214, 221, 238],\n",
       "         [184, 199, 229],\n",
       "         [161, 187, 232],\n",
       "         ...,\n",
       "         [170, 192, 242],\n",
       "         [168, 191, 241],\n",
       "         [168, 191, 241]],\n",
       " \n",
       "        [[214, 223, 235],\n",
       "         [187, 204, 231],\n",
       "         [161, 186, 232],\n",
       "         ...,\n",
       "         [169, 195, 246],\n",
       "         [166, 193, 244],\n",
       "         [168, 195, 246]],\n",
       " \n",
       "        [[216, 226, 236],\n",
       "         [188, 204, 230],\n",
       "         [162, 188, 231],\n",
       "         ...,\n",
       "         [169, 196, 246],\n",
       "         [167, 194, 245],\n",
       "         [168, 195, 246]]], dtype=uint8),\n",
       " array([[[101,  98,  91],\n",
       "         [ 70,  71,  73],\n",
       "         [ 83,  80,  77],\n",
       "         ...,\n",
       "         [ 58,  64,  70],\n",
       "         [ 51,  57,  63],\n",
       "         [ 36,  44,  48]],\n",
       " \n",
       "        [[ 61,  71,  86],\n",
       "         [ 59,  59,  54],\n",
       "         [ 54,  60,  58],\n",
       "         ...,\n",
       "         [ 52,  61,  71],\n",
       "         [ 42,  52,  59],\n",
       "         [ 46,  55,  62]],\n",
       " \n",
       "        [[ 62,  66,  65],\n",
       "         [ 79,  87,  82],\n",
       "         [ 68,  68,  69],\n",
       "         ...,\n",
       "         [ 60,  69,  79],\n",
       "         [ 57,  68,  78],\n",
       "         [ 45,  54,  64]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 112, 141],\n",
       "         [153, 148, 159],\n",
       "         [197, 193, 191],\n",
       "         ...,\n",
       "         [130, 131, 139],\n",
       "         [129, 128, 137],\n",
       "         [125, 126, 136]],\n",
       " \n",
       "        [[100, 117, 145],\n",
       "         [131, 133, 147],\n",
       "         [187, 183, 187],\n",
       "         ...,\n",
       "         [135, 134, 144],\n",
       "         [131, 130, 140],\n",
       "         [127, 127, 137]],\n",
       " \n",
       "        [[116, 133, 161],\n",
       "         [123, 133, 153],\n",
       "         [168, 165, 174],\n",
       "         ...,\n",
       "         [137, 136, 146],\n",
       "         [132, 131, 141],\n",
       "         [126, 126, 136]]], dtype=uint8),\n",
       " array([[[ 67,  91, 140],\n",
       "         [101, 134, 198],\n",
       "         [111, 139, 202],\n",
       "         ...,\n",
       "         [ 54,  73, 130],\n",
       "         [ 74,  94, 151],\n",
       "         [ 75,  98, 154]],\n",
       " \n",
       "        [[ 80, 105, 154],\n",
       "         [104, 136, 198],\n",
       "         [114, 141, 202],\n",
       "         ...,\n",
       "         [ 45,  64, 121],\n",
       "         [ 54,  74, 131],\n",
       "         [ 70,  93, 149]],\n",
       " \n",
       "        [[ 92, 118, 167],\n",
       "         [104, 133, 194],\n",
       "         [118, 144, 201],\n",
       "         ...,\n",
       "         [ 41,  60, 117],\n",
       "         [ 55,  75, 132],\n",
       "         [ 70,  93, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 165, 227],\n",
       "         [149, 172, 234],\n",
       "         [151, 175, 237],\n",
       "         ...,\n",
       "         [ 99, 123, 177],\n",
       "         [ 94, 118, 172],\n",
       "         [ 88, 112, 166]],\n",
       " \n",
       "        [[139, 165, 225],\n",
       "         [145, 171, 230],\n",
       "         [150, 176, 236],\n",
       "         ...,\n",
       "         [ 91, 115, 169],\n",
       "         [ 90, 114, 168],\n",
       "         [ 83, 107, 161]],\n",
       " \n",
       "        [[139, 162, 224],\n",
       "         [141, 164, 226],\n",
       "         [146, 169, 231],\n",
       "         ...,\n",
       "         [ 86, 110, 164],\n",
       "         [ 87, 111, 165],\n",
       "         [ 82, 106, 160]]], dtype=uint8),\n",
       " array([[[172, 190, 226],\n",
       "         [166, 181, 225],\n",
       "         [150, 164, 215],\n",
       "         ...,\n",
       "         [ 51,  52,  81],\n",
       "         [ 35,  35,  70],\n",
       "         [ 83,  84, 119]],\n",
       " \n",
       "        [[178, 194, 240],\n",
       "         [169, 185, 231],\n",
       "         [148, 162, 215],\n",
       "         ...,\n",
       "         [ 58,  59,  93],\n",
       "         [ 60,  62,  93],\n",
       "         [ 26,  28,  58]],\n",
       " \n",
       "        [[171, 193, 232],\n",
       "         [169, 192, 227],\n",
       "         [165, 186, 222],\n",
       "         ...,\n",
       "         [ 36,  40,  73],\n",
       "         [ 60,  62,  93],\n",
       "         [ 50,  52,  81]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 154, 217],\n",
       "         [132, 152, 215],\n",
       "         [131, 150, 213],\n",
       "         ...,\n",
       "         [145, 160, 209],\n",
       "         [145, 162, 209],\n",
       "         [148, 163, 207]],\n",
       " \n",
       "        [[134, 156, 222],\n",
       "         [128, 149, 215],\n",
       "         [126, 147, 213],\n",
       "         ...,\n",
       "         [145, 160, 209],\n",
       "         [145, 162, 209],\n",
       "         [147, 163, 207]],\n",
       " \n",
       "        [[126, 151, 217],\n",
       "         [118, 142, 212],\n",
       "         [124, 146, 213],\n",
       "         ...,\n",
       "         [144, 158, 209],\n",
       "         [144, 160, 209],\n",
       "         [149, 164, 210]]], dtype=uint8),\n",
       " array([[[163, 176, 221],\n",
       "         [150, 164, 210],\n",
       "         [133, 145, 193],\n",
       "         ...,\n",
       "         [209, 217, 254],\n",
       "         [213, 215, 252],\n",
       "         [217, 218, 255]],\n",
       " \n",
       "        [[159, 172, 218],\n",
       "         [145, 157, 203],\n",
       "         [104, 123, 180],\n",
       "         ...,\n",
       "         [208, 216, 253],\n",
       "         [213, 215, 253],\n",
       "         [208, 213, 248]],\n",
       " \n",
       "        [[153, 166, 212],\n",
       "         [131, 143, 190],\n",
       "         [ 87, 116, 185],\n",
       "         ...,\n",
       "         [205, 213, 249],\n",
       "         [217, 218, 254],\n",
       "         [208, 217, 249]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 165, 210],\n",
       "         [141, 158, 207],\n",
       "         [135, 149, 200],\n",
       "         ...,\n",
       "         [211, 217, 247],\n",
       "         [207, 210, 247],\n",
       "         [208, 216, 250]],\n",
       " \n",
       "        [[155, 166, 206],\n",
       "         [145, 160, 207],\n",
       "         [141, 154, 201],\n",
       "         ...,\n",
       "         [213, 219, 248],\n",
       "         [210, 215, 251],\n",
       "         [206, 215, 252]],\n",
       " \n",
       "        [[163, 173, 210],\n",
       "         [146, 159, 206],\n",
       "         [144, 157, 203],\n",
       "         ...,\n",
       "         [217, 220, 250],\n",
       "         [208, 214, 248],\n",
       "         [206, 214, 251]]], dtype=uint8),\n",
       " array([[[ 87, 120, 157],\n",
       "         [118, 150, 183],\n",
       "         [144, 179, 203],\n",
       "         ...,\n",
       "         [220, 235, 254],\n",
       "         [222, 237, 255],\n",
       "         [219, 235, 254]],\n",
       " \n",
       "        [[ 91, 125, 160],\n",
       "         [125, 157, 187],\n",
       "         [150, 185, 207],\n",
       "         ...,\n",
       "         [221, 236, 255],\n",
       "         [222, 237, 255],\n",
       "         [219, 235, 254]],\n",
       " \n",
       "        [[ 98, 133, 166],\n",
       "         [134, 168, 195],\n",
       "         [156, 190, 210],\n",
       "         ...,\n",
       "         [221, 236, 255],\n",
       "         [220, 235, 254],\n",
       "         [219, 235, 254]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[158, 195, 229],\n",
       "         [163, 201, 233],\n",
       "         [169, 211, 238],\n",
       "         ...,\n",
       "         [175, 206, 231],\n",
       "         [176, 209, 235],\n",
       "         [173, 208, 235]],\n",
       " \n",
       "        [[161, 198, 232],\n",
       "         [167, 205, 237],\n",
       "         [165, 205, 233],\n",
       "         ...,\n",
       "         [179, 210, 235],\n",
       "         [177, 210, 236],\n",
       "         [175, 209, 237]],\n",
       " \n",
       "        [[161, 198, 232],\n",
       "         [157, 196, 228],\n",
       "         [173, 205, 236],\n",
       "         ...,\n",
       "         [178, 209, 235],\n",
       "         [177, 210, 236],\n",
       "         [177, 209, 237]]], dtype=uint8),\n",
       " array([[[190, 208, 255],\n",
       "         [191, 207, 254],\n",
       "         [191, 207, 254],\n",
       "         ...,\n",
       "         [194, 208, 250],\n",
       "         [193, 207, 249],\n",
       "         [194, 208, 250]],\n",
       " \n",
       "        [[192, 207, 254],\n",
       "         [190, 205, 253],\n",
       "         [186, 201, 249],\n",
       "         ...,\n",
       "         [194, 207, 252],\n",
       "         [194, 207, 251],\n",
       "         [195, 208, 252]],\n",
       " \n",
       "        [[192, 206, 254],\n",
       "         [182, 197, 246],\n",
       "         [183, 197, 249],\n",
       "         ...,\n",
       "         [196, 209, 253],\n",
       "         [195, 208, 252],\n",
       "         [196, 209, 253]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 185, 240],\n",
       "         [176, 196, 252],\n",
       "         [168, 192, 247],\n",
       "         ...,\n",
       "         [181, 195, 244],\n",
       "         [185, 199, 249],\n",
       "         [186, 200, 251]],\n",
       " \n",
       "        [[166, 186, 241],\n",
       "         [173, 193, 249],\n",
       "         [165, 188, 244],\n",
       "         ...,\n",
       "         [185, 203, 250],\n",
       "         [189, 205, 251],\n",
       "         [190, 206, 251]],\n",
       " \n",
       "        [[168, 188, 243],\n",
       "         [165, 184, 241],\n",
       "         [168, 191, 247],\n",
       "         ...,\n",
       "         [184, 204, 253],\n",
       "         [188, 204, 250],\n",
       "         [190, 205, 245]]], dtype=uint8),\n",
       " array([[[116, 145, 194],\n",
       "         [132, 167, 219],\n",
       "         [164, 195, 243],\n",
       "         ...,\n",
       "         [170, 194, 245],\n",
       "         [177, 198, 245],\n",
       "         [187, 202, 246]],\n",
       " \n",
       "        [[138, 169, 222],\n",
       "         [138, 170, 216],\n",
       "         [175, 201, 243],\n",
       "         ...,\n",
       "         [171, 195, 235],\n",
       "         [179, 196, 241],\n",
       "         [197, 206, 248]],\n",
       " \n",
       "        [[137, 169, 220],\n",
       "         [165, 190, 233],\n",
       "         [187, 210, 247],\n",
       "         ...,\n",
       "         [173, 194, 231],\n",
       "         [179, 192, 237],\n",
       "         [194, 202, 245]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 135, 196],\n",
       "         [130, 165, 231],\n",
       "         [113, 149, 213],\n",
       "         ...,\n",
       "         [184, 209, 251],\n",
       "         [165, 191, 244],\n",
       "         [163, 192, 239]],\n",
       " \n",
       "        [[145, 179, 238],\n",
       "         [127, 166, 231],\n",
       "         [120, 157, 219],\n",
       "         ...,\n",
       "         [182, 206, 244],\n",
       "         [168, 190, 244],\n",
       "         [151, 180, 227]],\n",
       " \n",
       "        [[148, 180, 235],\n",
       "         [131, 173, 239],\n",
       "         [140, 177, 239],\n",
       "         ...,\n",
       "         [183, 206, 242],\n",
       "         [167, 187, 242],\n",
       "         [155, 184, 231]]], dtype=uint8),\n",
       " array([[[186, 199, 237],\n",
       "         [190, 200, 238],\n",
       "         [199, 207, 243],\n",
       "         ...,\n",
       "         [184, 193, 231],\n",
       "         [184, 193, 231],\n",
       "         [181, 193, 229]],\n",
       " \n",
       "        [[185, 197, 237],\n",
       "         [182, 191, 231],\n",
       "         [183, 191, 229],\n",
       "         ...,\n",
       "         [187, 196, 234],\n",
       "         [180, 189, 227],\n",
       "         [179, 190, 227]],\n",
       " \n",
       "        [[185, 197, 239],\n",
       "         [193, 203, 245],\n",
       "         [188, 196, 235],\n",
       "         ...,\n",
       "         [168, 177, 215],\n",
       "         [185, 194, 231],\n",
       "         [176, 188, 224]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 184, 230],\n",
       "         [171, 187, 233],\n",
       "         [176, 195, 240],\n",
       "         ...,\n",
       "         [194, 211, 250],\n",
       "         [191, 208, 247],\n",
       "         [186, 202, 243]],\n",
       " \n",
       "        [[169, 184, 230],\n",
       "         [171, 187, 233],\n",
       "         [175, 194, 239],\n",
       "         ...,\n",
       "         [194, 211, 250],\n",
       "         [192, 209, 248],\n",
       "         [186, 202, 244]],\n",
       " \n",
       "        [[169, 184, 230],\n",
       "         [171, 187, 233],\n",
       "         [174, 193, 238],\n",
       "         ...,\n",
       "         [194, 211, 250],\n",
       "         [191, 208, 247],\n",
       "         [186, 202, 245]]], dtype=uint8),\n",
       " array([[[ 68,  88, 107],\n",
       "         [ 74,  89, 116],\n",
       "         [ 86, 100, 133],\n",
       "         ...,\n",
       "         [192, 203, 234],\n",
       "         [190, 199, 236],\n",
       "         [192, 201, 238]],\n",
       " \n",
       "        [[ 71,  88, 109],\n",
       "         [ 76,  91, 118],\n",
       "         [ 87, 100, 132],\n",
       "         ...,\n",
       "         [191, 202, 235],\n",
       "         [188, 199, 235],\n",
       "         [190, 201, 237]],\n",
       " \n",
       "        [[ 73,  88, 111],\n",
       "         [ 77,  92, 119],\n",
       "         [ 79,  93, 123],\n",
       "         ...,\n",
       "         [189, 200, 234],\n",
       "         [185, 198, 234],\n",
       "         [187, 200, 236]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 136, 174],\n",
       "         [140, 151, 189],\n",
       "         [147, 157, 195],\n",
       "         ...,\n",
       "         [151, 169, 210],\n",
       "         [139, 155, 201],\n",
       "         [125, 141, 187]],\n",
       " \n",
       "        [[124, 136, 174],\n",
       "         [139, 151, 189],\n",
       "         [147, 158, 196],\n",
       "         ...,\n",
       "         [149, 167, 208],\n",
       "         [136, 152, 198],\n",
       "         [123, 139, 185]],\n",
       " \n",
       "        [[125, 136, 174],\n",
       "         [138, 150, 188],\n",
       "         [147, 159, 197],\n",
       "         ...,\n",
       "         [146, 164, 205],\n",
       "         [132, 148, 194],\n",
       "         [122, 138, 184]]], dtype=uint8),\n",
       " array([[[133, 140, 136],\n",
       "         [135, 143, 142],\n",
       "         [133, 141, 140],\n",
       "         ...,\n",
       "         [193, 196, 194],\n",
       "         [201, 204, 202],\n",
       "         [189, 194, 193]],\n",
       " \n",
       "        [[135, 141, 140],\n",
       "         [130, 138, 137],\n",
       "         [125, 133, 132],\n",
       "         ...,\n",
       "         [199, 202, 200],\n",
       "         [192, 195, 193],\n",
       "         [192, 197, 196]],\n",
       " \n",
       "        [[128, 136, 135],\n",
       "         [127, 134, 137],\n",
       "         [124, 131, 133],\n",
       "         ...,\n",
       "         [198, 201, 199],\n",
       "         [192, 195, 193],\n",
       "         [189, 195, 194]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[157, 162, 162],\n",
       "         [150, 153, 155],\n",
       "         [166, 167, 159],\n",
       "         ...,\n",
       "         [184, 187, 185],\n",
       "         [182, 184, 182],\n",
       "         [181, 186, 185]],\n",
       " \n",
       "        [[165, 171, 171],\n",
       "         [181, 184, 184],\n",
       "         [170, 169, 165],\n",
       "         ...,\n",
       "         [189, 192, 190],\n",
       "         [189, 193, 191],\n",
       "         [190, 193, 193]],\n",
       " \n",
       "        [[169, 174, 173],\n",
       "         [156, 159, 159],\n",
       "         [167, 165, 162],\n",
       "         ...,\n",
       "         [193, 196, 194],\n",
       "         [200, 203, 201],\n",
       "         [199, 199, 199]]], dtype=uint8),\n",
       " array([[[194, 223, 246],\n",
       "         [192, 221, 245],\n",
       "         [190, 218, 248],\n",
       "         ...,\n",
       "         [198, 221, 253],\n",
       "         [195, 220, 253],\n",
       "         [193, 219, 253]],\n",
       " \n",
       "        [[186, 216, 248],\n",
       "         [188, 217, 254],\n",
       "         [185, 214, 255],\n",
       "         ...,\n",
       "         [198, 221, 253],\n",
       "         [195, 220, 253],\n",
       "         [193, 219, 253]],\n",
       " \n",
       "        [[176, 209, 254],\n",
       "         [158, 192, 245],\n",
       "         [146, 178, 241],\n",
       "         ...,\n",
       "         [197, 221, 252],\n",
       "         [197, 220, 251],\n",
       "         [196, 220, 251]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 214, 249],\n",
       "         [194, 214, 251],\n",
       "         [192, 215, 250],\n",
       "         ...,\n",
       "         [206, 224, 251],\n",
       "         [206, 224, 251],\n",
       "         [206, 222, 251]],\n",
       " \n",
       "        [[194, 215, 247],\n",
       "         [196, 216, 249],\n",
       "         [195, 217, 252],\n",
       "         ...,\n",
       "         [207, 224, 251],\n",
       "         [208, 225, 250],\n",
       "         [207, 224, 251]],\n",
       " \n",
       "        [[199, 220, 248],\n",
       "         [199, 220, 249],\n",
       "         [199, 219, 249],\n",
       "         ...,\n",
       "         [207, 224, 250],\n",
       "         [207, 224, 250],\n",
       "         [207, 224, 250]]], dtype=uint8),\n",
       " array([[[ 87,  96, 139],\n",
       "         [ 83,  94, 137],\n",
       "         [ 94, 111, 153],\n",
       "         ...,\n",
       "         [169, 188, 223],\n",
       "         [170, 189, 224],\n",
       "         [171, 190, 227]],\n",
       " \n",
       "        [[ 97, 110, 154],\n",
       "         [106, 123, 166],\n",
       "         [115, 134, 178],\n",
       "         ...,\n",
       "         [166, 184, 221],\n",
       "         [168, 186, 223],\n",
       "         [165, 184, 221]],\n",
       " \n",
       "        [[113, 136, 181],\n",
       "         [123, 145, 192],\n",
       "         [123, 148, 195],\n",
       "         ...,\n",
       "         [159, 175, 216],\n",
       "         [163, 180, 221],\n",
       "         [165, 184, 221]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 164, 212],\n",
       "         [134, 155, 205],\n",
       "         [122, 151, 198],\n",
       "         ...,\n",
       "         [136, 157, 207],\n",
       "         [151, 172, 223],\n",
       "         [145, 164, 212]],\n",
       " \n",
       "        [[141, 169, 213],\n",
       "         [141, 160, 213],\n",
       "         [135, 156, 205],\n",
       "         ...,\n",
       "         [138, 162, 210],\n",
       "         [148, 171, 219],\n",
       "         [150, 174, 220]],\n",
       " \n",
       "        [[195, 217, 140],\n",
       "         [180, 203, 153],\n",
       "         [144, 165, 209],\n",
       "         ...,\n",
       "         [145, 166, 201],\n",
       "         [155, 175, 212],\n",
       "         [158, 179, 215]]], dtype=uint8),\n",
       " array([[[154, 181, 216],\n",
       "         [153, 179, 215],\n",
       "         [153, 177, 213],\n",
       "         ...,\n",
       "         [ 57,  90, 129],\n",
       "         [ 61,  95, 137],\n",
       "         [ 57,  90, 132]],\n",
       " \n",
       "        [[147, 175, 210],\n",
       "         [145, 174, 210],\n",
       "         [150, 173, 210],\n",
       "         ...,\n",
       "         [ 42,  62,  91],\n",
       "         [ 60,  89, 122],\n",
       "         [ 56,  88, 128]],\n",
       " \n",
       "        [[140, 168, 205],\n",
       "         [139, 167, 204],\n",
       "         [140, 163, 201],\n",
       "         ...,\n",
       "         [ 28,  39,  65],\n",
       "         [ 30,  44,  73],\n",
       "         [ 53,  76, 112]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 131, 174],\n",
       "         [103, 131, 173],\n",
       "         [108, 132, 172],\n",
       "         ...,\n",
       "         [ 60,  89, 133],\n",
       "         [ 65,  94, 138],\n",
       "         [ 68,  97, 141]],\n",
       " \n",
       "        [[ 98, 136, 178],\n",
       "         [102, 136, 179],\n",
       "         [107, 133, 176],\n",
       "         ...,\n",
       "         [ 67,  96, 141],\n",
       "         [ 69,  98, 142],\n",
       "         [ 72, 103, 146]],\n",
       " \n",
       "        [[102, 137, 180],\n",
       "         [104, 139, 182],\n",
       "         [109, 140, 181],\n",
       "         ...,\n",
       "         [ 72, 101, 146],\n",
       "         [ 76, 109, 152],\n",
       "         [ 75, 108, 151]]], dtype=uint8),\n",
       " array([[[ 49,  51,  54],\n",
       "         [ 80,  82,  87],\n",
       "         [ 56,  56,  67],\n",
       "         ...,\n",
       "         [201, 198, 213],\n",
       "         [203, 200, 216],\n",
       "         [204, 201, 216]],\n",
       " \n",
       "        [[ 58,  59,  61],\n",
       "         [ 69,  69,  79],\n",
       "         [ 67,  67,  79],\n",
       "         ...,\n",
       "         [199, 197, 213],\n",
       "         [203, 200, 216],\n",
       "         [203, 199, 215]],\n",
       " \n",
       "        [[ 71,  72,  79],\n",
       "         [ 65,  66,  76],\n",
       "         [104, 105, 119],\n",
       "         ...,\n",
       "         [193, 194, 208],\n",
       "         [198, 198, 212],\n",
       "         [198, 199, 213]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 138, 162],\n",
       "         [145, 148, 169],\n",
       "         [152, 155, 176],\n",
       "         ...,\n",
       "         [128, 137, 170],\n",
       "         [132, 143, 173],\n",
       "         [153, 159, 188]],\n",
       " \n",
       "        [[137, 139, 162],\n",
       "         [145, 147, 171],\n",
       "         [150, 152, 177],\n",
       "         ...,\n",
       "         [125, 133, 166],\n",
       "         [138, 147, 177],\n",
       "         [157, 162, 191]],\n",
       " \n",
       "        [[132, 133, 158],\n",
       "         [145, 146, 172],\n",
       "         [150, 151, 177],\n",
       "         ...,\n",
       "         [128, 134, 169],\n",
       "         [147, 152, 185],\n",
       "         [162, 164, 195]]], dtype=uint8),\n",
       " array([[[ 74,  91, 115],\n",
       "         [ 74,  93, 120],\n",
       "         [ 78,  98, 124],\n",
       "         ...,\n",
       "         [213, 234, 252],\n",
       "         [214, 239, 255],\n",
       "         [203, 234, 249]],\n",
       " \n",
       "        [[ 73,  89, 114],\n",
       "         [ 74,  93, 120],\n",
       "         [ 80,  99, 126],\n",
       "         ...,\n",
       "         [205, 229, 253],\n",
       "         [205, 229, 248],\n",
       "         [207, 236, 251]],\n",
       " \n",
       "        [[ 75,  91, 116],\n",
       "         [ 75,  94, 121],\n",
       "         [ 79,  98, 125],\n",
       "         ...,\n",
       "         [194, 222, 253],\n",
       "         [201, 225, 248],\n",
       "         [211, 238, 254]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 76,  93, 117],\n",
       "         [ 93, 112, 140],\n",
       "         [107, 127, 163],\n",
       "         ...,\n",
       "         [ 82,  91, 129],\n",
       "         [ 80,  89, 127],\n",
       "         [ 74,  83, 121]],\n",
       " \n",
       "        [[ 76,  92, 117],\n",
       "         [ 95, 114, 142],\n",
       "         [103, 122, 159],\n",
       "         ...,\n",
       "         [ 77,  86, 124],\n",
       "         [ 71,  80, 118],\n",
       "         [ 70,  79, 117]],\n",
       " \n",
       "        [[ 76,  91, 115],\n",
       "         [ 94, 111, 137],\n",
       "         [105, 125, 156],\n",
       "         ...,\n",
       "         [ 79,  88, 126],\n",
       "         [ 73,  83, 117],\n",
       "         [ 67,  77, 111]]], dtype=uint8),\n",
       " array([[[ 35,  42, 117],\n",
       "         [ 67,  80, 161],\n",
       "         [125, 153, 213],\n",
       "         ...,\n",
       "         [ 70, 100, 157],\n",
       "         [ 61,  90, 147],\n",
       "         [ 60,  84, 132]],\n",
       " \n",
       "        [[ 30,  41, 105],\n",
       "         [ 60,  75, 146],\n",
       "         [114, 139, 194],\n",
       "         ...,\n",
       "         [ 71, 102, 158],\n",
       "         [ 61,  91, 150],\n",
       "         [ 59,  85, 137]],\n",
       " \n",
       "        [[ 16,  33,  86],\n",
       "         [ 53,  71, 135],\n",
       "         [109, 135, 187],\n",
       "         ...,\n",
       "         [ 73, 103, 159],\n",
       "         [ 60,  90, 151],\n",
       "         [ 58,  87, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[224, 243, 251],\n",
       "         [218, 241, 254],\n",
       "         [197, 221, 245],\n",
       "         ...,\n",
       "         [101, 134, 183],\n",
       "         [102, 134, 183],\n",
       "         [104, 134, 183]],\n",
       " \n",
       "        [[224, 244, 251],\n",
       "         [220, 243, 254],\n",
       "         [207, 233, 252],\n",
       "         ...,\n",
       "         [105, 137, 186],\n",
       "         [104, 135, 185],\n",
       "         [104, 131, 181]],\n",
       " \n",
       "        [[224, 242, 254],\n",
       "         [219, 241, 255],\n",
       "         [209, 234, 255],\n",
       "         ...,\n",
       "         [105, 136, 187],\n",
       "         [105, 133, 184],\n",
       "         [104, 128, 180]]], dtype=uint8),\n",
       " array([[[109, 135, 185],\n",
       "         [118, 139, 184],\n",
       "         [ 92, 108, 149],\n",
       "         ...,\n",
       "         [170, 185, 223],\n",
       "         [169, 188, 224],\n",
       "         [169, 189, 224]],\n",
       " \n",
       "        [[103, 128, 174],\n",
       "         [ 95, 110, 150],\n",
       "         [ 66,  78, 114],\n",
       "         ...,\n",
       "         [163, 180, 219],\n",
       "         [166, 185, 222],\n",
       "         [169, 188, 225]],\n",
       " \n",
       "        [[104, 125, 166],\n",
       "         [ 85,  95, 131],\n",
       "         [ 86, 100, 137],\n",
       "         ...,\n",
       "         [157, 175, 216],\n",
       "         [161, 180, 218],\n",
       "         [160, 179, 217]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 158, 207],\n",
       "         [138, 160, 207],\n",
       "         [147, 170, 216],\n",
       "         ...,\n",
       "         [143, 165, 212],\n",
       "         [143, 168, 211],\n",
       "         [155, 176, 216]],\n",
       " \n",
       "        [[136, 158, 210],\n",
       "         [139, 161, 210],\n",
       "         [149, 172, 218],\n",
       "         ...,\n",
       "         [142, 166, 214],\n",
       "         [146, 170, 214],\n",
       "         [158, 180, 219]],\n",
       " \n",
       "        [[137, 159, 211],\n",
       "         [141, 163, 211],\n",
       "         [150, 173, 219],\n",
       "         ...,\n",
       "         [148, 170, 214],\n",
       "         [147, 172, 216],\n",
       "         [148, 170, 209]]], dtype=uint8),\n",
       " array([[[171, 200, 246],\n",
       "         [177, 205, 249],\n",
       "         [182, 206, 251],\n",
       "         ...,\n",
       "         [179, 198, 248],\n",
       "         [179, 196, 246],\n",
       "         [181, 195, 247]],\n",
       " \n",
       "        [[175, 201, 247],\n",
       "         [175, 200, 243],\n",
       "         [181, 204, 246],\n",
       "         ...,\n",
       "         [174, 192, 245],\n",
       "         [174, 190, 243],\n",
       "         [170, 184, 237]],\n",
       " \n",
       "        [[145, 179, 234],\n",
       "         [138, 171, 224],\n",
       "         [144, 175, 227],\n",
       "         ...,\n",
       "         [163, 182, 239],\n",
       "         [164, 183, 240],\n",
       "         [167, 187, 243]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[187, 212, 246],\n",
       "         [184, 209, 243],\n",
       "         [182, 205, 243],\n",
       "         ...,\n",
       "         [186, 206, 241],\n",
       "         [189, 209, 244],\n",
       "         [183, 202, 238]],\n",
       " \n",
       "        [[190, 212, 243],\n",
       "         [193, 214, 250],\n",
       "         [191, 213, 249],\n",
       "         ...,\n",
       "         [192, 212, 246],\n",
       "         [189, 209, 243],\n",
       "         [189, 210, 243]],\n",
       " \n",
       "        [[186, 211, 246],\n",
       "         [186, 211, 246],\n",
       "         [190, 211, 247],\n",
       "         ...,\n",
       "         [191, 212, 243],\n",
       "         [191, 212, 243],\n",
       "         [191, 212, 243]]], dtype=uint8),\n",
       " array([[[158, 172, 234],\n",
       "         [166, 181, 238],\n",
       "         [173, 191, 242],\n",
       "         ...,\n",
       "         [210, 225, 255],\n",
       "         [200, 215, 252],\n",
       "         [197, 215, 252]],\n",
       " \n",
       "        [[155, 169, 236],\n",
       "         [165, 181, 240],\n",
       "         [167, 186, 236],\n",
       "         ...,\n",
       "         [183, 199, 238],\n",
       "         [197, 212, 247],\n",
       "         [204, 217, 252]],\n",
       " \n",
       "        [[153, 171, 232],\n",
       "         [152, 171, 229],\n",
       "         [151, 170, 227],\n",
       "         ...,\n",
       "         [183, 198, 233],\n",
       "         [168, 183, 222],\n",
       "         [179, 195, 231]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 206, 240],\n",
       "         [190, 205, 241],\n",
       "         [187, 204, 241],\n",
       "         ...,\n",
       "         [194, 213, 246],\n",
       "         [191, 210, 243],\n",
       "         [186, 208, 240]],\n",
       " \n",
       "        [[195, 211, 242],\n",
       "         [192, 210, 243],\n",
       "         [188, 208, 243],\n",
       "         ...,\n",
       "         [194, 211, 244],\n",
       "         [196, 213, 246],\n",
       "         [194, 213, 246]],\n",
       " \n",
       "        [[199, 217, 243],\n",
       "         [198, 216, 248],\n",
       "         [189, 208, 244],\n",
       "         ...,\n",
       "         [198, 211, 245],\n",
       "         [193, 210, 243],\n",
       "         [192, 212, 244]]], dtype=uint8),\n",
       " array([[[  7,   7,   7],\n",
       "         [ 16,  16,  16],\n",
       "         [ 32,  32,  32],\n",
       "         ...,\n",
       "         [133, 133, 133],\n",
       "         [142, 142, 142],\n",
       "         [135, 135, 135]],\n",
       " \n",
       "        [[  1,   1,   1],\n",
       "         [  2,   2,   2],\n",
       "         [ 39,  39,  39],\n",
       "         ...,\n",
       "         [125, 125, 125],\n",
       "         [129, 129, 129],\n",
       "         [142, 142, 142]],\n",
       " \n",
       "        [[  3,   3,   3],\n",
       "         [  2,   2,   2],\n",
       "         [ 20,  20,  20],\n",
       "         ...,\n",
       "         [111, 111, 111],\n",
       "         [128, 128, 128],\n",
       "         [129, 129, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[  1,   1,   1],\n",
       "         [ 24,  24,  24],\n",
       "         [ 55,  55,  55],\n",
       "         ...,\n",
       "         [108, 108, 108],\n",
       "         [105, 105, 105],\n",
       "         [ 95,  95,  95]],\n",
       " \n",
       "        [[  0,   0,   0],\n",
       "         [ 30,  30,  30],\n",
       "         [ 56,  56,  56],\n",
       "         ...,\n",
       "         [116, 116, 116],\n",
       "         [ 95,  95,  95],\n",
       "         [ 89,  89,  89]],\n",
       " \n",
       "        [[  0,   0,   0],\n",
       "         [ 18,  18,  18],\n",
       "         [ 54,  54,  54],\n",
       "         ...,\n",
       "         [115, 115, 115],\n",
       "         [ 94,  94,  94],\n",
       "         [ 91,  91,  91]]], dtype=uint8),\n",
       " array([[[181, 175, 205],\n",
       "         [195, 185, 227],\n",
       "         [189, 179, 223],\n",
       "         ...,\n",
       "         [176, 160, 220],\n",
       "         [204, 190, 245],\n",
       "         [221, 218, 242]],\n",
       " \n",
       "        [[195, 192, 215],\n",
       "         [198, 191, 229],\n",
       "         [205, 199, 237],\n",
       "         ...,\n",
       "         [175, 157, 224],\n",
       "         [188, 172, 233],\n",
       "         [211, 205, 238]],\n",
       " \n",
       "        [[220, 221, 235],\n",
       "         [225, 223, 247],\n",
       "         [214, 215, 241],\n",
       "         ...,\n",
       "         [192, 179, 239],\n",
       "         [172, 158, 214],\n",
       "         [202, 193, 237]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[200, 206, 236],\n",
       "         [191, 194, 247],\n",
       "         [187, 187, 253],\n",
       "         ...,\n",
       "         [ 90,  98, 216],\n",
       "         [125, 135, 225],\n",
       "         [189, 183, 248]],\n",
       " \n",
       "        [[209, 217, 241],\n",
       "         [196, 203, 245],\n",
       "         [197, 199, 250],\n",
       "         ...,\n",
       "         [ 98, 104, 223],\n",
       "         [126, 134, 226],\n",
       "         [183, 181, 234]],\n",
       " \n",
       "        [[213, 219, 237],\n",
       "         [205, 210, 238],\n",
       "         [208, 209, 242],\n",
       "         ...,\n",
       "         [137, 132, 234],\n",
       "         [172, 169, 247],\n",
       "         [201, 205, 238]]], dtype=uint8),\n",
       " array([[[220, 227, 232],\n",
       "         [204, 211, 229],\n",
       "         [206, 212, 236],\n",
       "         ...,\n",
       "         [128, 128, 175],\n",
       "         [133, 134, 172],\n",
       "         [194, 193, 216]],\n",
       " \n",
       "        [[232, 236, 245],\n",
       "         [202, 212, 236],\n",
       "         [197, 206, 235],\n",
       "         ...,\n",
       "         [144, 150, 208],\n",
       "         [155, 160, 205],\n",
       "         [163, 168, 194]],\n",
       " \n",
       "        [[225, 225, 243],\n",
       "         [209, 222, 243],\n",
       "         [206, 221, 247],\n",
       "         ...,\n",
       "         [141, 151, 210],\n",
       "         [169, 179, 226],\n",
       "         [186, 193, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[229, 231, 248],\n",
       "         [199, 205, 247],\n",
       "         [193, 197, 248],\n",
       "         ...,\n",
       "         [ 93, 113, 215],\n",
       "         [119, 134, 210],\n",
       "         [203, 211, 239]],\n",
       " \n",
       "        [[232, 234, 247],\n",
       "         [205, 209, 246],\n",
       "         [199, 201, 247],\n",
       "         ...,\n",
       "         [108, 125, 218],\n",
       "         [158, 172, 238],\n",
       "         [196, 204, 232]],\n",
       " \n",
       "        [[228, 232, 243],\n",
       "         [213, 216, 248],\n",
       "         [210, 213, 251],\n",
       "         ...,\n",
       "         [117, 125, 212],\n",
       "         [162, 169, 232],\n",
       "         [216, 221, 250]]], dtype=uint8),\n",
       " array([[[186, 218, 241],\n",
       "         [168, 207, 236],\n",
       "         [159, 195, 231],\n",
       "         ...,\n",
       "         [112, 159, 214],\n",
       "         [ 97, 141, 200],\n",
       "         [ 75, 113, 189]],\n",
       " \n",
       "        [[164, 202, 231],\n",
       "         [166, 201, 236],\n",
       "         [155, 193, 231],\n",
       "         ...,\n",
       "         [ 99, 145, 204],\n",
       "         [ 98, 144, 203],\n",
       "         [ 73, 116, 186]],\n",
       " \n",
       "        [[153, 196, 231],\n",
       "         [162, 195, 237],\n",
       "         [147, 188, 230],\n",
       "         ...,\n",
       "         [ 87, 128, 192],\n",
       "         [ 97, 138, 201],\n",
       "         [ 81, 124, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 97, 138, 222],\n",
       "         [ 85, 123, 217],\n",
       "         [ 90, 132, 215],\n",
       "         ...,\n",
       "         [139, 191, 234],\n",
       "         [127, 177, 229],\n",
       "         [125, 174, 227]],\n",
       " \n",
       "        [[ 98, 142, 220],\n",
       "         [ 86, 128, 212],\n",
       "         [ 96, 133, 217],\n",
       "         ...,\n",
       "         [135, 186, 228],\n",
       "         [126, 174, 227],\n",
       "         [128, 176, 227]],\n",
       " \n",
       "        [[ 97, 141, 222],\n",
       "         [ 91, 134, 215],\n",
       "         [ 98, 139, 218],\n",
       "         ...,\n",
       "         [139, 187, 230],\n",
       "         [133, 179, 227],\n",
       "         [133, 178, 227]]], dtype=uint8),\n",
       " array([[[113, 135, 189],\n",
       "         [119, 141, 193],\n",
       "         [124, 148, 202],\n",
       "         ...,\n",
       "         [169, 190, 241],\n",
       "         [167, 188, 240],\n",
       "         [168, 188, 243]],\n",
       " \n",
       "        [[114, 135, 186],\n",
       "         [120, 141, 193],\n",
       "         [124, 146, 197],\n",
       "         ...,\n",
       "         [168, 188, 239],\n",
       "         [165, 186, 238],\n",
       "         [166, 186, 241]],\n",
       " \n",
       "        [[105, 126, 174],\n",
       "         [118, 138, 186],\n",
       "         [104, 123, 171],\n",
       "         ...,\n",
       "         [173, 191, 242],\n",
       "         [172, 189, 242],\n",
       "         [172, 188, 240]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[129, 148, 209],\n",
       "         [133, 151, 214],\n",
       "         [136, 154, 219],\n",
       "         ...,\n",
       "         [151, 171, 228],\n",
       "         [146, 166, 224],\n",
       "         [140, 161, 223]],\n",
       " \n",
       "        [[127, 147, 206],\n",
       "         [131, 149, 212],\n",
       "         [138, 156, 221],\n",
       "         ...,\n",
       "         [150, 171, 226],\n",
       "         [144, 164, 224],\n",
       "         [140, 163, 222]],\n",
       " \n",
       "        [[125, 144, 204],\n",
       "         [132, 151, 211],\n",
       "         [137, 155, 217],\n",
       "         ...,\n",
       "         [150, 170, 227],\n",
       "         [145, 166, 223],\n",
       "         [141, 164, 223]]], dtype=uint8),\n",
       " array([[[151, 176, 207],\n",
       "         [126, 165, 198],\n",
       "         [122, 158, 198],\n",
       "         ...,\n",
       "         [103, 143, 177],\n",
       "         [ 88, 127, 162],\n",
       "         [ 91, 128, 165]],\n",
       " \n",
       "        [[106, 125, 158],\n",
       "         [ 78, 108, 143],\n",
       "         [ 65,  97, 129],\n",
       "         ...,\n",
       "         [ 98, 136, 171],\n",
       "         [ 97, 134, 170],\n",
       "         [ 99, 136, 175]],\n",
       " \n",
       "        [[104, 115, 148],\n",
       "         [ 80,  99, 132],\n",
       "         [ 48,  66,  94],\n",
       "         ...,\n",
       "         [ 99, 133, 167],\n",
       "         [ 98, 133, 168],\n",
       "         [100, 136, 173]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 63,  89, 123],\n",
       "         [ 50,  79, 118],\n",
       "         [ 49,  69, 103],\n",
       "         ...,\n",
       "         [ 64,  96, 132],\n",
       "         [ 73, 104, 140],\n",
       "         [ 61,  93, 129]],\n",
       " \n",
       "        [[ 69,  95, 130],\n",
       "         [ 54,  85, 123],\n",
       "         [ 60,  82, 114],\n",
       "         ...,\n",
       "         [ 81, 108, 145],\n",
       "         [ 73, 100, 137],\n",
       "         [ 66,  92, 129]],\n",
       " \n",
       "        [[ 82, 112, 144],\n",
       "         [ 65, 102, 144],\n",
       "         [ 61,  89, 122],\n",
       "         ...,\n",
       "         [ 73, 100, 136],\n",
       "         [ 81, 107, 144],\n",
       "         [ 73,  99, 136]]], dtype=uint8),\n",
       " array([[[137, 127, 147],\n",
       "         [135, 127, 148],\n",
       "         [135, 127, 150],\n",
       "         ...,\n",
       "         [ 52,  55,  75],\n",
       "         [ 49,  52,  73],\n",
       "         [ 48,  52,  73]],\n",
       " \n",
       "        [[136, 125, 145],\n",
       "         [135, 126, 146],\n",
       "         [133, 124, 145],\n",
       "         ...,\n",
       "         [ 48,  52,  70],\n",
       "         [ 47,  50,  71],\n",
       "         [ 46,  50,  71]],\n",
       " \n",
       "        [[137, 126, 146],\n",
       "         [135, 125, 145],\n",
       "         [131, 121, 141],\n",
       "         ...,\n",
       "         [ 47,  51,  66],\n",
       "         [ 45,  50,  66],\n",
       "         [ 42,  46,  65]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  45,  75],\n",
       "         [ 56,  52,  83],\n",
       "         [ 65,  60,  91],\n",
       "         ...,\n",
       "         [ 62,  63,  84],\n",
       "         [ 59,  62,  81],\n",
       "         [ 58,  62,  81]],\n",
       " \n",
       "        [[ 45,  45,  75],\n",
       "         [ 52,  51,  81],\n",
       "         [ 64,  63,  93],\n",
       "         ...,\n",
       "         [ 63,  64,  85],\n",
       "         [ 64,  67,  87],\n",
       "         [ 64,  69,  87]],\n",
       " \n",
       "        [[ 44,  45,  75],\n",
       "         [ 48,  50,  80],\n",
       "         [ 62,  62,  92],\n",
       "         ...,\n",
       "         [ 70,  71,  92],\n",
       "         [ 66,  70,  89],\n",
       "         [ 64,  68,  87]]], dtype=uint8),\n",
       " array([[[ 38,  66, 123],\n",
       "         [ 47,  76, 134],\n",
       "         [ 71, 104, 166],\n",
       "         ...,\n",
       "         [ 71, 105, 181],\n",
       "         [ 74, 108, 185],\n",
       "         [ 76, 108, 183]],\n",
       " \n",
       "        [[ 59,  91, 150],\n",
       "         [ 70, 104, 164],\n",
       "         [ 75, 110, 173],\n",
       "         ...,\n",
       "         [ 67,  99, 174],\n",
       "         [ 62,  97, 172],\n",
       "         [ 69, 102, 175]],\n",
       " \n",
       "        [[ 62, 100, 163],\n",
       "         [ 73, 110, 174],\n",
       "         [ 68, 104, 170],\n",
       "         ...,\n",
       "         [ 65,  97, 172],\n",
       "         [ 66,  98, 173],\n",
       "         [ 66, 100, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 92, 121, 196],\n",
       "         [ 87, 115, 192],\n",
       "         [ 81, 110, 187],\n",
       "         ...,\n",
       "         [144, 171, 247],\n",
       "         [148, 177, 250],\n",
       "         [145, 180, 248]],\n",
       " \n",
       "        [[ 85, 116, 195],\n",
       "         [ 89, 119, 200],\n",
       "         [ 85, 115, 196],\n",
       "         ...,\n",
       "         [142, 176, 252],\n",
       "         [142, 179, 253],\n",
       "         [146, 180, 250]],\n",
       " \n",
       "        [[ 88, 119, 198],\n",
       "         [ 93, 123, 204],\n",
       "         [ 90, 120, 201],\n",
       "         ...,\n",
       "         [142, 176, 252],\n",
       "         [142, 179, 254],\n",
       "         [149, 183, 253]]], dtype=uint8),\n",
       " array([[[ 57,  86, 130],\n",
       "         [ 66,  95, 139],\n",
       "         [ 59,  88, 133],\n",
       "         ...,\n",
       "         [169, 186, 222],\n",
       "         [171, 187, 224],\n",
       "         [173, 189, 227]],\n",
       " \n",
       "        [[ 60,  89, 131],\n",
       "         [ 63,  93, 136],\n",
       "         [ 61,  89, 133],\n",
       "         ...,\n",
       "         [170, 186, 223],\n",
       "         [169, 185, 222],\n",
       "         [173, 189, 226]],\n",
       " \n",
       "        [[ 66,  93, 134],\n",
       "         [ 62,  89, 130],\n",
       "         [ 69,  97, 138],\n",
       "         ...,\n",
       "         [163, 179, 216],\n",
       "         [164, 180, 217],\n",
       "         [167, 183, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72,  95, 140],\n",
       "         [ 69,  92, 137],\n",
       "         [ 64,  85, 130],\n",
       "         ...,\n",
       "         [124, 143, 181],\n",
       "         [104, 128, 172],\n",
       "         [ 94, 124, 169]],\n",
       " \n",
       "        [[ 83, 106, 151],\n",
       "         [ 76,  99, 144],\n",
       "         [ 73,  94, 139],\n",
       "         ...,\n",
       "         [114, 134, 172],\n",
       "         [103, 127, 171],\n",
       "         [ 97, 128, 173]],\n",
       " \n",
       "        [[ 87, 114, 158],\n",
       "         [ 81, 108, 152],\n",
       "         [ 77, 101, 147],\n",
       "         ...,\n",
       "         [108, 129, 174],\n",
       "         [104, 133, 177],\n",
       "         [ 99, 134, 178]]], dtype=uint8),\n",
       " array([[[115, 134, 161],\n",
       "         [105, 124, 151],\n",
       "         [ 88, 106, 134],\n",
       "         ...,\n",
       "         [ 79, 102, 146],\n",
       "         [ 80, 103, 151],\n",
       "         [ 81, 103, 152]],\n",
       " \n",
       "        [[110, 130, 160],\n",
       "         [100, 120, 150],\n",
       "         [ 86, 106, 136],\n",
       "         ...,\n",
       "         [ 79, 103, 146],\n",
       "         [ 80, 103, 151],\n",
       "         [ 80, 103, 151]],\n",
       " \n",
       "        [[106, 125, 158],\n",
       "         [ 96, 115, 148],\n",
       "         [ 85, 104, 137],\n",
       "         ...,\n",
       "         [ 76, 100, 145],\n",
       "         [ 79, 102, 150],\n",
       "         [ 81, 104, 152]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[214, 230, 252],\n",
       "         [211, 228, 254],\n",
       "         [203, 221, 249],\n",
       "         ...,\n",
       "         [180, 198, 238],\n",
       "         [194, 212, 244],\n",
       "         [210, 227, 251]],\n",
       " \n",
       "        [[214, 231, 252],\n",
       "         [212, 229, 255],\n",
       "         [205, 223, 251],\n",
       "         ...,\n",
       "         [188, 207, 245],\n",
       "         [198, 216, 244],\n",
       "         [212, 229, 250]],\n",
       " \n",
       "        [[217, 234, 255],\n",
       "         [211, 229, 252],\n",
       "         [204, 222, 249],\n",
       "         ...,\n",
       "         [189, 208, 244],\n",
       "         [201, 220, 246],\n",
       "         [214, 232, 251]]], dtype=uint8),\n",
       " array([[[ 12,  21,  34],\n",
       "         [ 19,  31,  55],\n",
       "         [ 30,  47,  87],\n",
       "         ...,\n",
       "         [109, 113, 181],\n",
       "         [ 95, 103, 176],\n",
       "         [ 78,  93, 169]],\n",
       " \n",
       "        [[ 15,  24,  43],\n",
       "         [ 24,  40,  63],\n",
       "         [ 33,  50,  96],\n",
       "         ...,\n",
       "         [128, 123, 183],\n",
       "         [116, 108, 176],\n",
       "         [101, 101, 171]],\n",
       " \n",
       "        [[ 17,  26,  46],\n",
       "         [ 27,  37,  69],\n",
       "         [ 28,  50,  83],\n",
       "         ...,\n",
       "         [137, 130, 191],\n",
       "         [130, 122, 187],\n",
       "         [128, 120, 185]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 83, 107, 184],\n",
       "         [101, 114, 191],\n",
       "         [112, 120, 192],\n",
       "         ...,\n",
       "         [ 10,   9,  20],\n",
       "         [ 24,  57, 148],\n",
       "         [ 94, 116, 191]],\n",
       " \n",
       "        [[ 83, 108, 185],\n",
       "         [ 94, 113, 190],\n",
       "         [106, 120, 193],\n",
       "         ...,\n",
       "         [  6,  19,  65],\n",
       "         [ 59,  88, 176],\n",
       "         [110, 119, 198]],\n",
       " \n",
       "        [[ 78, 102, 181],\n",
       "         [ 89, 111, 189],\n",
       "         [ 98, 118, 194],\n",
       "         ...,\n",
       "         [ 24,  51, 133],\n",
       "         [ 74,  98, 181],\n",
       "         [ 89, 110, 189]]], dtype=uint8),\n",
       " array([[[ 45,  45,  39],\n",
       "         [ 71,  67,  64],\n",
       "         [ 93,  90,  84],\n",
       "         ...,\n",
       "         [ 63,  68,  70],\n",
       "         [ 68,  76,  79],\n",
       "         [ 70,  69,  75]],\n",
       " \n",
       "        [[ 51,  53,  49],\n",
       "         [ 85,  81,  79],\n",
       "         [ 87,  86,  79],\n",
       "         ...,\n",
       "         [ 79,  81,  87],\n",
       "         [ 67,  72,  78],\n",
       "         [ 82,  79,  83]],\n",
       " \n",
       "        [[ 59,  60,  58],\n",
       "         [ 80,  78,  77],\n",
       "         [101,  97,  92],\n",
       "         ...,\n",
       "         [ 71,  79,  89],\n",
       "         [ 83,  81,  87],\n",
       "         [ 85,  80,  83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 119, 119],\n",
       "         [124, 122, 123],\n",
       "         [124, 124, 124],\n",
       "         ...,\n",
       "         [113, 105, 112],\n",
       "         [128, 121, 124],\n",
       "         [142, 136, 139]],\n",
       " \n",
       "        [[120, 124, 123],\n",
       "         [121, 122, 120],\n",
       "         [121, 124, 124],\n",
       "         ...,\n",
       "         [126, 117, 122],\n",
       "         [146, 133, 137],\n",
       "         [127, 121, 130]],\n",
       " \n",
       "        [[118, 121, 119],\n",
       "         [125, 125, 123],\n",
       "         [130, 129, 127],\n",
       "         ...,\n",
       "         [141, 135, 135],\n",
       "         [129, 124, 132],\n",
       "         [127, 123, 131]]], dtype=uint8),\n",
       " array([[[111, 111, 110],\n",
       "         [122, 121, 126],\n",
       "         [113, 115, 119],\n",
       "         ...,\n",
       "         [ 21,  27,  27],\n",
       "         [ 20,  27,  27],\n",
       "         [ 13,  19,  18]],\n",
       " \n",
       "        [[ 91,  90, 103],\n",
       "         [105, 108, 112],\n",
       "         [122, 119, 121],\n",
       "         ...,\n",
       "         [ 27,  29,  30],\n",
       "         [ 16,  21,  25],\n",
       "         [  8,  17,  16]],\n",
       " \n",
       "        [[ 96,  99, 108],\n",
       "         [ 93,  99, 115],\n",
       "         [104, 106, 108],\n",
       "         ...,\n",
       "         [ 13,  20,  19],\n",
       "         [ 17,  23,  22],\n",
       "         [ 13,  21,  20]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72,  77,  94],\n",
       "         [ 54,  61,  82],\n",
       "         [ 60,  62,  84],\n",
       "         ...,\n",
       "         [ 39,  47,  48],\n",
       "         [ 39,  53,  59],\n",
       "         [ 33,  44,  48]],\n",
       " \n",
       "        [[ 78,  82, 100],\n",
       "         [ 56,  58,  83],\n",
       "         [ 64,  67,  84],\n",
       "         ...,\n",
       "         [ 48,  57,  62],\n",
       "         [ 47,  56,  58],\n",
       "         [ 45,  57,  62]],\n",
       " \n",
       "        [[ 83,  87, 106],\n",
       "         [ 68,  72,  94],\n",
       "         [ 61,  65,  89],\n",
       "         ...,\n",
       "         [ 53,  62,  71],\n",
       "         [ 53,  59,  65],\n",
       "         [ 49,  60,  61]]], dtype=uint8),\n",
       " array([[[ 54,  52,  58],\n",
       "         [ 56,  54,  62],\n",
       "         [ 52,  54,  64],\n",
       "         ...,\n",
       "         [112, 120, 154],\n",
       "         [116, 125, 160],\n",
       "         [119, 128, 163]],\n",
       " \n",
       "        [[ 54,  51,  58],\n",
       "         [ 55,  53,  62],\n",
       "         [ 53,  54,  64],\n",
       "         ...,\n",
       "         [110, 116, 148],\n",
       "         [115, 121, 154],\n",
       "         [118, 124, 157]],\n",
       " \n",
       "        [[ 52,  51,  60],\n",
       "         [ 52,  53,  61],\n",
       "         [ 59,  60,  70],\n",
       "         ...,\n",
       "         [101, 107, 135],\n",
       "         [106, 110, 141],\n",
       "         [110, 117, 148]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78,  88, 108],\n",
       "         [ 76,  84, 107],\n",
       "         [ 75,  82, 107],\n",
       "         ...,\n",
       "         [ 80,  89, 122],\n",
       "         [ 79,  89, 120],\n",
       "         [ 79,  88, 121]],\n",
       " \n",
       "        [[ 80,  91, 114],\n",
       "         [ 77,  86, 113],\n",
       "         [ 77,  85, 114],\n",
       "         ...,\n",
       "         [ 81,  90, 123],\n",
       "         [ 80,  91, 123],\n",
       "         [ 80,  89, 122]],\n",
       " \n",
       "        [[ 81,  91, 115],\n",
       "         [ 81,  91, 118],\n",
       "         [ 82,  93, 121],\n",
       "         ...,\n",
       "         [ 81,  90, 123],\n",
       "         [ 78,  89, 119],\n",
       "         [ 78,  88, 118]]], dtype=uint8),\n",
       " array([[[121, 146, 177],\n",
       "         [132, 156, 190],\n",
       "         [152, 172, 207],\n",
       "         ...,\n",
       "         [141, 157, 197],\n",
       "         [158, 177, 208],\n",
       "         [150, 166, 200]],\n",
       " \n",
       "        [[123, 147, 178],\n",
       "         [152, 176, 210],\n",
       "         [160, 179, 214],\n",
       "         ...,\n",
       "         [135, 156, 201],\n",
       "         [144, 165, 200],\n",
       "         [141, 161, 199]],\n",
       " \n",
       "        [[135, 159, 189],\n",
       "         [151, 174, 206],\n",
       "         [160, 180, 213],\n",
       "         ...,\n",
       "         [123, 146, 192],\n",
       "         [133, 158, 200],\n",
       "         [135, 161, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[170, 189, 223],\n",
       "         [180, 195, 227],\n",
       "         [188, 202, 230],\n",
       "         ...,\n",
       "         [147, 172, 216],\n",
       "         [149, 172, 214],\n",
       "         [164, 180, 221]],\n",
       " \n",
       "        [[173, 192, 226],\n",
       "         [178, 193, 225],\n",
       "         [194, 208, 236],\n",
       "         ...,\n",
       "         [163, 183, 225],\n",
       "         [166, 185, 225],\n",
       "         [169, 188, 224]],\n",
       " \n",
       "        [[177, 196, 230],\n",
       "         [184, 200, 232],\n",
       "         [185, 199, 227],\n",
       "         ...,\n",
       "         [163, 179, 220],\n",
       "         [165, 183, 220],\n",
       "         [166, 186, 220]]], dtype=uint8),\n",
       " array([[[153, 156, 186],\n",
       "         [150, 153, 182],\n",
       "         [152, 153, 180],\n",
       "         ...,\n",
       "         [115, 112, 119],\n",
       "         [104, 100, 105],\n",
       "         [105, 103, 108]],\n",
       " \n",
       "        [[148, 151, 182],\n",
       "         [146, 150, 178],\n",
       "         [137, 143, 170],\n",
       "         ...,\n",
       "         [127, 124, 133],\n",
       "         [115, 111, 115],\n",
       "         [104, 102, 105]],\n",
       " \n",
       "        [[144, 147, 177],\n",
       "         [137, 139, 169],\n",
       "         [128, 132, 160],\n",
       "         ...,\n",
       "         [134, 130, 141],\n",
       "         [114, 110, 114],\n",
       "         [103, 100, 102]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[188, 193, 218],\n",
       "         [187, 192, 216],\n",
       "         [186, 189, 214],\n",
       "         ...,\n",
       "         [214, 213, 222],\n",
       "         [216, 214, 224],\n",
       "         [210, 210, 222]],\n",
       " \n",
       "        [[191, 196, 221],\n",
       "         [189, 194, 219],\n",
       "         [188, 194, 217],\n",
       "         ...,\n",
       "         [215, 214, 224],\n",
       "         [216, 215, 225],\n",
       "         [215, 216, 226]],\n",
       " \n",
       "        [[192, 197, 222],\n",
       "         [189, 194, 219],\n",
       "         [189, 194, 218],\n",
       "         ...,\n",
       "         [216, 215, 225],\n",
       "         [217, 216, 226],\n",
       "         [217, 216, 225]]], dtype=uint8),\n",
       " array([[[ 43,  43,  52],\n",
       "         [ 41,  41,  50],\n",
       "         [ 44,  45,  59],\n",
       "         ...,\n",
       "         [115, 126, 157],\n",
       "         [113, 123, 157],\n",
       "         [118, 127, 161]],\n",
       " \n",
       "        [[ 41,  43,  53],\n",
       "         [ 43,  44,  58],\n",
       "         [ 47,  49,  64],\n",
       "         ...,\n",
       "         [107, 117, 147],\n",
       "         [112, 121, 154],\n",
       "         [113, 122, 155]],\n",
       " \n",
       "        [[ 39,  42,  55],\n",
       "         [ 41,  44,  59],\n",
       "         [ 47,  51,  69],\n",
       "         ...,\n",
       "         [107, 115, 145],\n",
       "         [105, 115, 145],\n",
       "         [109, 118, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  81, 108],\n",
       "         [ 75,  86, 113],\n",
       "         [ 72,  83, 111],\n",
       "         ...,\n",
       "         [ 75,  87, 121],\n",
       "         [ 72,  83, 115],\n",
       "         [ 71,  82, 114]],\n",
       " \n",
       "        [[ 73,  85, 113],\n",
       "         [ 75,  87, 115],\n",
       "         [ 74,  85, 115],\n",
       "         ...,\n",
       "         [ 74,  86, 120],\n",
       "         [ 75,  86, 118],\n",
       "         [ 72,  83, 115]],\n",
       " \n",
       "        [[ 77,  88, 118],\n",
       "         [ 78,  89, 120],\n",
       "         [ 81,  92, 122],\n",
       "         ...,\n",
       "         [ 74,  87, 121],\n",
       "         [ 76,  87, 119],\n",
       "         [ 71,  82, 114]]], dtype=uint8),\n",
       " array([[[157, 160, 188],\n",
       "         [159, 163, 191],\n",
       "         [156, 160, 188],\n",
       "         ...,\n",
       "         [110, 106, 114],\n",
       "         [100,  99, 103],\n",
       "         [112, 109, 111]],\n",
       " \n",
       "        [[154, 158, 186],\n",
       "         [153, 157, 185],\n",
       "         [155, 158, 186],\n",
       "         ...,\n",
       "         [124, 121, 132],\n",
       "         [ 96,  95,  98],\n",
       "         [101,  98, 100]],\n",
       " \n",
       "        [[150, 154, 183],\n",
       "         [151, 155, 184],\n",
       "         [152, 156, 185],\n",
       "         ...,\n",
       "         [124, 122, 134],\n",
       "         [100,  98, 103],\n",
       "         [102, 101, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[190, 195, 223],\n",
       "         [184, 189, 216],\n",
       "         [181, 185, 213],\n",
       "         ...,\n",
       "         [197, 198, 215],\n",
       "         [196, 197, 216],\n",
       "         [195, 196, 214]],\n",
       " \n",
       "        [[189, 196, 224],\n",
       "         [187, 194, 221],\n",
       "         [188, 193, 217],\n",
       "         ...,\n",
       "         [211, 211, 223],\n",
       "         [211, 210, 225],\n",
       "         [209, 209, 224]],\n",
       " \n",
       "        [[189, 196, 223],\n",
       "         [189, 195, 222],\n",
       "         [193, 197, 222],\n",
       "         ...,\n",
       "         [216, 215, 225],\n",
       "         [215, 216, 226],\n",
       "         [213, 213, 225]]], dtype=uint8),\n",
       " array([[[ 56,  57,  71],\n",
       "         [ 62,  64,  79],\n",
       "         [ 63,  71,  84],\n",
       "         ...,\n",
       "         [106, 114, 143],\n",
       "         [105, 114, 147],\n",
       "         [108, 117, 150]],\n",
       " \n",
       "        [[ 59,  59,  73],\n",
       "         [ 66,  68,  84],\n",
       "         [ 66,  73,  88],\n",
       "         ...,\n",
       "         [101, 106, 129],\n",
       "         [103, 107, 136],\n",
       "         [107, 114, 145]],\n",
       " \n",
       "        [[ 62,  63,  77],\n",
       "         [ 68,  69,  87],\n",
       "         [ 68,  72,  90],\n",
       "         ...,\n",
       "         [ 93,  93, 109],\n",
       "         [ 98,  96, 120],\n",
       "         [ 99, 102, 130]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  75,  94],\n",
       "         [ 68,  74,  93],\n",
       "         [ 70,  77,  95],\n",
       "         ...,\n",
       "         [ 71,  79, 105],\n",
       "         [ 65,  73, 101],\n",
       "         [ 64,  72, 101]],\n",
       " \n",
       "        [[ 72,  79,  98],\n",
       "         [ 69,  75,  94],\n",
       "         [ 71,  76,  96],\n",
       "         ...,\n",
       "         [ 69,  77, 104],\n",
       "         [ 67,  75, 104],\n",
       "         [ 65,  75, 103]],\n",
       " \n",
       "        [[ 75,  82, 101],\n",
       "         [ 73,  79,  98],\n",
       "         [ 73,  77,  97],\n",
       "         ...,\n",
       "         [ 72,  83, 111],\n",
       "         [ 71,  81, 111],\n",
       "         [ 73,  83, 113]]], dtype=uint8),\n",
       " array([[[146, 150, 178],\n",
       "         [144, 149, 175],\n",
       "         [138, 139, 165],\n",
       "         ...,\n",
       "         [199, 199, 213],\n",
       "         [176, 176, 190],\n",
       "         [131, 130, 140]],\n",
       " \n",
       "        [[137, 145, 172],\n",
       "         [130, 137, 163],\n",
       "         [120, 124, 146],\n",
       "         ...,\n",
       "         [202, 202, 216],\n",
       "         [186, 186, 200],\n",
       "         [141, 140, 151]],\n",
       " \n",
       "        [[132, 136, 162],\n",
       "         [117, 123, 146],\n",
       "         [106, 112, 131],\n",
       "         ...,\n",
       "         [209, 209, 221],\n",
       "         [199, 199, 213],\n",
       "         [153, 153, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[199, 196, 212],\n",
       "         [198, 198, 211],\n",
       "         [209, 206, 219],\n",
       "         ...,\n",
       "         [202, 203, 219],\n",
       "         [187, 190, 209],\n",
       "         [188, 192, 212]],\n",
       " \n",
       "        [[201, 201, 218],\n",
       "         [200, 200, 214],\n",
       "         [203, 201, 213],\n",
       "         ...,\n",
       "         [218, 217, 229],\n",
       "         [208, 208, 221],\n",
       "         [204, 204, 220]],\n",
       " \n",
       "        [[203, 205, 222],\n",
       "         [207, 207, 221],\n",
       "         [204, 202, 215],\n",
       "         ...,\n",
       "         [218, 218, 229],\n",
       "         [221, 220, 230],\n",
       "         [219, 217, 228]]], dtype=uint8),\n",
       " array([[[104, 115, 146],\n",
       "         [ 95, 104, 136],\n",
       "         [100, 106, 136],\n",
       "         ...,\n",
       "         [217, 211, 212],\n",
       "         [207, 200, 203],\n",
       "         [195, 193, 193]],\n",
       " \n",
       "        [[ 96, 106, 137],\n",
       "         [ 95, 103, 135],\n",
       "         [102, 108, 137],\n",
       "         ...,\n",
       "         [209, 203, 207],\n",
       "         [220, 213, 214],\n",
       "         [150, 148, 156]],\n",
       " \n",
       "        [[ 95, 106, 135],\n",
       "         [ 92,  99, 129],\n",
       "         [105, 109, 137],\n",
       "         ...,\n",
       "         [217, 211, 214],\n",
       "         [213, 208, 210],\n",
       "         [173, 170, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[112, 116, 143],\n",
       "         [102, 110, 135],\n",
       "         [ 63,  73, 100],\n",
       "         ...,\n",
       "         [191, 188, 190],\n",
       "         [201, 199, 209],\n",
       "         [200, 199, 210]],\n",
       " \n",
       "        [[139, 143, 162],\n",
       "         [ 98, 106, 132],\n",
       "         [ 76,  86, 115],\n",
       "         ...,\n",
       "         [190, 186, 190],\n",
       "         [194, 193, 201],\n",
       "         [206, 205, 214]],\n",
       " \n",
       "        [[154, 155, 176],\n",
       "         [118, 125, 150],\n",
       "         [ 87,  92, 121],\n",
       "         ...,\n",
       "         [222, 217, 220],\n",
       "         [211, 210, 218],\n",
       "         [203, 200, 208]]], dtype=uint8),\n",
       " array([[[111, 146, 191],\n",
       "         [115, 150, 193],\n",
       "         [117, 151, 194],\n",
       "         ...,\n",
       "         [ 39,  72, 115],\n",
       "         [ 36,  62, 103],\n",
       "         [ 23,  42,  77]],\n",
       " \n",
       "        [[112, 146, 190],\n",
       "         [112, 146, 190],\n",
       "         [121, 152, 195],\n",
       "         ...,\n",
       "         [ 43,  82, 124],\n",
       "         [ 33,  62, 102],\n",
       "         [ 26,  46,  80]],\n",
       " \n",
       "        [[114, 146, 189],\n",
       "         [111, 143, 186],\n",
       "         [118, 150, 192],\n",
       "         ...,\n",
       "         [ 47,  89, 130],\n",
       "         [ 35,  64, 104],\n",
       "         [ 25,  47,  83]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 144, 188],\n",
       "         [114, 151, 194],\n",
       "         [111, 145, 189],\n",
       "         ...,\n",
       "         [ 76, 110, 152],\n",
       "         [ 65, 101, 144],\n",
       "         [ 62,  94, 137]],\n",
       " \n",
       "        [[114, 151, 195],\n",
       "         [117, 153, 197],\n",
       "         [119, 154, 198],\n",
       "         ...,\n",
       "         [ 74, 110, 153],\n",
       "         [ 67, 102, 145],\n",
       "         [ 64,  96, 140]],\n",
       " \n",
       "        [[118, 155, 199],\n",
       "         [121, 158, 201],\n",
       "         [122, 159, 201],\n",
       "         ...,\n",
       "         [ 82, 116, 160],\n",
       "         [ 74, 108, 151],\n",
       "         [ 70, 102, 145]]], dtype=uint8),\n",
       " array([[[ 68,  91, 137],\n",
       "         [ 64,  87, 133],\n",
       "         [ 63,  86, 132],\n",
       "         ...,\n",
       "         [ 17,  26,  35],\n",
       "         [ 19,  29,  36],\n",
       "         [ 17,  27,  34]],\n",
       " \n",
       "        [[ 67,  90, 136],\n",
       "         [ 62,  85, 131],\n",
       "         [ 57,  80, 126],\n",
       "         ...,\n",
       "         [ 17,  28,  36],\n",
       "         [ 19,  30,  38],\n",
       "         [ 20,  31,  39]],\n",
       " \n",
       "        [[ 65,  88, 134],\n",
       "         [ 57,  80, 126],\n",
       "         [ 52,  75, 121],\n",
       "         ...,\n",
       "         [ 16,  26,  37],\n",
       "         [ 19,  29,  39],\n",
       "         [ 22,  32,  42]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 98, 116, 164],\n",
       "         [ 71,  91, 139],\n",
       "         [ 48,  67, 114],\n",
       "         ...,\n",
       "         [ 33,  49,  86],\n",
       "         [ 40,  58,  95],\n",
       "         [ 45,  63, 100]],\n",
       " \n",
       "        [[ 99, 116, 165],\n",
       "         [ 72,  92, 140],\n",
       "         [ 49,  67, 115],\n",
       "         ...,\n",
       "         [ 37,  55,  92],\n",
       "         [ 43,  61,  98],\n",
       "         [ 46,  64, 101]],\n",
       " \n",
       "        [[ 97, 114, 163],\n",
       "         [ 69,  89, 137],\n",
       "         [ 53,  71, 120],\n",
       "         ...,\n",
       "         [ 39,  58,  94],\n",
       "         [ 43,  62,  99],\n",
       "         [ 46,  65, 102]]], dtype=uint8),\n",
       " array([[[ 66,  75,  92],\n",
       "         [ 84,  94, 118],\n",
       "         [ 87,  96, 123],\n",
       "         ...,\n",
       "         [134, 148, 170],\n",
       "         [140, 153, 175],\n",
       "         [140, 152, 176]],\n",
       " \n",
       "        [[ 75,  87, 105],\n",
       "         [ 83,  95, 119],\n",
       "         [ 86,  97, 124],\n",
       "         ...,\n",
       "         [133, 147, 169],\n",
       "         [140, 153, 175],\n",
       "         [141, 153, 177]],\n",
       " \n",
       "        [[ 80,  94, 113],\n",
       "         [ 87,  99, 123],\n",
       "         [ 89, 102, 128],\n",
       "         ...,\n",
       "         [133, 146, 168],\n",
       "         [136, 149, 171],\n",
       "         [137, 150, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73,  85, 109],\n",
       "         [ 71,  83, 107],\n",
       "         [ 68,  80, 104],\n",
       "         ...,\n",
       "         [ 66,  76, 101],\n",
       "         [ 70,  80, 106],\n",
       "         [ 76,  86, 114]],\n",
       " \n",
       "        [[ 82,  96, 122],\n",
       "         [ 71,  83, 108],\n",
       "         [ 73,  86, 109],\n",
       "         ...,\n",
       "         [ 68,  79, 107],\n",
       "         [ 76,  87, 115],\n",
       "         [ 77,  89, 117]],\n",
       " \n",
       "        [[ 78,  95, 123],\n",
       "         [ 73,  86, 113],\n",
       "         [ 76,  90, 116],\n",
       "         ...,\n",
       "         [ 79,  92, 120],\n",
       "         [ 79,  92, 120],\n",
       "         [ 83,  97, 126]]], dtype=uint8),\n",
       " array([[[14, 18, 19],\n",
       "         [19, 23, 24],\n",
       "         [17, 21, 23],\n",
       "         ...,\n",
       "         [43, 52, 56],\n",
       "         [51, 57, 61],\n",
       "         [47, 54, 57]],\n",
       " \n",
       "        [[17, 21, 22],\n",
       "         [16, 21, 23],\n",
       "         [19, 24, 27],\n",
       "         ...,\n",
       "         [43, 52, 56],\n",
       "         [47, 53, 58],\n",
       "         [47, 54, 57]],\n",
       " \n",
       "        [[17, 22, 24],\n",
       "         [17, 22, 25],\n",
       "         [19, 24, 27],\n",
       "         ...,\n",
       "         [41, 51, 53],\n",
       "         [45, 52, 55],\n",
       "         [48, 55, 58]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[18, 22, 23],\n",
       "         [14, 19, 17],\n",
       "         [17, 22, 21],\n",
       "         ...,\n",
       "         [ 8, 11, 16],\n",
       "         [12, 16, 21],\n",
       "         [16, 19, 24]],\n",
       " \n",
       "        [[18, 22, 23],\n",
       "         [15, 20, 19],\n",
       "         [15, 20, 19],\n",
       "         ...,\n",
       "         [ 8, 12, 16],\n",
       "         [15, 20, 23],\n",
       "         [21, 24, 28]],\n",
       " \n",
       "        [[20, 24, 25],\n",
       "         [18, 21, 21],\n",
       "         [16, 21, 20],\n",
       "         ...,\n",
       "         [15, 18, 22],\n",
       "         [20, 24, 28],\n",
       "         [20, 23, 27]]], dtype=uint8),\n",
       " array([[[ 54,  49,  54],\n",
       "         [ 62,  60,  66],\n",
       "         [ 67,  64,  73],\n",
       "         ...,\n",
       "         [136, 134, 134],\n",
       "         [136, 135, 135],\n",
       "         [137, 136, 136]],\n",
       " \n",
       "        [[ 54,  49,  54],\n",
       "         [ 62,  60,  66],\n",
       "         [ 67,  64,  73],\n",
       "         ...,\n",
       "         [137, 135, 135],\n",
       "         [139, 137, 137],\n",
       "         [140, 137, 137]],\n",
       " \n",
       "        [[ 56,  51,  56],\n",
       "         [ 62,  61,  67],\n",
       "         [ 68,  65,  74],\n",
       "         ...,\n",
       "         [138, 132, 133],\n",
       "         [139, 134, 135],\n",
       "         [140, 135, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73,  67,  68],\n",
       "         [ 83,  81,  81],\n",
       "         [ 83,  82,  83],\n",
       "         ...,\n",
       "         [101,  95, 106],\n",
       "         [ 96,  92, 103],\n",
       "         [ 95,  93, 106]],\n",
       " \n",
       "        [[ 70,  66,  65],\n",
       "         [ 83,  79,  78],\n",
       "         [ 87,  85,  86],\n",
       "         ...,\n",
       "         [ 99,  95, 106],\n",
       "         [ 98,  94, 105],\n",
       "         [ 99,  95, 106]],\n",
       " \n",
       "        [[ 67,  63,  62],\n",
       "         [ 84,  80,  79],\n",
       "         [ 87,  85,  86],\n",
       "         ...,\n",
       "         [101,  97, 108],\n",
       "         [ 99,  95, 106],\n",
       "         [101,  97, 108]]], dtype=uint8),\n",
       " array([[[25, 34, 47],\n",
       "         [26, 35, 48],\n",
       "         [24, 33, 46],\n",
       "         ...,\n",
       "         [23, 29, 35],\n",
       "         [20, 24, 27],\n",
       "         [21, 23, 26]],\n",
       " \n",
       "        [[21, 28, 43],\n",
       "         [28, 36, 49],\n",
       "         [26, 34, 47],\n",
       "         ...,\n",
       "         [23, 33, 39],\n",
       "         [21, 27, 30],\n",
       "         [22, 25, 29]],\n",
       " \n",
       "        [[27, 35, 48],\n",
       "         [26, 34, 47],\n",
       "         [27, 36, 47],\n",
       "         ...,\n",
       "         [25, 34, 43],\n",
       "         [23, 32, 39],\n",
       "         [23, 28, 34]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[19, 26, 37],\n",
       "         [12, 16, 21],\n",
       "         [10, 14, 19],\n",
       "         ...,\n",
       "         [32, 36, 43],\n",
       "         [33, 39, 46],\n",
       "         [34, 39, 48]],\n",
       " \n",
       "        [[16, 25, 35],\n",
       "         [14, 21, 28],\n",
       "         [12, 18, 25],\n",
       "         ...,\n",
       "         [35, 38, 46],\n",
       "         [34, 40, 47],\n",
       "         [36, 41, 50]],\n",
       " \n",
       "        [[17, 26, 38],\n",
       "         [14, 22, 31],\n",
       "         [14, 19, 27],\n",
       "         ...,\n",
       "         [38, 41, 49],\n",
       "         [38, 42, 50],\n",
       "         [38, 42, 52]]], dtype=uint8),\n",
       " array([[[ 61,  63,  73],\n",
       "         [ 63,  65,  77],\n",
       "         [ 64,  67,  81],\n",
       "         ...,\n",
       "         [ 80,  88, 117],\n",
       "         [ 82,  90, 119],\n",
       "         [ 84,  92, 121]],\n",
       " \n",
       "        [[ 64,  65,  75],\n",
       "         [ 67,  68,  80],\n",
       "         [ 67,  69,  84],\n",
       "         ...,\n",
       "         [ 76,  85, 113],\n",
       "         [ 80,  88, 114],\n",
       "         [ 83,  90, 117]],\n",
       " \n",
       "        [[ 64,  65,  76],\n",
       "         [ 65,  66,  79],\n",
       "         [ 65,  68,  82],\n",
       "         ...,\n",
       "         [ 76,  78,  98],\n",
       "         [ 75,  78, 102],\n",
       "         [ 76,  80, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  70,  89],\n",
       "         [ 62,  68,  88],\n",
       "         [ 65,  69,  89],\n",
       "         ...,\n",
       "         [ 61,  72, 102],\n",
       "         [ 61,  71, 101],\n",
       "         [ 62,  73, 101]],\n",
       " \n",
       "        [[ 65,  71,  91],\n",
       "         [ 65,  70,  91],\n",
       "         [ 65,  71,  93],\n",
       "         ...,\n",
       "         [ 60,  74, 103],\n",
       "         [ 61,  72, 102],\n",
       "         [ 63,  73, 103]],\n",
       " \n",
       "        [[ 68,  75,  95],\n",
       "         [ 65,  73,  96],\n",
       "         [ 65,  72,  96],\n",
       "         ...,\n",
       "         [ 63,  77, 106],\n",
       "         [ 59,  73, 102],\n",
       "         [ 60,  71, 101]]], dtype=uint8),\n",
       " array([[[130, 133, 161],\n",
       "         [141, 145, 173],\n",
       "         [143, 146, 174],\n",
       "         ...,\n",
       "         [101,  98, 100],\n",
       "         [102, 100, 101],\n",
       "         [105, 102, 104]],\n",
       " \n",
       "        [[136, 139, 167],\n",
       "         [139, 142, 170],\n",
       "         [136, 138, 168],\n",
       "         ...,\n",
       "         [100,  97,  99],\n",
       "         [ 99,  95, 100],\n",
       "         [121, 118, 119]],\n",
       " \n",
       "        [[134, 138, 166],\n",
       "         [134, 137, 166],\n",
       "         [136, 140, 169],\n",
       "         ...,\n",
       "         [ 99,  95,  98],\n",
       "         [ 98,  96,  98],\n",
       "         [102,  99, 101]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[183, 189, 215],\n",
       "         [174, 182, 211],\n",
       "         [171, 179, 209],\n",
       "         ...,\n",
       "         [201, 199, 211],\n",
       "         [200, 198, 210],\n",
       "         [206, 204, 216]],\n",
       " \n",
       "        [[183, 189, 215],\n",
       "         [176, 184, 213],\n",
       "         [172, 179, 210],\n",
       "         ...,\n",
       "         [200, 198, 210],\n",
       "         [204, 202, 214],\n",
       "         [205, 203, 215]],\n",
       " \n",
       "        [[185, 190, 215],\n",
       "         [178, 185, 214],\n",
       "         [173, 181, 210],\n",
       "         ...,\n",
       "         [201, 199, 212],\n",
       "         [204, 202, 213],\n",
       "         [205, 203, 215]]], dtype=uint8),\n",
       " array([[[ 51,  60,  74],\n",
       "         [ 50,  61,  75],\n",
       "         [ 51,  62,  76],\n",
       "         ...,\n",
       "         [ 98, 111, 146],\n",
       "         [105, 119, 156],\n",
       "         [108, 122, 158]],\n",
       " \n",
       "        [[ 54,  62,  76],\n",
       "         [ 59,  68,  82],\n",
       "         [ 54,  63,  77],\n",
       "         ...,\n",
       "         [ 83,  94, 123],\n",
       "         [ 92, 103, 134],\n",
       "         [ 97, 110, 142]],\n",
       " \n",
       "        [[ 55,  64,  77],\n",
       "         [ 52,  61,  74],\n",
       "         [ 50,  59,  73],\n",
       "         ...,\n",
       "         [ 70,  78, 105],\n",
       "         [ 78,  90, 118],\n",
       "         [ 90, 101, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  75,  95],\n",
       "         [ 65,  74,  94],\n",
       "         [ 57,  66,  86],\n",
       "         ...,\n",
       "         [ 55,  66,  96],\n",
       "         [ 54,  68,  98],\n",
       "         [ 49,  64,  96]],\n",
       " \n",
       "        [[ 64,  76,  98],\n",
       "         [ 63,  74,  97],\n",
       "         [ 61,  72,  95],\n",
       "         ...,\n",
       "         [ 52,  64,  98],\n",
       "         [ 52,  67,  99],\n",
       "         [ 52,  67, 100]],\n",
       " \n",
       "        [[ 63,  75,  98],\n",
       "         [ 64,  75, 102],\n",
       "         [ 65,  76, 103],\n",
       "         ...,\n",
       "         [ 58,  71, 108],\n",
       "         [ 58,  72, 109],\n",
       "         [ 57,  71, 107]]], dtype=uint8),\n",
       " array([[[126, 139, 177],\n",
       "         [125, 138, 176],\n",
       "         [127, 140, 177],\n",
       "         ...,\n",
       "         [ 83,  96, 114],\n",
       "         [ 75,  82,  95],\n",
       "         [ 61,  69,  75]],\n",
       " \n",
       "        [[130, 141, 177],\n",
       "         [128, 140, 176],\n",
       "         [128, 142, 175],\n",
       "         ...,\n",
       "         [ 89, 102, 123],\n",
       "         [ 81,  90, 105],\n",
       "         [ 62,  70,  79]],\n",
       " \n",
       "        [[130, 139, 176],\n",
       "         [130, 139, 176],\n",
       "         [124, 137, 169],\n",
       "         ...,\n",
       "         [ 93, 103, 123],\n",
       "         [ 87,  95, 110],\n",
       "         [ 70,  77,  88]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 83, 100, 139],\n",
       "         [ 77,  95, 133],\n",
       "         [ 73,  91, 130],\n",
       "         ...,\n",
       "         [101, 113, 141],\n",
       "         [102, 114, 142],\n",
       "         [102, 114, 141]],\n",
       " \n",
       "        [[ 85, 103, 144],\n",
       "         [ 81, 100, 138],\n",
       "         [ 82, 101, 139],\n",
       "         ...,\n",
       "         [101, 112, 141],\n",
       "         [101, 113, 141],\n",
       "         [105, 117, 144]],\n",
       " \n",
       "        [[ 87, 106, 149],\n",
       "         [ 83, 103, 145],\n",
       "         [ 80, 101, 143],\n",
       "         ...,\n",
       "         [104, 115, 145],\n",
       "         [104, 116, 144],\n",
       "         [104, 116, 143]]], dtype=uint8),\n",
       " array([[[17, 22, 27],\n",
       "         [17, 22, 30],\n",
       "         [16, 22, 30],\n",
       "         ...,\n",
       "         [50, 59, 87],\n",
       "         [50, 58, 89],\n",
       "         [51, 59, 89]],\n",
       " \n",
       "        [[18, 23, 29],\n",
       "         [15, 21, 29],\n",
       "         [16, 23, 31],\n",
       "         ...,\n",
       "         [56, 62, 91],\n",
       "         [58, 64, 94],\n",
       "         [59, 67, 97]],\n",
       " \n",
       "        [[17, 22, 28],\n",
       "         [22, 26, 35],\n",
       "         [18, 26, 34],\n",
       "         ...,\n",
       "         [56, 62, 91],\n",
       "         [57, 63, 92],\n",
       "         [61, 68, 97]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[28, 35, 55],\n",
       "         [26, 33, 53],\n",
       "         [25, 31, 54],\n",
       "         ...,\n",
       "         [18, 24, 50],\n",
       "         [22, 28, 54],\n",
       "         [22, 28, 55]],\n",
       " \n",
       "        [[27, 33, 56],\n",
       "         [21, 29, 52],\n",
       "         [26, 31, 54],\n",
       "         ...,\n",
       "         [16, 24, 51],\n",
       "         [19, 27, 53],\n",
       "         [20, 28, 55]],\n",
       " \n",
       "        [[32, 38, 61],\n",
       "         [24, 32, 55],\n",
       "         [26, 31, 56],\n",
       "         ...,\n",
       "         [20, 28, 55],\n",
       "         [24, 31, 58],\n",
       "         [21, 28, 55]]], dtype=uint8),\n",
       " array([[[ 57,  72, 104],\n",
       "         [ 63,  76, 108],\n",
       "         [ 64,  79, 111],\n",
       "         ...,\n",
       "         [ 37,  42,  43],\n",
       "         [ 33,  38,  38],\n",
       "         [ 44,  49,  50]],\n",
       " \n",
       "        [[ 63,  78, 110],\n",
       "         [ 65,  77, 109],\n",
       "         [ 70,  83, 115],\n",
       "         ...,\n",
       "         [ 33,  40,  41],\n",
       "         [ 37,  43,  42],\n",
       "         [ 30,  37,  36]],\n",
       " \n",
       "        [[ 67,  81, 114],\n",
       "         [ 73,  85, 117],\n",
       "         [ 74,  88, 120],\n",
       "         ...,\n",
       "         [ 31,  38,  42],\n",
       "         [ 42,  47,  49],\n",
       "         [ 44,  49,  50]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  68,  97],\n",
       "         [ 67,  81, 110],\n",
       "         [ 73,  89, 118],\n",
       "         ...,\n",
       "         [ 68,  81,  98],\n",
       "         [ 79,  91, 109],\n",
       "         [ 85,  98, 116]],\n",
       " \n",
       "        [[ 52,  65,  95],\n",
       "         [ 64,  78, 107],\n",
       "         [ 69,  85, 114],\n",
       "         ...,\n",
       "         [ 69,  81,  99],\n",
       "         [ 73,  85, 103],\n",
       "         [ 78,  92, 110]],\n",
       " \n",
       "        [[ 54,  67,  96],\n",
       "         [ 59,  73, 102],\n",
       "         [ 65,  81, 110],\n",
       "         ...,\n",
       "         [ 74,  86, 104],\n",
       "         [ 76,  88, 106],\n",
       "         [ 78,  94, 109]]], dtype=uint8),\n",
       " array([[[122, 132, 163],\n",
       "         [137, 147, 177],\n",
       "         [147, 156, 186],\n",
       "         ...,\n",
       "         [142, 149, 173],\n",
       "         [148, 155, 179],\n",
       "         [144, 153, 181]],\n",
       " \n",
       "        [[123, 129, 161],\n",
       "         [134, 143, 175],\n",
       "         [137, 146, 179],\n",
       "         ...,\n",
       "         [135, 141, 166],\n",
       "         [140, 145, 169],\n",
       "         [149, 155, 177]],\n",
       " \n",
       "        [[129, 137, 169],\n",
       "         [130, 140, 172],\n",
       "         [128, 137, 169],\n",
       "         ...,\n",
       "         [119, 124, 149],\n",
       "         [128, 135, 160],\n",
       "         [121, 130, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 86,  88, 123],\n",
       "         [ 98,  97, 128],\n",
       "         [115, 113, 143],\n",
       "         ...,\n",
       "         [116, 118, 152],\n",
       "         [121, 124, 154],\n",
       "         [136, 140, 165]],\n",
       " \n",
       "        [[101, 101, 141],\n",
       "         [ 87,  90, 124],\n",
       "         [129, 127, 155],\n",
       "         ...,\n",
       "         [120, 123, 152],\n",
       "         [122, 124, 154],\n",
       "         [130, 136, 162]],\n",
       " \n",
       "        [[ 88,  93, 132],\n",
       "         [ 90,  94, 130],\n",
       "         [124, 126, 155],\n",
       "         ...,\n",
       "         [141, 139, 167],\n",
       "         [143, 141, 169],\n",
       "         [168, 167, 183]]], dtype=uint8),\n",
       " array([[[ 33,  56,  92],\n",
       "         [ 35,  62,  98],\n",
       "         [ 39,  74, 113],\n",
       "         ...,\n",
       "         [134, 166, 209],\n",
       "         [133, 167, 210],\n",
       "         [129, 165, 208]],\n",
       " \n",
       "        [[ 30,  55,  91],\n",
       "         [ 39,  73, 110],\n",
       "         [ 36,  72, 112],\n",
       "         ...,\n",
       "         [131, 163, 204],\n",
       "         [134, 168, 209],\n",
       "         [131, 165, 205]],\n",
       " \n",
       "        [[ 41,  66, 100],\n",
       "         [ 42,  73, 110],\n",
       "         [ 47,  80, 118],\n",
       "         ...,\n",
       "         [131, 164, 203],\n",
       "         [131, 162, 202],\n",
       "         [131, 166, 206]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82, 119, 160],\n",
       "         [ 89, 126, 167],\n",
       "         [ 90, 125, 167],\n",
       "         ...,\n",
       "         [ 99, 138, 182],\n",
       "         [ 94, 132, 177],\n",
       "         [ 87, 126, 170]],\n",
       " \n",
       "        [[ 83, 121, 163],\n",
       "         [ 85, 123, 165],\n",
       "         [ 92, 127, 170],\n",
       "         ...,\n",
       "         [100, 138, 183],\n",
       "         [ 98, 136, 180],\n",
       "         [ 94, 132, 176]],\n",
       " \n",
       "        [[ 82, 120, 162],\n",
       "         [ 87, 125, 167],\n",
       "         [ 96, 132, 175],\n",
       "         ...,\n",
       "         [ 98, 137, 181],\n",
       "         [ 99, 136, 180],\n",
       "         [ 99, 136, 180]]], dtype=uint8),\n",
       " array([[[121, 142, 201],\n",
       "         [120, 154, 207],\n",
       "         [123, 154, 211],\n",
       "         ...,\n",
       "         [176, 189, 246],\n",
       "         [177, 189, 247],\n",
       "         [178, 192, 247]],\n",
       " \n",
       "        [[124, 144, 203],\n",
       "         [123, 157, 211],\n",
       "         [128, 156, 213],\n",
       "         ...,\n",
       "         [170, 187, 244],\n",
       "         [171, 188, 245],\n",
       "         [173, 188, 246]],\n",
       " \n",
       "        [[129, 149, 209],\n",
       "         [122, 156, 210],\n",
       "         [124, 149, 207],\n",
       "         ...,\n",
       "         [162, 178, 237],\n",
       "         [163, 179, 238],\n",
       "         [162, 180, 239]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[150, 172, 215],\n",
       "         [139, 169, 223],\n",
       "         [126, 150, 207],\n",
       "         ...,\n",
       "         [130, 154, 212],\n",
       "         [136, 163, 219],\n",
       "         [145, 175, 229]],\n",
       " \n",
       "        [[153, 175, 215],\n",
       "         [143, 170, 226],\n",
       "         [139, 162, 213],\n",
       "         ...,\n",
       "         [133, 154, 215],\n",
       "         [139, 166, 223],\n",
       "         [140, 166, 223]],\n",
       " \n",
       "        [[156, 171, 222],\n",
       "         [147, 173, 222],\n",
       "         [142, 164, 217],\n",
       "         ...,\n",
       "         [127, 146, 208],\n",
       "         [135, 149, 211],\n",
       "         [141, 154, 213]]], dtype=uint8),\n",
       " array([[[190, 209, 255],\n",
       "         [189, 209, 254],\n",
       "         [187, 206, 252],\n",
       "         ...,\n",
       "         [198, 216, 251],\n",
       "         [200, 218, 254],\n",
       "         [198, 215, 254]],\n",
       " \n",
       "        [[184, 206, 253],\n",
       "         [184, 206, 253],\n",
       "         [179, 202, 250],\n",
       "         ...,\n",
       "         [194, 212, 251],\n",
       "         [192, 210, 250],\n",
       "         [190, 208, 250]],\n",
       " \n",
       "        [[177, 199, 247],\n",
       "         [180, 202, 250],\n",
       "         [178, 200, 248],\n",
       "         ...,\n",
       "         [172, 191, 238],\n",
       "         [175, 196, 236],\n",
       "         [184, 207, 245]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 194, 250],\n",
       "         [165, 195, 250],\n",
       "         [164, 193, 248],\n",
       "         ...,\n",
       "         [138, 168, 228],\n",
       "         [ 54,  77, 180],\n",
       "         [111, 146, 236]],\n",
       " \n",
       "        [[169, 194, 250],\n",
       "         [171, 196, 252],\n",
       "         [170, 195, 252],\n",
       "         ...,\n",
       "         [138, 167, 236],\n",
       "         [ 65,  95, 184],\n",
       "         [ 93, 122, 230]],\n",
       " \n",
       "        [[170, 197, 253],\n",
       "         [170, 197, 253],\n",
       "         [170, 197, 253],\n",
       "         ...,\n",
       "         [133, 163, 230],\n",
       "         [ 89, 119, 198],\n",
       "         [ 63,  91, 190]]], dtype=uint8),\n",
       " array([[[162, 165, 183],\n",
       "         [162, 164, 182],\n",
       "         [154, 157, 173],\n",
       "         ...,\n",
       "         [136, 144, 155],\n",
       "         [141, 149, 162],\n",
       "         [129, 136, 149]],\n",
       " \n",
       "        [[151, 153, 172],\n",
       "         [142, 144, 163],\n",
       "         [143, 146, 161],\n",
       "         ...,\n",
       "         [128, 129, 140],\n",
       "         [141, 149, 162],\n",
       "         [130, 138, 151]],\n",
       " \n",
       "        [[140, 144, 165],\n",
       "         [133, 137, 156],\n",
       "         [125, 127, 145],\n",
       "         ...,\n",
       "         [120, 118, 124],\n",
       "         [137, 144, 152],\n",
       "         [134, 141, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[114, 116, 127],\n",
       "         [155, 150, 148],\n",
       "         [108, 104, 113],\n",
       "         ...,\n",
       "         [143, 143, 161],\n",
       "         [158, 157, 171],\n",
       "         [160, 160, 176]],\n",
       " \n",
       "        [[ 94, 100, 113],\n",
       "         [134, 131, 135],\n",
       "         [119, 117, 127],\n",
       "         ...,\n",
       "         [135, 137, 156],\n",
       "         [155, 154, 171],\n",
       "         [164, 165, 179]],\n",
       " \n",
       "        [[105, 109, 129],\n",
       "         [115, 115, 121],\n",
       "         [158, 155, 160],\n",
       "         ...,\n",
       "         [128, 131, 151],\n",
       "         [134, 138, 156],\n",
       "         [158, 159, 172]]], dtype=uint8),\n",
       " array([[[150, 154, 185],\n",
       "         [151, 156, 185],\n",
       "         [151, 156, 185],\n",
       "         ...,\n",
       "         [206, 208, 232],\n",
       "         [206, 210, 234],\n",
       "         [215, 217, 241]],\n",
       " \n",
       "        [[135, 139, 167],\n",
       "         [133, 137, 166],\n",
       "         [133, 137, 165],\n",
       "         ...,\n",
       "         [204, 206, 230],\n",
       "         [206, 210, 234],\n",
       "         [209, 211, 235]],\n",
       " \n",
       "        [[145, 150, 178],\n",
       "         [142, 146, 174],\n",
       "         [144, 149, 175],\n",
       "         ...,\n",
       "         [195, 196, 222],\n",
       "         [200, 204, 228],\n",
       "         [201, 206, 229]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[201, 205, 227],\n",
       "         [201, 206, 227],\n",
       "         [193, 200, 223],\n",
       "         ...,\n",
       "         [192, 196, 221],\n",
       "         [189, 192, 221],\n",
       "         [183, 188, 220]],\n",
       " \n",
       "        [[207, 209, 231],\n",
       "         [205, 208, 229],\n",
       "         [206, 210, 231],\n",
       "         ...,\n",
       "         [198, 201, 228],\n",
       "         [192, 195, 225],\n",
       "         [187, 192, 224]],\n",
       " \n",
       "        [[209, 214, 235],\n",
       "         [210, 215, 237],\n",
       "         [205, 209, 231],\n",
       "         ...,\n",
       "         [197, 200, 229],\n",
       "         [194, 198, 228],\n",
       "         [192, 196, 226]]], dtype=uint8),\n",
       " array([[[105, 115, 144],\n",
       "         [108, 117, 147],\n",
       "         [112, 122, 150],\n",
       "         ...,\n",
       "         [115, 130, 150],\n",
       "         [113, 129, 148],\n",
       "         [108, 124, 142]],\n",
       " \n",
       "        [[ 89,  92, 111],\n",
       "         [ 91,  93, 112],\n",
       "         [ 93,  98, 114],\n",
       "         ...,\n",
       "         [115, 127, 140],\n",
       "         [107, 121, 136],\n",
       "         [108, 122, 137]],\n",
       " \n",
       "        [[ 80,  82,  96],\n",
       "         [ 86,  87, 100],\n",
       "         [ 85,  86, 100],\n",
       "         ...,\n",
       "         [110, 121, 133],\n",
       "         [ 98, 109, 121],\n",
       "         [104, 114, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[141, 155, 183],\n",
       "         [127, 141, 165],\n",
       "         [102, 114, 137],\n",
       "         ...,\n",
       "         [ 90, 103, 121],\n",
       "         [ 86, 100, 119],\n",
       "         [ 85, 101, 118]],\n",
       " \n",
       "        [[144, 154, 184],\n",
       "         [134, 145, 175],\n",
       "         [120, 131, 159],\n",
       "         ...,\n",
       "         [ 92, 106, 128],\n",
       "         [ 88, 105, 126],\n",
       "         [ 86, 105, 123]],\n",
       " \n",
       "        [[149, 159, 189],\n",
       "         [145, 157, 187],\n",
       "         [130, 141, 172],\n",
       "         ...,\n",
       "         [ 98, 116, 141],\n",
       "         [ 93, 114, 136],\n",
       "         [ 90, 111, 131]]], dtype=uint8),\n",
       " array([[[ 69,  71,  84],\n",
       "         [ 72,  76,  90],\n",
       "         [ 73,  78,  92],\n",
       "         ...,\n",
       "         [ 96, 105, 138],\n",
       "         [ 95, 103, 137],\n",
       "         [101, 108, 142]],\n",
       " \n",
       "        [[ 72,  73,  87],\n",
       "         [ 70,  73,  87],\n",
       "         [ 70,  75,  90],\n",
       "         ...,\n",
       "         [ 90,  94, 125],\n",
       "         [ 96, 101, 134],\n",
       "         [ 98, 104, 136]],\n",
       " \n",
       "        [[ 73,  76,  90],\n",
       "         [ 71,  74,  88],\n",
       "         [ 72,  76,  92],\n",
       "         ...,\n",
       "         [ 85,  89, 114],\n",
       "         [ 88,  91, 121],\n",
       "         [ 92,  98, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 85,  91, 110],\n",
       "         [ 93,  99, 118],\n",
       "         [ 90,  97, 117],\n",
       "         ...,\n",
       "         [ 79,  83,  98],\n",
       "         [112, 114, 134],\n",
       "         [104, 105, 126]],\n",
       " \n",
       "        [[ 72,  79,  99],\n",
       "         [ 72,  79, 100],\n",
       "         [ 66,  74,  97],\n",
       "         ...,\n",
       "         [ 78,  82, 103],\n",
       "         [ 58,  63,  88],\n",
       "         [ 63,  70,  97]],\n",
       " \n",
       "        [[ 71,  78, 103],\n",
       "         [ 71,  77, 102],\n",
       "         [ 74,  81, 106],\n",
       "         ...,\n",
       "         [ 63,  71,  98],\n",
       "         [ 65,  73, 102],\n",
       "         [ 65,  73, 102]]], dtype=uint8),\n",
       " array([[[117, 123, 150],\n",
       "         [114, 115, 139],\n",
       "         [105, 104, 123],\n",
       "         ...,\n",
       "         [187, 185, 201],\n",
       "         [158, 156, 169],\n",
       "         [125, 121, 127]],\n",
       " \n",
       "        [[105, 109, 134],\n",
       "         [ 99, 100, 118],\n",
       "         [ 87,  86, 102],\n",
       "         ...,\n",
       "         [190, 187, 203],\n",
       "         [172, 170, 185],\n",
       "         [125, 122, 130]],\n",
       " \n",
       "        [[ 97,  99, 120],\n",
       "         [ 90,  90, 107],\n",
       "         [ 88,  87, 103],\n",
       "         ...,\n",
       "         [191, 189, 203],\n",
       "         [183, 181, 194],\n",
       "         [138, 135, 145]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[153, 155, 176],\n",
       "         [157, 156, 176],\n",
       "         [161, 161, 180],\n",
       "         ...,\n",
       "         [155, 152, 169],\n",
       "         [153, 150, 167],\n",
       "         [162, 159, 175]],\n",
       " \n",
       "        [[164, 165, 188],\n",
       "         [165, 165, 185],\n",
       "         [160, 161, 180],\n",
       "         ...,\n",
       "         [157, 154, 169],\n",
       "         [159, 157, 173],\n",
       "         [167, 165, 180]],\n",
       " \n",
       "        [[148, 150, 172],\n",
       "         [164, 165, 185],\n",
       "         [161, 161, 180],\n",
       "         ...,\n",
       "         [161, 158, 173],\n",
       "         [168, 165, 180],\n",
       "         [185, 182, 196]]], dtype=uint8),\n",
       " array([[[ 67,  71,  82],\n",
       "         [ 66,  72,  86],\n",
       "         [ 66,  73,  90],\n",
       "         ...,\n",
       "         [ 98, 102, 136],\n",
       "         [ 99, 103, 137],\n",
       "         [101, 107, 142]],\n",
       " \n",
       "        [[ 66,  72,  86],\n",
       "         [ 64,  70,  87],\n",
       "         [ 69,  74,  90],\n",
       "         ...,\n",
       "         [ 92,  97, 128],\n",
       "         [ 94,  99, 130],\n",
       "         [ 98, 105, 137]],\n",
       " \n",
       "        [[ 66,  72,  85],\n",
       "         [ 68,  73,  88],\n",
       "         [ 66,  71,  86],\n",
       "         ...,\n",
       "         [ 86,  90, 117],\n",
       "         [ 90,  96, 124],\n",
       "         [ 92,  98, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  72,  92],\n",
       "         [ 66,  73,  93],\n",
       "         [ 69,  76,  96],\n",
       "         ...,\n",
       "         [ 68,  74,  93],\n",
       "         [ 97, 101, 119],\n",
       "         [ 61,  64,  89]],\n",
       " \n",
       "        [[ 69,  74,  99],\n",
       "         [ 68,  73,  98],\n",
       "         [ 70,  75,  99],\n",
       "         ...,\n",
       "         [ 71,  75,  99],\n",
       "         [ 60,  64,  89],\n",
       "         [ 64,  68,  94]],\n",
       " \n",
       "        [[ 69,  76, 103],\n",
       "         [ 70,  77, 104],\n",
       "         [ 69,  76, 103],\n",
       "         ...,\n",
       "         [ 62,  66,  95],\n",
       "         [ 65,  69,  98],\n",
       "         [ 67,  72, 101]]], dtype=uint8),\n",
       " array([[[122, 120, 149],\n",
       "         [111, 111, 135],\n",
       "         [105, 104, 124],\n",
       "         ...,\n",
       "         [161, 164, 171],\n",
       "         [130, 129, 132],\n",
       "         [124, 121, 124]],\n",
       " \n",
       "        [[111, 112, 138],\n",
       "         [ 99, 103, 122],\n",
       "         [ 90,  90, 106],\n",
       "         ...,\n",
       "         [176, 177, 186],\n",
       "         [134, 132, 138],\n",
       "         [122, 121, 124]],\n",
       " \n",
       "        [[104, 105, 127],\n",
       "         [ 92,  92, 110],\n",
       "         [ 85,  84, 103],\n",
       "         ...,\n",
       "         [182, 182, 194],\n",
       "         [146, 144, 152],\n",
       "         [117, 115, 118]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[150, 147, 169],\n",
       "         [160, 158, 177],\n",
       "         [166, 163, 181],\n",
       "         ...,\n",
       "         [151, 148, 163],\n",
       "         [151, 148, 163],\n",
       "         [166, 164, 176]],\n",
       " \n",
       "        [[147, 145, 167],\n",
       "         [158, 155, 172],\n",
       "         [166, 161, 179],\n",
       "         ...,\n",
       "         [151, 149, 161],\n",
       "         [158, 156, 167],\n",
       "         [169, 167, 177]],\n",
       " \n",
       "        [[146, 144, 166],\n",
       "         [158, 158, 176],\n",
       "         [164, 160, 178],\n",
       "         ...,\n",
       "         [159, 157, 171],\n",
       "         [158, 156, 169],\n",
       "         [169, 169, 179]]], dtype=uint8),\n",
       " array([[[ 73,  75,  85],\n",
       "         [ 76,  77,  91],\n",
       "         [ 76,  79,  93],\n",
       "         ...,\n",
       "         [ 75,  81, 110],\n",
       "         [ 79,  85, 115],\n",
       "         [ 78,  86, 116]],\n",
       " \n",
       "        [[ 77,  78,  88],\n",
       "         [ 75,  77,  91],\n",
       "         [ 76,  79,  94],\n",
       "         ...,\n",
       "         [ 74,  76, 103],\n",
       "         [ 72,  76, 105],\n",
       "         [ 77,  82, 112]],\n",
       " \n",
       "        [[ 75,  77,  88],\n",
       "         [ 77,  78,  92],\n",
       "         [ 76,  79,  93],\n",
       "         ...,\n",
       "         [ 67,  69,  92],\n",
       "         [ 68,  72,  97],\n",
       "         [ 71,  76, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  75,  93],\n",
       "         [ 72,  72,  88],\n",
       "         [ 69,  69,  85],\n",
       "         ...,\n",
       "         [ 74,  83,  86],\n",
       "         [ 70,  79,  85],\n",
       "         [ 69,  73,  84]],\n",
       " \n",
       "        [[ 74,  78,  96],\n",
       "         [ 72,  75,  90],\n",
       "         [ 70,  73,  88],\n",
       "         ...,\n",
       "         [ 71,  80,  86],\n",
       "         [ 70,  76,  87],\n",
       "         [ 65,  69,  84]],\n",
       " \n",
       "        [[ 73,  75,  93],\n",
       "         [ 73,  76,  92],\n",
       "         [ 71,  73,  91],\n",
       "         ...,\n",
       "         [ 66,  75,  86],\n",
       "         [ 65,  72,  89],\n",
       "         [ 65,  68,  87]]], dtype=uint8),\n",
       " array([[[118, 125, 159],\n",
       "         [118, 125, 156],\n",
       "         [120, 124, 155],\n",
       "         ...,\n",
       "         [177, 174, 189],\n",
       "         [152, 149, 160],\n",
       "         [130, 129, 134]],\n",
       " \n",
       "        [[115, 120, 151],\n",
       "         [114, 119, 149],\n",
       "         [112, 116, 145],\n",
       "         ...,\n",
       "         [186, 184, 198],\n",
       "         [169, 165, 177],\n",
       "         [132, 129, 137]],\n",
       " \n",
       "        [[108, 113, 144],\n",
       "         [108, 112, 143],\n",
       "         [104, 108, 137],\n",
       "         ...,\n",
       "         [190, 187, 202],\n",
       "         [186, 183, 197],\n",
       "         [150, 146, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[125, 126, 148],\n",
       "         [146, 146, 165],\n",
       "         [161, 161, 176],\n",
       "         ...,\n",
       "         [151, 148, 164],\n",
       "         [161, 158, 173],\n",
       "         [191, 189, 201]],\n",
       " \n",
       "        [[128, 127, 153],\n",
       "         [163, 165, 185],\n",
       "         [153, 152, 169],\n",
       "         ...,\n",
       "         [156, 152, 170],\n",
       "         [185, 181, 192],\n",
       "         [204, 203, 214]],\n",
       " \n",
       "        [[139, 137, 163],\n",
       "         [175, 178, 198],\n",
       "         [153, 151, 172],\n",
       "         ...,\n",
       "         [181, 178, 189],\n",
       "         [202, 198, 207],\n",
       "         [212, 208, 219]]], dtype=uint8),\n",
       " array([[[ 72,  72,  85],\n",
       "         [ 72,  76,  86],\n",
       "         [ 71,  78,  91],\n",
       "         ...,\n",
       "         [ 84,  93, 125],\n",
       "         [ 84,  93, 126],\n",
       "         [ 85,  94, 128]],\n",
       " \n",
       "        [[ 74,  75,  86],\n",
       "         [ 74,  77,  88],\n",
       "         [ 72,  79,  92],\n",
       "         ...,\n",
       "         [ 80,  89, 122],\n",
       "         [ 83,  93, 123],\n",
       "         [ 83,  93, 125]],\n",
       " \n",
       "        [[ 72,  76,  87],\n",
       "         [ 71,  77,  90],\n",
       "         [ 72,  78,  91],\n",
       "         ...,\n",
       "         [ 76,  83, 111],\n",
       "         [ 81,  88, 117],\n",
       "         [ 81,  86, 117]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  73,  88],\n",
       "         [ 69,  72,  87],\n",
       "         [ 69,  72,  87],\n",
       "         ...,\n",
       "         [ 76,  86,  86],\n",
       "         [ 78,  87,  87],\n",
       "         [ 80,  88,  87]],\n",
       " \n",
       "        [[ 73,  74,  92],\n",
       "         [ 70,  73,  90],\n",
       "         [ 70,  73,  88],\n",
       "         ...,\n",
       "         [ 73,  83,  89],\n",
       "         [ 76,  84,  90],\n",
       "         [ 78,  84,  91]],\n",
       " \n",
       "        [[ 73,  74,  94],\n",
       "         [ 71,  72,  92],\n",
       "         [ 71,  73,  91],\n",
       "         ...,\n",
       "         [ 67,  76,  87],\n",
       "         [ 70,  76,  88],\n",
       "         [ 71,  77,  90]]], dtype=uint8),\n",
       " array([[[175, 159, 153],\n",
       "         [166, 150, 144],\n",
       "         [159, 144, 142],\n",
       "         ...,\n",
       "         [ 98,  86, 106],\n",
       "         [ 99,  87, 108],\n",
       "         [ 92,  79, 101]],\n",
       " \n",
       "        [[150, 134, 128],\n",
       "         [146, 130, 124],\n",
       "         [136, 124, 120],\n",
       "         ...,\n",
       "         [ 97,  86, 106],\n",
       "         [100,  89, 110],\n",
       "         [ 93,  81, 103]],\n",
       " \n",
       "        [[164, 148, 141],\n",
       "         [148, 132, 127],\n",
       "         [136, 119, 118],\n",
       "         ...,\n",
       "         [ 96,  84, 104],\n",
       "         [ 99,  87, 107],\n",
       "         [ 99,  86, 108]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[190, 177, 171],\n",
       "         [182, 168, 168],\n",
       "         [176, 162, 164],\n",
       "         ...,\n",
       "         [174, 158, 152],\n",
       "         [182, 166, 160],\n",
       "         [183, 169, 167]],\n",
       " \n",
       "        [[199, 183, 177],\n",
       "         [193, 177, 172],\n",
       "         [189, 173, 170],\n",
       "         ...,\n",
       "         [180, 163, 159],\n",
       "         [194, 177, 175],\n",
       "         [191, 175, 176]],\n",
       " \n",
       "        [[204, 185, 180],\n",
       "         [200, 181, 176],\n",
       "         [199, 183, 177],\n",
       "         ...,\n",
       "         [188, 171, 168],\n",
       "         [190, 172, 173],\n",
       "         [187, 171, 174]]], dtype=uint8),\n",
       " array([[[116, 150, 194],\n",
       "         [119, 152, 197],\n",
       "         [121, 153, 197],\n",
       "         ...,\n",
       "         [ 53,  89, 138],\n",
       "         [ 52,  88, 136],\n",
       "         [ 41,  77, 122]],\n",
       " \n",
       "        [[115, 151, 195],\n",
       "         [118, 151, 195],\n",
       "         [121, 151, 195],\n",
       "         ...,\n",
       "         [ 57,  93, 140],\n",
       "         [ 49,  86, 133],\n",
       "         [ 39,  76, 121]],\n",
       " \n",
       "        [[115, 145, 190],\n",
       "         [117, 146, 190],\n",
       "         [118, 147, 191],\n",
       "         ...,\n",
       "         [ 53,  90, 134],\n",
       "         [ 53,  92, 136],\n",
       "         [ 45,  82, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 130, 174],\n",
       "         [ 95, 130, 174],\n",
       "         [ 94, 127, 173],\n",
       "         ...,\n",
       "         [ 63,  92, 138],\n",
       "         [ 65,  94, 139],\n",
       "         [ 60,  89, 134]],\n",
       " \n",
       "        [[100, 135, 179],\n",
       "         [104, 138, 182],\n",
       "         [101, 135, 180],\n",
       "         ...,\n",
       "         [ 67,  98, 143],\n",
       "         [ 64,  92, 137],\n",
       "         [ 60,  89, 134]],\n",
       " \n",
       "        [[105, 140, 184],\n",
       "         [106, 141, 185],\n",
       "         [107, 142, 186],\n",
       "         ...,\n",
       "         [ 69, 102, 146],\n",
       "         [ 64,  98, 142],\n",
       "         [ 61,  95, 140]]], dtype=uint8),\n",
       " array([[[ 25,  32,  35],\n",
       "         [ 27,  22,  27],\n",
       "         [ 12,  12,  12],\n",
       "         ...,\n",
       "         [ 66,  79,  93],\n",
       "         [ 53,  66,  80],\n",
       "         [ 72,  84,  97]],\n",
       " \n",
       "        [[ 18,  23,  27],\n",
       "         [ 18,  17,  21],\n",
       "         [  9,  14,  10],\n",
       "         ...,\n",
       "         [ 53,  69,  86],\n",
       "         [ 47,  70,  87],\n",
       "         [ 75,  84,  99]],\n",
       " \n",
       "        [[ 19,  23,  26],\n",
       "         [  8,  13,  16],\n",
       "         [ 13,  19,  21],\n",
       "         ...,\n",
       "         [ 56,  64,  88],\n",
       "         [ 44,  75,  95],\n",
       "         [ 76,  81, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 136, 151],\n",
       "         [138, 138, 148],\n",
       "         [133, 139, 152],\n",
       "         ...,\n",
       "         [116, 131, 144],\n",
       "         [137, 146, 157],\n",
       "         [161, 156, 168]],\n",
       " \n",
       "        [[138, 141, 150],\n",
       "         [143, 140, 150],\n",
       "         [134, 140, 157],\n",
       "         ...,\n",
       "         [114, 137, 147],\n",
       "         [138, 151, 164],\n",
       "         [157, 155, 170]],\n",
       " \n",
       "        [[144, 146, 151],\n",
       "         [149, 145, 154],\n",
       "         [138, 145, 162],\n",
       "         ...,\n",
       "         [120, 141, 153],\n",
       "         [137, 152, 166],\n",
       "         [151, 153, 166]]], dtype=uint8),\n",
       " array([[[125, 129, 160],\n",
       "         [123, 126, 157],\n",
       "         [123, 126, 155],\n",
       "         ...,\n",
       "         [183, 182, 192],\n",
       "         [152, 150, 161],\n",
       "         [126, 123, 125]],\n",
       " \n",
       "        [[118, 122, 153],\n",
       "         [120, 122, 150],\n",
       "         [122, 124, 153],\n",
       "         ...,\n",
       "         [175, 174, 186],\n",
       "         [169, 168, 180],\n",
       "         [130, 126, 132]],\n",
       " \n",
       "        [[113, 116, 147],\n",
       "         [111, 111, 138],\n",
       "         [106, 107, 127],\n",
       "         ...,\n",
       "         [189, 189, 201],\n",
       "         [175, 173, 186],\n",
       "         [140, 136, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 143, 162],\n",
       "         [175, 174, 190],\n",
       "         [165, 163, 179],\n",
       "         ...,\n",
       "         [153, 150, 166],\n",
       "         [148, 145, 161],\n",
       "         [153, 149, 167]],\n",
       " \n",
       "        [[151, 151, 169],\n",
       "         [179, 175, 191],\n",
       "         [176, 173, 189],\n",
       "         ...,\n",
       "         [150, 147, 163],\n",
       "         [151, 147, 164],\n",
       "         [156, 153, 168]],\n",
       " \n",
       "        [[153, 153, 173],\n",
       "         [177, 175, 191],\n",
       "         [179, 177, 192],\n",
       "         ...,\n",
       "         [154, 151, 167],\n",
       "         [153, 150, 165],\n",
       "         [154, 151, 167]]], dtype=uint8),\n",
       " array([[[ 42,  42,  52],\n",
       "         [ 59,  51,  61],\n",
       "         [ 57,  55,  66],\n",
       "         ...,\n",
       "         [ 97,  92, 100],\n",
       "         [103,  94, 106],\n",
       "         [103,  93, 106]],\n",
       " \n",
       "        [[ 48,  46,  56],\n",
       "         [ 56,  51,  60],\n",
       "         [ 55,  55,  65],\n",
       "         ...,\n",
       "         [ 93,  90,  96],\n",
       "         [ 99,  89, 101],\n",
       "         [ 97,  87, 104]],\n",
       " \n",
       "        [[ 51,  47,  59],\n",
       "         [ 53,  53,  60],\n",
       "         [ 57,  56,  66],\n",
       "         ...,\n",
       "         [ 90,  85,  94],\n",
       "         [ 93,  85,  95],\n",
       "         [ 90,  83,  99]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71,  72,  83],\n",
       "         [ 73,  75,  86],\n",
       "         [ 76,  77,  88],\n",
       "         ...,\n",
       "         [ 77,  73,  84],\n",
       "         [ 75,  72,  84],\n",
       "         [ 81,  76,  88]],\n",
       " \n",
       "        [[ 76,  77,  87],\n",
       "         [ 75,  76,  90],\n",
       "         [ 76,  80,  89],\n",
       "         ...,\n",
       "         [ 80,  76,  88],\n",
       "         [ 79,  74,  89],\n",
       "         [ 82,  77,  92]],\n",
       " \n",
       "        [[ 76,  77,  87],\n",
       "         [ 77,  78,  91],\n",
       "         [ 78,  84,  93],\n",
       "         ...,\n",
       "         [ 84,  82,  94],\n",
       "         [ 83,  78,  93],\n",
       "         [ 84,  79,  94]]], dtype=uint8),\n",
       " array([[[93, 93, 99],\n",
       "         [92, 88, 99],\n",
       "         [91, 89, 95],\n",
       "         ...,\n",
       "         [64, 57, 68],\n",
       "         [53, 54, 63],\n",
       "         [61, 52, 62]],\n",
       " \n",
       "        [[94, 88, 98],\n",
       "         [89, 85, 97],\n",
       "         [84, 81, 91],\n",
       "         ...,\n",
       "         [65, 59, 69],\n",
       "         [56, 54, 65],\n",
       "         [58, 49, 63]],\n",
       " \n",
       "        [[94, 85, 98],\n",
       "         [87, 83, 93],\n",
       "         [80, 76, 87],\n",
       "         ...,\n",
       "         [64, 59, 69],\n",
       "         [59, 53, 65],\n",
       "         [59, 49, 66]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[68, 65, 75],\n",
       "         [77, 72, 81],\n",
       "         [74, 69, 78],\n",
       "         ...,\n",
       "         [67, 68, 78],\n",
       "         [70, 69, 79],\n",
       "         [67, 67, 77]],\n",
       " \n",
       "        [[68, 66, 77],\n",
       "         [73, 69, 79],\n",
       "         [79, 73, 83],\n",
       "         ...,\n",
       "         [67, 69, 77],\n",
       "         [72, 70, 81],\n",
       "         [67, 67, 79]],\n",
       " \n",
       "        [[74, 72, 83],\n",
       "         [69, 70, 79],\n",
       "         [77, 74, 84],\n",
       "         ...,\n",
       "         [70, 71, 82],\n",
       "         [70, 71, 82],\n",
       "         [67, 68, 78]]], dtype=uint8),\n",
       " array([[[48, 43, 58],\n",
       "         [52, 49, 59],\n",
       "         [53, 55, 63],\n",
       "         ...,\n",
       "         [84, 82, 89],\n",
       "         [90, 85, 94],\n",
       "         [94, 86, 97]],\n",
       " \n",
       "        [[50, 44, 59],\n",
       "         [53, 49, 60],\n",
       "         [58, 58, 63],\n",
       "         ...,\n",
       "         [81, 79, 84],\n",
       "         [87, 82, 90],\n",
       "         [90, 82, 92]],\n",
       " \n",
       "        [[52, 42, 58],\n",
       "         [54, 50, 59],\n",
       "         [55, 56, 58],\n",
       "         ...,\n",
       "         [79, 73, 81],\n",
       "         [84, 78, 85],\n",
       "         [84, 76, 86]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[55, 54, 61],\n",
       "         [50, 44, 53],\n",
       "         [53, 45, 59],\n",
       "         ...,\n",
       "         [65, 59, 72],\n",
       "         [67, 56, 69],\n",
       "         [61, 54, 59]],\n",
       " \n",
       "        [[51, 50, 60],\n",
       "         [49, 46, 55],\n",
       "         [50, 42, 56],\n",
       "         ...,\n",
       "         [68, 62, 74],\n",
       "         [72, 65, 75],\n",
       "         [67, 60, 63]],\n",
       " \n",
       "        [[49, 46, 59],\n",
       "         [53, 46, 58],\n",
       "         [48, 42, 56],\n",
       "         ...,\n",
       "         [75, 68, 81],\n",
       "         [73, 68, 77],\n",
       "         [70, 62, 65]]], dtype=uint8),\n",
       " array([[[87, 79, 91],\n",
       "         [79, 77, 83],\n",
       "         [74, 74, 83],\n",
       "         ...,\n",
       "         [56, 46, 48],\n",
       "         [52, 46, 49],\n",
       "         [52, 51, 53]],\n",
       " \n",
       "        [[79, 74, 83],\n",
       "         [76, 73, 77],\n",
       "         [70, 70, 79],\n",
       "         ...,\n",
       "         [57, 45, 47],\n",
       "         [50, 44, 45],\n",
       "         [46, 43, 45]],\n",
       " \n",
       "        [[79, 72, 80],\n",
       "         [74, 69, 70],\n",
       "         [69, 67, 75],\n",
       "         ...,\n",
       "         [56, 47, 50],\n",
       "         [50, 47, 49],\n",
       "         [48, 43, 48]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[60, 57, 68],\n",
       "         [70, 66, 72],\n",
       "         [64, 65, 70],\n",
       "         ...,\n",
       "         [68, 68, 79],\n",
       "         [72, 71, 80],\n",
       "         [70, 69, 77]],\n",
       " \n",
       "        [[64, 58, 70],\n",
       "         [74, 69, 78],\n",
       "         [66, 69, 73],\n",
       "         ...,\n",
       "         [66, 64, 77],\n",
       "         [69, 65, 76],\n",
       "         [64, 64, 72]],\n",
       " \n",
       "        [[61, 55, 67],\n",
       "         [76, 70, 79],\n",
       "         [72, 73, 77],\n",
       "         ...,\n",
       "         [74, 70, 83],\n",
       "         [72, 68, 79],\n",
       "         [65, 64, 72]]], dtype=uint8),\n",
       " array([[[ 47,  98, 156],\n",
       "         [ 62, 118, 174],\n",
       "         [ 82, 139, 188],\n",
       "         ...,\n",
       "         [102, 135, 171],\n",
       "         [103, 139, 175],\n",
       "         [105, 142, 179]],\n",
       " \n",
       "        [[ 66, 125, 179],\n",
       "         [ 80, 142, 192],\n",
       "         [ 96, 155, 204],\n",
       "         ...,\n",
       "         [107, 142, 179],\n",
       "         [108, 145, 183],\n",
       "         [102, 141, 179]],\n",
       " \n",
       "        [[ 68, 131, 184],\n",
       "         [ 86, 146, 196],\n",
       "         [ 98, 155, 203],\n",
       "         ...,\n",
       "         [ 99, 140, 179],\n",
       "         [109, 150, 188],\n",
       "         [101, 142, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[160, 199, 231],\n",
       "         [161, 199, 230],\n",
       "         [159, 199, 230],\n",
       "         ...,\n",
       "         [125, 175, 215],\n",
       "         [128, 176, 216],\n",
       "         [120, 171, 213]],\n",
       " \n",
       "        [[162, 201, 230],\n",
       "         [163, 202, 230],\n",
       "         [165, 203, 230],\n",
       "         ...,\n",
       "         [124, 174, 214],\n",
       "         [131, 182, 222],\n",
       "         [116, 171, 214]],\n",
       " \n",
       "        [[164, 201, 230],\n",
       "         [169, 203, 232],\n",
       "         [174, 206, 232],\n",
       "         ...,\n",
       "         [132, 181, 221],\n",
       "         [122, 173, 216],\n",
       "         [102, 161, 208]]], dtype=uint8),\n",
       " array([[[196, 200, 205],\n",
       "         [200, 204, 207],\n",
       "         [201, 205, 207],\n",
       "         ...,\n",
       "         [143, 150, 154],\n",
       "         [147, 150, 156],\n",
       "         [146, 153, 157]],\n",
       " \n",
       "        [[194, 198, 206],\n",
       "         [197, 201, 206],\n",
       "         [196, 200, 205],\n",
       "         ...,\n",
       "         [146, 152, 157],\n",
       "         [151, 155, 160],\n",
       "         [149, 156, 161]],\n",
       " \n",
       "        [[191, 197, 203],\n",
       "         [189, 191, 201],\n",
       "         [190, 193, 202],\n",
       "         ...,\n",
       "         [149, 154, 159],\n",
       "         [152, 158, 163],\n",
       "         [150, 159, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[198, 203, 212],\n",
       "         [197, 202, 211],\n",
       "         [195, 200, 209],\n",
       "         ...,\n",
       "         [182, 188, 197],\n",
       "         [189, 194, 203],\n",
       "         [192, 198, 205]],\n",
       " \n",
       "        [[198, 203, 212],\n",
       "         [197, 202, 211],\n",
       "         [195, 201, 210],\n",
       "         ...,\n",
       "         [189, 194, 205],\n",
       "         [192, 196, 207],\n",
       "         [193, 197, 208]],\n",
       " \n",
       "        [[200, 205, 214],\n",
       "         [199, 204, 213],\n",
       "         [196, 201, 210],\n",
       "         ...,\n",
       "         [195, 200, 209],\n",
       "         [195, 200, 209],\n",
       "         [193, 197, 208]]], dtype=uint8),\n",
       " array([[[154, 191, 237],\n",
       "         [150, 189, 234],\n",
       "         [151, 189, 234],\n",
       "         ...,\n",
       "         [139, 171, 220],\n",
       "         [141, 173, 219],\n",
       "         [142, 178, 222]],\n",
       " \n",
       "        [[153, 189, 235],\n",
       "         [150, 189, 234],\n",
       "         [146, 185, 234],\n",
       "         ...,\n",
       "         [140, 173, 221],\n",
       "         [140, 173, 222],\n",
       "         [133, 172, 217]],\n",
       " \n",
       "        [[152, 187, 234],\n",
       "         [148, 184, 234],\n",
       "         [145, 181, 231],\n",
       "         ...,\n",
       "         [142, 174, 221],\n",
       "         [135, 169, 218],\n",
       "         [136, 171, 219]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 180, 230],\n",
       "         [143, 177, 227],\n",
       "         [144, 177, 227],\n",
       "         ...,\n",
       "         [144, 176, 227],\n",
       "         [146, 176, 225],\n",
       "         [144, 175, 226]],\n",
       " \n",
       "        [[150, 183, 233],\n",
       "         [146, 181, 230],\n",
       "         [140, 174, 225],\n",
       "         ...,\n",
       "         [145, 176, 227],\n",
       "         [146, 178, 225],\n",
       "         [144, 177, 227]],\n",
       " \n",
       "        [[150, 184, 234],\n",
       "         [146, 180, 230],\n",
       "         [142, 179, 231],\n",
       "         ...,\n",
       "         [144, 175, 226],\n",
       "         [145, 176, 226],\n",
       "         [146, 175, 226]]], dtype=uint8),\n",
       " array([[[147, 142, 187],\n",
       "         [151, 146, 191],\n",
       "         [157, 151, 195],\n",
       "         ...,\n",
       "         [154, 150, 191],\n",
       "         [149, 147, 187],\n",
       "         [145, 143, 184]],\n",
       " \n",
       "        [[150, 145, 190],\n",
       "         [154, 148, 193],\n",
       "         [156, 149, 192],\n",
       "         ...,\n",
       "         [146, 142, 183],\n",
       "         [146, 144, 184],\n",
       "         [143, 142, 182]],\n",
       " \n",
       "        [[153, 147, 192],\n",
       "         [152, 145, 189],\n",
       "         [156, 149, 190],\n",
       "         ...,\n",
       "         [141, 138, 177],\n",
       "         [140, 139, 179],\n",
       "         [142, 141, 181]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[163, 153, 200],\n",
       "         [162, 152, 199],\n",
       "         [158, 151, 196],\n",
       "         ...,\n",
       "         [143, 153, 187],\n",
       "         [154, 161, 197],\n",
       "         [154, 159, 198]],\n",
       " \n",
       "        [[166, 155, 202],\n",
       "         [166, 155, 201],\n",
       "         [164, 154, 200],\n",
       "         ...,\n",
       "         [149, 158, 195],\n",
       "         [152, 158, 196],\n",
       "         [155, 159, 198]],\n",
       " \n",
       "        [[166, 155, 201],\n",
       "         [166, 154, 201],\n",
       "         [168, 157, 202],\n",
       "         ...,\n",
       "         [146, 155, 193],\n",
       "         [152, 158, 197],\n",
       "         [155, 160, 199]]], dtype=uint8),\n",
       " array([[[137, 143, 156],\n",
       "         [153, 162, 182],\n",
       "         [147, 153, 181],\n",
       "         ...,\n",
       "         [119, 132, 164],\n",
       "         [128, 141, 175],\n",
       "         [129, 144, 177]],\n",
       " \n",
       "        [[140, 144, 160],\n",
       "         [152, 157, 180],\n",
       "         [141, 147, 175],\n",
       "         ...,\n",
       "         [117, 130, 162],\n",
       "         [118, 132, 165],\n",
       "         [124, 139, 172]],\n",
       " \n",
       "        [[146, 149, 167],\n",
       "         [150, 155, 179],\n",
       "         [138, 142, 171],\n",
       "         ...,\n",
       "         [115, 128, 160],\n",
       "         [115, 128, 162],\n",
       "         [121, 136, 170]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 148, 176],\n",
       "         [132, 140, 169],\n",
       "         [125, 133, 163],\n",
       "         ...,\n",
       "         [193, 214, 245],\n",
       "         [193, 214, 245],\n",
       "         [192, 213, 244]],\n",
       " \n",
       "        [[137, 147, 177],\n",
       "         [128, 138, 168],\n",
       "         [122, 131, 164],\n",
       "         ...,\n",
       "         [194, 215, 246],\n",
       "         [195, 216, 247],\n",
       "         [195, 216, 247]],\n",
       " \n",
       "        [[134, 143, 176],\n",
       "         [128, 137, 170],\n",
       "         [123, 132, 165],\n",
       "         ...,\n",
       "         [200, 221, 251],\n",
       "         [199, 219, 250],\n",
       "         [197, 219, 247]]], dtype=uint8),\n",
       " array([[[117, 150, 183],\n",
       "         [115, 148, 181],\n",
       "         [111, 145, 174],\n",
       "         ...,\n",
       "         [163, 189, 213],\n",
       "         [161, 188, 209],\n",
       "         [162, 189, 211]],\n",
       " \n",
       "        [[118, 151, 184],\n",
       "         [116, 149, 182],\n",
       "         [109, 143, 174],\n",
       "         ...,\n",
       "         [155, 183, 210],\n",
       "         [157, 184, 210],\n",
       "         [148, 178, 203]],\n",
       " \n",
       "        [[116, 151, 184],\n",
       "         [110, 144, 177],\n",
       "         [100, 130, 166],\n",
       "         ...,\n",
       "         [142, 172, 203],\n",
       "         [147, 177, 206],\n",
       "         [145, 176, 203]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 163, 201],\n",
       "         [131, 169, 204],\n",
       "         [127, 161, 196],\n",
       "         ...,\n",
       "         [136, 170, 200],\n",
       "         [133, 169, 199],\n",
       "         [130, 166, 196]],\n",
       " \n",
       "        [[129, 166, 204],\n",
       "         [131, 169, 204],\n",
       "         [134, 171, 204],\n",
       "         ...,\n",
       "         [136, 170, 200],\n",
       "         [131, 167, 197],\n",
       "         [133, 169, 199]],\n",
       " \n",
       "        [[131, 167, 203],\n",
       "         [132, 168, 204],\n",
       "         [139, 177, 209],\n",
       "         ...,\n",
       "         [133, 169, 199],\n",
       "         [135, 172, 203],\n",
       "         [135, 173, 205]]], dtype=uint8),\n",
       " array([[[ 33,  57,  96],\n",
       "         [ 30,  69, 108],\n",
       "         [ 41,  76, 119],\n",
       "         ...,\n",
       "         [128, 162, 205],\n",
       "         [132, 167, 210],\n",
       "         [129, 163, 209]],\n",
       " \n",
       "        [[ 35,  66, 107],\n",
       "         [ 40,  75, 118],\n",
       "         [ 41,  79, 121],\n",
       "         ...,\n",
       "         [128, 162, 205],\n",
       "         [126, 160, 203],\n",
       "         [130, 163, 208]],\n",
       " \n",
       "        [[ 34,  67, 109],\n",
       "         [ 41,  77, 120],\n",
       "         [ 43,  81, 123],\n",
       "         ...,\n",
       "         [133, 163, 207],\n",
       "         [129, 163, 205],\n",
       "         [129, 162, 207]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87, 122, 165],\n",
       "         [ 88, 123, 166],\n",
       "         [ 90, 125, 167],\n",
       "         ...,\n",
       "         [ 82, 119, 161],\n",
       "         [ 86, 129, 174],\n",
       "         [ 89, 133, 180]],\n",
       " \n",
       "        [[ 88, 123, 166],\n",
       "         [ 92, 127, 170],\n",
       "         [ 91, 126, 168],\n",
       "         ...,\n",
       "         [ 97, 136, 180],\n",
       "         [102, 141, 185],\n",
       "         [100, 142, 189]],\n",
       " \n",
       "        [[ 89, 124, 167],\n",
       "         [ 91, 126, 169],\n",
       "         [ 94, 129, 172],\n",
       "         ...,\n",
       "         [110, 146, 190],\n",
       "         [109, 146, 191],\n",
       "         [106, 144, 192]]], dtype=uint8),\n",
       " array([[[104, 109, 132],\n",
       "         [ 95,  99, 119],\n",
       "         [ 74,  81,  99],\n",
       "         ...,\n",
       "         [  8,  17,  29],\n",
       "         [ 20,  18,  21],\n",
       "         [  3,  13,  18]],\n",
       " \n",
       "        [[ 82, 103, 126],\n",
       "         [ 75,  89, 107],\n",
       "         [ 65,  78,  92],\n",
       "         ...,\n",
       "         [  8,  19,  32],\n",
       "         [ 20,  19,  24],\n",
       "         [ 19,  27,  37]],\n",
       " \n",
       "        [[ 60,  94, 124],\n",
       "         [ 57,  85, 106],\n",
       "         [ 47,  74,  89],\n",
       "         ...,\n",
       "         [ 10,  20,  34],\n",
       "         [ 14,  18,  27],\n",
       "         [ 20,  30,  43]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 81,  99, 139],\n",
       "         [ 79,  94, 135],\n",
       "         [ 62, 104, 138],\n",
       "         ...,\n",
       "         [ 88, 112, 146],\n",
       "         [ 83, 110, 144],\n",
       "         [ 61, 110, 147]],\n",
       " \n",
       "        [[ 87, 103, 140],\n",
       "         [ 84,  97, 133],\n",
       "         [ 69, 108, 141],\n",
       "         ...,\n",
       "         [ 82, 115, 149],\n",
       "         [ 77, 109, 144],\n",
       "         [ 62, 111, 146]],\n",
       " \n",
       "        [[ 98, 109, 142],\n",
       "         [ 92, 100, 133],\n",
       "         [ 72, 104, 139],\n",
       "         ...,\n",
       "         [ 76, 117, 147],\n",
       "         [ 75, 111, 143],\n",
       "         [ 72, 109, 145]]], dtype=uint8),\n",
       " array([[[103, 137, 173],\n",
       "         [103, 138, 172],\n",
       "         [115, 152, 185],\n",
       "         ...,\n",
       "         [137, 166, 197],\n",
       "         [137, 170, 201],\n",
       "         [134, 167, 199]],\n",
       " \n",
       "        [[104, 137, 173],\n",
       "         [100, 131, 168],\n",
       "         [106, 142, 177],\n",
       "         ...,\n",
       "         [124, 152, 184],\n",
       "         [130, 164, 194],\n",
       "         [128, 162, 193]],\n",
       " \n",
       "        [[101, 133, 169],\n",
       "         [ 96, 128, 164],\n",
       "         [113, 145, 180],\n",
       "         ...,\n",
       "         [114, 138, 171],\n",
       "         [118, 147, 178],\n",
       "         [117, 150, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 164, 198],\n",
       "         [130, 165, 199],\n",
       "         [128, 163, 197],\n",
       "         ...,\n",
       "         [149, 187, 220],\n",
       "         [147, 184, 218],\n",
       "         [145, 183, 218]],\n",
       " \n",
       "        [[131, 168, 202],\n",
       "         [139, 174, 207],\n",
       "         [133, 171, 202],\n",
       "         ...,\n",
       "         [152, 189, 222],\n",
       "         [147, 183, 219],\n",
       "         [148, 184, 220]],\n",
       " \n",
       "        [[133, 171, 205],\n",
       "         [139, 177, 209],\n",
       "         [145, 181, 211],\n",
       "         ...,\n",
       "         [155, 190, 223],\n",
       "         [147, 183, 219],\n",
       "         [148, 183, 220]]], dtype=uint8),\n",
       " array([[[145, 162, 211],\n",
       "         [142, 158, 205],\n",
       "         [135, 151, 197],\n",
       "         ...,\n",
       "         [119, 129, 176],\n",
       "         [114, 127, 178],\n",
       "         [122, 138, 191]],\n",
       " \n",
       "        [[137, 153, 200],\n",
       "         [134, 150, 197],\n",
       "         [138, 152, 196],\n",
       "         ...,\n",
       "         [113, 120, 168],\n",
       "         [114, 124, 176],\n",
       "         [122, 135, 189]],\n",
       " \n",
       "        [[113, 128, 175],\n",
       "         [123, 139, 185],\n",
       "         [120, 132, 174],\n",
       "         ...,\n",
       "         [109, 116, 164],\n",
       "         [113, 121, 174],\n",
       "         [122, 135, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 156, 201],\n",
       "         [134, 151, 198],\n",
       "         [129, 144, 193],\n",
       "         ...,\n",
       "         [122, 144, 202],\n",
       "         [128, 149, 207],\n",
       "         [120, 140, 198]],\n",
       " \n",
       "        [[130, 151, 200],\n",
       "         [134, 153, 202],\n",
       "         [133, 152, 201],\n",
       "         ...,\n",
       "         [125, 147, 205],\n",
       "         [131, 151, 209],\n",
       "         [117, 136, 194]],\n",
       " \n",
       "        [[131, 152, 204],\n",
       "         [133, 154, 205],\n",
       "         [134, 154, 204],\n",
       "         ...,\n",
       "         [127, 148, 206],\n",
       "         [129, 149, 207],\n",
       "         [125, 144, 203]]], dtype=uint8),\n",
       " array([[[ 69, 124, 195],\n",
       "         [ 70, 125, 196],\n",
       "         [ 67, 123, 194],\n",
       "         ...,\n",
       "         [ 66, 112, 165],\n",
       "         [ 63, 113, 173],\n",
       "         [ 66, 116, 179]],\n",
       " \n",
       "        [[ 77, 132, 205],\n",
       "         [ 77, 131, 204],\n",
       "         [ 72, 128, 199],\n",
       "         ...,\n",
       "         [ 74, 120, 173],\n",
       "         [ 74, 124, 181],\n",
       "         [ 70, 121, 182]],\n",
       " \n",
       "        [[ 77, 132, 205],\n",
       "         [ 77, 132, 205],\n",
       "         [ 74, 129, 200],\n",
       "         ...,\n",
       "         [ 77, 126, 183],\n",
       "         [ 75, 129, 188],\n",
       "         [ 70, 127, 186]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 49,  93, 189],\n",
       "         [ 47,  91, 185],\n",
       "         [ 47,  90, 183],\n",
       "         ...,\n",
       "         [ 44,  88, 174],\n",
       "         [ 42,  88, 176],\n",
       "         [ 42,  87, 178]],\n",
       " \n",
       "        [[ 48,  93, 190],\n",
       "         [ 47,  93, 188],\n",
       "         [ 50,  93, 186],\n",
       "         ...,\n",
       "         [ 46,  91, 180],\n",
       "         [ 45,  89, 181],\n",
       "         [ 46,  90, 182]],\n",
       " \n",
       "        [[ 49,  94, 192],\n",
       "         [ 48,  93, 190],\n",
       "         [ 51,  93, 189],\n",
       "         ...,\n",
       "         [ 49,  94, 184],\n",
       "         [ 49,  91, 185],\n",
       "         [ 47,  92, 187]]], dtype=uint8),\n",
       " array([[[ 71,  88, 131],\n",
       "         [ 68,  84, 125],\n",
       "         [ 66,  83, 122],\n",
       "         ...,\n",
       "         [ 81,  89,  96],\n",
       "         [ 80,  87,  91],\n",
       "         [ 53,  60,  62]],\n",
       " \n",
       "        [[ 69,  85, 127],\n",
       "         [ 62,  78, 118],\n",
       "         [ 60,  75, 112],\n",
       "         ...,\n",
       "         [ 67,  74,  83],\n",
       "         [ 80,  88,  94],\n",
       "         [ 52,  59,  63]],\n",
       " \n",
       "        [[ 69,  83, 122],\n",
       "         [ 62,  77, 114],\n",
       "         [ 58,  72, 108],\n",
       "         ...,\n",
       "         [ 55,  64,  73],\n",
       "         [ 67,  75,  82],\n",
       "         [ 69,  75,  80]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[102, 119, 157],\n",
       "         [ 87, 104, 141],\n",
       "         [ 56,  71, 107],\n",
       "         ...,\n",
       "         [109, 119, 137],\n",
       "         [113, 123, 142],\n",
       "         [110, 121, 142]],\n",
       " \n",
       "        [[105, 121, 161],\n",
       "         [ 90, 108, 145],\n",
       "         [ 63,  81, 117],\n",
       "         ...,\n",
       "         [116, 125, 145],\n",
       "         [116, 127, 147],\n",
       "         [113, 125, 147]],\n",
       " \n",
       "        [[110, 128, 169],\n",
       "         [ 98, 117, 155],\n",
       "         [ 78,  96, 133],\n",
       "         ...,\n",
       "         [115, 126, 146],\n",
       "         [123, 134, 156],\n",
       "         [117, 130, 152]]], dtype=uint8),\n",
       " array([[[ 70,  65,  64],\n",
       "         [ 84,  79,  78],\n",
       "         [ 97,  92,  93],\n",
       "         ...,\n",
       "         [139, 141, 173],\n",
       "         [145, 145, 181],\n",
       "         [148, 148, 184]],\n",
       " \n",
       "        [[ 76,  71,  68],\n",
       "         [ 85,  80,  78],\n",
       "         [109, 105, 104],\n",
       "         ...,\n",
       "         [132, 133, 165],\n",
       "         [141, 141, 177],\n",
       "         [146, 146, 182]],\n",
       " \n",
       "        [[ 80,  77,  71],\n",
       "         [108, 105, 100],\n",
       "         [136, 133, 129],\n",
       "         ...,\n",
       "         [126, 127, 159],\n",
       "         [139, 140, 174],\n",
       "         [143, 143, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 132, 141],\n",
       "         [137, 142, 151],\n",
       "         [145, 149, 160],\n",
       "         ...,\n",
       "         [234, 233, 236],\n",
       "         [250, 252, 253],\n",
       "         [250, 252, 253]],\n",
       " \n",
       "        [[111, 116, 125],\n",
       "         [117, 122, 131],\n",
       "         [124, 128, 139],\n",
       "         ...,\n",
       "         [252, 251, 254],\n",
       "         [250, 252, 253],\n",
       "         [248, 250, 252]],\n",
       " \n",
       "        [[130, 135, 144],\n",
       "         [121, 126, 135],\n",
       "         [120, 124, 134],\n",
       "         ...,\n",
       "         [250, 249, 252],\n",
       "         [251, 253, 254],\n",
       "         [246, 248, 249]]], dtype=uint8),\n",
       " array([[[131, 134, 169],\n",
       "         [126, 129, 164],\n",
       "         [126, 128, 163],\n",
       "         ...,\n",
       "         [ 55,  53,  66],\n",
       "         [ 44,  44,  54],\n",
       "         [ 41,  40,  49]],\n",
       " \n",
       "        [[125, 128, 164],\n",
       "         [122, 124, 159],\n",
       "         [120, 122, 157],\n",
       "         ...,\n",
       "         [ 52,  52,  65],\n",
       "         [ 46,  45,  56],\n",
       "         [ 43,  42,  51]],\n",
       " \n",
       "        [[123, 123, 159],\n",
       "         [123, 124, 159],\n",
       "         [118, 117, 151],\n",
       "         ...,\n",
       "         [ 47,  48,  61],\n",
       "         [ 44,  43,  55],\n",
       "         [ 41,  39,  50]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 128,  48],\n",
       "         [243, 236,  97],\n",
       "         [243, 239,  68],\n",
       "         ...,\n",
       "         [ 66,  66,  98],\n",
       "         [ 67,  67,  98],\n",
       "         [ 71,  70, 100]],\n",
       " \n",
       "        [[104,  94,  63],\n",
       "         [189, 176,  97],\n",
       "         [238, 230, 112],\n",
       "         ...,\n",
       "         [ 68,  67,  99],\n",
       "         [ 68,  66,  97],\n",
       "         [ 73,  71, 101]],\n",
       " \n",
       "        [[190, 185, 183],\n",
       "         [114,  99,  73],\n",
       "         [153, 143,  90],\n",
       "         ...,\n",
       "         [ 79,  78, 110],\n",
       "         [ 76,  73, 104],\n",
       "         [ 79,  77, 106]]], dtype=uint8),\n",
       " array([[[128, 129, 167],\n",
       "         [125, 127, 163],\n",
       "         [125, 125, 161],\n",
       "         ...,\n",
       "         [ 34,  50,  76],\n",
       "         [ 27,  39,  63],\n",
       "         [  7,  18,  38]],\n",
       " \n",
       "        [[126, 128, 164],\n",
       "         [123, 125, 160],\n",
       "         [121, 122, 156],\n",
       "         ...,\n",
       "         [ 35,  49,  76],\n",
       "         [ 27,  39,  63],\n",
       "         [ 18,  28,  51]],\n",
       " \n",
       "        [[125, 127, 162],\n",
       "         [121, 123, 157],\n",
       "         [116, 119, 150],\n",
       "         ...,\n",
       "         [ 41,  53,  80],\n",
       "         [ 37,  48,  75],\n",
       "         [ 26,  35,  62]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 41,  50,  83],\n",
       "         [ 50,  58,  91],\n",
       "         [ 58,  63,  96],\n",
       "         ...,\n",
       "         [ 23,  38,  74],\n",
       "         [ 23,  39,  75],\n",
       "         [ 24,  40,  75]],\n",
       " \n",
       "        [[ 44,  54,  84],\n",
       "         [ 51,  60,  90],\n",
       "         [ 57,  63,  94],\n",
       "         ...,\n",
       "         [ 24,  41,  74],\n",
       "         [ 25,  42,  75],\n",
       "         [ 25,  42,  75]],\n",
       " \n",
       "        [[ 45,  56,  86],\n",
       "         [ 50,  60,  90],\n",
       "         [ 55,  63,  93],\n",
       "         ...,\n",
       "         [ 27,  44,  77],\n",
       "         [ 27,  44,  77],\n",
       "         [ 27,  44,  77]]], dtype=uint8),\n",
       " array([[[103, 124, 155],\n",
       "         [105, 126, 158],\n",
       "         [ 99, 119, 150],\n",
       "         ...,\n",
       "         [114, 140, 180],\n",
       "         [106, 131, 173],\n",
       "         [ 94, 115, 157]],\n",
       " \n",
       "        [[ 99, 123, 154],\n",
       "         [104, 128, 159],\n",
       "         [103, 123, 154],\n",
       "         ...,\n",
       "         [111, 137, 177],\n",
       "         [113, 139, 179],\n",
       "         [109, 134, 174]],\n",
       " \n",
       "        [[102, 124, 159],\n",
       "         [102, 124, 159],\n",
       "         [103, 123, 157],\n",
       "         ...,\n",
       "         [109, 135, 175],\n",
       "         [116, 141, 181],\n",
       "         [117, 142, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 90, 112, 154],\n",
       "         [103, 129, 166],\n",
       "         [110, 132, 167],\n",
       "         ...,\n",
       "         [106, 131, 173],\n",
       "         [105, 131, 171],\n",
       "         [106, 132, 172]],\n",
       " \n",
       "        [[ 87, 107, 154],\n",
       "         [ 92, 114, 156],\n",
       "         [109, 131, 172],\n",
       "         ...,\n",
       "         [106, 136, 177],\n",
       "         [108, 136, 177],\n",
       "         [106, 134, 175]],\n",
       " \n",
       "        [[ 95, 116, 163],\n",
       "         [ 87, 107, 154],\n",
       "         [ 98, 119, 164],\n",
       "         ...,\n",
       "         [107, 137, 178],\n",
       "         [113, 141, 182],\n",
       "         [113, 141, 182]]], dtype=uint8),\n",
       " array([[[ 81, 121, 173],\n",
       "         [ 80, 119, 169],\n",
       "         [ 94, 130, 179],\n",
       "         ...,\n",
       "         [ 80, 105, 136],\n",
       "         [ 76, 102, 132],\n",
       "         [ 87, 113, 143]],\n",
       " \n",
       "        [[ 92, 125, 174],\n",
       "         [103, 134, 183],\n",
       "         [112, 141, 187],\n",
       "         ...,\n",
       "         [ 76, 105, 140],\n",
       "         [ 77, 107, 139],\n",
       "         [ 68,  96, 128]],\n",
       " \n",
       "        [[ 84, 101, 128],\n",
       "         [ 85, 102, 128],\n",
       "         [ 82,  98, 124],\n",
       "         ...,\n",
       "         [ 76, 113, 151],\n",
       "         [ 69, 105, 142],\n",
       "         [ 64,  98, 132]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 196, 237],\n",
       "         [173, 199, 239],\n",
       "         [175, 201, 241],\n",
       "         ...,\n",
       "         [142, 179, 215],\n",
       "         [141, 178, 212],\n",
       "         [141, 168, 195]],\n",
       " \n",
       "        [[172, 197, 236],\n",
       "         [176, 202, 241],\n",
       "         [179, 205, 245],\n",
       "         ...,\n",
       "         [140, 178, 214],\n",
       "         [136, 172, 206],\n",
       "         [114, 135, 162]],\n",
       " \n",
       "        [[175, 198, 235],\n",
       "         [180, 205, 242],\n",
       "         [185, 211, 247],\n",
       "         ...,\n",
       "         [130, 169, 207],\n",
       "         [123, 160, 194],\n",
       "         [125, 142, 169]]], dtype=uint8),\n",
       " array([[[ 86, 120, 176],\n",
       "         [ 88, 125, 181],\n",
       "         [ 88, 126, 181],\n",
       "         ...,\n",
       "         [179, 207, 238],\n",
       "         [177, 205, 236],\n",
       "         [177, 204, 238]],\n",
       " \n",
       "        [[ 87, 121, 177],\n",
       "         [ 82, 118, 174],\n",
       "         [ 81, 121, 176],\n",
       "         ...,\n",
       "         [179, 207, 238],\n",
       "         [177, 205, 236],\n",
       "         [177, 205, 236]],\n",
       " \n",
       "        [[ 87, 115, 174],\n",
       "         [ 82, 115, 170],\n",
       "         [ 84, 116, 171],\n",
       "         ...,\n",
       "         [177, 202, 235],\n",
       "         [181, 206, 238],\n",
       "         [180, 205, 237]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 145, 197],\n",
       "         [112, 151, 203],\n",
       "         [112, 151, 203],\n",
       "         ...,\n",
       "         [ 99, 136, 192],\n",
       "         [ 94, 131, 187],\n",
       "         [ 93, 130, 186]],\n",
       " \n",
       "        [[107, 143, 194],\n",
       "         [111, 151, 200],\n",
       "         [114, 154, 203],\n",
       "         ...,\n",
       "         [ 97, 134, 190],\n",
       "         [ 96, 133, 189],\n",
       "         [ 94, 131, 187]],\n",
       " \n",
       "        [[108, 144, 194],\n",
       "         [112, 153, 202],\n",
       "         [117, 157, 206],\n",
       "         ...,\n",
       "         [100, 138, 192],\n",
       "         [ 94, 132, 186],\n",
       "         [100, 137, 191]]], dtype=uint8),\n",
       " array([[[174, 200, 235],\n",
       "         [174, 200, 236],\n",
       "         [170, 199, 234],\n",
       "         ...,\n",
       "         [ 98, 126, 173],\n",
       "         [ 99, 127, 173],\n",
       "         [ 98, 123, 166]],\n",
       " \n",
       "        [[174, 200, 236],\n",
       "         [172, 198, 234],\n",
       "         [169, 198, 234],\n",
       "         ...,\n",
       "         [101, 128, 174],\n",
       "         [100, 127, 173],\n",
       "         [101, 125, 169]],\n",
       " \n",
       "        [[176, 202, 236],\n",
       "         [170, 196, 230],\n",
       "         [169, 195, 231],\n",
       "         ...,\n",
       "         [107, 133, 176],\n",
       "         [105, 129, 171],\n",
       "         [100, 124, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74, 111, 171],\n",
       "         [ 80, 117, 177],\n",
       "         [ 84, 117, 173],\n",
       "         ...,\n",
       "         [102, 144, 189],\n",
       "         [103, 138, 184],\n",
       "         [104, 138, 182]],\n",
       " \n",
       "        [[ 75, 112, 171],\n",
       "         [ 77, 114, 174],\n",
       "         [ 89, 122, 178],\n",
       "         ...,\n",
       "         [104, 145, 190],\n",
       "         [104, 140, 185],\n",
       "         [107, 141, 185]],\n",
       " \n",
       "        [[ 74, 112, 174],\n",
       "         [ 75, 114, 176],\n",
       "         [ 87, 126, 183],\n",
       "         ...,\n",
       "         [108, 146, 191],\n",
       "         [106, 142, 187],\n",
       "         [108, 142, 186]]], dtype=uint8),\n",
       " array([[[195, 212, 254],\n",
       "         [195, 212, 253],\n",
       "         [197, 215, 253],\n",
       "         ...,\n",
       "         [135, 165, 226],\n",
       "         [130, 161, 222],\n",
       "         [127, 158, 219]],\n",
       " \n",
       "        [[186, 207, 252],\n",
       "         [189, 210, 255],\n",
       "         [193, 212, 254],\n",
       "         ...,\n",
       "         [135, 166, 225],\n",
       "         [130, 161, 222],\n",
       "         [127, 157, 219]],\n",
       " \n",
       "        [[180, 204, 253],\n",
       "         [183, 205, 254],\n",
       "         [182, 205, 253],\n",
       "         ...,\n",
       "         [131, 163, 222],\n",
       "         [129, 160, 220],\n",
       "         [128, 160, 220]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 179, 243],\n",
       "         [137, 173, 237],\n",
       "         [124, 161, 225],\n",
       "         ...,\n",
       "         [158, 192, 249],\n",
       "         [156, 194, 252],\n",
       "         [152, 190, 250]],\n",
       " \n",
       "        [[151, 183, 248],\n",
       "         [144, 179, 243],\n",
       "         [135, 169, 232],\n",
       "         ...,\n",
       "         [162, 196, 253],\n",
       "         [156, 194, 252],\n",
       "         [154, 193, 252]],\n",
       " \n",
       "        [[155, 184, 249],\n",
       "         [150, 181, 247],\n",
       "         [143, 178, 242],\n",
       "         ...,\n",
       "         [162, 197, 253],\n",
       "         [159, 195, 252],\n",
       "         [155, 192, 252]]], dtype=uint8),\n",
       " array([[[ 51,  56,  76],\n",
       "         [ 48,  54,  73],\n",
       "         [ 45,  50,  69],\n",
       "         ...,\n",
       "         [159, 159, 164],\n",
       "         [166, 167, 168],\n",
       "         [160, 162, 165]],\n",
       " \n",
       "        [[ 51,  58,  81],\n",
       "         [ 52,  58,  78],\n",
       "         [ 48,  55,  75],\n",
       "         ...,\n",
       "         [155, 157, 163],\n",
       "         [157, 160, 165],\n",
       "         [166, 168, 172]],\n",
       " \n",
       "        [[ 49,  57,  81],\n",
       "         [ 48,  58,  80],\n",
       "         [ 48,  57,  79],\n",
       "         ...,\n",
       "         [152, 155, 160],\n",
       "         [160, 163, 170],\n",
       "         [156, 159, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[153, 157, 169],\n",
       "         [155, 158, 166],\n",
       "         [152, 159, 162],\n",
       "         ...,\n",
       "         [201, 198, 194],\n",
       "         [200, 198, 194],\n",
       "         [210, 207, 201]],\n",
       " \n",
       "        [[154, 160, 173],\n",
       "         [153, 158, 166],\n",
       "         [155, 161, 166],\n",
       "         ...,\n",
       "         [203, 200, 195],\n",
       "         [201, 200, 195],\n",
       "         [208, 206, 200]],\n",
       " \n",
       "        [[155, 164, 176],\n",
       "         [157, 162, 172],\n",
       "         [158, 163, 172],\n",
       "         ...,\n",
       "         [215, 211, 204],\n",
       "         [201, 199, 194],\n",
       "         [200, 198, 196]]], dtype=uint8),\n",
       " array([[[ 25,  21,  22],\n",
       "         [ 68,  67,  69],\n",
       "         [129, 129, 130],\n",
       "         ...,\n",
       "         [ 43,  46,  66],\n",
       "         [ 39,  48,  67],\n",
       "         [ 37,  48,  66]],\n",
       " \n",
       "        [[ 30,  27,  27],\n",
       "         [ 88,  87,  89],\n",
       "         [145, 146, 150],\n",
       "         ...,\n",
       "         [ 41,  46,  65],\n",
       "         [ 40,  45,  66],\n",
       "         [ 44,  51,  69]],\n",
       " \n",
       "        [[ 29,  23,  24],\n",
       "         [102, 101, 103],\n",
       "         [143, 145, 150],\n",
       "         ...,\n",
       "         [ 41,  45,  65],\n",
       "         [ 38,  44,  65],\n",
       "         [ 44,  50,  70]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[204, 205, 203],\n",
       "         [204, 205, 203],\n",
       "         [203, 203, 203],\n",
       "         ...,\n",
       "         [ 67,  71,  87],\n",
       "         [ 90,  90, 105],\n",
       "         [112, 113, 124]],\n",
       " \n",
       "        [[207, 208, 206],\n",
       "         [209, 209, 207],\n",
       "         [206, 204, 204],\n",
       "         ...,\n",
       "         [105, 103, 118],\n",
       "         [122, 126, 134],\n",
       "         [134, 138, 146]],\n",
       " \n",
       "        [[210, 210, 209],\n",
       "         [211, 212, 209],\n",
       "         [203, 200, 200],\n",
       "         ...,\n",
       "         [136, 136, 149],\n",
       "         [133, 137, 147],\n",
       "         [151, 153, 160]]], dtype=uint8),\n",
       " array([[[ 99, 109, 118],\n",
       "         [ 72,  80,  90],\n",
       "         [ 64,  72,  80],\n",
       "         ...,\n",
       "         [ 86,  85,  91],\n",
       "         [ 92,  94, 100],\n",
       "         [ 97,  99, 107]],\n",
       " \n",
       "        [[ 79,  85,  91],\n",
       "         [ 66,  72,  77],\n",
       "         [ 61,  67,  72],\n",
       "         ...,\n",
       "         [ 84,  86,  94],\n",
       "         [ 83,  85,  93],\n",
       "         [ 92,  93, 103]],\n",
       " \n",
       "        [[ 71,  75,  80],\n",
       "         [ 64,  70,  75],\n",
       "         [ 65,  69,  74],\n",
       "         ...,\n",
       "         [ 87,  90, 100],\n",
       "         [ 90,  91, 101],\n",
       "         [ 91,  93, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 95, 114, 141],\n",
       "         [ 98, 113, 140],\n",
       "         [ 95, 111, 137],\n",
       "         ...,\n",
       "         [ 75,  84, 114],\n",
       "         [ 74,  82, 112],\n",
       "         [ 76,  87, 117]],\n",
       " \n",
       "        [[ 98, 117, 144],\n",
       "         [ 94, 115, 142],\n",
       "         [ 92, 113, 139],\n",
       "         ...,\n",
       "         [ 77,  87, 117],\n",
       "         [ 75,  86, 118],\n",
       "         [ 78,  90, 122]],\n",
       " \n",
       "        [[ 98, 119, 146],\n",
       "         [ 97, 117, 144],\n",
       "         [ 98, 117, 145],\n",
       "         ...,\n",
       "         [ 76,  89, 120],\n",
       "         [ 78,  91, 123],\n",
       "         [ 79,  95, 128]]], dtype=uint8),\n",
       " array([[[116, 118, 129],\n",
       "         [113, 116, 124],\n",
       "         [105, 108, 116],\n",
       "         ...,\n",
       "         [ 58,  62,  65],\n",
       "         [ 58,  63,  68],\n",
       "         [ 54,  62,  67]],\n",
       " \n",
       "        [[110, 114, 124],\n",
       "         [100, 102, 113],\n",
       "         [ 97,  99, 108],\n",
       "         ...,\n",
       "         [ 56,  59,  63],\n",
       "         [ 57,  61,  65],\n",
       "         [ 57,  62,  67]],\n",
       " \n",
       "        [[110, 114, 126],\n",
       "         [103, 105, 116],\n",
       "         [ 97,  99, 109],\n",
       "         ...,\n",
       "         [ 55,  59,  63],\n",
       "         [ 55,  58,  62],\n",
       "         [ 65,  68,  73]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 85,  95, 125],\n",
       "         [ 82,  93, 123],\n",
       "         [ 76,  88, 117],\n",
       "         ...,\n",
       "         [ 90, 100, 130],\n",
       "         [ 93, 105, 133],\n",
       "         [ 95, 107, 134]],\n",
       " \n",
       "        [[ 84,  98, 127],\n",
       "         [ 82,  97, 127],\n",
       "         [ 78,  93, 122],\n",
       "         ...,\n",
       "         [ 93, 105, 133],\n",
       "         [ 95, 107, 135],\n",
       "         [ 94, 108, 135]],\n",
       " \n",
       "        [[ 85, 101, 132],\n",
       "         [ 80,  99, 130],\n",
       "         [ 79,  94, 126],\n",
       "         ...,\n",
       "         [ 94, 108, 136],\n",
       "         [ 94, 111, 138],\n",
       "         [ 92, 111, 135]]], dtype=uint8),\n",
       " array([[[ 63,  72, 105],\n",
       "         [ 63,  72, 104],\n",
       "         [ 62,  69,  99],\n",
       "         ...,\n",
       "         [200, 196, 202],\n",
       "         [206, 202, 210],\n",
       "         [201, 198, 204]],\n",
       " \n",
       "        [[ 64,  73, 102],\n",
       "         [ 61,  70, 101],\n",
       "         [ 59,  67, 100],\n",
       "         ...,\n",
       "         [203, 200, 210],\n",
       "         [180, 181, 193],\n",
       "         [191, 190, 203]],\n",
       " \n",
       "        [[ 56,  66,  98],\n",
       "         [ 60,  68,  99],\n",
       "         [ 54,  62,  93],\n",
       "         ...,\n",
       "         [185, 183, 198],\n",
       "         [188, 187, 199],\n",
       "         [185, 184, 199]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[142, 150, 166],\n",
       "         [142, 148, 163],\n",
       "         [146, 146, 161],\n",
       "         ...,\n",
       "         [191, 193, 204],\n",
       "         [196, 198, 207],\n",
       "         [204, 204, 213]],\n",
       " \n",
       "        [[155, 162, 180],\n",
       "         [151, 158, 175],\n",
       "         [155, 159, 173],\n",
       "         ...,\n",
       "         [189, 190, 202],\n",
       "         [199, 201, 210],\n",
       "         [208, 208, 217]],\n",
       " \n",
       "        [[157, 164, 182],\n",
       "         [158, 166, 182],\n",
       "         [158, 165, 181],\n",
       "         ...,\n",
       "         [195, 196, 207],\n",
       "         [196, 196, 208],\n",
       "         [202, 203, 213]]], dtype=uint8),\n",
       " array([[[134, 141, 180],\n",
       "         [132, 139, 178],\n",
       "         [129, 137, 175],\n",
       "         ...,\n",
       "         [ 76,  79,  93],\n",
       "         [ 70,  73,  88],\n",
       "         [ 70,  73,  87]],\n",
       " \n",
       "        [[128, 137, 173],\n",
       "         [127, 136, 172],\n",
       "         [123, 133, 169],\n",
       "         ...,\n",
       "         [ 62,  65,  79],\n",
       "         [ 64,  66,  80],\n",
       "         [ 58,  60,  74]],\n",
       " \n",
       "        [[124, 136, 169],\n",
       "         [122, 134, 166],\n",
       "         [122, 132, 164],\n",
       "         ...,\n",
       "         [ 53,  53,  65],\n",
       "         [ 59,  59,  72],\n",
       "         [ 56,  56,  69]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  60,  90],\n",
       "         [ 51,  58,  89],\n",
       "         [ 50,  57,  87],\n",
       "         ...,\n",
       "         [112, 120, 150],\n",
       "         [104, 112, 142],\n",
       "         [ 97, 107, 137]],\n",
       " \n",
       "        [[ 52,  57,  88],\n",
       "         [ 55,  60,  91],\n",
       "         [ 54,  58,  89],\n",
       "         ...,\n",
       "         [105, 115, 145],\n",
       "         [105, 115, 146],\n",
       "         [103, 114, 144]],\n",
       " \n",
       "        [[ 56,  61,  94],\n",
       "         [ 56,  61,  94],\n",
       "         [ 55,  59,  92],\n",
       "         ...,\n",
       "         [103, 113, 143],\n",
       "         [108, 119, 149],\n",
       "         [111, 122, 152]]], dtype=uint8),\n",
       " array([[[171, 149, 191],\n",
       "         [172, 151, 190],\n",
       "         [173, 154, 188],\n",
       "         ...,\n",
       "         [235, 216, 236],\n",
       "         [231, 213, 234],\n",
       "         [232, 215, 236]],\n",
       " \n",
       "        [[173, 149, 190],\n",
       "         [175, 151, 191],\n",
       "         [173, 152, 191],\n",
       "         ...,\n",
       "         [233, 216, 237],\n",
       "         [229, 212, 233],\n",
       "         [230, 213, 234]],\n",
       " \n",
       "        [[173, 150, 188],\n",
       "         [176, 152, 192],\n",
       "         [171, 147, 189],\n",
       "         ...,\n",
       "         [233, 216, 237],\n",
       "         [233, 217, 238],\n",
       "         [229, 214, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[215, 195, 224],\n",
       "         [218, 199, 227],\n",
       "         [223, 206, 232],\n",
       "         ...,\n",
       "         [204, 182, 211],\n",
       "         [210, 188, 216],\n",
       "         [218, 196, 224]],\n",
       " \n",
       "        [[213, 192, 224],\n",
       "         [217, 197, 226],\n",
       "         [219, 201, 227],\n",
       "         ...,\n",
       "         [208, 187, 215],\n",
       "         [216, 194, 223],\n",
       "         [221, 200, 225]],\n",
       " \n",
       "        [[215, 191, 225],\n",
       "         [218, 197, 228],\n",
       "         [220, 201, 229],\n",
       "         ...,\n",
       "         [212, 191, 218],\n",
       "         [218, 197, 223],\n",
       "         [223, 202, 227]]], dtype=uint8),\n",
       " array([[[226, 211, 238],\n",
       "         [223, 207, 235],\n",
       "         [227, 213, 238],\n",
       "         ...,\n",
       "         [214, 197, 218],\n",
       "         [217, 200, 222],\n",
       "         [215, 197, 221]],\n",
       " \n",
       "        [[227, 213, 237],\n",
       "         [225, 209, 236],\n",
       "         [226, 212, 237],\n",
       "         ...,\n",
       "         [213, 194, 214],\n",
       "         [220, 201, 222],\n",
       "         [217, 197, 221]],\n",
       " \n",
       "        [[225, 212, 237],\n",
       "         [225, 212, 238],\n",
       "         [227, 214, 240],\n",
       "         ...,\n",
       "         [211, 191, 209],\n",
       "         [215, 196, 215],\n",
       "         [214, 195, 216]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[228, 209, 237],\n",
       "         [226, 210, 234],\n",
       "         [224, 207, 234],\n",
       "         ...,\n",
       "         [218, 200, 222],\n",
       "         [226, 209, 230],\n",
       "         [181, 162, 173]],\n",
       " \n",
       "        [[229, 210, 235],\n",
       "         [226, 209, 235],\n",
       "         [226, 209, 236],\n",
       "         ...,\n",
       "         [218, 202, 225],\n",
       "         [224, 208, 229],\n",
       "         [178, 158, 172]],\n",
       " \n",
       "        [[229, 209, 234],\n",
       "         [226, 209, 236],\n",
       "         [225, 207, 235],\n",
       "         ...,\n",
       "         [222, 206, 230],\n",
       "         [224, 208, 229],\n",
       "         [177, 157, 171]]], dtype=uint8),\n",
       " array([[[143, 175, 216],\n",
       "         [139, 168, 212],\n",
       "         [136, 163, 207],\n",
       "         ...,\n",
       "         [158, 191, 236],\n",
       "         [156, 190, 236],\n",
       "         [152, 189, 233]],\n",
       " \n",
       "        [[145, 177, 218],\n",
       "         [143, 172, 216],\n",
       "         [142, 169, 213],\n",
       "         ...,\n",
       "         [157, 190, 235],\n",
       "         [155, 189, 235],\n",
       "         [151, 188, 232]],\n",
       " \n",
       "        [[152, 183, 224],\n",
       "         [147, 176, 220],\n",
       "         [143, 172, 216],\n",
       "         ...,\n",
       "         [151, 184, 229],\n",
       "         [149, 183, 229],\n",
       "         [148, 186, 230]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[194, 227, 253],\n",
       "         [194, 228, 254],\n",
       "         [196, 226, 253],\n",
       "         ...,\n",
       "         [169, 205, 241],\n",
       "         [168, 206, 241],\n",
       "         [170, 208, 242]],\n",
       " \n",
       "        [[194, 227, 253],\n",
       "         [195, 226, 253],\n",
       "         [195, 225, 252],\n",
       "         ...,\n",
       "         [168, 205, 241],\n",
       "         [167, 205, 240],\n",
       "         [169, 207, 242]],\n",
       " \n",
       "        [[196, 227, 254],\n",
       "         [198, 228, 255],\n",
       "         [198, 228, 254],\n",
       "         ...,\n",
       "         [171, 207, 244],\n",
       "         [170, 208, 243],\n",
       "         [171, 209, 244]]], dtype=uint8),\n",
       " array([[[ 29,  60, 111],\n",
       "         [ 37,  63, 112],\n",
       "         [ 25,  47,  95],\n",
       "         ...,\n",
       "         [161, 194, 230],\n",
       "         [164, 193, 230],\n",
       "         [168, 197, 233]],\n",
       " \n",
       "        [[ 39,  68, 117],\n",
       "         [ 24,  51,  98],\n",
       "         [ 27,  50,  96],\n",
       "         ...,\n",
       "         [161, 192, 231],\n",
       "         [162, 193, 232],\n",
       "         [162, 193, 233]],\n",
       " \n",
       "        [[ 42,  68, 115],\n",
       "         [ 24,  50,  96],\n",
       "         [ 35,  60, 104],\n",
       "         ...,\n",
       "         [151, 181, 224],\n",
       "         [151, 185, 225],\n",
       "         [150, 184, 224]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 87, 138, 190],\n",
       "         [ 92, 143, 195],\n",
       "         [ 99, 147, 199],\n",
       "         ...,\n",
       "         [111, 155, 200],\n",
       "         [115, 155, 200],\n",
       "         [106, 144, 189]],\n",
       " \n",
       "        [[ 89, 142, 193],\n",
       "         [ 91, 142, 194],\n",
       "         [105, 155, 207],\n",
       "         ...,\n",
       "         [107, 152, 200],\n",
       "         [104, 146, 194],\n",
       "         [ 95, 137, 185]],\n",
       " \n",
       "        [[ 99, 152, 203],\n",
       "         [ 88, 142, 192],\n",
       "         [100, 150, 202],\n",
       "         ...,\n",
       "         [105, 152, 201],\n",
       "         [103, 148, 197],\n",
       "         [ 81, 125, 175]]], dtype=uint8),\n",
       " array([[[117, 162, 213],\n",
       "         [113, 158, 209],\n",
       "         [115, 158, 208],\n",
       "         ...,\n",
       "         [ 46,  79, 124],\n",
       "         [ 52,  85, 128],\n",
       "         [ 38,  69, 108]],\n",
       " \n",
       "        [[112, 157, 208],\n",
       "         [109, 155, 203],\n",
       "         [104, 146, 195],\n",
       "         ...,\n",
       "         [ 33,  66, 109],\n",
       "         [ 49,  80, 122],\n",
       "         [ 44,  74, 112]],\n",
       " \n",
       "        [[108, 155, 204],\n",
       "         [104, 150, 198],\n",
       "         [ 94, 137, 185],\n",
       "         ...,\n",
       "         [ 25,  56,  99],\n",
       "         [ 37,  67, 107],\n",
       "         [ 41,  70, 107]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 55, 108, 164],\n",
       "         [ 51, 101, 156],\n",
       "         [ 68, 115, 169],\n",
       "         ...,\n",
       "         [ 68, 111, 162],\n",
       "         [ 68, 105, 156],\n",
       "         [ 55,  89, 139]],\n",
       " \n",
       "        [[ 53, 110, 168],\n",
       "         [ 47,  99, 159],\n",
       "         [ 55, 103, 161],\n",
       "         ...,\n",
       "         [ 74, 117, 170],\n",
       "         [ 64, 103, 155],\n",
       "         [ 55,  90, 140]],\n",
       " \n",
       "        [[ 53, 109, 168],\n",
       "         [ 52, 104, 164],\n",
       "         [ 60, 108, 166],\n",
       "         ...,\n",
       "         [ 77, 120, 173],\n",
       "         [ 62, 101, 153],\n",
       "         [ 58,  92, 142]]], dtype=uint8),\n",
       " array([[[214, 230, 252],\n",
       "         [215, 231, 251],\n",
       "         [218, 233, 252],\n",
       "         ...,\n",
       "         [186, 205, 240],\n",
       "         [187, 203, 240],\n",
       "         [185, 201, 238]],\n",
       " \n",
       "        [[215, 232, 255],\n",
       "         [217, 232, 254],\n",
       "         [219, 234, 252],\n",
       "         ...,\n",
       "         [182, 202, 239],\n",
       "         [189, 207, 243],\n",
       "         [179, 197, 235]],\n",
       " \n",
       "        [[211, 229, 251],\n",
       "         [215, 232, 252],\n",
       "         [218, 233, 252],\n",
       "         ...,\n",
       "         [172, 194, 235],\n",
       "         [174, 193, 231],\n",
       "         [172, 194, 232]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[218, 231, 252],\n",
       "         [214, 226, 250],\n",
       "         [212, 224, 250],\n",
       "         ...,\n",
       "         [213, 228, 254],\n",
       "         [216, 229, 252],\n",
       "         [214, 228, 250]],\n",
       " \n",
       "        [[221, 234, 254],\n",
       "         [217, 229, 252],\n",
       "         [221, 232, 253],\n",
       "         ...,\n",
       "         [215, 229, 252],\n",
       "         [217, 231, 253],\n",
       "         [217, 231, 254]],\n",
       " \n",
       "        [[230, 238, 255],\n",
       "         [230, 237, 255],\n",
       "         [227, 237, 255],\n",
       "         ...,\n",
       "         [213, 226, 252],\n",
       "         [217, 230, 255],\n",
       "         [220, 234, 253]]], dtype=uint8),\n",
       " array([[[ 59,  87, 128],\n",
       "         [ 62,  87, 131],\n",
       "         [ 58,  83, 127],\n",
       "         ...,\n",
       "         [155, 190, 230],\n",
       "         [156, 191, 231],\n",
       "         [157, 192, 232]],\n",
       " \n",
       "        [[ 62,  92, 133],\n",
       "         [ 55,  83, 126],\n",
       "         [ 47,  74, 118],\n",
       "         ...,\n",
       "         [156, 191, 231],\n",
       "         [158, 193, 233],\n",
       "         [159, 194, 234]],\n",
       " \n",
       "        [[ 62,  94, 136],\n",
       "         [ 52,  83, 126],\n",
       "         [ 38,  66, 110],\n",
       "         ...,\n",
       "         [157, 192, 232],\n",
       "         [158, 193, 233],\n",
       "         [160, 195, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73, 121, 169],\n",
       "         [ 84, 132, 180],\n",
       "         [ 92, 140, 188],\n",
       "         ...,\n",
       "         [157, 196, 237],\n",
       "         [170, 206, 243],\n",
       "         [181, 213, 249]],\n",
       " \n",
       "        [[ 75, 123, 171],\n",
       "         [ 88, 136, 184],\n",
       "         [ 95, 143, 191],\n",
       "         ...,\n",
       "         [160, 199, 240],\n",
       "         [173, 208, 246],\n",
       "         [182, 214, 250]],\n",
       " \n",
       "        [[ 79, 127, 175],\n",
       "         [ 92, 140, 188],\n",
       "         [ 99, 147, 195],\n",
       "         ...,\n",
       "         [162, 200, 241],\n",
       "         [173, 209, 247],\n",
       "         [185, 217, 253]]], dtype=uint8),\n",
       " array([[[132, 171, 206],\n",
       "         [131, 172, 206],\n",
       "         [132, 171, 206],\n",
       "         ...,\n",
       "         [158, 182, 211],\n",
       "         [153, 180, 210],\n",
       "         [153, 181, 211]],\n",
       " \n",
       "        [[131, 170, 205],\n",
       "         [129, 169, 204],\n",
       "         [129, 169, 205],\n",
       "         ...,\n",
       "         [155, 179, 210],\n",
       "         [157, 180, 211],\n",
       "         [156, 178, 209]],\n",
       " \n",
       "        [[133, 169, 205],\n",
       "         [135, 173, 207],\n",
       "         [137, 174, 208],\n",
       "         ...,\n",
       "         [152, 175, 207],\n",
       "         [157, 179, 210],\n",
       "         [159, 180, 211]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 156, 190],\n",
       "         [125, 162, 201],\n",
       "         [135, 171, 207],\n",
       "         ...,\n",
       "         [143, 170, 207],\n",
       "         [140, 171, 210],\n",
       "         [161, 186, 220]],\n",
       " \n",
       "        [[111, 146, 185],\n",
       "         [117, 155, 193],\n",
       "         [129, 165, 201],\n",
       "         ...,\n",
       "         [130, 156, 195],\n",
       "         [150, 177, 215],\n",
       "         [163, 188, 222]],\n",
       " \n",
       "        [[103, 139, 179],\n",
       "         [112, 147, 187],\n",
       "         [123, 160, 198],\n",
       "         ...,\n",
       "         [118, 143, 183],\n",
       "         [141, 169, 210],\n",
       "         [157, 183, 217]]], dtype=uint8),\n",
       " array([[[ 61,  93, 159],\n",
       "         [ 64,  96, 163],\n",
       "         [ 61,  93, 158],\n",
       "         ...,\n",
       "         [150, 192, 226],\n",
       "         [ 99, 138, 190],\n",
       "         [ 67,  91, 135]],\n",
       " \n",
       "        [[ 65,  94, 161],\n",
       "         [ 64,  94, 159],\n",
       "         [ 66,  94, 157],\n",
       "         ...,\n",
       "         [169, 205, 233],\n",
       "         [131, 163, 204],\n",
       "         [ 75,  96, 146]],\n",
       " \n",
       "        [[ 65,  93, 158],\n",
       "         [ 65,  92, 157],\n",
       "         [ 64,  94, 153],\n",
       "         ...,\n",
       "         [173, 204, 228],\n",
       "         [151, 184, 216],\n",
       "         [102, 126, 179]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[185, 218, 251],\n",
       "         [201, 232, 255],\n",
       "         [201, 232, 254],\n",
       "         ...,\n",
       "         [155, 193, 244],\n",
       "         [165, 200, 247],\n",
       "         [171, 207, 250]],\n",
       " \n",
       "        [[180, 212, 254],\n",
       "         [191, 224, 254],\n",
       "         [200, 231, 255],\n",
       "         ...,\n",
       "         [158, 195, 246],\n",
       "         [175, 205, 250],\n",
       "         [186, 216, 254]],\n",
       " \n",
       "        [[177, 210, 254],\n",
       "         [182, 216, 252],\n",
       "         [196, 227, 255],\n",
       "         ...,\n",
       "         [156, 190, 243],\n",
       "         [173, 204, 249],\n",
       "         [190, 217, 253]]], dtype=uint8),\n",
       " array([[[ 17,  16,  25],\n",
       "         [ 16,  15,  24],\n",
       "         [ 17,  16,  25],\n",
       "         ...,\n",
       "         [155, 186, 209],\n",
       "         [165, 192, 213],\n",
       "         [169, 196, 216]],\n",
       " \n",
       "        [[ 17,  16,  25],\n",
       "         [ 15,  14,  23],\n",
       "         [ 14,  13,  22],\n",
       "         ...,\n",
       "         [159, 190, 211],\n",
       "         [169, 196, 217],\n",
       "         [172, 199, 220]],\n",
       " \n",
       "        [[ 14,  13,  22],\n",
       "         [ 16,  15,  24],\n",
       "         [ 18,  16,  26],\n",
       "         ...,\n",
       "         [157, 187, 209],\n",
       "         [169, 196, 217],\n",
       "         [170, 197, 218]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 117, 142],\n",
       "         [ 98, 122, 148],\n",
       "         [ 98, 128, 157],\n",
       "         ...,\n",
       "         [130, 169, 201],\n",
       "         [133, 171, 202],\n",
       "         [135, 173, 203]],\n",
       " \n",
       "        [[102, 125, 150],\n",
       "         [103, 127, 156],\n",
       "         [100, 129, 159],\n",
       "         ...,\n",
       "         [132, 170, 202],\n",
       "         [133, 171, 202],\n",
       "         [140, 178, 208]],\n",
       " \n",
       "        [[ 96, 120, 148],\n",
       "         [103, 130, 161],\n",
       "         [102, 130, 164],\n",
       "         ...,\n",
       "         [130, 169, 200],\n",
       "         [138, 176, 206],\n",
       "         [139, 176, 206]]], dtype=uint8),\n",
       " array([[[85, 80, 81],\n",
       "         [85, 79, 80],\n",
       "         [83, 77, 78],\n",
       "         ...,\n",
       "         [38, 42, 40],\n",
       "         [38, 41, 39],\n",
       "         [39, 41, 39]],\n",
       " \n",
       "        [[85, 78, 78],\n",
       "         [86, 78, 78],\n",
       "         [85, 77, 77],\n",
       "         ...,\n",
       "         [39, 42, 40],\n",
       "         [36, 40, 38],\n",
       "         [35, 39, 38]],\n",
       " \n",
       "        [[84, 76, 76],\n",
       "         [83, 75, 75],\n",
       "         [82, 74, 74],\n",
       "         ...,\n",
       "         [35, 39, 34],\n",
       "         [34, 39, 37],\n",
       "         [34, 41, 39]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[55, 53, 53],\n",
       "         [55, 53, 53],\n",
       "         [57, 52, 53],\n",
       "         ...,\n",
       "         [48, 48, 48],\n",
       "         [47, 47, 47],\n",
       "         [46, 46, 46]],\n",
       " \n",
       "        [[57, 55, 55],\n",
       "         [57, 55, 55],\n",
       "         [57, 55, 55],\n",
       "         ...,\n",
       "         [49, 50, 48],\n",
       "         [48, 49, 47],\n",
       "         [47, 48, 46]],\n",
       " \n",
       "        [[58, 56, 56],\n",
       "         [58, 56, 56],\n",
       "         [58, 56, 57],\n",
       "         ...,\n",
       "         [49, 50, 48],\n",
       "         [49, 50, 48],\n",
       "         [49, 50, 48]]], dtype=uint8),\n",
       " array([[[113, 133, 168],\n",
       "         [113, 132, 169],\n",
       "         [114, 133, 168],\n",
       "         ...,\n",
       "         [ 92, 115, 143],\n",
       "         [ 77,  97, 129],\n",
       "         [ 55,  73, 106]],\n",
       " \n",
       "        [[114, 135, 169],\n",
       "         [111, 130, 167],\n",
       "         [112, 131, 164],\n",
       "         ...,\n",
       "         [ 93, 115, 143],\n",
       "         [ 78,  98, 130],\n",
       "         [ 57,  75, 108]],\n",
       " \n",
       "        [[112, 132, 167],\n",
       "         [109, 128, 164],\n",
       "         [112, 132, 163],\n",
       "         ...,\n",
       "         [ 97, 119, 147],\n",
       "         [ 79,  99, 131],\n",
       "         [ 61,  79, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[145, 165, 192],\n",
       "         [140, 160, 185],\n",
       "         [141, 158, 180],\n",
       "         ...,\n",
       "         [114, 136, 168],\n",
       "         [107, 132, 165],\n",
       "         [ 99, 126, 160]],\n",
       " \n",
       "        [[147, 168, 195],\n",
       "         [143, 163, 188],\n",
       "         [144, 162, 184],\n",
       "         ...,\n",
       "         [116, 138, 170],\n",
       "         [110, 135, 168],\n",
       "         [102, 129, 163]],\n",
       " \n",
       "        [[148, 169, 196],\n",
       "         [148, 168, 193],\n",
       "         [148, 165, 187],\n",
       "         ...,\n",
       "         [119, 141, 173],\n",
       "         [113, 138, 171],\n",
       "         [102, 130, 164]]], dtype=uint8),\n",
       " array([[[ 38,  74, 129],\n",
       "         [ 35,  73, 128],\n",
       "         [ 26,  66, 121],\n",
       "         ...,\n",
       "         [ 70, 117, 170],\n",
       "         [ 69, 117, 169],\n",
       "         [ 64, 111, 165]],\n",
       " \n",
       "        [[ 32,  70, 129],\n",
       "         [ 28,  66, 125],\n",
       "         [ 27,  64, 124],\n",
       "         ...,\n",
       "         [ 66, 114, 166],\n",
       "         [ 68, 116, 168],\n",
       "         [ 66, 113, 167]],\n",
       " \n",
       "        [[ 31,  72, 131],\n",
       "         [ 26,  66, 126],\n",
       "         [ 29,  66, 126],\n",
       "         ...,\n",
       "         [ 60, 107, 161],\n",
       "         [ 64, 110, 164],\n",
       "         [ 65, 112, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 50,  93, 147],\n",
       "         [ 53,  95, 149],\n",
       "         [ 45,  87, 142],\n",
       "         ...,\n",
       "         [ 77, 123, 175],\n",
       "         [ 81, 128, 180],\n",
       "         [ 83, 131, 183]],\n",
       " \n",
       "        [[ 49,  92, 146],\n",
       "         [ 56, 101, 154],\n",
       "         [ 61, 108, 162],\n",
       "         ...,\n",
       "         [ 70, 118, 170],\n",
       "         [ 81, 128, 180],\n",
       "         [ 79, 128, 181]],\n",
       " \n",
       "        [[ 46,  88, 145],\n",
       "         [ 56, 101, 155],\n",
       "         [ 66, 112, 164],\n",
       "         ...,\n",
       "         [ 79, 127, 180],\n",
       "         [ 81, 129, 181],\n",
       "         [ 79, 127, 178]]], dtype=uint8),\n",
       " array([[[ 81, 117, 165],\n",
       "         [ 77, 113, 161],\n",
       "         [ 78, 111, 160],\n",
       "         ...,\n",
       "         [118, 156, 195],\n",
       "         [115, 154, 192],\n",
       "         [122, 159, 197]],\n",
       " \n",
       "        [[ 77, 112, 162],\n",
       "         [ 75, 111, 159],\n",
       "         [ 75, 111, 159],\n",
       "         ...,\n",
       "         [116, 153, 191],\n",
       "         [115, 152, 190],\n",
       "         [119, 156, 194]],\n",
       " \n",
       "        [[ 77, 112, 162],\n",
       "         [ 73, 110, 159],\n",
       "         [ 71, 109, 155],\n",
       "         ...,\n",
       "         [118, 155, 192],\n",
       "         [108, 144, 183],\n",
       "         [114, 150, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[108, 147, 195],\n",
       "         [ 96, 134, 182],\n",
       "         [ 82, 118, 166],\n",
       "         ...,\n",
       "         [ 93, 138, 181],\n",
       "         [ 90, 138, 180],\n",
       "         [ 89, 134, 177]],\n",
       " \n",
       "        [[ 99, 138, 186],\n",
       "         [ 98, 138, 186],\n",
       "         [ 88, 126, 174],\n",
       "         ...,\n",
       "         [ 97, 141, 185],\n",
       "         [ 95, 140, 183],\n",
       "         [ 95, 140, 183]],\n",
       " \n",
       "        [[ 95, 135, 182],\n",
       "         [ 91, 131, 179],\n",
       "         [ 89, 127, 176],\n",
       "         ...,\n",
       "         [ 94, 139, 182],\n",
       "         [ 95, 140, 183],\n",
       "         [ 96, 141, 184]]], dtype=uint8),\n",
       " array([[[ 90, 105, 111],\n",
       "         [ 72,  86,  89],\n",
       "         [ 67,  78,  82],\n",
       "         ...,\n",
       "         [139, 143, 144],\n",
       "         [148, 152, 157],\n",
       "         [152, 156, 161]],\n",
       " \n",
       "        [[ 75,  87,  91],\n",
       "         [ 63,  75,  80],\n",
       "         [ 61,  73,  80],\n",
       "         ...,\n",
       "         [140, 144, 149],\n",
       "         [144, 148, 153],\n",
       "         [152, 156, 161]],\n",
       " \n",
       "        [[ 65,  76,  80],\n",
       "         [ 73,  85,  93],\n",
       "         [ 78,  92, 105],\n",
       "         ...,\n",
       "         [137, 142, 150],\n",
       "         [143, 149, 157],\n",
       "         [147, 152, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 136, 167],\n",
       "         [107, 133, 169],\n",
       "         [108, 134, 171],\n",
       "         ...,\n",
       "         [102, 123, 161],\n",
       "         [ 99, 120, 158],\n",
       "         [ 97, 118, 156]],\n",
       " \n",
       "        [[113, 136, 168],\n",
       "         [109, 135, 171],\n",
       "         [110, 136, 173],\n",
       "         ...,\n",
       "         [103, 125, 166],\n",
       "         [102, 123, 163],\n",
       "         [100, 121, 159]],\n",
       " \n",
       "        [[114, 135, 167],\n",
       "         [113, 138, 173],\n",
       "         [112, 138, 175],\n",
       "         ...,\n",
       "         [103, 125, 166],\n",
       "         [101, 123, 164],\n",
       "         [100, 122, 163]]], dtype=uint8),\n",
       " array([[[ 89, 100, 118],\n",
       "         [ 84,  93, 113],\n",
       "         [ 75,  86, 106],\n",
       "         ...,\n",
       "         [178, 180, 184],\n",
       "         [187, 188, 189],\n",
       "         [188, 189, 189]],\n",
       " \n",
       "        [[ 84,  95, 117],\n",
       "         [ 76,  85, 108],\n",
       "         [ 74,  81, 106],\n",
       "         ...,\n",
       "         [174, 177, 184],\n",
       "         [175, 178, 186],\n",
       "         [182, 185, 189]],\n",
       " \n",
       "        [[ 77,  89, 113],\n",
       "         [ 74,  81, 104],\n",
       "         [ 70,  76, 102],\n",
       "         ...,\n",
       "         [167, 172, 182],\n",
       "         [172, 177, 187],\n",
       "         [176, 180, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[171, 172, 187],\n",
       "         [162, 165, 182],\n",
       "         [144, 147, 163],\n",
       "         ...,\n",
       "         [164, 165, 177],\n",
       "         [167, 167, 179],\n",
       "         [169, 170, 180]],\n",
       " \n",
       "        [[170, 173, 188],\n",
       "         [162, 166, 184],\n",
       "         [155, 160, 178],\n",
       "         ...,\n",
       "         [163, 165, 178],\n",
       "         [169, 171, 181],\n",
       "         [170, 171, 181]],\n",
       " \n",
       "        [[172, 175, 190],\n",
       "         [161, 167, 185],\n",
       "         [156, 161, 180],\n",
       "         ...,\n",
       "         [165, 167, 180],\n",
       "         [169, 170, 182],\n",
       "         [173, 175, 187]]], dtype=uint8),\n",
       " array([[[128, 140, 147],\n",
       "         [133, 144, 151],\n",
       "         [132, 144, 154],\n",
       "         ...,\n",
       "         [ 99, 110, 124],\n",
       "         [109, 119, 128],\n",
       "         [118, 130, 136]],\n",
       " \n",
       "        [[126, 139, 145],\n",
       "         [127, 141, 149],\n",
       "         [127, 142, 152],\n",
       "         ...,\n",
       "         [ 93, 105, 118],\n",
       "         [103, 113, 126],\n",
       "         [113, 124, 133]],\n",
       " \n",
       "        [[127, 139, 146],\n",
       "         [124, 137, 148],\n",
       "         [124, 137, 148],\n",
       "         ...,\n",
       "         [ 83,  97, 113],\n",
       "         [ 91, 105, 121],\n",
       "         [104, 116, 129]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[106, 122, 140],\n",
       "         [115, 131, 148],\n",
       "         [121, 137, 155],\n",
       "         ...,\n",
       "         [170, 174, 178],\n",
       "         [136, 139, 147],\n",
       "         [180, 178, 167]],\n",
       " \n",
       "        [[113, 132, 150],\n",
       "         [118, 137, 155],\n",
       "         [124, 141, 160],\n",
       "         ...,\n",
       "         [173, 180, 183],\n",
       "         [140, 146, 156],\n",
       "         [154, 152, 155]],\n",
       " \n",
       "        [[123, 142, 160],\n",
       "         [128, 147, 165],\n",
       "         [131, 150, 168],\n",
       "         ...,\n",
       "         [175, 182, 186],\n",
       "         [150, 155, 166],\n",
       "         [125, 132, 143]]], dtype=uint8),\n",
       " array([[[ 77,  88, 102],\n",
       "         [ 72,  81,  98],\n",
       "         [ 66,  73,  92],\n",
       "         ...,\n",
       "         [105, 114, 128],\n",
       "         [108, 117, 134],\n",
       "         [109, 121, 137]],\n",
       " \n",
       "        [[ 76,  86, 103],\n",
       "         [ 68,  80,  98],\n",
       "         [ 67,  79,  97],\n",
       "         ...,\n",
       "         [ 89,  88,  90],\n",
       "         [ 88,  86,  87],\n",
       "         [ 93,  90,  87]],\n",
       " \n",
       "        [[ 70,  81,  99],\n",
       "         [ 68,  80,  99],\n",
       "         [ 71,  85, 103],\n",
       "         ...,\n",
       "         [ 27,  19,  14],\n",
       "         [ 33,  25,  18],\n",
       "         [ 33,  22,  19]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 121, 127],\n",
       "         [137, 142, 143],\n",
       "         [139, 147, 147],\n",
       "         ...,\n",
       "         [149, 160, 169],\n",
       "         [155, 168, 176],\n",
       "         [147, 160, 168]],\n",
       " \n",
       "        [[133, 138, 137],\n",
       "         [143, 148, 148],\n",
       "         [145, 150, 151],\n",
       "         ...,\n",
       "         [146, 162, 171],\n",
       "         [149, 165, 174],\n",
       "         [150, 165, 174]],\n",
       " \n",
       "        [[168, 169, 156],\n",
       "         [162, 165, 155],\n",
       "         [153, 157, 157],\n",
       "         ...,\n",
       "         [160, 175, 184],\n",
       "         [152, 168, 180],\n",
       "         [151, 167, 179]]], dtype=uint8),\n",
       " array([[[184, 214, 255],\n",
       "         [184, 215, 255],\n",
       "         [182, 213, 253],\n",
       "         ...,\n",
       "         [ 55,  73, 111],\n",
       "         [ 57,  71, 103],\n",
       "         [ 57,  69,  97]],\n",
       " \n",
       "        [[182, 212, 253],\n",
       "         [182, 213, 253],\n",
       "         [182, 212, 252],\n",
       "         ...,\n",
       "         [ 56,  75, 111],\n",
       "         [ 57,  72, 102],\n",
       "         [ 59,  71,  99]],\n",
       " \n",
       "        [[181, 212, 252],\n",
       "         [181, 213, 253],\n",
       "         [180, 211, 251],\n",
       "         ...,\n",
       "         [ 59,  78, 113],\n",
       "         [ 55,  71, 100],\n",
       "         [ 60,  72, 100]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 191, 247],\n",
       "         [147, 176, 237],\n",
       "         [113, 143, 205],\n",
       "         ...,\n",
       "         [ 76, 101, 143],\n",
       "         [ 68,  92, 130],\n",
       "         [ 65,  84, 121]],\n",
       " \n",
       "        [[163, 194, 245],\n",
       "         [147, 177, 233],\n",
       "         [121, 149, 214],\n",
       "         ...,\n",
       "         [ 79, 102, 148],\n",
       "         [ 70,  91, 130],\n",
       "         [ 65,  84, 121]],\n",
       " \n",
       "        [[163, 194, 245],\n",
       "         [146, 177, 233],\n",
       "         [120, 148, 212],\n",
       "         ...,\n",
       "         [ 77, 100, 145],\n",
       "         [ 68,  89, 129],\n",
       "         [ 63,  82, 119]]], dtype=uint8),\n",
       " array([[[ 62, 154, 235],\n",
       "         [ 62, 153, 235],\n",
       "         [ 65, 155, 238],\n",
       "         ...,\n",
       "         [ 76, 158, 222],\n",
       "         [ 76, 164, 229],\n",
       "         [ 75, 170, 235]],\n",
       " \n",
       "        [[ 53, 144, 225],\n",
       "         [ 58, 149, 229],\n",
       "         [ 61, 149, 229],\n",
       "         ...,\n",
       "         [ 41, 108, 166],\n",
       "         [ 77, 149, 206],\n",
       "         [ 84, 168, 225]],\n",
       " \n",
       "        [[ 56, 145, 226],\n",
       "         [ 57, 143, 222],\n",
       "         [ 54, 139, 214],\n",
       "         ...,\n",
       "         [ 29,  81, 137],\n",
       "         [ 19,  77, 131],\n",
       "         [ 46, 116, 170]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75, 174, 252],\n",
       "         [ 84, 177, 254],\n",
       "         [ 90, 182, 253],\n",
       "         ...,\n",
       "         [104, 207, 252],\n",
       "         [102, 208, 250],\n",
       "         [ 99, 207, 250]],\n",
       " \n",
       "        [[ 80, 181, 250],\n",
       "         [ 89, 188, 250],\n",
       "         [ 96, 192, 250],\n",
       "         ...,\n",
       "         [112, 213, 251],\n",
       "         [108, 211, 250],\n",
       "         [105, 210, 253]],\n",
       " \n",
       "        [[ 80, 176, 250],\n",
       "         [ 90, 184, 249],\n",
       "         [104, 192, 255],\n",
       "         ...,\n",
       "         [115, 211, 252],\n",
       "         [109, 209, 249],\n",
       "         [103, 205, 249]]], dtype=uint8),\n",
       " array([[[165, 173, 196],\n",
       "         [169, 178, 198],\n",
       "         [169, 176, 196],\n",
       "         ...,\n",
       "         [121, 118, 129],\n",
       "         [127, 125, 136],\n",
       "         [137, 136, 140]],\n",
       " \n",
       "        [[169, 177, 200],\n",
       "         [166, 176, 196],\n",
       "         [163, 169, 186],\n",
       "         ...,\n",
       "         [118, 118, 130],\n",
       "         [125, 126, 136],\n",
       "         [133, 133, 140]],\n",
       " \n",
       "        [[169, 176, 196],\n",
       "         [161, 167, 185],\n",
       "         [120, 124, 139],\n",
       "         ...,\n",
       "         [120, 119, 133],\n",
       "         [126, 124, 139],\n",
       "         [132, 131, 146]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 202, 219],\n",
       "         [187, 201, 219],\n",
       "         [186, 200, 218],\n",
       "         ...,\n",
       "         [160, 175, 191],\n",
       "         [157, 170, 188],\n",
       "         [156, 167, 185]],\n",
       " \n",
       "        [[184, 199, 219],\n",
       "         [187, 201, 221],\n",
       "         [188, 202, 221],\n",
       "         ...,\n",
       "         [166, 179, 196],\n",
       "         [159, 173, 191],\n",
       "         [159, 170, 187]],\n",
       " \n",
       "        [[182, 196, 218],\n",
       "         [186, 200, 220],\n",
       "         [188, 202, 222],\n",
       "         ...,\n",
       "         [170, 181, 198],\n",
       "         [159, 173, 191],\n",
       "         [159, 172, 187]]], dtype=uint8),\n",
       " array([[[ 45, 131, 193],\n",
       "         [ 47, 127, 187],\n",
       "         [ 52, 125, 184],\n",
       "         ...,\n",
       "         [ 53, 130, 201],\n",
       "         [ 57, 136, 212],\n",
       "         [ 60, 145, 223]],\n",
       " \n",
       "        [[ 29,  90, 144],\n",
       "         [ 26,  85, 137],\n",
       "         [ 33,  90, 142],\n",
       "         ...,\n",
       "         [ 36, 107, 173],\n",
       "         [ 40, 117, 189],\n",
       "         [ 43, 124, 201]],\n",
       " \n",
       "        [[ 12,  58, 111],\n",
       "         [  9,  55, 109],\n",
       "         [  3,  47, 104],\n",
       "         ...,\n",
       "         [ 10,  63, 114],\n",
       "         [ 21,  83, 139],\n",
       "         [ 25,  90, 152]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 199, 252],\n",
       "         [105, 195, 253],\n",
       "         [ 97, 190, 251],\n",
       "         ...,\n",
       "         [ 50, 132, 211],\n",
       "         [ 54, 137, 215],\n",
       "         [ 61, 148, 224]],\n",
       " \n",
       "        [[108, 210, 252],\n",
       "         [106, 208, 251],\n",
       "         [101, 205, 248],\n",
       "         ...,\n",
       "         [ 62, 146, 232],\n",
       "         [ 72, 154, 235],\n",
       "         [ 79, 161, 240]],\n",
       " \n",
       "        [[114, 213, 253],\n",
       "         [112, 212, 253],\n",
       "         [108, 209, 250],\n",
       "         ...,\n",
       "         [ 72, 162, 247],\n",
       "         [ 81, 168, 248],\n",
       "         [ 86, 172, 248]]], dtype=uint8),\n",
       " array([[[ 24,  37,  63],\n",
       "         [ 24,  36,  63],\n",
       "         [ 24,  36,  65],\n",
       "         ...,\n",
       "         [ 65,  82, 124],\n",
       "         [ 72,  89, 132],\n",
       "         [ 72,  89, 132]],\n",
       " \n",
       "        [[ 23,  35,  62],\n",
       "         [ 24,  36,  63],\n",
       "         [ 26,  38,  66],\n",
       "         ...,\n",
       "         [ 55,  72, 115],\n",
       "         [ 65,  82, 125],\n",
       "         [ 69,  86, 129]],\n",
       " \n",
       "        [[ 22,  34,  62],\n",
       "         [ 24,  36,  64],\n",
       "         [ 28,  40,  68],\n",
       "         ...,\n",
       "         [ 56,  73, 116],\n",
       "         [ 61,  77, 120],\n",
       "         [ 66,  83, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 22,  33,  60],\n",
       "         [ 21,  32,  60],\n",
       "         [ 20,  31,  59],\n",
       "         ...,\n",
       "         [ 25,  41,  84],\n",
       "         [ 25,  39,  82],\n",
       "         [ 23,  39,  77]],\n",
       " \n",
       "        [[ 22,  33,  60],\n",
       "         [ 20,  31,  60],\n",
       "         [ 20,  30,  59],\n",
       "         ...,\n",
       "         [ 28,  44,  87],\n",
       "         [ 28,  43,  85],\n",
       "         [ 25,  40,  78]],\n",
       " \n",
       "        [[ 22,  34,  61],\n",
       "         [ 21,  32,  60],\n",
       "         [ 20,  31,  61],\n",
       "         ...,\n",
       "         [ 30,  46,  89],\n",
       "         [ 30,  45,  88],\n",
       "         [ 23,  40,  78]]], dtype=uint8),\n",
       " array([[[ 83, 123, 185],\n",
       "         [ 86, 125, 187],\n",
       "         [ 91, 128, 190],\n",
       "         ...,\n",
       "         [101, 130, 187],\n",
       "         [ 99, 129, 188],\n",
       "         [ 98, 129, 190]],\n",
       " \n",
       "        [[ 86, 127, 189],\n",
       "         [ 88, 127, 189],\n",
       "         [ 93, 129, 192],\n",
       "         ...,\n",
       "         [104, 134, 191],\n",
       "         [101, 133, 192],\n",
       "         [100, 131, 192]],\n",
       " \n",
       "        [[ 87, 127, 189],\n",
       "         [ 90, 129, 191],\n",
       "         [ 94, 130, 192],\n",
       "         ...,\n",
       "         [107, 138, 193],\n",
       "         [102, 134, 192],\n",
       "         [100, 131, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 163, 224],\n",
       "         [128, 159, 222],\n",
       "         [124, 156, 219],\n",
       "         ...,\n",
       "         [136, 164, 224],\n",
       "         [141, 167, 224],\n",
       "         [144, 169, 225]],\n",
       " \n",
       "        [[140, 169, 227],\n",
       "         [136, 164, 224],\n",
       "         [130, 159, 220],\n",
       "         ...,\n",
       "         [137, 165, 222],\n",
       "         [141, 167, 223],\n",
       "         [142, 167, 223]],\n",
       " \n",
       "        [[148, 175, 232],\n",
       "         [142, 170, 229],\n",
       "         [136, 165, 225],\n",
       "         ...,\n",
       "         [138, 165, 222],\n",
       "         [141, 167, 223],\n",
       "         [141, 166, 222]]], dtype=uint8),\n",
       " array([[[ 98, 128, 191],\n",
       "         [ 99, 129, 189],\n",
       "         [101, 130, 186],\n",
       "         ...,\n",
       "         [ 89, 128, 190],\n",
       "         [ 87, 126, 188],\n",
       "         [ 83, 124, 186]],\n",
       " \n",
       "        [[101, 132, 193],\n",
       "         [102, 132, 191],\n",
       "         [106, 137, 192],\n",
       "         ...,\n",
       "         [ 93, 130, 192],\n",
       "         [ 88, 127, 189],\n",
       "         [ 86, 127, 189]],\n",
       " \n",
       "        [[101, 132, 193],\n",
       "         [104, 134, 191],\n",
       "         [108, 138, 194],\n",
       "         ...,\n",
       "         [ 93, 130, 192],\n",
       "         [ 90, 129, 191],\n",
       "         [ 86, 128, 190]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 167, 224],\n",
       "         [139, 165, 223],\n",
       "         [134, 162, 223],\n",
       "         ...,\n",
       "         [122, 154, 217],\n",
       "         [127, 157, 220],\n",
       "         [131, 162, 224]],\n",
       " \n",
       "        [[144, 167, 224],\n",
       "         [140, 166, 223],\n",
       "         [136, 165, 225],\n",
       "         ...,\n",
       "         [127, 158, 219],\n",
       "         [134, 162, 224],\n",
       "         [137, 166, 226]],\n",
       " \n",
       "        [[142, 167, 223],\n",
       "         [139, 166, 223],\n",
       "         [137, 165, 224],\n",
       "         ...,\n",
       "         [136, 164, 224],\n",
       "         [140, 168, 228],\n",
       "         [145, 174, 231]]], dtype=uint8),\n",
       " array([[[112, 116, 116],\n",
       "         [ 90,  87,  82],\n",
       "         [ 81,  77,  71],\n",
       "         ...,\n",
       "         [150, 157, 160],\n",
       "         [148, 153, 155],\n",
       "         [141, 148, 152]],\n",
       " \n",
       "        [[ 89,  85,  82],\n",
       "         [ 83,  78,  71],\n",
       "         [ 76,  74,  65],\n",
       "         ...,\n",
       "         [152, 160, 160],\n",
       "         [153, 159, 162],\n",
       "         [145, 152, 155]],\n",
       " \n",
       "        [[ 83,  78,  75],\n",
       "         [ 83,  81,  73],\n",
       "         [101,  99,  92],\n",
       "         ...,\n",
       "         [156, 160, 161],\n",
       "         [154, 159, 161],\n",
       "         [152, 156, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[155, 163, 164],\n",
       "         [176, 186, 169],\n",
       "         [171, 177, 174],\n",
       "         ...,\n",
       "         [138, 146, 160],\n",
       "         [143, 151, 164],\n",
       "         [152, 158, 170]],\n",
       " \n",
       "        [[149, 159, 171],\n",
       "         [157, 168, 175],\n",
       "         [161, 169, 177],\n",
       "         ...,\n",
       "         [139, 146, 159],\n",
       "         [140, 148, 161],\n",
       "         [151, 157, 168]],\n",
       " \n",
       "        [[143, 153, 170],\n",
       "         [150, 159, 172],\n",
       "         [157, 166, 176],\n",
       "         ...,\n",
       "         [144, 150, 161],\n",
       "         [145, 151, 164],\n",
       "         [148, 154, 166]]], dtype=uint8),\n",
       " array([[[177, 184, 183],\n",
       "         [167, 175, 173],\n",
       "         [144, 151, 147],\n",
       "         ...,\n",
       "         [110, 121, 128],\n",
       "         [107, 119, 128],\n",
       "         [101, 115, 128]],\n",
       " \n",
       "        [[165, 173, 172],\n",
       "         [139, 147, 150],\n",
       "         [133, 141, 139],\n",
       "         ...,\n",
       "         [107, 113, 117],\n",
       "         [102, 113, 120],\n",
       "         [ 98, 111, 121]],\n",
       " \n",
       "        [[155, 164, 166],\n",
       "         [135, 145, 147],\n",
       "         [136, 144, 144],\n",
       "         ...,\n",
       "         [ 85,  93, 101],\n",
       "         [ 86,  92, 100],\n",
       "         [ 95, 105, 118]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 125, 151],\n",
       "         [101, 119, 146],\n",
       "         [ 93, 111, 140],\n",
       "         ...,\n",
       "         [140, 161, 187],\n",
       "         [137, 157, 184],\n",
       "         [132, 150, 177]],\n",
       " \n",
       "        [[103, 121, 148],\n",
       "         [103, 118, 145],\n",
       "         [ 96, 112, 139],\n",
       "         ...,\n",
       "         [131, 152, 181],\n",
       "         [126, 146, 174],\n",
       "         [126, 144, 173]],\n",
       " \n",
       "        [[104, 118, 146],\n",
       "         [ 96, 113, 140],\n",
       "         [ 92, 109, 136],\n",
       "         ...,\n",
       "         [124, 142, 171],\n",
       "         [122, 139, 168],\n",
       "         [121, 138, 165]]], dtype=uint8),\n",
       " array([[[39, 36, 31],\n",
       "         [37, 35, 27],\n",
       "         [33, 31, 24],\n",
       "         ...,\n",
       "         [11,  9,  3],\n",
       "         [13, 13,  6],\n",
       "         [15, 13,  5]],\n",
       " \n",
       "        [[39, 36, 31],\n",
       "         [37, 34, 29],\n",
       "         [36, 33, 26],\n",
       "         ...,\n",
       "         [16, 15,  6],\n",
       "         [11, 12,  4],\n",
       "         [11, 12,  4]],\n",
       " \n",
       "        [[38, 36, 31],\n",
       "         [35, 35, 28],\n",
       "         [33, 32, 25],\n",
       "         ...,\n",
       "         [23, 23, 14],\n",
       "         [12, 10,  3],\n",
       "         [ 9,  9,  3]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[30, 29, 31],\n",
       "         [24, 23, 25],\n",
       "         [26, 25, 27],\n",
       "         ...,\n",
       "         [44, 44, 44],\n",
       "         [43, 43, 43],\n",
       "         [40, 40, 40]],\n",
       " \n",
       "        [[27, 29, 30],\n",
       "         [26, 25, 27],\n",
       "         [27, 26, 28],\n",
       "         ...,\n",
       "         [47, 48, 48],\n",
       "         [43, 45, 45],\n",
       "         [39, 41, 41]],\n",
       " \n",
       "        [[27, 27, 29],\n",
       "         [30, 29, 31],\n",
       "         [30, 29, 31],\n",
       "         ...,\n",
       "         [44, 44, 46],\n",
       "         [38, 41, 41],\n",
       "         [41, 43, 44]]], dtype=uint8),\n",
       " array([[[11, 11,  3],\n",
       "         [11, 12,  3],\n",
       "         [ 8,  9,  1],\n",
       "         ...,\n",
       "         [19, 20,  9],\n",
       "         [21, 21,  9],\n",
       "         [32, 29, 21]],\n",
       " \n",
       "        [[ 8,  9,  2],\n",
       "         [ 9, 10,  1],\n",
       "         [17, 13,  5],\n",
       "         ...,\n",
       "         [23, 24, 14],\n",
       "         [23, 24, 14],\n",
       "         [27, 28, 19]],\n",
       " \n",
       "        [[10, 10,  5],\n",
       "         [12, 11,  2],\n",
       "         [25, 18, 11],\n",
       "         ...,\n",
       "         [18, 18, 13],\n",
       "         [18, 18, 12],\n",
       "         [24, 24, 18]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[41, 41, 41],\n",
       "         [39, 39, 38],\n",
       "         [44, 45, 45],\n",
       "         ...,\n",
       "         [43, 44, 44],\n",
       "         [37, 39, 40],\n",
       "         [34, 37, 38]],\n",
       " \n",
       "        [[41, 41, 41],\n",
       "         [45, 45, 45],\n",
       "         [46, 46, 46],\n",
       "         ...,\n",
       "         [42, 43, 43],\n",
       "         [39, 38, 40],\n",
       "         [29, 33, 34]],\n",
       " \n",
       "        [[39, 41, 41],\n",
       "         [43, 45, 45],\n",
       "         [45, 45, 45],\n",
       "         ...,\n",
       "         [44, 44, 44],\n",
       "         [36, 36, 36],\n",
       "         [33, 32, 34]]], dtype=uint8),\n",
       " array([[[180, 184, 212],\n",
       "         [181, 185, 213],\n",
       "         [180, 185, 212],\n",
       "         ...,\n",
       "         [130, 152, 179],\n",
       "         [126, 149, 177],\n",
       "         [124, 144, 175]],\n",
       " \n",
       "        [[177, 181, 209],\n",
       "         [174, 179, 206],\n",
       "         [175, 180, 207],\n",
       "         ...,\n",
       "         [129, 150, 177],\n",
       "         [129, 151, 178],\n",
       "         [125, 147, 176]],\n",
       " \n",
       "        [[174, 178, 206],\n",
       "         [177, 181, 209],\n",
       "         [168, 173, 200],\n",
       "         ...,\n",
       "         [135, 155, 181],\n",
       "         [130, 151, 177],\n",
       "         [126, 148, 176]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 171, 199],\n",
       "         [160, 172, 200],\n",
       "         [161, 173, 201],\n",
       "         ...,\n",
       "         [157, 176, 203],\n",
       "         [155, 174, 201],\n",
       "         [154, 173, 200]],\n",
       " \n",
       "        [[164, 175, 203],\n",
       "         [166, 177, 204],\n",
       "         [166, 177, 205],\n",
       "         ...,\n",
       "         [160, 177, 204],\n",
       "         [158, 175, 201],\n",
       "         [156, 173, 200]],\n",
       " \n",
       "        [[167, 178, 206],\n",
       "         [168, 179, 207],\n",
       "         [169, 180, 208],\n",
       "         ...,\n",
       "         [161, 178, 205],\n",
       "         [159, 176, 203],\n",
       "         [157, 174, 201]]], dtype=uint8),\n",
       " array([[[180, 216, 252],\n",
       "         [187, 219, 252],\n",
       "         [194, 224, 253],\n",
       "         ...,\n",
       "         [176, 213, 251],\n",
       "         [173, 208, 252],\n",
       "         [173, 208, 252]],\n",
       " \n",
       "        [[179, 215, 251],\n",
       "         [187, 219, 252],\n",
       "         [195, 225, 253],\n",
       "         ...,\n",
       "         [175, 211, 250],\n",
       "         [173, 208, 252],\n",
       "         [173, 208, 252]],\n",
       " \n",
       "        [[181, 213, 249],\n",
       "         [193, 220, 253],\n",
       "         [197, 223, 254],\n",
       "         ...,\n",
       "         [174, 209, 253],\n",
       "         [173, 208, 252],\n",
       "         [173, 208, 252]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[187, 220, 255],\n",
       "         [186, 221, 254],\n",
       "         [186, 221, 254],\n",
       "         ...,\n",
       "         [174, 204, 245],\n",
       "         [181, 209, 251],\n",
       "         [178, 209, 251]],\n",
       " \n",
       "        [[189, 219, 254],\n",
       "         [188, 221, 254],\n",
       "         [189, 221, 254],\n",
       "         ...,\n",
       "         [174, 205, 245],\n",
       "         [180, 209, 250],\n",
       "         [177, 209, 250]],\n",
       " \n",
       "        [[184, 220, 254],\n",
       "         [186, 221, 255],\n",
       "         [185, 221, 251],\n",
       "         ...,\n",
       "         [176, 207, 245],\n",
       "         [176, 209, 248],\n",
       "         [174, 210, 249]]], dtype=uint8),\n",
       " array([[[165, 180, 242],\n",
       "         [170, 185, 250],\n",
       "         [170, 176, 242],\n",
       "         ...,\n",
       "         [122, 139, 197],\n",
       "         [129, 143, 191],\n",
       "         [ 88, 106, 153]],\n",
       " \n",
       "        [[148, 172, 237],\n",
       "         [162, 177, 236],\n",
       "         [169, 178, 239],\n",
       "         ...,\n",
       "         [120, 134, 194],\n",
       "         [138, 150, 201],\n",
       "         [115, 137, 192]],\n",
       " \n",
       "        [[161, 180, 244],\n",
       "         [165, 181, 238],\n",
       "         [163, 177, 235],\n",
       "         ...,\n",
       "         [132, 144, 203],\n",
       "         [106, 123, 171],\n",
       "         [125, 138, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[133, 155, 232],\n",
       "         [135, 161, 228],\n",
       "         [138, 165, 231],\n",
       "         ...,\n",
       "         [133, 160, 235],\n",
       "         [134, 160, 238],\n",
       "         [134, 156, 231]],\n",
       " \n",
       "        [[116, 141, 222],\n",
       "         [127, 149, 227],\n",
       "         [136, 166, 238],\n",
       "         ...,\n",
       "         [133, 161, 238],\n",
       "         [140, 166, 240],\n",
       "         [137, 165, 238]],\n",
       " \n",
       "        [[114, 140, 216],\n",
       "         [136, 164, 224],\n",
       "         [163, 186, 240],\n",
       "         ...,\n",
       "         [138, 171, 247],\n",
       "         [128, 166, 235],\n",
       "         [148, 168, 241]]], dtype=uint8),\n",
       " array([[[ 94, 113, 150],\n",
       "         [ 53,  66, 100],\n",
       "         [ 67,  80, 116],\n",
       "         ...,\n",
       "         [140, 171, 243],\n",
       "         [141, 165, 241],\n",
       "         [145, 174, 238]],\n",
       " \n",
       "        [[ 69,  70, 102],\n",
       "         [ 36,  49,  72],\n",
       "         [ 53,  55,  80],\n",
       "         ...,\n",
       "         [139, 170, 243],\n",
       "         [136, 164, 239],\n",
       "         [138, 165, 242]],\n",
       " \n",
       "        [[ 67,  64,  89],\n",
       "         [ 52,  57,  75],\n",
       "         [ 66,  73,  87],\n",
       "         ...,\n",
       "         [141, 167, 240],\n",
       "         [143, 167, 241],\n",
       "         [132, 163, 235]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[131, 143, 208],\n",
       "         [127, 148, 215],\n",
       "         [127, 154, 217],\n",
       "         ...,\n",
       "         [ 98, 121, 194],\n",
       "         [ 95, 119, 185],\n",
       "         [ 91, 116, 178]],\n",
       " \n",
       "        [[132, 144, 212],\n",
       "         [138, 152, 220],\n",
       "         [131, 156, 223],\n",
       "         ...,\n",
       "         [ 84, 120, 189],\n",
       "         [ 88, 119, 179],\n",
       "         [ 95, 122, 179]],\n",
       " \n",
       "        [[124, 155, 214],\n",
       "         [133, 154, 223],\n",
       "         [131, 156, 230],\n",
       "         ...,\n",
       "         [100, 128, 187],\n",
       "         [ 96, 120, 181],\n",
       "         [107, 125, 194]]], dtype=uint8),\n",
       " array([[[ 64,  83, 120],\n",
       "         [ 59,  77, 117],\n",
       "         [ 59,  77, 118],\n",
       "         ...,\n",
       "         [ 21,  40,  71],\n",
       "         [ 21,  38,  71],\n",
       "         [ 24,  38,  70]],\n",
       " \n",
       "        [[ 64,  84, 120],\n",
       "         [ 64,  83, 121],\n",
       "         [ 62,  80, 121],\n",
       "         ...,\n",
       "         [ 23,  38,  67],\n",
       "         [ 23,  38,  70],\n",
       "         [ 25,  38,  70]],\n",
       " \n",
       "        [[ 65,  84, 118],\n",
       "         [ 68,  87, 123],\n",
       "         [ 61,  78, 117],\n",
       "         ...,\n",
       "         [ 22,  33,  61],\n",
       "         [ 24,  36,  66],\n",
       "         [ 26,  37,  67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 21,  38,  78],\n",
       "         [ 26,  39,  77],\n",
       "         [ 24,  40,  77],\n",
       "         ...,\n",
       "         [ 25,  41,  82],\n",
       "         [ 22,  39,  79],\n",
       "         [ 23,  39,  79]],\n",
       " \n",
       "        [[ 25,  41,  83],\n",
       "         [ 28,  41,  80],\n",
       "         [ 24,  40,  77],\n",
       "         ...,\n",
       "         [ 24,  40,  83],\n",
       "         [ 26,  42,  85],\n",
       "         [ 25,  41,  83]],\n",
       " \n",
       "        [[ 27,  42,  87],\n",
       "         [ 30,  43,  83],\n",
       "         [ 24,  40,  77],\n",
       "         ...,\n",
       "         [ 30,  45,  89],\n",
       "         [ 28,  43,  89],\n",
       "         [ 27,  43,  86]]], dtype=uint8),\n",
       " array([[[ 92, 142, 200],\n",
       "         [ 96, 143, 202],\n",
       "         [100, 145, 204],\n",
       "         ...,\n",
       "         [ 83, 127, 186],\n",
       "         [ 83, 127, 181],\n",
       "         [ 80, 121, 176]],\n",
       " \n",
       "        [[ 90, 140, 198],\n",
       "         [ 98, 146, 204],\n",
       "         [109, 155, 213],\n",
       "         ...,\n",
       "         [ 75, 116, 179],\n",
       "         [ 77, 120, 176],\n",
       "         [ 75, 115, 172]],\n",
       " \n",
       "        [[ 96, 144, 202],\n",
       "         [104, 152, 210],\n",
       "         [112, 156, 215],\n",
       "         ...,\n",
       "         [ 69, 109, 167],\n",
       "         [ 74, 114, 172],\n",
       "         [ 58,  98, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[103, 152, 216],\n",
       "         [104, 152, 216],\n",
       "         [103, 154, 219],\n",
       "         ...,\n",
       "         [ 95, 139, 203],\n",
       "         [ 90, 139, 203],\n",
       "         [ 88, 141, 203]],\n",
       " \n",
       "        [[103, 151, 215],\n",
       "         [107, 154, 218],\n",
       "         [105, 153, 218],\n",
       "         ...,\n",
       "         [ 97, 140, 203],\n",
       "         [ 95, 139, 202],\n",
       "         [ 98, 143, 206]],\n",
       " \n",
       "        [[104, 152, 216],\n",
       "         [109, 157, 221],\n",
       "         [108, 156, 222],\n",
       "         ...,\n",
       "         [109, 146, 210],\n",
       "         [108, 149, 212],\n",
       "         [101, 142, 205]]], dtype=uint8),\n",
       " array([[[103, 123, 154],\n",
       "         [103, 123, 154],\n",
       "         [107, 127, 157],\n",
       "         ...,\n",
       "         [117, 132, 164],\n",
       "         [113, 128, 160],\n",
       "         [112, 129, 161]],\n",
       " \n",
       "        [[102, 122, 153],\n",
       "         [102, 122, 153],\n",
       "         [108, 128, 159],\n",
       "         ...,\n",
       "         [114, 129, 161],\n",
       "         [111, 126, 158],\n",
       "         [107, 124, 157]],\n",
       " \n",
       "        [[104, 124, 155],\n",
       "         [105, 125, 156],\n",
       "         [108, 128, 159],\n",
       "         ...,\n",
       "         [111, 124, 155],\n",
       "         [109, 121, 155],\n",
       "         [108, 124, 153]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[116, 132, 164],\n",
       "         [119, 135, 164],\n",
       "         [124, 141, 167],\n",
       "         ...,\n",
       "         [102, 117, 147],\n",
       "         [ 95, 111, 144],\n",
       "         [ 96, 111, 144]],\n",
       " \n",
       "        [[118, 132, 168],\n",
       "         [117, 132, 165],\n",
       "         [121, 136, 166],\n",
       "         ...,\n",
       "         [105, 120, 152],\n",
       "         [ 98, 113, 144],\n",
       "         [100, 113, 145]],\n",
       " \n",
       "        [[116, 129, 167],\n",
       "         [118, 132, 167],\n",
       "         [122, 137, 169],\n",
       "         ...,\n",
       "         [ 99, 114, 146],\n",
       "         [101, 116, 148],\n",
       "         [102, 117, 150]]], dtype=uint8),\n",
       " array([[[122, 137, 169],\n",
       "         [123, 138, 171],\n",
       "         [133, 149, 177],\n",
       "         ...,\n",
       "         [160, 182, 221],\n",
       "         [167, 188, 226],\n",
       "         [167, 188, 226]],\n",
       " \n",
       "        [[131, 146, 178],\n",
       "         [127, 142, 174],\n",
       "         [124, 140, 168],\n",
       "         ...,\n",
       "         [170, 190, 229],\n",
       "         [166, 186, 224],\n",
       "         [165, 185, 226]],\n",
       " \n",
       "        [[131, 146, 176],\n",
       "         [117, 133, 162],\n",
       "         [121, 137, 166],\n",
       "         ...,\n",
       "         [171, 190, 226],\n",
       "         [164, 185, 223],\n",
       "         [163, 183, 224]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 161, 197],\n",
       "         [134, 154, 183],\n",
       "         [109, 124, 152],\n",
       "         ...,\n",
       "         [148, 174, 214],\n",
       "         [148, 173, 213],\n",
       "         [151, 176, 216]],\n",
       " \n",
       "        [[144, 170, 207],\n",
       "         [139, 161, 192],\n",
       "         [127, 146, 175],\n",
       "         ...,\n",
       "         [145, 170, 211],\n",
       "         [149, 174, 214],\n",
       "         [144, 169, 209]],\n",
       " \n",
       "        [[140, 168, 210],\n",
       "         [135, 162, 202],\n",
       "         [127, 150, 186],\n",
       "         ...,\n",
       "         [139, 165, 205],\n",
       "         [142, 167, 207],\n",
       "         [149, 174, 213]]], dtype=uint8),\n",
       " array([[[187, 206, 226],\n",
       "         [184, 202, 227],\n",
       "         [186, 200, 223],\n",
       "         ...,\n",
       "         [131, 150, 185],\n",
       "         [139, 157, 192],\n",
       "         [147, 162, 198]],\n",
       " \n",
       "        [[187, 203, 230],\n",
       "         [188, 201, 228],\n",
       "         [185, 199, 221],\n",
       "         ...,\n",
       "         [141, 157, 193],\n",
       "         [138, 154, 190],\n",
       "         [151, 166, 199]],\n",
       " \n",
       "        [[187, 200, 230],\n",
       "         [188, 200, 225],\n",
       "         [181, 199, 220],\n",
       "         ...,\n",
       "         [152, 164, 200],\n",
       "         [146, 160, 196],\n",
       "         [155, 170, 203]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[180, 198, 220],\n",
       "         [177, 194, 217],\n",
       "         [172, 188, 211],\n",
       "         ...,\n",
       "         [169, 179, 206],\n",
       "         [168, 180, 208],\n",
       "         [168, 182, 210]],\n",
       " \n",
       "        [[183, 199, 221],\n",
       "         [175, 191, 214],\n",
       "         [173, 187, 210],\n",
       "         ...,\n",
       "         [168, 180, 206],\n",
       "         [168, 181, 209],\n",
       "         [171, 185, 213]],\n",
       " \n",
       "        [[178, 194, 216],\n",
       "         [175, 191, 214],\n",
       "         [178, 192, 215],\n",
       "         ...,\n",
       "         [165, 180, 206],\n",
       "         [169, 183, 210],\n",
       "         [175, 189, 217]]], dtype=uint8),\n",
       " array([[[123, 136, 176],\n",
       "         [120, 134, 176],\n",
       "         [116, 130, 172],\n",
       "         ...,\n",
       "         [ 60,  68,  97],\n",
       "         [ 63,  68,  98],\n",
       "         [ 65,  70, 103]],\n",
       " \n",
       "        [[124, 138, 177],\n",
       "         [118, 132, 174],\n",
       "         [114, 129, 171],\n",
       "         ...,\n",
       "         [ 61,  66,  93],\n",
       "         [ 62,  68,  96],\n",
       "         [ 61,  69, 100]],\n",
       " \n",
       "        [[120, 132, 173],\n",
       "         [117, 128, 172],\n",
       "         [116, 126, 169],\n",
       "         ...,\n",
       "         [ 59,  63,  85],\n",
       "         [ 60,  67,  93],\n",
       "         [ 60,  68,  97]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 38,  45,  70],\n",
       "         [ 41,  47,  70],\n",
       "         [ 36,  39,  60],\n",
       "         ...,\n",
       "         [ 55,  66,  94],\n",
       "         [ 57,  68,  96],\n",
       "         [ 52,  64,  92]],\n",
       " \n",
       "        [[ 43,  49,  72],\n",
       "         [ 39,  42,  66],\n",
       "         [ 39,  40,  61],\n",
       "         ...,\n",
       "         [ 57,  65,  93],\n",
       "         [ 58,  67,  95],\n",
       "         [ 56,  66,  93]],\n",
       " \n",
       "        [[ 45,  52,  75],\n",
       "         [ 41,  45,  69],\n",
       "         [ 42,  45,  67],\n",
       "         ...,\n",
       "         [ 65,  73, 102],\n",
       "         [ 67,  75, 104],\n",
       "         [ 58,  67,  96]]], dtype=uint8),\n",
       " array([[[148, 148, 151],\n",
       "         [160, 174, 199],\n",
       "         [167, 189, 220],\n",
       "         ...,\n",
       "         [172, 195, 227],\n",
       "         [170, 195, 226],\n",
       "         [178, 199, 230]],\n",
       " \n",
       "        [[143, 148, 156],\n",
       "         [159, 175, 201],\n",
       "         [174, 195, 227],\n",
       "         ...,\n",
       "         [172, 197, 228],\n",
       "         [173, 197, 229],\n",
       "         [176, 198, 229]],\n",
       " \n",
       "        [[145, 151, 160],\n",
       "         [168, 187, 216],\n",
       "         [173, 193, 224],\n",
       "         ...,\n",
       "         [167, 194, 228],\n",
       "         [172, 196, 227],\n",
       "         [178, 201, 230]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 192, 221],\n",
       "         [166, 186, 218],\n",
       "         [161, 182, 212],\n",
       "         ...,\n",
       "         [133, 153, 186],\n",
       "         [133, 157, 194],\n",
       "         [142, 171, 209]],\n",
       " \n",
       "        [[170, 192, 223],\n",
       "         [164, 184, 216],\n",
       "         [164, 183, 216],\n",
       "         ...,\n",
       "         [131, 154, 189],\n",
       "         [133, 159, 199],\n",
       "         [151, 176, 218]],\n",
       " \n",
       "        [[168, 189, 221],\n",
       "         [166, 187, 221],\n",
       "         [165, 185, 220],\n",
       "         ...,\n",
       "         [133, 158, 194],\n",
       "         [140, 166, 208],\n",
       "         [149, 175, 218]]], dtype=uint8),\n",
       " array([[[176, 196, 225],\n",
       "         [171, 192, 223],\n",
       "         [170, 192, 221],\n",
       "         ...,\n",
       "         [139, 157, 174],\n",
       "         [137, 152, 167],\n",
       "         [135, 148, 161]],\n",
       " \n",
       "        [[169, 191, 222],\n",
       "         [170, 192, 221],\n",
       "         [167, 190, 218],\n",
       "         ...,\n",
       "         [136, 155, 172],\n",
       "         [140, 156, 172],\n",
       "         [142, 154, 168]],\n",
       " \n",
       "        [[164, 187, 218],\n",
       "         [162, 185, 212],\n",
       "         [159, 183, 211],\n",
       "         ...,\n",
       "         [135, 152, 169],\n",
       "         [139, 153, 169],\n",
       "         [143, 155, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 80, 104, 145],\n",
       "         [ 78, 102, 142],\n",
       "         [ 77, 101, 140],\n",
       "         ...,\n",
       "         [121, 134, 153],\n",
       "         [126, 141, 162],\n",
       "         [129, 144, 163]],\n",
       " \n",
       "        [[ 87, 113, 156],\n",
       "         [ 81, 106, 145],\n",
       "         [ 79, 104, 144],\n",
       "         ...,\n",
       "         [125, 138, 160],\n",
       "         [128, 142, 164],\n",
       "         [133, 147, 169]],\n",
       " \n",
       "        [[ 93, 118, 160],\n",
       "         [ 90, 116, 154],\n",
       "         [ 82, 108, 146],\n",
       "         ...,\n",
       "         [125, 138, 160],\n",
       "         [126, 141, 161],\n",
       "         [130, 144, 166]]], dtype=uint8),\n",
       " array([[[122, 133, 144],\n",
       "         [119, 133, 149],\n",
       "         [118, 132, 150],\n",
       "         ...,\n",
       "         [102, 122, 155],\n",
       "         [106, 124, 158],\n",
       "         [107, 125, 158]],\n",
       " \n",
       "        [[124, 136, 148],\n",
       "         [126, 139, 154],\n",
       "         [122, 137, 154],\n",
       "         ...,\n",
       "         [100, 121, 153],\n",
       "         [100, 120, 154],\n",
       "         [ 98, 120, 153]],\n",
       " \n",
       "        [[132, 148, 157],\n",
       "         [131, 144, 158],\n",
       "         [133, 146, 160],\n",
       "         ...,\n",
       "         [100, 118, 151],\n",
       "         [ 99, 119, 152],\n",
       "         [ 97, 117, 149]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 126, 146],\n",
       "         [122, 128, 147],\n",
       "         [126, 132, 151],\n",
       "         ...,\n",
       "         [ 74,  85, 108],\n",
       "         [ 79,  90, 118],\n",
       "         [ 92, 106, 137]],\n",
       " \n",
       "        [[120, 127, 147],\n",
       "         [124, 131, 151],\n",
       "         [126, 132, 153],\n",
       "         ...,\n",
       "         [ 81,  92, 119],\n",
       "         [ 88, 103, 131],\n",
       "         [ 98, 113, 146]],\n",
       " \n",
       "        [[120, 131, 151],\n",
       "         [124, 131, 151],\n",
       "         [123, 130, 150],\n",
       "         ...,\n",
       "         [ 87, 104, 133],\n",
       "         [ 98, 115, 144],\n",
       "         [100, 117, 150]]], dtype=uint8),\n",
       " array([[[123, 140, 179],\n",
       "         [ 91, 110, 148],\n",
       "         [ 85, 104, 142],\n",
       "         ...,\n",
       "         [113, 131, 178],\n",
       "         [111, 129, 176],\n",
       "         [111, 129, 176]],\n",
       " \n",
       "        [[ 96, 113, 152],\n",
       "         [ 96, 115, 153],\n",
       "         [ 97, 116, 154],\n",
       "         ...,\n",
       "         [107, 127, 174],\n",
       "         [107, 127, 174],\n",
       "         [109, 129, 176]],\n",
       " \n",
       "        [[138, 157, 196],\n",
       "         [132, 151, 189],\n",
       "         [124, 142, 180],\n",
       "         ...,\n",
       "         [105, 122, 168],\n",
       "         [107, 125, 171],\n",
       "         [110, 128, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[188, 202, 238],\n",
       "         [181, 199, 236],\n",
       "         [177, 196, 234],\n",
       "         ...,\n",
       "         [148, 166, 203],\n",
       "         [154, 172, 209],\n",
       "         [148, 167, 205]],\n",
       " \n",
       "        [[188, 202, 238],\n",
       "         [180, 197, 235],\n",
       "         [174, 193, 231],\n",
       "         ...,\n",
       "         [156, 174, 211],\n",
       "         [154, 172, 209],\n",
       "         [160, 179, 216]],\n",
       " \n",
       "        [[189, 202, 238],\n",
       "         [179, 197, 234],\n",
       "         [173, 193, 231],\n",
       "         ...,\n",
       "         [153, 171, 208],\n",
       "         [157, 175, 212],\n",
       "         [162, 181, 219]]], dtype=uint8),\n",
       " array([[[103, 121, 158],\n",
       "         [101, 120, 157],\n",
       "         [100, 117, 154],\n",
       "         ...,\n",
       "         [110, 124, 138],\n",
       "         [ 69,  74,  73],\n",
       "         [ 67,  71,  66]],\n",
       " \n",
       "        [[ 99, 116, 154],\n",
       "         [ 99, 118, 153],\n",
       "         [ 97, 116, 151],\n",
       "         ...,\n",
       "         [115, 129, 146],\n",
       "         [ 80,  83,  83],\n",
       "         [ 76,  77,  74]],\n",
       " \n",
       "        [[ 97, 115, 152],\n",
       "         [ 97, 115, 152],\n",
       "         [ 94, 113, 148],\n",
       "         ...,\n",
       "         [124, 137, 157],\n",
       "         [ 87,  91,  94],\n",
       "         [ 72,  75,  73]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 149, 191],\n",
       "         [149, 169, 206],\n",
       "         [154, 173, 210],\n",
       "         ...,\n",
       "         [134, 152, 181],\n",
       "         [143, 162, 191],\n",
       "         [152, 170, 199]],\n",
       " \n",
       "        [[129, 150, 195],\n",
       "         [146, 166, 204],\n",
       "         [156, 177, 212],\n",
       "         ...,\n",
       "         [136, 154, 183],\n",
       "         [140, 158, 187],\n",
       "         [149, 167, 196]],\n",
       " \n",
       "        [[125, 149, 194],\n",
       "         [141, 163, 204],\n",
       "         [156, 176, 211],\n",
       "         ...,\n",
       "         [139, 157, 186],\n",
       "         [142, 163, 191],\n",
       "         [152, 170, 199]]], dtype=uint8),\n",
       " array([[[ 15,  20,  21],\n",
       "         [ 33,  39,  51],\n",
       "         [ 82,  92, 119],\n",
       "         ...,\n",
       "         [157, 165, 195],\n",
       "         [157, 165, 195],\n",
       "         [158, 167, 197]],\n",
       " \n",
       "        [[ 15,  19,  20],\n",
       "         [ 41,  48,  60],\n",
       "         [ 88,  99, 126],\n",
       "         ...,\n",
       "         [153, 160, 193],\n",
       "         [156, 163, 196],\n",
       "         [158, 165, 198]],\n",
       " \n",
       "        [[ 17,  20,  22],\n",
       "         [ 42,  51,  62],\n",
       "         [ 94, 106, 132],\n",
       "         ...,\n",
       "         [146, 155, 189],\n",
       "         [149, 158, 192],\n",
       "         [152, 161, 195]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 89, 101, 124],\n",
       "         [109, 125, 151],\n",
       "         [109, 128, 159],\n",
       "         ...,\n",
       "         [113, 129, 176],\n",
       "         [113, 129, 175],\n",
       "         [115, 131, 178]],\n",
       " \n",
       "        [[ 87,  97, 120],\n",
       "         [108, 122, 149],\n",
       "         [107, 127, 157],\n",
       "         ...,\n",
       "         [113, 129, 175],\n",
       "         [112, 128, 174],\n",
       "         [114, 130, 176]],\n",
       " \n",
       "        [[ 85,  94, 117],\n",
       "         [105, 119, 146],\n",
       "         [107, 128, 157],\n",
       "         ...,\n",
       "         [110, 126, 171],\n",
       "         [110, 126, 172],\n",
       "         [113, 129, 175]]], dtype=uint8),\n",
       " array([[[ 75,  76,  75],\n",
       "         [ 64,  64,  69],\n",
       "         [113, 125, 149],\n",
       "         ...,\n",
       "         [113, 151, 198],\n",
       "         [112, 150, 198],\n",
       "         [116, 152, 200]],\n",
       " \n",
       "        [[ 89,  92,  89],\n",
       "         [ 66,  67,  71],\n",
       "         [122, 142, 169],\n",
       "         ...,\n",
       "         [115, 152, 199],\n",
       "         [118, 154, 200],\n",
       "         [115, 151, 199]],\n",
       " \n",
       "        [[ 62,  64,  65],\n",
       "         [ 70,  77,  84],\n",
       "         [109, 127, 151],\n",
       "         ...,\n",
       "         [120, 157, 203],\n",
       "         [120, 155, 202],\n",
       "         [116, 152, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 156, 190],\n",
       "         [122, 153, 192],\n",
       "         [120, 151, 190],\n",
       "         ...,\n",
       "         [ 75, 103, 147],\n",
       "         [ 87, 119, 165],\n",
       "         [107, 141, 186]],\n",
       " \n",
       "        [[126, 156, 192],\n",
       "         [122, 153, 192],\n",
       "         [122, 153, 192],\n",
       "         ...,\n",
       "         [ 74, 104, 148],\n",
       "         [ 97, 130, 176],\n",
       "         [105, 141, 189]],\n",
       " \n",
       "        [[125, 157, 193],\n",
       "         [118, 151, 190],\n",
       "         [118, 150, 191],\n",
       "         ...,\n",
       "         [ 77, 110, 156],\n",
       "         [100, 133, 179],\n",
       "         [104, 143, 191]]], dtype=uint8),\n",
       " array([[[104, 140, 185],\n",
       "         [103, 139, 186],\n",
       "         [104, 141, 186],\n",
       "         ...,\n",
       "         [110, 140, 175],\n",
       "         [114, 145, 178],\n",
       "         [114, 143, 177]],\n",
       " \n",
       "        [[107, 144, 190],\n",
       "         [102, 139, 185],\n",
       "         [101, 140, 184],\n",
       "         ...,\n",
       "         [106, 136, 171],\n",
       "         [109, 139, 174],\n",
       "         [111, 140, 175]],\n",
       " \n",
       "        [[105, 142, 187],\n",
       "         [109, 146, 190],\n",
       "         [102, 140, 184],\n",
       "         ...,\n",
       "         [105, 136, 171],\n",
       "         [109, 140, 173],\n",
       "         [107, 138, 171]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 67,  93, 127],\n",
       "         [ 67,  92, 126],\n",
       "         [ 63,  83, 118],\n",
       "         ...,\n",
       "         [ 81, 103, 131],\n",
       "         [ 83, 104, 134],\n",
       "         [ 85, 109, 140]],\n",
       " \n",
       "        [[ 71,  98, 132],\n",
       "         [ 70,  98, 132],\n",
       "         [ 63,  87, 122],\n",
       "         ...,\n",
       "         [ 87, 110, 140],\n",
       "         [ 87, 111, 143],\n",
       "         [ 83, 108, 140]],\n",
       " \n",
       "        [[ 78, 106, 141],\n",
       "         [ 76, 104, 139],\n",
       "         [ 72, 101, 135],\n",
       "         ...,\n",
       "         [ 86, 110, 141],\n",
       "         [ 86, 111, 143],\n",
       "         [ 85, 110, 143]]], dtype=uint8),\n",
       " array([[[ 74, 111, 163],\n",
       "         [ 82, 123, 177],\n",
       "         [ 91, 135, 189],\n",
       "         ...,\n",
       "         [146, 182, 229],\n",
       "         [145, 181, 227],\n",
       "         [145, 181, 229]],\n",
       " \n",
       "        [[ 77, 114, 169],\n",
       "         [ 86, 127, 182],\n",
       "         [ 87, 131, 185],\n",
       "         ...,\n",
       "         [144, 180, 226],\n",
       "         [142, 178, 226],\n",
       "         [143, 179, 227]],\n",
       " \n",
       "        [[ 84, 123, 179],\n",
       "         [ 85, 129, 183],\n",
       "         [ 91, 135, 188],\n",
       "         ...,\n",
       "         [140, 176, 223],\n",
       "         [142, 178, 226],\n",
       "         [141, 177, 225]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93, 139, 193],\n",
       "         [ 93, 138, 195],\n",
       "         [ 92, 139, 195],\n",
       "         ...,\n",
       "         [ 90, 143, 201],\n",
       "         [ 87, 140, 198],\n",
       "         [ 88, 141, 197]],\n",
       " \n",
       "        [[ 93, 139, 193],\n",
       "         [ 96, 142, 197],\n",
       "         [ 97, 144, 200],\n",
       "         ...,\n",
       "         [ 91, 145, 200],\n",
       "         [ 93, 146, 202],\n",
       "         [ 90, 144, 200]],\n",
       " \n",
       "        [[ 96, 142, 196],\n",
       "         [ 98, 145, 199],\n",
       "         [ 97, 147, 200],\n",
       "         ...,\n",
       "         [ 97, 150, 205],\n",
       "         [ 95, 149, 204],\n",
       "         [ 93, 147, 202]]], dtype=uint8),\n",
       " array([[[144, 179, 228],\n",
       "         [143, 179, 227],\n",
       "         [141, 177, 225],\n",
       "         ...,\n",
       "         [ 80, 118, 166],\n",
       "         [ 76, 112, 158],\n",
       "         [ 73, 107, 153]],\n",
       " \n",
       "        [[141, 177, 225],\n",
       "         [141, 177, 225],\n",
       "         [140, 176, 224],\n",
       "         ...,\n",
       "         [ 77, 115, 163],\n",
       "         [ 76, 111, 157],\n",
       "         [ 76, 110, 156]],\n",
       " \n",
       "        [[141, 177, 225],\n",
       "         [142, 178, 226],\n",
       "         [140, 176, 224],\n",
       "         ...,\n",
       "         [ 75, 111, 157],\n",
       "         [ 80, 114, 160],\n",
       "         [ 78, 112, 157]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 67, 113, 175],\n",
       "         [ 66, 113, 175],\n",
       "         [ 67, 113, 176],\n",
       "         ...,\n",
       "         [ 74, 113, 165],\n",
       "         [ 75, 114, 165],\n",
       "         [ 79, 115, 164]],\n",
       " \n",
       "        [[ 69, 114, 177],\n",
       "         [ 68, 115, 177],\n",
       "         [ 68, 115, 177],\n",
       "         ...,\n",
       "         [ 77, 117, 170],\n",
       "         [ 76, 116, 168],\n",
       "         [ 84, 122, 170]],\n",
       " \n",
       "        [[ 73, 122, 184],\n",
       "         [ 68, 117, 179],\n",
       "         [ 73, 122, 184],\n",
       "         ...,\n",
       "         [ 79, 123, 177],\n",
       "         [ 81, 123, 178],\n",
       "         [ 82, 122, 173]]], dtype=uint8),\n",
       " array([[[ 61,  73,  94],\n",
       "         [ 66,  79, 102],\n",
       "         [ 67,  81, 104],\n",
       "         ...,\n",
       "         [ 95, 117, 159],\n",
       "         [ 92, 114, 156],\n",
       "         [ 93, 115, 157]],\n",
       " \n",
       "        [[ 67,  80, 102],\n",
       "         [ 72,  86, 108],\n",
       "         [ 67,  81, 104],\n",
       "         ...,\n",
       "         [ 95, 117, 159],\n",
       "         [ 94, 116, 158],\n",
       "         [ 93, 114, 158]],\n",
       " \n",
       "        [[ 76,  90, 110],\n",
       "         [ 73,  86, 108],\n",
       "         [ 73,  87, 109],\n",
       "         ...,\n",
       "         [ 94, 113, 156],\n",
       "         [ 95, 114, 157],\n",
       "         [ 93, 112, 157]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78,  95, 123],\n",
       "         [ 69,  90, 123],\n",
       "         [ 65,  87, 123],\n",
       "         ...,\n",
       "         [ 43,  62,  97],\n",
       "         [ 44,  63,  98],\n",
       "         [ 46,  64, 101]],\n",
       " \n",
       "        [[ 77,  94, 122],\n",
       "         [ 70,  91, 124],\n",
       "         [ 67,  89, 125],\n",
       "         ...,\n",
       "         [ 44,  63,  98],\n",
       "         [ 43,  62,  97],\n",
       "         [ 48,  67, 105]],\n",
       " \n",
       "        [[ 79,  95, 123],\n",
       "         [ 71,  90, 125],\n",
       "         [ 67,  88, 124],\n",
       "         ...,\n",
       "         [ 44,  63,  98],\n",
       "         [ 48,  65, 102],\n",
       "         [ 52,  71, 109]]], dtype=uint8),\n",
       " array([[[ 95, 117, 162],\n",
       "         [ 99, 119, 162],\n",
       "         [ 97, 119, 160],\n",
       "         ...,\n",
       "         [110, 125, 158],\n",
       "         [115, 132, 169],\n",
       "         [116, 135, 173]],\n",
       " \n",
       "        [[ 87, 109, 151],\n",
       "         [ 93, 113, 154],\n",
       "         [ 91, 110, 151],\n",
       "         ...,\n",
       "         [ 88, 105, 132],\n",
       "         [ 91, 106, 135],\n",
       "         [108, 122, 159]],\n",
       " \n",
       "        [[ 79,  99, 141],\n",
       "         [ 85, 104, 146],\n",
       "         [ 81, 100, 138],\n",
       "         ...,\n",
       "         [ 79,  92, 117],\n",
       "         [ 80,  93, 121],\n",
       "         [ 86,  98, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 120, 174],\n",
       "         [ 86, 113, 165],\n",
       "         [ 82, 109, 158],\n",
       "         ...,\n",
       "         [105, 126, 171],\n",
       "         [106, 129, 174],\n",
       "         [113, 133, 179]],\n",
       " \n",
       "        [[107, 131, 182],\n",
       "         [ 99, 123, 174],\n",
       "         [ 95, 120, 171],\n",
       "         ...,\n",
       "         [107, 128, 174],\n",
       "         [109, 130, 177],\n",
       "         [113, 135, 179]],\n",
       " \n",
       "        [[109, 133, 185],\n",
       "         [106, 130, 182],\n",
       "         [105, 130, 181],\n",
       "         ...,\n",
       "         [105, 129, 176],\n",
       "         [109, 133, 178],\n",
       "         [113, 136, 182]]], dtype=uint8),\n",
       " array([[[ 29,  43,  66],\n",
       "         [ 39,  55,  79],\n",
       "         [ 38,  55,  82],\n",
       "         ...,\n",
       "         [ 61,  80, 117],\n",
       "         [ 61,  80, 117],\n",
       "         [ 57,  77, 113]],\n",
       " \n",
       "        [[ 38,  53,  77],\n",
       "         [ 42,  58,  85],\n",
       "         [ 44,  62,  91],\n",
       "         ...,\n",
       "         [ 60,  79, 116],\n",
       "         [ 61,  80, 115],\n",
       "         [ 59,  78, 113]],\n",
       " \n",
       "        [[ 39,  56,  83],\n",
       "         [ 44,  62,  90],\n",
       "         [ 43,  62,  91],\n",
       "         ...,\n",
       "         [ 61,  80, 117],\n",
       "         [ 61,  80, 115],\n",
       "         [ 60,  79, 114]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  74, 102],\n",
       "         [ 51,  73, 101],\n",
       "         [ 45,  68,  98],\n",
       "         ...,\n",
       "         [ 30,  51,  83],\n",
       "         [ 33,  54,  86],\n",
       "         [ 30,  53,  87]],\n",
       " \n",
       "        [[ 53,  74, 102],\n",
       "         [ 52,  74, 102],\n",
       "         [ 47,  70, 102],\n",
       "         ...,\n",
       "         [ 33,  58,  90],\n",
       "         [ 34,  59,  93],\n",
       "         [ 33,  58,  92]],\n",
       " \n",
       "        [[ 55,  77, 105],\n",
       "         [ 56,  78, 107],\n",
       "         [ 50,  73, 104],\n",
       "         ...,\n",
       "         [ 34,  58,  92],\n",
       "         [ 35,  59,  94],\n",
       "         [ 34,  59,  93]]], dtype=uint8),\n",
       " array([[[ 49,  69, 104],\n",
       "         [ 49,  69, 104],\n",
       "         [ 50,  70, 105],\n",
       "         ...,\n",
       "         [ 29,  39,  57],\n",
       "         [ 29,  39,  57],\n",
       "         [ 25,  32,  47]],\n",
       " \n",
       "        [[ 51,  71, 106],\n",
       "         [ 52,  72, 107],\n",
       "         [ 51,  71, 106],\n",
       "         ...,\n",
       "         [ 29,  39,  57],\n",
       "         [ 35,  44,  61],\n",
       "         [ 35,  43,  59]],\n",
       " \n",
       "        [[ 52,  72, 107],\n",
       "         [ 51,  71, 106],\n",
       "         [ 49,  69, 104],\n",
       "         ...,\n",
       "         [ 29,  40,  56],\n",
       "         [ 37,  46,  61],\n",
       "         [ 39,  48,  62]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 26,  40,  68],\n",
       "         [ 24,  38,  66],\n",
       "         [ 21,  34,  60],\n",
       "         ...,\n",
       "         [ 31,  48,  75],\n",
       "         [ 31,  48,  74],\n",
       "         [ 37,  52,  74]],\n",
       " \n",
       "        [[ 29,  43,  71],\n",
       "         [ 23,  37,  66],\n",
       "         [ 24,  37,  63],\n",
       "         ...,\n",
       "         [ 29,  47,  74],\n",
       "         [ 31,  48,  74],\n",
       "         [ 36,  51,  74]],\n",
       " \n",
       "        [[ 29,  46,  76],\n",
       "         [ 27,  41,  69],\n",
       "         [ 26,  39,  66],\n",
       "         ...,\n",
       "         [ 32,  49,  75],\n",
       "         [ 32,  49,  75],\n",
       "         [ 38,  52,  75]]], dtype=uint8),\n",
       " array([[[ 56,  50,  53],\n",
       "         [ 72,  72,  81],\n",
       "         [106, 110, 121],\n",
       "         ...,\n",
       "         [112, 123, 151],\n",
       "         [114, 125, 153],\n",
       "         [114, 125, 153]],\n",
       " \n",
       "        [[ 65,  61,  67],\n",
       "         [ 98,  99, 109],\n",
       "         [111, 115, 126],\n",
       "         ...,\n",
       "         [112, 123, 151],\n",
       "         [110, 121, 149],\n",
       "         [113, 124, 151]],\n",
       " \n",
       "        [[ 72,  70,  80],\n",
       "         [109, 110, 121],\n",
       "         [107, 109, 119],\n",
       "         ...,\n",
       "         [ 96, 108, 132],\n",
       "         [101, 114, 140],\n",
       "         [100, 112, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[151, 155, 170],\n",
       "         [154, 158, 174],\n",
       "         [160, 165, 180],\n",
       "         ...,\n",
       "         [ 89,  98, 117],\n",
       "         [ 97, 102, 122],\n",
       "         [ 55,  58,  75]],\n",
       " \n",
       "        [[149, 154, 169],\n",
       "         [154, 158, 176],\n",
       "         [158, 162, 180],\n",
       "         ...,\n",
       "         [ 98, 104, 127],\n",
       "         [109, 112, 131],\n",
       "         [ 46,  50,  72]],\n",
       " \n",
       "        [[150, 156, 171],\n",
       "         [152, 158, 176],\n",
       "         [159, 165, 184],\n",
       "         ...,\n",
       "         [116, 123, 143],\n",
       "         [ 88,  93, 114],\n",
       "         [ 97, 106, 128]]], dtype=uint8),\n",
       " array([[[129, 132, 153],\n",
       "         [127, 131, 151],\n",
       "         [130, 133, 154],\n",
       "         ...,\n",
       "         [180, 169, 185],\n",
       "         [180, 168, 186],\n",
       "         [178, 166, 185]],\n",
       " \n",
       "        [[133, 137, 156],\n",
       "         [132, 134, 154],\n",
       "         [126, 126, 147],\n",
       "         ...,\n",
       "         [181, 171, 184],\n",
       "         [181, 170, 186],\n",
       "         [182, 170, 188]],\n",
       " \n",
       "        [[130, 131, 151],\n",
       "         [126, 126, 145],\n",
       "         [125, 123, 141],\n",
       "         ...,\n",
       "         [180, 170, 182],\n",
       "         [179, 169, 183],\n",
       "         [182, 171, 187]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[149, 146, 173],\n",
       "         [150, 146, 176],\n",
       "         [151, 146, 176],\n",
       "         ...,\n",
       "         [148, 146, 175],\n",
       "         [145, 143, 172],\n",
       "         [143, 140, 169]],\n",
       " \n",
       "        [[151, 146, 174],\n",
       "         [152, 147, 177],\n",
       "         [155, 149, 180],\n",
       "         ...,\n",
       "         [149, 147, 176],\n",
       "         [146, 144, 173],\n",
       "         [147, 143, 172]],\n",
       " \n",
       "        [[157, 150, 179],\n",
       "         [157, 151, 181],\n",
       "         [158, 152, 182],\n",
       "         ...,\n",
       "         [149, 147, 176],\n",
       "         [146, 144, 173],\n",
       "         [148, 144, 173]]], dtype=uint8),\n",
       " array([[[148, 157, 190],\n",
       "         [147, 155, 190],\n",
       "         [146, 154, 191],\n",
       "         ...,\n",
       "         [ 65,  79, 108],\n",
       "         [ 65,  75, 104],\n",
       "         [ 49,  57,  81]],\n",
       " \n",
       "        [[150, 159, 193],\n",
       "         [148, 157, 191],\n",
       "         [146, 154, 191],\n",
       "         ...,\n",
       "         [ 65,  79, 108],\n",
       "         [ 66,  77, 106],\n",
       "         [ 57,  65,  89]],\n",
       " \n",
       "        [[149, 158, 192],\n",
       "         [148, 157, 191],\n",
       "         [146, 155, 190],\n",
       "         ...,\n",
       "         [ 63,  79, 108],\n",
       "         [ 64,  76, 105],\n",
       "         [ 59,  71,  95]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74,  91, 130],\n",
       "         [ 81,  97, 136],\n",
       "         [ 87, 101, 138],\n",
       "         ...,\n",
       "         [ 83,  99, 135],\n",
       "         [ 83, 100, 133],\n",
       "         [ 80,  98, 129]],\n",
       " \n",
       "        [[ 72,  90, 129],\n",
       "         [ 78,  95, 135],\n",
       "         [ 87, 102, 141],\n",
       "         ...,\n",
       "         [ 83,  99, 135],\n",
       "         [ 81,  98, 131],\n",
       "         [ 79,  97, 128]],\n",
       " \n",
       "        [[ 69,  87, 125],\n",
       "         [ 77,  94, 133],\n",
       "         [ 84, 100, 141],\n",
       "         ...,\n",
       "         [ 83,  99, 135],\n",
       "         [ 79,  96, 129],\n",
       "         [ 73,  91, 122]]], dtype=uint8),\n",
       " array([[[ 76,  91, 140],\n",
       "         [ 71,  88, 136],\n",
       "         [ 81,  99, 146],\n",
       "         ...,\n",
       "         [ 25,  34,  71],\n",
       "         [ 31,  41,  75],\n",
       "         [ 26,  36,  71]],\n",
       " \n",
       "        [[ 86, 101, 150],\n",
       "         [ 89, 106, 154],\n",
       "         [ 89, 107, 154],\n",
       "         ...,\n",
       "         [ 45,  56,  92],\n",
       "         [ 33,  45,  81],\n",
       "         [ 23,  35,  71]],\n",
       " \n",
       "        [[ 95, 110, 159],\n",
       "         [ 92, 109, 157],\n",
       "         [ 94, 112, 159],\n",
       "         ...,\n",
       "         [ 70,  83, 121],\n",
       "         [ 56,  68, 104],\n",
       "         [ 39,  51,  87]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[141, 164, 219],\n",
       "         [138, 161, 215],\n",
       "         [143, 166, 220],\n",
       "         ...,\n",
       "         [119, 137, 180],\n",
       "         [116, 134, 181],\n",
       "         [114, 132, 179]],\n",
       " \n",
       "        [[143, 163, 220],\n",
       "         [143, 163, 220],\n",
       "         [148, 168, 225],\n",
       "         ...,\n",
       "         [118, 138, 186],\n",
       "         [118, 136, 183],\n",
       "         [113, 131, 178]],\n",
       " \n",
       "        [[147, 166, 224],\n",
       "         [147, 167, 224],\n",
       "         [150, 170, 227],\n",
       "         ...,\n",
       "         [118, 138, 186],\n",
       "         [118, 137, 184],\n",
       "         [114, 132, 179]]], dtype=uint8),\n",
       " array([[[147, 145, 142],\n",
       "         [142, 138, 135],\n",
       "         [142, 137, 138],\n",
       "         ...,\n",
       "         [199, 207, 227],\n",
       "         [197, 205, 225],\n",
       "         [196, 204, 224]],\n",
       " \n",
       "        [[161, 159, 155],\n",
       "         [141, 137, 133],\n",
       "         [146, 140, 141],\n",
       "         ...,\n",
       "         [198, 205, 225],\n",
       "         [198, 205, 225],\n",
       "         [194, 202, 222]],\n",
       " \n",
       "        [[170, 167, 165],\n",
       "         [151, 149, 149],\n",
       "         [149, 147, 148],\n",
       "         ...,\n",
       "         [196, 202, 223],\n",
       "         [195, 202, 223],\n",
       "         [195, 202, 223]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[218, 221, 228],\n",
       "         [220, 225, 228],\n",
       "         [221, 226, 229],\n",
       "         ...,\n",
       "         [217, 223, 228],\n",
       "         [215, 221, 227],\n",
       "         [213, 218, 227]],\n",
       " \n",
       "        [[217, 219, 227],\n",
       "         [220, 222, 229],\n",
       "         [222, 225, 231],\n",
       "         ...,\n",
       "         [218, 225, 228],\n",
       "         [216, 221, 228],\n",
       "         [215, 218, 227]],\n",
       " \n",
       "        [[214, 218, 228],\n",
       "         [219, 220, 229],\n",
       "         [220, 222, 230],\n",
       "         ...,\n",
       "         [221, 224, 230],\n",
       "         [221, 221, 230],\n",
       "         [218, 220, 229]]], dtype=uint8),\n",
       " array([[[109, 122, 148],\n",
       "         [108, 121, 147],\n",
       "         [110, 123, 149],\n",
       "         ...,\n",
       "         [ 79,  98, 125],\n",
       "         [ 76,  96, 121],\n",
       "         [ 75,  93, 118]],\n",
       " \n",
       "        [[104, 116, 144],\n",
       "         [104, 115, 142],\n",
       "         [103, 113, 140],\n",
       "         ...,\n",
       "         [ 87, 104, 129],\n",
       "         [ 80,  97, 123],\n",
       "         [ 78,  95, 118]],\n",
       " \n",
       "        [[ 93, 104, 131],\n",
       "         [ 91, 103, 129],\n",
       "         [ 87,  98, 123],\n",
       "         ...,\n",
       "         [ 84, 103, 126],\n",
       "         [ 81,  99, 122],\n",
       "         [ 79,  97, 120]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 74,  86, 113],\n",
       "         [ 87, 100, 128],\n",
       "         [ 86,  99, 127],\n",
       "         ...,\n",
       "         [ 98, 113, 139],\n",
       "         [ 96, 111, 137],\n",
       "         [ 96, 111, 135]],\n",
       " \n",
       "        [[ 85,  97, 125],\n",
       "         [ 89, 103, 132],\n",
       "         [ 89, 105, 134],\n",
       "         ...,\n",
       "         [ 99, 114, 140],\n",
       "         [ 99, 114, 140],\n",
       "         [ 98, 112, 136]],\n",
       " \n",
       "        [[ 84,  98, 127],\n",
       "         [ 90, 102, 135],\n",
       "         [ 91, 104, 136],\n",
       "         ...,\n",
       "         [100, 115, 141],\n",
       "         [ 97, 112, 138],\n",
       "         [100, 114, 141]]], dtype=uint8),\n",
       " array([[[161, 177, 223],\n",
       "         [160, 176, 222],\n",
       "         [159, 175, 221],\n",
       "         ...,\n",
       "         [140, 156, 202],\n",
       "         [135, 154, 199],\n",
       "         [132, 153, 200]],\n",
       " \n",
       "        [[158, 174, 220],\n",
       "         [157, 173, 219],\n",
       "         [155, 171, 217],\n",
       "         ...,\n",
       "         [141, 157, 203],\n",
       "         [137, 156, 201],\n",
       "         [133, 154, 202]],\n",
       " \n",
       "        [[151, 167, 213],\n",
       "         [153, 169, 215],\n",
       "         [151, 168, 212],\n",
       "         ...,\n",
       "         [133, 149, 195],\n",
       "         [138, 156, 202],\n",
       "         [138, 158, 205]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 66,  91, 136],\n",
       "         [ 68,  84, 133],\n",
       "         [ 73,  87, 136],\n",
       "         ...,\n",
       "         [127, 151, 201],\n",
       "         [126, 150, 200],\n",
       "         [131, 145, 199]],\n",
       " \n",
       "        [[ 72,  96, 148],\n",
       "         [ 74,  91, 141],\n",
       "         [ 77,  94, 143],\n",
       "         ...,\n",
       "         [130, 154, 205],\n",
       "         [124, 149, 199],\n",
       "         [110, 119, 174]],\n",
       " \n",
       "        [[ 87, 104, 157],\n",
       "         [ 82, 102, 151],\n",
       "         [ 81, 101, 149],\n",
       "         ...,\n",
       "         [130, 155, 205],\n",
       "         [125, 150, 201],\n",
       "         [ 74,  79, 137]]], dtype=uint8),\n",
       " array([[[ 99, 107, 136],\n",
       "         [100, 109, 136],\n",
       "         [103, 112, 139],\n",
       "         ...,\n",
       "         [182, 182, 196],\n",
       "         [181, 181, 197],\n",
       "         [182, 182, 198]],\n",
       " \n",
       "        [[101, 109, 137],\n",
       "         [101, 110, 137],\n",
       "         [103, 112, 139],\n",
       "         ...,\n",
       "         [181, 180, 196],\n",
       "         [181, 181, 197],\n",
       "         [182, 182, 198]],\n",
       " \n",
       "        [[103, 112, 140],\n",
       "         [102, 111, 138],\n",
       "         [103, 112, 139],\n",
       "         ...,\n",
       "         [180, 180, 196],\n",
       "         [181, 181, 197],\n",
       "         [182, 182, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 159, 184],\n",
       "         [161, 165, 189],\n",
       "         [166, 171, 193],\n",
       "         ...,\n",
       "         [125, 129, 157],\n",
       "         [124, 127, 156],\n",
       "         [124, 129, 157]],\n",
       " \n",
       "        [[155, 160, 185],\n",
       "         [161, 165, 189],\n",
       "         [168, 173, 195],\n",
       "         ...,\n",
       "         [132, 136, 164],\n",
       "         [130, 134, 162],\n",
       "         [130, 134, 162]],\n",
       " \n",
       "        [[156, 161, 186],\n",
       "         [162, 166, 190],\n",
       "         [169, 173, 195],\n",
       "         ...,\n",
       "         [138, 143, 167],\n",
       "         [135, 139, 167],\n",
       "         [134, 138, 166]]], dtype=uint8),\n",
       " array([[[170, 179, 199],\n",
       "         [172, 181, 201],\n",
       "         [172, 181, 201],\n",
       "         ...,\n",
       "         [137, 163, 180],\n",
       "         [132, 157, 178],\n",
       "         [124, 149, 175]],\n",
       " \n",
       "        [[169, 178, 198],\n",
       "         [169, 178, 198],\n",
       "         [168, 177, 197],\n",
       "         ...,\n",
       "         [137, 162, 182],\n",
       "         [133, 159, 179],\n",
       "         [125, 150, 175]],\n",
       " \n",
       "        [[165, 176, 196],\n",
       "         [163, 174, 194],\n",
       "         [163, 173, 193],\n",
       "         ...,\n",
       "         [136, 160, 180],\n",
       "         [133, 157, 179],\n",
       "         [125, 150, 174]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[157, 169, 187],\n",
       "         [139, 150, 170],\n",
       "         [119, 131, 154],\n",
       "         ...,\n",
       "         [ 48,  60,  78],\n",
       "         [ 29,  34,  52],\n",
       "         [ 19,  18,  36]],\n",
       " \n",
       "        [[174, 186, 204],\n",
       "         [160, 171, 190],\n",
       "         [136, 148, 169],\n",
       "         ...,\n",
       "         [ 35,  45,  64],\n",
       "         [ 20,  24,  42],\n",
       "         [ 15,  15,  31]],\n",
       " \n",
       "        [[179, 191, 209],\n",
       "         [171, 182, 201],\n",
       "         [159, 171, 193],\n",
       "         ...,\n",
       "         [ 23,  32,  52],\n",
       "         [ 23,  25,  43],\n",
       "         [ 21,  19,  35]]], dtype=uint8),\n",
       " array([[[107, 121, 154],\n",
       "         [119, 135, 168],\n",
       "         [123, 138, 171],\n",
       "         ...,\n",
       "         [131, 150, 193],\n",
       "         [129, 149, 192],\n",
       "         [125, 146, 191]],\n",
       " \n",
       "        [[114, 130, 162],\n",
       "         [123, 138, 170],\n",
       "         [125, 140, 172],\n",
       "         ...,\n",
       "         [131, 150, 193],\n",
       "         [129, 149, 193],\n",
       "         [126, 146, 192]],\n",
       " \n",
       "        [[120, 135, 167],\n",
       "         [124, 139, 170],\n",
       "         [126, 141, 173],\n",
       "         ...,\n",
       "         [134, 151, 194],\n",
       "         [129, 149, 191],\n",
       "         [127, 146, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 146, 180],\n",
       "         [124, 144, 179],\n",
       "         [122, 142, 178],\n",
       "         ...,\n",
       "         [110, 130, 179],\n",
       "         [115, 135, 183],\n",
       "         [115, 137, 185]],\n",
       " \n",
       "        [[128, 147, 182],\n",
       "         [130, 148, 185],\n",
       "         [126, 145, 182],\n",
       "         ...,\n",
       "         [117, 136, 183],\n",
       "         [118, 138, 185],\n",
       "         [121, 141, 188]],\n",
       " \n",
       "        [[130, 149, 185],\n",
       "         [129, 148, 185],\n",
       "         [130, 149, 186],\n",
       "         ...,\n",
       "         [120, 140, 187],\n",
       "         [122, 142, 188],\n",
       "         [120, 143, 189]]], dtype=uint8),\n",
       " array([[[110, 120, 150],\n",
       "         [111, 120, 153],\n",
       "         [110, 119, 153],\n",
       "         ...,\n",
       "         [ 60,  63,  92],\n",
       "         [ 56,  60,  88],\n",
       "         [ 57,  64,  91]],\n",
       " \n",
       "        [[107, 116, 149],\n",
       "         [109, 118, 152],\n",
       "         [107, 116, 150],\n",
       "         ...,\n",
       "         [ 61,  66,  91],\n",
       "         [ 57,  62,  87],\n",
       "         [ 58,  62,  90]],\n",
       " \n",
       "        [[109, 118, 152],\n",
       "         [109, 118, 152],\n",
       "         [100, 109, 142],\n",
       "         ...,\n",
       "         [ 57,  63,  86],\n",
       "         [ 56,  62,  85],\n",
       "         [ 58,  61,  89]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 93, 102, 129],\n",
       "         [ 83,  92, 119],\n",
       "         [ 82,  91, 118],\n",
       "         ...,\n",
       "         [ 83,  95, 129],\n",
       "         [ 92, 107, 143],\n",
       "         [100, 114, 150]],\n",
       " \n",
       "        [[ 89,  97, 126],\n",
       "         [ 83,  91, 120],\n",
       "         [ 76,  84, 113],\n",
       "         ...,\n",
       "         [ 84,  98, 131],\n",
       "         [ 93, 109, 145],\n",
       "         [100, 114, 150]],\n",
       " \n",
       "        [[ 84,  95, 123],\n",
       "         [ 80,  91, 119],\n",
       "         [ 73,  84, 112],\n",
       "         ...,\n",
       "         [ 88, 103, 139],\n",
       "         [ 96, 113, 149],\n",
       "         [ 96, 110, 146]]], dtype=uint8),\n",
       " array([[[ 61,  60,  68],\n",
       "         [ 63,  65,  75],\n",
       "         [ 68,  69,  83],\n",
       "         ...,\n",
       "         [ 84,  94, 124],\n",
       "         [ 85,  96, 125],\n",
       "         [ 88,  98, 130]],\n",
       " \n",
       "        [[ 61,  63,  73],\n",
       "         [ 62,  64,  74],\n",
       "         [ 66,  67,  81],\n",
       "         ...,\n",
       "         [ 81,  92, 118],\n",
       "         [ 85,  94, 122],\n",
       "         [ 85,  94, 126]],\n",
       " \n",
       "        [[ 63,  64,  74],\n",
       "         [ 64,  69,  77],\n",
       "         [ 68,  69,  83],\n",
       "         ...,\n",
       "         [ 77,  86, 112],\n",
       "         [ 82,  89, 116],\n",
       "         [ 84,  93, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 69,  75,  91],\n",
       "         [ 64,  69,  87],\n",
       "         [ 64,  68,  86],\n",
       "         ...,\n",
       "         [ 61,  72, 100],\n",
       "         [ 60,  71,  99],\n",
       "         [ 61,  72, 100]],\n",
       " \n",
       "        [[ 68,  74,  93],\n",
       "         [ 65,  71,  90],\n",
       "         [ 63,  69,  88],\n",
       "         ...,\n",
       "         [ 61,  72, 100],\n",
       "         [ 62,  73, 101],\n",
       "         [ 64,  75, 103]],\n",
       " \n",
       "        [[ 67,  74,  93],\n",
       "         [ 68,  75,  95],\n",
       "         [ 64,  70,  92],\n",
       "         ...,\n",
       "         [ 61,  72, 100],\n",
       "         [ 64,  72, 101],\n",
       "         [ 63,  72, 101]]], dtype=uint8),\n",
       " array([[[126, 130, 161],\n",
       "         [126, 129, 159],\n",
       "         [128, 132, 159],\n",
       "         ...,\n",
       "         [146, 145, 162],\n",
       "         [109, 107, 114],\n",
       "         [ 99,  95,  99]],\n",
       " \n",
       "        [[122, 128, 158],\n",
       "         [119, 123, 152],\n",
       "         [124, 127, 153],\n",
       "         ...,\n",
       "         [160, 159, 176],\n",
       "         [121, 119, 127],\n",
       "         [ 99,  96,  99]],\n",
       " \n",
       "        [[118, 123, 152],\n",
       "         [117, 119, 150],\n",
       "         [115, 119, 147],\n",
       "         ...,\n",
       "         [176, 175, 191],\n",
       "         [136, 133, 147],\n",
       "         [105, 100, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[172, 179, 210],\n",
       "         [171, 175, 204],\n",
       "         [170, 174, 200],\n",
       "         ...,\n",
       "         [196, 193, 208],\n",
       "         [201, 198, 210],\n",
       "         [202, 200, 212]],\n",
       " \n",
       "        [[174, 180, 209],\n",
       "         [176, 182, 209],\n",
       "         [177, 180, 208],\n",
       "         ...,\n",
       "         [200, 197, 212],\n",
       "         [203, 201, 213],\n",
       "         [203, 201, 213]],\n",
       " \n",
       "        [[175, 181, 211],\n",
       "         [177, 183, 212],\n",
       "         [178, 182, 210],\n",
       "         ...,\n",
       "         [203, 201, 215],\n",
       "         [202, 199, 214],\n",
       "         [203, 201, 213]]], dtype=uint8),\n",
       " array([[[ 71,  89, 113],\n",
       "         [ 79,  96, 123],\n",
       "         [ 78,  94, 122],\n",
       "         ...,\n",
       "         [138, 149, 177],\n",
       "         [143, 155, 184],\n",
       "         [148, 161, 192]],\n",
       " \n",
       "        [[ 72,  89, 116],\n",
       "         [ 75,  92, 119],\n",
       "         [ 78,  95, 122],\n",
       "         ...,\n",
       "         [144, 155, 182],\n",
       "         [147, 159, 187],\n",
       "         [148, 162, 191]],\n",
       " \n",
       "        [[ 84, 101, 128],\n",
       "         [ 83, 100, 127],\n",
       "         [ 77,  94, 121],\n",
       "         ...,\n",
       "         [145, 156, 183],\n",
       "         [150, 163, 189],\n",
       "         [149, 163, 191]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 83, 104, 131],\n",
       "         [ 74,  95, 122],\n",
       "         [ 71,  92, 119],\n",
       "         ...,\n",
       "         [ 61,  83, 110],\n",
       "         [ 63,  87, 117],\n",
       "         [ 73,  94, 129]],\n",
       " \n",
       "        [[ 81, 102, 129],\n",
       "         [ 77,  98, 125],\n",
       "         [ 76,  97, 124],\n",
       "         ...,\n",
       "         [ 62,  83, 114],\n",
       "         [ 71,  91, 124],\n",
       "         [ 77,  97, 132]],\n",
       " \n",
       "        [[ 91, 112, 139],\n",
       "         [ 81, 102, 129],\n",
       "         [ 82, 103, 131],\n",
       "         ...,\n",
       "         [ 66,  87, 118],\n",
       "         [ 75,  96, 129],\n",
       "         [ 79,  99, 134]]], dtype=uint8),\n",
       " array([[[138, 157, 175],\n",
       "         [141, 161, 178],\n",
       "         [142, 163, 180],\n",
       "         ...,\n",
       "         [201, 203, 213],\n",
       "         [200, 205, 214],\n",
       "         [201, 203, 213]],\n",
       " \n",
       "        [[139, 159, 176],\n",
       "         [140, 159, 176],\n",
       "         [137, 160, 176],\n",
       "         ...,\n",
       "         [200, 202, 210],\n",
       "         [202, 205, 213],\n",
       "         [203, 206, 214]],\n",
       " \n",
       "        [[136, 158, 170],\n",
       "         [133, 155, 167],\n",
       "         [123, 145, 157],\n",
       "         ...,\n",
       "         [200, 199, 208],\n",
       "         [203, 202, 211],\n",
       "         [204, 206, 214]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[141, 163, 188],\n",
       "         [141, 162, 188],\n",
       "         [139, 161, 186],\n",
       "         ...,\n",
       "         [145, 169, 187],\n",
       "         [148, 171, 191],\n",
       "         [151, 169, 192]],\n",
       " \n",
       "        [[144, 166, 191],\n",
       "         [142, 164, 189],\n",
       "         [141, 163, 188],\n",
       "         ...,\n",
       "         [149, 173, 193],\n",
       "         [150, 171, 193],\n",
       "         [154, 172, 195]],\n",
       " \n",
       "        [[145, 167, 192],\n",
       "         [145, 167, 192],\n",
       "         [142, 166, 190],\n",
       "         ...,\n",
       "         [151, 174, 192],\n",
       "         [153, 176, 194],\n",
       "         [155, 175, 197]]], dtype=uint8),\n",
       " array([[[209, 211, 219],\n",
       "         [210, 211, 219],\n",
       "         [209, 210, 218],\n",
       "         ...,\n",
       "         [171, 189, 200],\n",
       "         [161, 182, 197],\n",
       "         [150, 171, 187]],\n",
       " \n",
       "        [[208, 209, 219],\n",
       "         [210, 213, 217],\n",
       "         [208, 209, 219],\n",
       "         ...,\n",
       "         [162, 181, 192],\n",
       "         [161, 180, 191],\n",
       "         [154, 173, 187]],\n",
       " \n",
       "        [[210, 209, 218],\n",
       "         [212, 211, 218],\n",
       "         [212, 210, 216],\n",
       "         ...,\n",
       "         [151, 167, 179],\n",
       "         [146, 163, 176],\n",
       "         [147, 164, 177]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 155, 174],\n",
       "         [138, 156, 176],\n",
       "         [142, 157, 176],\n",
       "         ...,\n",
       "         [183, 196, 209],\n",
       "         [190, 201, 213],\n",
       "         [194, 204, 215]],\n",
       " \n",
       "        [[136, 155, 176],\n",
       "         [138, 156, 177],\n",
       "         [143, 158, 177],\n",
       "         ...,\n",
       "         [190, 203, 212],\n",
       "         [194, 205, 216],\n",
       "         [197, 206, 219]],\n",
       " \n",
       "        [[137, 156, 177],\n",
       "         [137, 156, 177],\n",
       "         [144, 158, 180],\n",
       "         ...,\n",
       "         [195, 206, 215],\n",
       "         [200, 210, 219],\n",
       "         [199, 210, 219]]], dtype=uint8),\n",
       " array([[[198, 211, 237],\n",
       "         [198, 211, 237],\n",
       "         [198, 211, 237],\n",
       "         ...,\n",
       "         [153, 173, 200],\n",
       "         [147, 168, 196],\n",
       "         [138, 161, 194]],\n",
       " \n",
       "        [[198, 211, 237],\n",
       "         [198, 211, 237],\n",
       "         [198, 211, 237],\n",
       "         ...,\n",
       "         [ 63,  68,  95],\n",
       "         [128, 144, 171],\n",
       "         [133, 159, 187]],\n",
       " \n",
       "        [[197, 210, 236],\n",
       "         [197, 210, 236],\n",
       "         [197, 209, 236],\n",
       "         ...,\n",
       "         [ 35,  39,  64],\n",
       "         [ 33,  44,  72],\n",
       "         [ 75,  92, 119]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[179, 200, 228],\n",
       "         [182, 203, 230],\n",
       "         [184, 203, 230],\n",
       "         ...,\n",
       "         [174, 201, 235],\n",
       "         [173, 201, 236],\n",
       "         [168, 198, 234]],\n",
       " \n",
       "        [[179, 200, 228],\n",
       "         [184, 205, 232],\n",
       "         [183, 205, 232],\n",
       "         ...,\n",
       "         [173, 201, 235],\n",
       "         [172, 200, 235],\n",
       "         [167, 196, 233]],\n",
       " \n",
       "        [[181, 202, 229],\n",
       "         [184, 205, 232],\n",
       "         [186, 207, 234],\n",
       "         ...,\n",
       "         [173, 200, 234],\n",
       "         [171, 199, 234],\n",
       "         [166, 196, 232]]], dtype=uint8),\n",
       " array([[[ 41,  68,  72],\n",
       "         [ 51,  84,  90],\n",
       "         [ 51,  84,  90],\n",
       "         ...,\n",
       "         [ 77, 109, 138],\n",
       "         [ 78, 111, 140],\n",
       "         [ 78, 109, 139]],\n",
       " \n",
       "        [[ 46,  78,  78],\n",
       "         [ 50,  81,  86],\n",
       "         [ 53,  85,  88],\n",
       "         ...,\n",
       "         [ 82, 111, 138],\n",
       "         [ 84, 113, 142],\n",
       "         [ 83, 114, 144]],\n",
       " \n",
       "        [[ 52,  76,  77],\n",
       "         [ 47,  70,  70],\n",
       "         [ 38,  61,  61],\n",
       "         ...,\n",
       "         [ 89, 114, 137],\n",
       "         [ 91, 116, 141],\n",
       "         [ 85, 113, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 91, 118, 139],\n",
       "         [ 90, 117, 137],\n",
       "         [ 90, 117, 137],\n",
       "         ...,\n",
       "         [ 48,  73, 100],\n",
       "         [ 46,  71,  97],\n",
       "         [ 53,  80, 104]],\n",
       " \n",
       "        [[ 87, 116, 136],\n",
       "         [ 90, 116, 138],\n",
       "         [ 85, 116, 139],\n",
       "         ...,\n",
       "         [ 50,  77, 105],\n",
       "         [ 53,  77, 110],\n",
       "         [ 57,  85, 113]],\n",
       " \n",
       "        [[ 87, 115, 137],\n",
       "         [ 90, 115, 139],\n",
       "         [ 85, 115, 140],\n",
       "         ...,\n",
       "         [ 65,  89, 120],\n",
       "         [ 64,  91, 122],\n",
       "         [ 62,  91, 121]]], dtype=uint8),\n",
       " array([[[100, 134, 163],\n",
       "         [ 98, 133, 159],\n",
       "         [101, 135, 159],\n",
       "         ...,\n",
       "         [139, 179, 183],\n",
       "         [136, 176, 181],\n",
       "         [154, 194, 199]],\n",
       " \n",
       "        [[ 97, 131, 160],\n",
       "         [ 99, 134, 160],\n",
       "         [101, 135, 159],\n",
       "         ...,\n",
       "         [110, 151, 156],\n",
       "         [130, 173, 176],\n",
       "         [131, 174, 177]],\n",
       " \n",
       "        [[102, 135, 160],\n",
       "         [100, 134, 157],\n",
       "         [ 99, 131, 155],\n",
       "         ...,\n",
       "         [107, 144, 149],\n",
       "         [103, 143, 146],\n",
       "         [122, 163, 166]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 94, 136, 163],\n",
       "         [ 84, 125, 150],\n",
       "         [ 70, 109, 130],\n",
       "         ...,\n",
       "         [153, 188, 201],\n",
       "         [157, 194, 206],\n",
       "         [168, 209, 218]],\n",
       " \n",
       "        [[102, 142, 170],\n",
       "         [ 90, 132, 156],\n",
       "         [ 81, 118, 140],\n",
       "         ...,\n",
       "         [155, 190, 203],\n",
       "         [158, 194, 207],\n",
       "         [166, 209, 216]],\n",
       " \n",
       "        [[108, 148, 176],\n",
       "         [ 97, 137, 163],\n",
       "         [ 86, 125, 150],\n",
       "         ...,\n",
       "         [153, 188, 201],\n",
       "         [161, 197, 211],\n",
       "         [170, 210, 219]]], dtype=uint8),\n",
       " array([[[127, 152, 184],\n",
       "         [127, 152, 184],\n",
       "         [128, 153, 185],\n",
       "         ...,\n",
       "         [ 64,  83,  99],\n",
       "         [ 55,  74,  87],\n",
       "         [ 46,  63,  73]],\n",
       " \n",
       "        [[130, 155, 189],\n",
       "         [130, 155, 187],\n",
       "         [130, 155, 187],\n",
       "         ...,\n",
       "         [ 62,  82,  98],\n",
       "         [ 61,  80,  93],\n",
       "         [ 49,  67,  77]],\n",
       " \n",
       "        [[127, 153, 186],\n",
       "         [130, 155, 187],\n",
       "         [131, 156, 188],\n",
       "         ...,\n",
       "         [ 60,  80,  99],\n",
       "         [ 57,  78,  93],\n",
       "         [ 54,  73,  85]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[127, 151, 192],\n",
       "         [100, 123, 164],\n",
       "         [ 86, 108, 149],\n",
       "         ...,\n",
       "         [ 57,  75, 108],\n",
       "         [ 56,  76, 110],\n",
       "         [ 57,  76, 112]],\n",
       " \n",
       "        [[131, 156, 197],\n",
       "         [107, 128, 169],\n",
       "         [ 88, 110, 151],\n",
       "         ...,\n",
       "         [ 72,  96, 128],\n",
       "         [ 69,  92, 125],\n",
       "         [ 67,  88, 123]],\n",
       " \n",
       "        [[133, 159, 200],\n",
       "         [110, 135, 175],\n",
       "         [ 92, 117, 157],\n",
       "         ...,\n",
       "         [ 77, 103, 140],\n",
       "         [ 78, 104, 139],\n",
       "         [ 79, 104, 139]]], dtype=uint8),\n",
       " array([[[ 25,  60, 103],\n",
       "         [ 19,  54,  97],\n",
       "         [ 32,  67, 109],\n",
       "         ...,\n",
       "         [ 82,  97, 134],\n",
       "         [ 90, 101, 139],\n",
       "         [ 95, 105, 143]],\n",
       " \n",
       "        [[ 26,  61, 104],\n",
       "         [ 23,  58, 101],\n",
       "         [ 30,  65, 108],\n",
       "         ...,\n",
       "         [ 77,  93, 130],\n",
       "         [ 79,  97, 134],\n",
       "         [ 86,  98, 136]],\n",
       " \n",
       "        [[ 27,  62, 105],\n",
       "         [ 34,  70, 110],\n",
       "         [ 40,  76, 115],\n",
       "         ...,\n",
       "         [ 72,  88, 125],\n",
       "         [ 76,  95, 132],\n",
       "         [ 87, 100, 138]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 31,  58, 102],\n",
       "         [ 32,  59, 103],\n",
       "         [ 25,  50,  94],\n",
       "         ...,\n",
       "         [  2,  16,  61],\n",
       "         [  2,  22,  73],\n",
       "         [  7,  31,  85]],\n",
       " \n",
       "        [[ 33,  62, 107],\n",
       "         [ 30,  57, 103],\n",
       "         [ 32,  55, 101],\n",
       "         ...,\n",
       "         [  2,  19,  66],\n",
       "         [  2,  24,  75],\n",
       "         [  7,  32,  88]],\n",
       " \n",
       "        [[ 26,  56, 102],\n",
       "         [ 27,  57, 101],\n",
       "         [ 26,  51,  98],\n",
       "         ...,\n",
       "         [  3,  22,  72],\n",
       "         [  5,  28,  81],\n",
       "         [  5,  33,  89]]], dtype=uint8),\n",
       " array([[[155, 144, 176],\n",
       "         [153, 138, 169],\n",
       "         [167, 149, 178],\n",
       "         ...,\n",
       "         [123, 136, 162],\n",
       "         [112, 128, 152],\n",
       "         [ 82,  93, 110]],\n",
       " \n",
       "        [[153, 142, 174],\n",
       "         [153, 138, 169],\n",
       "         [161, 145, 173],\n",
       "         ...,\n",
       "         [131, 144, 167],\n",
       "         [121, 136, 161],\n",
       "         [ 96, 109, 129]],\n",
       " \n",
       "        [[146, 136, 166],\n",
       "         [153, 138, 169],\n",
       "         [152, 136, 168],\n",
       "         ...,\n",
       "         [135, 144, 165],\n",
       "         [121, 137, 160],\n",
       "         [112, 123, 142]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88,  88, 121],\n",
       "         [ 96,  90, 125],\n",
       "         [110,  96, 127],\n",
       "         ...,\n",
       "         [134, 123, 154],\n",
       "         [135, 127, 158],\n",
       "         [136, 128, 158]],\n",
       " \n",
       "        [[ 90,  89, 126],\n",
       "         [ 95,  89, 124],\n",
       "         [102,  93, 126],\n",
       "         ...,\n",
       "         [139, 130, 158],\n",
       "         [135, 127, 156],\n",
       "         [140, 132, 162]],\n",
       " \n",
       "        [[ 95,  96, 132],\n",
       "         [ 96,  92, 127],\n",
       "         [100,  94, 129],\n",
       "         ...,\n",
       "         [140, 128, 156],\n",
       "         [138, 128, 155],\n",
       "         [140, 133, 160]]], dtype=uint8),\n",
       " array([[[160, 186, 220],\n",
       "         [161, 189, 220],\n",
       "         [163, 191, 221],\n",
       "         ...,\n",
       "         [ 88, 108, 139],\n",
       "         [ 82, 102, 130],\n",
       "         [ 70,  89, 115]],\n",
       " \n",
       "        [[158, 185, 219],\n",
       "         [162, 189, 220],\n",
       "         [168, 194, 224],\n",
       "         ...,\n",
       "         [ 91, 111, 142],\n",
       "         [ 86, 106, 133],\n",
       "         [ 75,  93, 120]],\n",
       " \n",
       "        [[158, 186, 217],\n",
       "         [163, 189, 219],\n",
       "         [162, 186, 217],\n",
       "         ...,\n",
       "         [ 94, 116, 143],\n",
       "         [ 89, 110, 137],\n",
       "         [ 78,  96, 126]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[147, 176, 223],\n",
       "         [139, 169, 216],\n",
       "         [119, 147, 194],\n",
       "         ...,\n",
       "         [165, 197, 239],\n",
       "         [157, 192, 233],\n",
       "         [152, 186, 229]],\n",
       " \n",
       "        [[149, 178, 225],\n",
       "         [144, 173, 220],\n",
       "         [133, 162, 209],\n",
       "         ...,\n",
       "         [162, 197, 237],\n",
       "         [158, 192, 232],\n",
       "         [151, 185, 228]],\n",
       " \n",
       "        [[150, 180, 227],\n",
       "         [150, 178, 225],\n",
       "         [136, 164, 214],\n",
       "         ...,\n",
       "         [163, 198, 238],\n",
       "         [155, 190, 233],\n",
       "         [149, 184, 227]]], dtype=uint8),\n",
       " array([[[ 56,  71,  89],\n",
       "         [ 52,  63,  80],\n",
       "         [ 42,  48,  63],\n",
       "         ...,\n",
       "         [112, 107, 136],\n",
       "         [111, 106, 134],\n",
       "         [118, 114, 142]],\n",
       " \n",
       "        [[ 43,  58,  75],\n",
       "         [ 47,  57,  74],\n",
       "         [ 49,  54,  70],\n",
       "         ...,\n",
       "         [110, 105, 134],\n",
       "         [117, 111, 140],\n",
       "         [108, 103, 132]],\n",
       " \n",
       "        [[ 39,  55,  73],\n",
       "         [ 51,  63,  81],\n",
       "         [ 49,  56,  74],\n",
       "         ...,\n",
       "         [109, 105, 132],\n",
       "         [109, 105, 132],\n",
       "         [112, 107, 136]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 72,  95, 123],\n",
       "         [ 69,  88, 117],\n",
       "         [ 74,  88, 116],\n",
       "         ...,\n",
       "         [ 82,  91, 118],\n",
       "         [ 62,  73, 101],\n",
       "         [ 59,  71,  99]],\n",
       " \n",
       "        [[ 65,  86, 114],\n",
       "         [ 64,  84, 112],\n",
       "         [ 67,  81, 109],\n",
       "         ...,\n",
       "         [ 86,  97, 124],\n",
       "         [ 70,  82, 111],\n",
       "         [ 57,  70,  99]],\n",
       " \n",
       "        [[ 63,  84, 112],\n",
       "         [ 61,  81, 109],\n",
       "         [ 71,  86, 114],\n",
       "         ...,\n",
       "         [ 78,  90, 119],\n",
       "         [ 63,  77, 105],\n",
       "         [ 62,  76, 105]]], dtype=uint8),\n",
       " array([[[138, 133, 135],\n",
       "         [138, 131, 134],\n",
       "         [138, 129, 132],\n",
       "         ...,\n",
       "         [ 72,  78,  75],\n",
       "         [ 79,  85,  82],\n",
       "         [ 78,  85,  82]],\n",
       " \n",
       "        [[134, 129, 131],\n",
       "         [133, 127, 130],\n",
       "         [135, 126, 129],\n",
       "         ...,\n",
       "         [ 64,  65,  63],\n",
       "         [ 68,  72,  70],\n",
       "         [ 75,  82,  79]],\n",
       " \n",
       "        [[128, 124, 126],\n",
       "         [128, 121, 124],\n",
       "         [126, 117, 120],\n",
       "         ...,\n",
       "         [ 53,  52,  51],\n",
       "         [ 55,  58,  57],\n",
       "         [ 59,  66,  63]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 109, 117],\n",
       "         [107, 108, 117],\n",
       "         [107, 109, 117],\n",
       "         ...,\n",
       "         [100, 100, 100],\n",
       "         [ 99,  99,  99],\n",
       "         [ 97,  97,  97]],\n",
       " \n",
       "        [[112, 111, 120],\n",
       "         [110, 112, 120],\n",
       "         [109, 113, 121],\n",
       "         ...,\n",
       "         [101, 101, 101],\n",
       "         [ 99,  99,  99],\n",
       "         [ 98,  98,  98]],\n",
       " \n",
       "        [[112, 114, 122],\n",
       "         [112, 115, 123],\n",
       "         [111, 117, 124],\n",
       "         ...,\n",
       "         [103, 102, 105],\n",
       "         [ 98,  99, 100],\n",
       "         [ 96,  98,  98]]], dtype=uint8),\n",
       " array([[[129, 130, 156],\n",
       "         [133, 134, 160],\n",
       "         [125, 125, 154],\n",
       "         ...,\n",
       "         [ 78,  84,  94],\n",
       "         [ 98, 104, 118],\n",
       "         [ 82,  92, 106]],\n",
       " \n",
       "        [[124, 129, 157],\n",
       "         [117, 121, 149],\n",
       "         [118, 121, 149],\n",
       "         ...,\n",
       "         [ 99, 105, 115],\n",
       "         [ 71,  80,  93],\n",
       "         [ 65,  79,  93]],\n",
       " \n",
       "        [[113, 122, 151],\n",
       "         [107, 116, 145],\n",
       "         [107, 113, 142],\n",
       "         ...,\n",
       "         [ 69,  76,  86],\n",
       "         [ 86,  96, 111],\n",
       "         [ 72,  88, 101]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82,  99, 130],\n",
       "         [ 95, 110, 139],\n",
       "         [101, 115, 143],\n",
       "         ...,\n",
       "         [ 99, 119, 144],\n",
       "         [103, 128, 152],\n",
       "         [ 94, 125, 148]],\n",
       " \n",
       "        [[ 81, 101, 133],\n",
       "         [ 85, 103, 134],\n",
       "         [ 94, 110, 139],\n",
       "         ...,\n",
       "         [106, 121, 147],\n",
       "         [100, 125, 149],\n",
       "         [101, 132, 156]],\n",
       " \n",
       "        [[ 83, 102, 135],\n",
       "         [ 75,  95, 128],\n",
       "         [ 88, 107, 137],\n",
       "         ...,\n",
       "         [108, 122, 148],\n",
       "         [ 96, 118, 143],\n",
       "         [100, 128, 151]]], dtype=uint8),\n",
       " array([[[ 26,  32,  54],\n",
       "         [ 37,  45,  75],\n",
       "         [ 27,  28,  62],\n",
       "         ...,\n",
       "         [ 72,  97, 137],\n",
       "         [ 94, 120, 161],\n",
       "         [ 93, 119, 163]],\n",
       " \n",
       "        [[ 26,  31,  54],\n",
       "         [ 34,  40,  71],\n",
       "         [ 15,  16,  47],\n",
       "         ...,\n",
       "         [ 85, 111, 148],\n",
       "         [101, 125, 163],\n",
       "         [102, 122, 164]],\n",
       " \n",
       "        [[ 30,  35,  60],\n",
       "         [ 33,  38,  69],\n",
       "         [ 21,  19,  48],\n",
       "         ...,\n",
       "         [100, 125, 160],\n",
       "         [120, 145, 180],\n",
       "         [127, 149, 184]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 44,  71, 107],\n",
       "         [ 47,  77, 114],\n",
       "         [ 46,  75, 114],\n",
       "         ...,\n",
       "         [ 68, 104, 148],\n",
       "         [ 69, 110, 155],\n",
       "         [ 74, 112, 157]],\n",
       " \n",
       "        [[ 45,  72, 107],\n",
       "         [ 46,  76, 111],\n",
       "         [ 47,  77, 113],\n",
       "         ...,\n",
       "         [ 71, 111, 156],\n",
       "         [ 74, 117, 162],\n",
       "         [ 73, 109, 154]],\n",
       " \n",
       "        [[ 45,  71, 107],\n",
       "         [ 44,  72, 109],\n",
       "         [ 45,  75, 111],\n",
       "         ...,\n",
       "         [ 76, 119, 165],\n",
       "         [ 76, 117, 163],\n",
       "         [ 68, 105, 151]]], dtype=uint8),\n",
       " array([[[ 99, 121, 159],\n",
       "         [ 64,  83, 119],\n",
       "         [ 42,  62,  98],\n",
       "         ...,\n",
       "         [ 23,  28,  44],\n",
       "         [ 18,  20,  30],\n",
       "         [  5,   5,   9]],\n",
       " \n",
       "        [[ 78, 103, 137],\n",
       "         [ 92, 113, 147],\n",
       "         [ 54,  74, 106],\n",
       "         ...,\n",
       "         [ 23,  28,  46],\n",
       "         [ 20,  22,  33],\n",
       "         [  4,   9,  14]],\n",
       " \n",
       "        [[ 99, 124, 158],\n",
       "         [ 97, 118, 152],\n",
       "         [ 89, 109, 140],\n",
       "         ...,\n",
       "         [ 18,  25,  37],\n",
       "         [ 21,  23,  34],\n",
       "         [ 12,  16,  22]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 49,  78, 109],\n",
       "         [ 47,  72, 106],\n",
       "         [ 48,  73, 103],\n",
       "         ...,\n",
       "         [ 37,  58,  96],\n",
       "         [ 38,  62,  98],\n",
       "         [ 39,  61,  97]],\n",
       " \n",
       "        [[ 53,  82, 113],\n",
       "         [ 48,  77, 111],\n",
       "         [ 49,  76, 110],\n",
       "         ...,\n",
       "         [ 35,  56,  94],\n",
       "         [ 34,  56,  92],\n",
       "         [ 38,  60,  96]],\n",
       " \n",
       "        [[ 50,  76, 106],\n",
       "         [ 54,  85, 118],\n",
       "         [ 50,  81, 115],\n",
       "         ...,\n",
       "         [ 35,  58,  93],\n",
       "         [ 32,  54,  90],\n",
       "         [ 33,  54,  89]]], dtype=uint8),\n",
       " array([[[ 58,  90, 119],\n",
       "         [ 38,  70,  99],\n",
       "         [ 24,  54,  83],\n",
       "         ...,\n",
       "         [ 49,  84, 116],\n",
       "         [ 52,  88, 118],\n",
       "         [ 50,  86, 116]],\n",
       " \n",
       "        [[ 43,  75, 105],\n",
       "         [ 20,  52,  81],\n",
       "         [  8,  38,  67],\n",
       "         ...,\n",
       "         [ 50,  85, 117],\n",
       "         [ 53,  89, 119],\n",
       "         [ 53,  90, 120]],\n",
       " \n",
       "        [[ 24,  56,  86],\n",
       "         [ 19,  51,  80],\n",
       "         [ 30,  60,  89],\n",
       "         ...,\n",
       "         [ 46,  83, 115],\n",
       "         [ 51,  89, 119],\n",
       "         [ 56,  94, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[155, 187, 216],\n",
       "         [150, 182, 211],\n",
       "         [143, 175, 204],\n",
       "         ...,\n",
       "         [ 86, 124, 154],\n",
       "         [ 92, 130, 161],\n",
       "         [102, 142, 171]],\n",
       " \n",
       "        [[164, 196, 226],\n",
       "         [159, 191, 220],\n",
       "         [152, 184, 213],\n",
       "         ...,\n",
       "         [100, 137, 167],\n",
       "         [103, 141, 171],\n",
       "         [109, 149, 178]],\n",
       " \n",
       "        [[170, 202, 231],\n",
       "         [163, 195, 224],\n",
       "         [155, 187, 216],\n",
       "         ...,\n",
       "         [111, 149, 179],\n",
       "         [111, 148, 178],\n",
       "         [114, 154, 183]]], dtype=uint8),\n",
       " array([[[ 17,  25,  38],\n",
       "         [ 18,  32,  50],\n",
       "         [ 26,  39,  62],\n",
       "         ...,\n",
       "         [127, 162, 202],\n",
       "         [121, 163, 202],\n",
       "         [122, 165, 204]],\n",
       " \n",
       "        [[ 22,  30,  44],\n",
       "         [ 18,  32,  50],\n",
       "         [ 22,  36,  58],\n",
       "         ...,\n",
       "         [124, 163, 201],\n",
       "         [118, 162, 199],\n",
       "         [119, 164, 202]],\n",
       " \n",
       "        [[ 25,  34,  48],\n",
       "         [ 11,  25,  44],\n",
       "         [ 17,  31,  53],\n",
       "         ...,\n",
       "         [116, 157, 196],\n",
       "         [114, 159, 197],\n",
       "         [114, 160, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 39,  61,  87],\n",
       "         [ 36,  57,  86],\n",
       "         [ 44,  65,  97],\n",
       "         ...,\n",
       "         [ 79, 123, 170],\n",
       "         [ 69, 114, 161],\n",
       "         [ 69, 115, 162]],\n",
       " \n",
       "        [[ 41,  65,  94],\n",
       "         [ 38,  62,  93],\n",
       "         [ 44,  66, 101],\n",
       "         ...,\n",
       "         [ 81, 125, 172],\n",
       "         [ 75, 120, 167],\n",
       "         [ 70, 116, 163]],\n",
       " \n",
       "        [[ 44,  69,  99],\n",
       "         [ 48,  72, 104],\n",
       "         [ 46,  73, 107],\n",
       "         ...,\n",
       "         [ 86, 130, 177],\n",
       "         [ 78, 123, 170],\n",
       "         [ 70, 116, 163]]], dtype=uint8),\n",
       " array([[[131, 167, 210],\n",
       "         [133, 169, 209],\n",
       "         [134, 170, 210],\n",
       "         ...,\n",
       "         [ 28,  46,  73],\n",
       "         [ 28,  41,  63],\n",
       "         [ 19,  30,  46]],\n",
       " \n",
       "        [[129, 168, 210],\n",
       "         [131, 170, 209],\n",
       "         [135, 175, 214],\n",
       "         ...,\n",
       "         [ 25,  45,  72],\n",
       "         [ 29,  44,  67],\n",
       "         [ 25,  36,  53]],\n",
       " \n",
       "        [[133, 170, 209],\n",
       "         [131, 168, 206],\n",
       "         [136, 174, 212],\n",
       "         ...,\n",
       "         [ 41,  64,  93],\n",
       "         [ 25,  43,  66],\n",
       "         [ 17,  31,  49]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 64, 115, 161],\n",
       "         [ 52, 101, 147],\n",
       "         [ 48,  89, 134],\n",
       "         ...,\n",
       "         [ 37,  62,  95],\n",
       "         [ 39,  62,  93],\n",
       "         [ 31,  52,  82]],\n",
       " \n",
       "        [[ 70, 120, 167],\n",
       "         [ 59, 108, 154],\n",
       "         [ 53,  95, 139],\n",
       "         ...,\n",
       "         [ 44,  70, 105],\n",
       "         [ 44,  69, 103],\n",
       "         [ 39,  63,  93]],\n",
       " \n",
       "        [[ 69, 121, 167],\n",
       "         [ 60, 109, 155],\n",
       "         [ 57, 100, 145],\n",
       "         ...,\n",
       "         [ 54,  83, 120],\n",
       "         [ 48,  75, 110],\n",
       "         [ 41,  68, 100]]], dtype=uint8),\n",
       " array([[[164, 164, 166],\n",
       "         [159, 161, 166],\n",
       "         [157, 158, 162],\n",
       "         ...,\n",
       "         [167, 163, 161],\n",
       "         [163, 162, 158],\n",
       "         [160, 159, 154]],\n",
       " \n",
       "        [[163, 163, 167],\n",
       "         [156, 158, 166],\n",
       "         [151, 156, 156],\n",
       "         ...,\n",
       "         [162, 158, 153],\n",
       "         [159, 157, 149],\n",
       "         [162, 159, 154]],\n",
       " \n",
       "        [[152, 155, 160],\n",
       "         [154, 158, 162],\n",
       "         [143, 147, 152],\n",
       "         ...,\n",
       "         [143, 141, 136],\n",
       "         [155, 153, 144],\n",
       "         [159, 159, 151]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[186, 187, 193],\n",
       "         [224, 212, 207],\n",
       "         [156, 153, 160],\n",
       "         ...,\n",
       "         [181, 177, 172],\n",
       "         [174, 171, 166],\n",
       "         [179, 176, 171]],\n",
       " \n",
       "        [[184, 184, 191],\n",
       "         [210, 201, 202],\n",
       "         [208, 196, 195],\n",
       "         ...,\n",
       "         [185, 178, 173],\n",
       "         [180, 176, 172],\n",
       "         [182, 177, 173]],\n",
       " \n",
       "        [[191, 192, 199],\n",
       "         [197, 198, 199],\n",
       "         [211, 205, 202],\n",
       "         ...,\n",
       "         [189, 180, 179],\n",
       "         [185, 178, 175],\n",
       "         [180, 174, 168]]], dtype=uint8),\n",
       " array([[[ 15,  22,  38],\n",
       "         [ 19,  31,  49],\n",
       "         [ 43,  58,  79],\n",
       "         ...,\n",
       "         [175, 203, 236],\n",
       "         [173, 202, 234],\n",
       "         [173, 203, 234]],\n",
       " \n",
       "        [[ 25,  32,  48],\n",
       "         [ 26,  38,  56],\n",
       "         [ 40,  55,  75],\n",
       "         ...,\n",
       "         [164, 195, 226],\n",
       "         [168, 199, 230],\n",
       "         [170, 200, 231]],\n",
       " \n",
       "        [[ 30,  42,  59],\n",
       "         [ 33,  49,  66],\n",
       "         [ 40,  57,  74],\n",
       "         ...,\n",
       "         [160, 190, 224],\n",
       "         [168, 200, 231],\n",
       "         [170, 203, 232]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 62,  92, 123],\n",
       "         [ 62,  96, 129],\n",
       "         [ 57,  90, 124],\n",
       "         ...,\n",
       "         [101, 139, 181],\n",
       "         [ 94, 133, 177],\n",
       "         [ 88, 130, 174]],\n",
       " \n",
       "        [[ 62,  93, 124],\n",
       "         [ 63,  94, 127],\n",
       "         [ 54,  87, 121],\n",
       "         ...,\n",
       "         [ 99, 136, 180],\n",
       "         [ 94, 132, 176],\n",
       "         [ 90, 128, 173]],\n",
       " \n",
       "        [[ 60,  91, 122],\n",
       "         [ 61,  92, 125],\n",
       "         [ 54,  87, 120],\n",
       "         ...,\n",
       "         [ 89, 129, 174],\n",
       "         [ 90, 131, 175],\n",
       "         [ 86, 126, 171]]], dtype=uint8),\n",
       " array([[[157, 188, 224],\n",
       "         [158, 190, 227],\n",
       "         [156, 188, 225],\n",
       "         ...,\n",
       "         [ 33,  49,  75],\n",
       "         [ 33,  48,  72],\n",
       "         [ 29,  41,  63]],\n",
       " \n",
       "        [[168, 196, 231],\n",
       "         [163, 192, 227],\n",
       "         [160, 190, 225],\n",
       "         ...,\n",
       "         [ 30,  45,  69],\n",
       "         [ 29,  45,  69],\n",
       "         [ 30,  42,  64]],\n",
       " \n",
       "        [[176, 202, 233],\n",
       "         [170, 194, 228],\n",
       "         [163, 189, 223],\n",
       "         ...,\n",
       "         [ 31,  43,  65],\n",
       "         [ 27,  44,  63],\n",
       "         [ 30,  44,  63]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 84, 131, 181],\n",
       "         [ 87, 131, 178],\n",
       "         [ 90, 134, 181],\n",
       "         ...,\n",
       "         [ 83, 117, 160],\n",
       "         [ 81, 116, 156],\n",
       "         [ 78, 111, 150]],\n",
       " \n",
       "        [[ 84, 131, 182],\n",
       "         [ 86, 129, 177],\n",
       "         [ 88, 131, 180],\n",
       "         ...,\n",
       "         [ 87, 122, 165],\n",
       "         [ 83, 117, 160],\n",
       "         [ 81, 113, 154]],\n",
       " \n",
       "        [[ 86, 134, 185],\n",
       "         [ 85, 128, 177],\n",
       "         [ 88, 131, 180],\n",
       "         ...,\n",
       "         [ 88, 125, 169],\n",
       "         [ 86, 121, 164],\n",
       "         [ 81, 116, 156]]], dtype=uint8),\n",
       " array([[[ 48,  47,  57],\n",
       "         [ 99,  99, 115],\n",
       "         [114, 118, 137],\n",
       "         ...,\n",
       "         [137, 151, 180],\n",
       "         [138, 152, 181],\n",
       "         [139, 153, 182]],\n",
       " \n",
       "        [[ 51,  50,  60],\n",
       "         [ 98,  98, 114],\n",
       "         [119, 123, 142],\n",
       "         ...,\n",
       "         [135, 149, 181],\n",
       "         [138, 151, 183],\n",
       "         [138, 151, 183]],\n",
       " \n",
       "        [[ 48,  47,  57],\n",
       "         [ 91,  91, 107],\n",
       "         [119, 123, 142],\n",
       "         ...,\n",
       "         [134, 147, 180],\n",
       "         [135, 148, 182],\n",
       "         [136, 149, 182]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[144, 144, 146],\n",
       "         [132, 137, 152],\n",
       "         [130, 139, 166],\n",
       "         ...,\n",
       "         [103, 121, 159],\n",
       "         [107, 124, 163],\n",
       "         [116, 134, 173]],\n",
       " \n",
       "        [[152, 150, 151],\n",
       "         [134, 139, 154],\n",
       "         [130, 139, 165],\n",
       "         ...,\n",
       "         [104, 121, 160],\n",
       "         [108, 126, 165],\n",
       "         [115, 132, 171]],\n",
       " \n",
       "        [[150, 147, 146],\n",
       "         [136, 138, 154],\n",
       "         [129, 138, 165],\n",
       "         ...,\n",
       "         [105, 122, 161],\n",
       "         [106, 123, 162],\n",
       "         [115, 132, 171]]], dtype=uint8),\n",
       " array([[[102, 138, 198],\n",
       "         [110, 143, 201],\n",
       "         [122, 151, 208],\n",
       "         ...,\n",
       "         [175, 187, 245],\n",
       "         [177, 189, 247],\n",
       "         [178, 190, 248]],\n",
       " \n",
       "        [[107, 141, 201],\n",
       "         [119, 148, 206],\n",
       "         [129, 154, 210],\n",
       "         ...,\n",
       "         [162, 179, 238],\n",
       "         [164, 181, 240],\n",
       "         [167, 184, 243]],\n",
       " \n",
       "        [[113, 144, 201],\n",
       "         [128, 154, 208],\n",
       "         [131, 156, 212],\n",
       "         ...,\n",
       "         [149, 172, 234],\n",
       "         [150, 173, 235],\n",
       "         [149, 172, 234]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[152, 172, 229],\n",
       "         [151, 171, 228],\n",
       "         [156, 173, 229],\n",
       "         ...,\n",
       "         [134, 154, 211],\n",
       "         [138, 155, 211],\n",
       "         [148, 164, 217]],\n",
       " \n",
       "        [[152, 172, 229],\n",
       "         [150, 170, 227],\n",
       "         [154, 173, 229],\n",
       "         ...,\n",
       "         [131, 149, 211],\n",
       "         [132, 151, 208],\n",
       "         [141, 158, 211]],\n",
       " \n",
       "        [[152, 172, 229],\n",
       "         [153, 173, 230],\n",
       "         [154, 174, 230],\n",
       "         ...,\n",
       "         [131, 148, 214],\n",
       "         [128, 145, 207],\n",
       "         [142, 158, 215]]], dtype=uint8),\n",
       " array([[[143, 154, 184],\n",
       "         [140, 151, 181],\n",
       "         [140, 151, 181],\n",
       "         ...,\n",
       "         [115,  74, 105],\n",
       "         [114,  74, 102],\n",
       "         [112,  73, 101]],\n",
       " \n",
       "        [[141, 152, 184],\n",
       "         [142, 154, 185],\n",
       "         [140, 151, 182],\n",
       "         ...,\n",
       "         [114,  73, 104],\n",
       "         [113,  73, 101],\n",
       "         [114,  73, 101]],\n",
       " \n",
       "        [[138, 151, 184],\n",
       "         [140, 152, 185],\n",
       "         [135, 147, 180],\n",
       "         ...,\n",
       "         [113,  74, 104],\n",
       "         [113,  74, 102],\n",
       "         [115,  75, 103]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[101,  92, 138],\n",
       "         [ 95,  86, 132],\n",
       "         [ 88,  85, 130],\n",
       "         ...,\n",
       "         [101,  92, 125],\n",
       "         [114,  91, 125],\n",
       "         [122,  91, 124]],\n",
       " \n",
       "        [[ 99,  90, 136],\n",
       "         [ 95,  87, 132],\n",
       "         [ 91,  88, 133],\n",
       "         ...,\n",
       "         [103,  92, 127],\n",
       "         [115,  90, 123],\n",
       "         [120,  89, 122]],\n",
       " \n",
       "        [[101,  93, 138],\n",
       "         [ 99,  90, 136],\n",
       "         [ 92,  89, 134],\n",
       "         ...,\n",
       "         [104,  94, 129],\n",
       "         [117,  91, 125],\n",
       "         [119,  88, 121]]], dtype=uint8),\n",
       " array([[[162, 162, 176],\n",
       "         [107, 115, 120],\n",
       "         [ 73,  79,  99],\n",
       "         ...,\n",
       "         [128, 135, 176],\n",
       "         [149, 156, 195],\n",
       "         [158, 162, 204]],\n",
       " \n",
       "        [[167, 174, 190],\n",
       "         [ 99, 105, 116],\n",
       "         [ 76,  83, 103],\n",
       "         ...,\n",
       "         [128, 130, 174],\n",
       "         [147, 150, 191],\n",
       "         [152, 157, 199]],\n",
       " \n",
       "        [[169, 181, 189],\n",
       "         [ 79,  82,  87],\n",
       "         [ 79,  87, 111],\n",
       "         ...,\n",
       "         [128, 139, 174],\n",
       "         [142, 148, 190],\n",
       "         [154, 159, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 90, 103, 139],\n",
       "         [ 89, 106, 149],\n",
       "         [100, 112, 152],\n",
       "         ...,\n",
       "         [ 72,  82, 120],\n",
       "         [ 77,  82, 122],\n",
       "         [ 88,  95, 139]],\n",
       " \n",
       "        [[ 90, 104, 132],\n",
       "         [ 94, 106, 142],\n",
       "         [101, 115, 157],\n",
       "         ...,\n",
       "         [ 74,  82, 122],\n",
       "         [ 75,  88, 119],\n",
       "         [ 85,  94, 140]],\n",
       " \n",
       "        [[ 92, 103, 142],\n",
       "         [ 96, 109, 155],\n",
       "         [104, 113, 155],\n",
       "         ...,\n",
       "         [ 77,  83, 119],\n",
       "         [ 79,  88, 124],\n",
       "         [ 92,  93, 137]]], dtype=uint8),\n",
       " array([[[157, 161, 209],\n",
       "         [158, 160, 211],\n",
       "         [146, 155, 201],\n",
       "         ...,\n",
       "         [112, 118, 149],\n",
       "         [ 61,  66,  86],\n",
       "         [ 32,  40,  49]],\n",
       " \n",
       "        [[157, 168, 210],\n",
       "         [152, 161, 204],\n",
       "         [138, 152, 192],\n",
       "         ...,\n",
       "         [113, 125, 156],\n",
       "         [ 61,  76,  92],\n",
       "         [ 35,  41,  47]],\n",
       " \n",
       "        [[151, 164, 209],\n",
       "         [145, 153, 193],\n",
       "         [139, 150, 190],\n",
       "         ...,\n",
       "         [109, 123, 153],\n",
       "         [ 94, 103, 123],\n",
       "         [ 35,  39,  49]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 114, 160],\n",
       "         [ 93, 101, 148],\n",
       "         [ 98, 109, 160],\n",
       "         ...,\n",
       "         [124, 139, 191],\n",
       "         [122, 139, 186],\n",
       "         [123, 140, 179]],\n",
       " \n",
       "        [[ 96, 110, 156],\n",
       "         [ 95, 102, 145],\n",
       "         [100, 110, 157],\n",
       "         ...,\n",
       "         [121, 137, 190],\n",
       "         [125, 138, 185],\n",
       "         [120, 137, 182]],\n",
       " \n",
       "        [[ 93, 108, 157],\n",
       "         [ 92, 102, 147],\n",
       "         [ 94, 104, 147],\n",
       "         ...,\n",
       "         [126, 142, 190],\n",
       "         [123, 143, 182],\n",
       "         [121, 138, 181]]], dtype=uint8),\n",
       " array([[[ 40,  47,  56],\n",
       "         [ 58,  59,  70],\n",
       "         [ 69,  67,  81],\n",
       "         ...,\n",
       "         [228, 214, 232],\n",
       "         [230, 214, 231],\n",
       "         [230, 217, 233]],\n",
       " \n",
       "        [[ 48,  53,  64],\n",
       "         [ 65,  66,  78],\n",
       "         [ 70,  68,  82],\n",
       "         ...,\n",
       "         [225, 211, 229],\n",
       "         [225, 212, 228],\n",
       "         [228, 216, 231]],\n",
       " \n",
       "        [[ 54,  57,  72],\n",
       "         [ 69,  69,  84],\n",
       "         [ 69,  69,  83],\n",
       "         ...,\n",
       "         [218, 207, 223],\n",
       "         [220, 209, 225],\n",
       "         [225, 213, 229]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 99, 105, 124],\n",
       "         [117, 120, 142],\n",
       "         [130, 131, 156],\n",
       "         ...,\n",
       "         [ 77,  77,  91],\n",
       "         [144, 144, 162],\n",
       "         [158, 158, 183]],\n",
       " \n",
       "        [[105, 110, 131],\n",
       "         [121, 123, 147],\n",
       "         [128, 128, 155],\n",
       "         ...,\n",
       "         [148, 149, 165],\n",
       "         [150, 152, 172],\n",
       "         [159, 160, 188]],\n",
       " \n",
       "        [[108, 113, 134],\n",
       "         [119, 121, 145],\n",
       "         [123, 123, 150],\n",
       "         ...,\n",
       "         [154, 153, 173],\n",
       "         [150, 150, 174],\n",
       "         [158, 160, 188]]], dtype=uint8),\n",
       " array([[[ 92, 130, 160],\n",
       "         [ 83, 118, 148],\n",
       "         [ 88, 119, 150],\n",
       "         ...,\n",
       "         [ 43,  72, 111],\n",
       "         [ 48,  77, 116],\n",
       "         [ 42,  71, 110]],\n",
       " \n",
       "        [[ 94, 130, 160],\n",
       "         [ 82, 116, 147],\n",
       "         [ 79, 110, 141],\n",
       "         ...,\n",
       "         [ 44,  73, 112],\n",
       "         [ 47,  76, 115],\n",
       "         [ 41,  70, 109]],\n",
       " \n",
       "        [[ 98, 134, 164],\n",
       "         [ 86, 121, 150],\n",
       "         [ 73, 104, 135],\n",
       "         ...,\n",
       "         [ 56,  85, 124],\n",
       "         [ 56,  85, 124],\n",
       "         [ 48,  77, 116]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 156, 203],\n",
       "         [114, 144, 192],\n",
       "         [102, 132, 181],\n",
       "         ...,\n",
       "         [112, 148, 187],\n",
       "         [103, 138, 178],\n",
       "         [101, 133, 174]],\n",
       " \n",
       "        [[127, 156, 204],\n",
       "         [115, 145, 193],\n",
       "         [ 99, 130, 179],\n",
       "         ...,\n",
       "         [114, 149, 190],\n",
       "         [104, 138, 179],\n",
       "         [101, 133, 175]],\n",
       " \n",
       "        [[134, 160, 210],\n",
       "         [117, 147, 196],\n",
       "         [ 96, 129, 178],\n",
       "         ...,\n",
       "         [115, 148, 192],\n",
       "         [108, 139, 184],\n",
       "         [102, 129, 175]]], dtype=uint8),\n",
       " array([[[201, 199, 218],\n",
       "         [202, 200, 219],\n",
       "         [202, 199, 217],\n",
       "         ...,\n",
       "         [156, 153, 178],\n",
       "         [148, 146, 174],\n",
       "         [137, 138, 166]],\n",
       " \n",
       "        [[197, 195, 214],\n",
       "         [197, 195, 214],\n",
       "         [195, 192, 211],\n",
       "         ...,\n",
       "         [153, 151, 174],\n",
       "         [147, 146, 172],\n",
       "         [139, 137, 166]],\n",
       " \n",
       "        [[191, 189, 209],\n",
       "         [187, 185, 205],\n",
       "         [185, 182, 202],\n",
       "         ...,\n",
       "         [157, 155, 176],\n",
       "         [148, 149, 171],\n",
       "         [136, 135, 161]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 155, 171],\n",
       "         [133, 123, 140],\n",
       "         [211, 203, 220],\n",
       "         ...,\n",
       "         [152, 148, 162],\n",
       "         [156, 150, 162],\n",
       "         [166, 158, 169]],\n",
       " \n",
       "        [[211, 202, 222],\n",
       "         [173, 164, 184],\n",
       "         [191, 182, 202],\n",
       "         ...,\n",
       "         [155, 150, 166],\n",
       "         [153, 146, 160],\n",
       "         [154, 147, 160]],\n",
       " \n",
       "        [[216, 209, 230],\n",
       "         [200, 193, 214],\n",
       "         [171, 162, 182],\n",
       "         ...,\n",
       "         [161, 155, 174],\n",
       "         [162, 154, 171],\n",
       "         [155, 148, 164]]], dtype=uint8),\n",
       " array([[[ 40,  51,  73],\n",
       "         [ 51,  57,  80],\n",
       "         [ 61,  70,  99],\n",
       "         ...,\n",
       "         [153, 156, 207],\n",
       "         [163, 167, 216],\n",
       "         [168, 169, 219]],\n",
       " \n",
       "        [[ 47,  57,  82],\n",
       "         [ 56,  62,  88],\n",
       "         [ 70,  78, 107],\n",
       "         ...,\n",
       "         [153, 156, 208],\n",
       "         [163, 165, 215],\n",
       "         [167, 168, 219]],\n",
       " \n",
       "        [[ 54,  63,  90],\n",
       "         [ 59,  66,  93],\n",
       "         [ 75,  83, 113],\n",
       "         ...,\n",
       "         [151, 155, 208],\n",
       "         [153, 160, 214],\n",
       "         [158, 161, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[108, 117, 156],\n",
       "         [113, 122, 167],\n",
       "         [113, 126, 174],\n",
       "         ...,\n",
       "         [ 99, 110, 172],\n",
       "         [103, 114, 176],\n",
       "         [105, 116, 178]],\n",
       " \n",
       "        [[105, 118, 156],\n",
       "         [112, 122, 170],\n",
       "         [114, 126, 179],\n",
       "         ...,\n",
       "         [ 99, 112, 174],\n",
       "         [104, 117, 179],\n",
       "         [105, 117, 179]],\n",
       " \n",
       "        [[106, 117, 159],\n",
       "         [114, 124, 172],\n",
       "         [116, 130, 180],\n",
       "         ...,\n",
       "         [104, 116, 179],\n",
       "         [105, 118, 180],\n",
       "         [107, 119, 181]]], dtype=uint8),\n",
       " array([[[171, 175, 223],\n",
       "         [169, 173, 221],\n",
       "         [168, 173, 218],\n",
       "         ...,\n",
       "         [ 54,  61,  70],\n",
       "         [ 36,  37,  48],\n",
       "         [ 12,  12,  16]],\n",
       " \n",
       "        [[172, 176, 224],\n",
       "         [169, 175, 222],\n",
       "         [167, 172, 221],\n",
       "         ...,\n",
       "         [ 75,  82,  92],\n",
       "         [ 36,  38,  47],\n",
       "         [ 15,  14,  19]],\n",
       " \n",
       "        [[170, 176, 223],\n",
       "         [165, 173, 220],\n",
       "         [164, 170, 219],\n",
       "         ...,\n",
       "         [ 76,  82,  96],\n",
       "         [ 43,  45,  54],\n",
       "         [ 15,  15,  19]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 115, 161],\n",
       "         [ 96, 110, 158],\n",
       "         [101, 110, 158],\n",
       "         ...,\n",
       "         [112, 120, 136],\n",
       "         [ 41,  42,  46],\n",
       "         [ 12,  12,  14]],\n",
       " \n",
       "        [[105, 120, 166],\n",
       "         [100, 113, 161],\n",
       "         [ 99, 112, 160],\n",
       "         ...,\n",
       "         [107, 116, 132],\n",
       "         [ 34,  34,  38],\n",
       "         [ 16,  15,  15]],\n",
       " \n",
       "        [[108, 124, 171],\n",
       "         [104, 118, 166],\n",
       "         [101, 115, 163],\n",
       "         ...,\n",
       "         [113, 120, 138],\n",
       "         [ 29,  31,  33],\n",
       "         [ 14,  13,  13]]], dtype=uint8),\n",
       " array([[[ 75,  82, 101],\n",
       "         [ 98, 105, 138],\n",
       "         [ 94, 103, 145],\n",
       "         ...,\n",
       "         [194, 202, 240],\n",
       "         [192, 204, 240],\n",
       "         [192, 206, 242]],\n",
       " \n",
       "        [[ 79,  85, 105],\n",
       "         [102, 108, 138],\n",
       "         [ 96, 104, 142],\n",
       "         ...,\n",
       "         [188, 199, 235],\n",
       "         [190, 201, 238],\n",
       "         [186, 200, 236]],\n",
       " \n",
       "        [[ 87,  92, 113],\n",
       "         [101, 106, 134],\n",
       "         [ 95, 104, 132],\n",
       "         ...,\n",
       "         [181, 193, 229],\n",
       "         [182, 194, 230],\n",
       "         [179, 193, 229]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[195, 208, 241],\n",
       "         [197, 210, 243],\n",
       "         [203, 214, 248],\n",
       "         ...,\n",
       "         [167, 187, 230],\n",
       "         [162, 184, 229],\n",
       "         [157, 181, 226]],\n",
       " \n",
       "        [[196, 208, 242],\n",
       "         [199, 211, 245],\n",
       "         [204, 214, 248],\n",
       "         ...,\n",
       "         [168, 187, 230],\n",
       "         [162, 184, 229],\n",
       "         [161, 184, 229]],\n",
       " \n",
       "        [[195, 208, 242],\n",
       "         [201, 213, 247],\n",
       "         [206, 216, 250],\n",
       "         ...,\n",
       "         [166, 188, 231],\n",
       "         [164, 186, 231],\n",
       "         [167, 191, 235]]], dtype=uint8),\n",
       " array([[[195, 207, 241],\n",
       "         [197, 207, 240],\n",
       "         [196, 206, 239],\n",
       "         ...,\n",
       "         [ 76,  93, 130],\n",
       "         [ 81,  92, 122],\n",
       "         [ 47,  58,  80]],\n",
       " \n",
       "        [[194, 206, 240],\n",
       "         [195, 205, 239],\n",
       "         [195, 205, 239],\n",
       "         ...,\n",
       "         [ 91, 107, 142],\n",
       "         [ 74,  86, 115],\n",
       "         [ 50,  61,  83]],\n",
       " \n",
       "        [[192, 204, 237],\n",
       "         [192, 203, 237],\n",
       "         [191, 202, 236],\n",
       "         ...,\n",
       "         [ 76,  92, 121],\n",
       "         [ 78,  90, 117],\n",
       "         [ 54,  64,  89]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[158, 183, 228],\n",
       "         [163, 188, 232],\n",
       "         [162, 187, 231],\n",
       "         ...,\n",
       "         [153, 178, 222],\n",
       "         [151, 176, 220],\n",
       "         [151, 176, 220]],\n",
       " \n",
       "        [[159, 184, 228],\n",
       "         [161, 188, 232],\n",
       "         [162, 189, 233],\n",
       "         ...,\n",
       "         [155, 180, 224],\n",
       "         [154, 179, 223],\n",
       "         [152, 177, 221]],\n",
       " \n",
       "        [[160, 184, 229],\n",
       "         [159, 186, 230],\n",
       "         [162, 189, 233],\n",
       "         ...,\n",
       "         [157, 182, 226],\n",
       "         [155, 180, 224],\n",
       "         [154, 179, 223]]], dtype=uint8),\n",
       " array([[[146, 166, 197],\n",
       "         [148, 169, 200],\n",
       "         [146, 166, 197],\n",
       "         ...,\n",
       "         [ 98, 113, 136],\n",
       "         [ 86,  99, 121],\n",
       "         [ 86,  96, 115]],\n",
       " \n",
       "        [[150, 165, 197],\n",
       "         [155, 169, 201],\n",
       "         [150, 164, 195],\n",
       "         ...,\n",
       "         [ 98, 115, 136],\n",
       "         [ 98, 112, 131],\n",
       "         [ 98, 111, 129]],\n",
       " \n",
       "        [[154, 165, 195],\n",
       "         [156, 167, 197],\n",
       "         [153, 164, 194],\n",
       "         ...,\n",
       "         [101, 119, 142],\n",
       "         [107, 121, 143],\n",
       "         [ 99, 113, 132]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 73,  94, 122],\n",
       "         [ 72,  93, 121],\n",
       "         [ 63,  84, 112],\n",
       "         ...,\n",
       "         [ 98, 117, 154],\n",
       "         [108, 127, 163],\n",
       "         [122, 141, 178]],\n",
       " \n",
       "        [[ 79, 100, 129],\n",
       "         [ 72,  92, 122],\n",
       "         [ 69,  90, 118],\n",
       "         ...,\n",
       "         [106, 125, 162],\n",
       "         [109, 128, 165],\n",
       "         [120, 139, 176]],\n",
       " \n",
       "        [[ 97, 115, 152],\n",
       "         [ 71,  90, 124],\n",
       "         [ 70,  91, 120],\n",
       "         ...,\n",
       "         [110, 131, 169],\n",
       "         [108, 129, 167],\n",
       "         [117, 138, 176]]], dtype=uint8),\n",
       " array([[[ 77,  81,  97],\n",
       "         [ 86,  98, 116],\n",
       "         [ 74, 104, 117],\n",
       "         ...,\n",
       "         [210, 214, 227],\n",
       "         [217, 219, 234],\n",
       "         [209, 216, 235]],\n",
       " \n",
       "        [[ 72,  86,  96],\n",
       "         [ 67, 101, 112],\n",
       "         [ 74, 108, 123],\n",
       "         ...,\n",
       "         [218, 214, 224],\n",
       "         [208, 220, 228],\n",
       "         [217, 223, 235]],\n",
       " \n",
       "        [[ 72,  91, 100],\n",
       "         [ 74, 104, 125],\n",
       "         [ 81, 104, 127],\n",
       "         ...,\n",
       "         [211, 204, 218],\n",
       "         [210, 220, 224],\n",
       "         [216, 220, 231]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[119, 154, 169],\n",
       "         [119, 144, 157],\n",
       "         [145, 148, 169],\n",
       "         ...,\n",
       "         [151, 165, 193],\n",
       "         [140, 167, 189],\n",
       "         [132, 166, 193]],\n",
       " \n",
       "        [[132, 154, 184],\n",
       "         [141, 155, 173],\n",
       "         [136, 149, 173],\n",
       "         ...,\n",
       "         [142, 171, 190],\n",
       "         [151, 171, 196],\n",
       "         [146, 165, 196]],\n",
       " \n",
       "        [[129, 166, 184],\n",
       "         [144, 165, 179],\n",
       "         [140, 164, 179],\n",
       "         ...,\n",
       "         [156, 169, 194],\n",
       "         [146, 169, 199],\n",
       "         [154, 169, 194]]], dtype=uint8),\n",
       " array([[[205, 213, 227],\n",
       "         [195, 215, 231],\n",
       "         [201, 208, 222],\n",
       "         ...,\n",
       "         [ 86, 128, 149],\n",
       "         [107, 127, 149],\n",
       "         [ 91, 128, 145]],\n",
       " \n",
       "        [[213, 212, 226],\n",
       "         [198, 205, 221],\n",
       "         [209, 211, 229],\n",
       "         ...,\n",
       "         [ 88, 129, 151],\n",
       "         [ 92, 125, 141],\n",
       "         [ 88, 126, 147]],\n",
       " \n",
       "        [[200, 213, 220],\n",
       "         [195, 200, 210],\n",
       "         [197, 196, 227],\n",
       "         ...,\n",
       "         [ 83, 128, 142],\n",
       "         [ 84, 126, 144],\n",
       "         [ 85, 123, 141]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[128, 171, 183],\n",
       "         [136, 165, 186],\n",
       "         [129, 163, 180],\n",
       "         ...,\n",
       "         [118, 120, 149],\n",
       "         [119, 145, 168],\n",
       "         [124, 149, 175]],\n",
       " \n",
       "        [[134, 159, 176],\n",
       "         [133, 173, 190],\n",
       "         [142, 170, 198],\n",
       "         ...,\n",
       "         [115, 134, 159],\n",
       "         [118, 150, 166],\n",
       "         [128, 162, 168]],\n",
       " \n",
       "        [[135, 162, 184],\n",
       "         [129, 162, 189],\n",
       "         [141, 171, 195],\n",
       "         ...,\n",
       "         [127, 141, 168],\n",
       "         [132, 150, 169],\n",
       "         [121, 154, 169]]], dtype=uint8),\n",
       " array([[[ 50,  86, 124],\n",
       "         [ 64,  92, 113],\n",
       "         [ 55, 108, 134],\n",
       "         ...,\n",
       "         [ 87, 135, 166],\n",
       "         [ 76, 142, 171],\n",
       "         [ 72, 132, 161]],\n",
       " \n",
       "        [[ 58,  84, 112],\n",
       "         [ 62,  95, 120],\n",
       "         [ 68, 103, 140],\n",
       "         ...,\n",
       "         [ 85, 130, 163],\n",
       "         [ 73, 133, 163],\n",
       "         [ 74, 131, 167]],\n",
       " \n",
       "        [[ 36,  86, 110],\n",
       "         [ 62,  94, 127],\n",
       "         [ 68, 106, 144],\n",
       "         ...,\n",
       "         [ 75, 122, 154],\n",
       "         [ 81, 132, 168],\n",
       "         [ 76, 129, 160]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 71, 117, 144],\n",
       "         [ 75, 111, 137],\n",
       "         [ 62, 101, 131],\n",
       "         ...,\n",
       "         [108, 133, 170],\n",
       "         [ 80, 126, 158],\n",
       "         [ 76, 115, 149]],\n",
       " \n",
       "        [[ 86, 112, 141],\n",
       "         [ 80, 110, 148],\n",
       "         [ 74, 107, 147],\n",
       "         ...,\n",
       "         [ 87, 130, 167],\n",
       "         [ 85, 118, 162],\n",
       "         [ 77, 124, 165]],\n",
       " \n",
       "        [[ 79, 111, 151],\n",
       "         [ 79, 115, 157],\n",
       "         [ 78, 112, 146],\n",
       "         ...,\n",
       "         [ 98, 131, 168],\n",
       "         [ 91, 122, 164],\n",
       "         [ 87, 122, 163]]], dtype=uint8),\n",
       " array([[[148, 158, 172],\n",
       "         [149, 158, 172],\n",
       "         [158, 167, 181],\n",
       "         ...,\n",
       "         [179, 186, 201],\n",
       "         [181, 188, 203],\n",
       "         [182, 190, 203]],\n",
       " \n",
       "        [[147, 156, 170],\n",
       "         [151, 160, 172],\n",
       "         [159, 168, 179],\n",
       "         ...,\n",
       "         [172, 179, 194],\n",
       "         [177, 184, 199],\n",
       "         [172, 179, 193]],\n",
       " \n",
       "        [[146, 159, 172],\n",
       "         [150, 160, 170],\n",
       "         [161, 170, 180],\n",
       "         ...,\n",
       "         [168, 175, 191],\n",
       "         [169, 177, 194],\n",
       "         [164, 172, 189]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[154, 168, 186],\n",
       "         [161, 174, 192],\n",
       "         [160, 174, 192],\n",
       "         ...,\n",
       "         [177, 191, 209],\n",
       "         [170, 184, 205],\n",
       "         [176, 191, 208]],\n",
       " \n",
       "        [[155, 169, 187],\n",
       "         [164, 178, 196],\n",
       "         [164, 178, 196],\n",
       "         ...,\n",
       "         [177, 191, 210],\n",
       "         [172, 186, 205],\n",
       "         [183, 197, 215]],\n",
       " \n",
       "        [[158, 172, 190],\n",
       "         [165, 179, 197],\n",
       "         [167, 181, 199],\n",
       "         ...,\n",
       "         [179, 191, 211],\n",
       "         [175, 186, 206],\n",
       "         [186, 200, 218]]], dtype=uint8),\n",
       " array([[[176, 182, 195],\n",
       "         [167, 175, 188],\n",
       "         [165, 172, 185],\n",
       "         ...,\n",
       "         [141, 153, 168],\n",
       "         [138, 151, 167],\n",
       "         [129, 144, 161]],\n",
       " \n",
       "        [[173, 180, 193],\n",
       "         [166, 174, 187],\n",
       "         [161, 168, 180],\n",
       "         ...,\n",
       "         [133, 145, 159],\n",
       "         [135, 149, 165],\n",
       "         [135, 150, 168]],\n",
       " \n",
       "        [[169, 177, 190],\n",
       "         [166, 174, 187],\n",
       "         [152, 159, 171],\n",
       "         ...,\n",
       "         [ 66,  75,  85],\n",
       "         [118, 133, 149],\n",
       "         [134, 149, 167]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 178, 204],\n",
       "         [163, 180, 203],\n",
       "         [155, 171, 195],\n",
       "         ...,\n",
       "         [140, 160, 178],\n",
       "         [142, 163, 181],\n",
       "         [140, 161, 179]],\n",
       " \n",
       "        [[169, 184, 207],\n",
       "         [168, 183, 208],\n",
       "         [159, 174, 199],\n",
       "         ...,\n",
       "         [147, 167, 184],\n",
       "         [146, 166, 183],\n",
       "         [144, 164, 182]],\n",
       " \n",
       "        [[165, 181, 205],\n",
       "         [166, 181, 207],\n",
       "         [162, 177, 203],\n",
       "         ...,\n",
       "         [151, 171, 188],\n",
       "         [148, 168, 185],\n",
       "         [145, 165, 183]]], dtype=uint8),\n",
       " array([[[ 81, 101, 142],\n",
       "         [ 74,  94, 135],\n",
       "         [ 71,  91, 130],\n",
       "         ...,\n",
       "         [ 15,  25,  36],\n",
       "         [ 12,  22,  38],\n",
       "         [ 18,  28,  45]],\n",
       " \n",
       "        [[ 79,  99, 140],\n",
       "         [ 72,  92, 133],\n",
       "         [ 67,  88, 127],\n",
       "         ...,\n",
       "         [ 16,  27,  40],\n",
       "         [ 17,  27,  44],\n",
       "         [ 18,  30,  46]],\n",
       " \n",
       "        [[ 78,  98, 139],\n",
       "         [ 68,  88, 129],\n",
       "         [ 63,  84, 122],\n",
       "         ...,\n",
       "         [ 14,  26,  39],\n",
       "         [ 18,  28,  45],\n",
       "         [ 21,  33,  51]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[110, 126, 173],\n",
       "         [ 89, 105, 152],\n",
       "         [ 63,  79, 126],\n",
       "         ...,\n",
       "         [ 33,  52,  95],\n",
       "         [ 37,  61, 103],\n",
       "         [ 40,  64, 106]],\n",
       " \n",
       "        [[113, 129, 176],\n",
       "         [ 88, 104, 151],\n",
       "         [ 64,  80, 127],\n",
       "         ...,\n",
       "         [ 36,  57, 100],\n",
       "         [ 38,  62, 104],\n",
       "         [ 41,  65, 107]],\n",
       " \n",
       "        [[110, 126, 173],\n",
       "         [ 85, 101, 148],\n",
       "         [ 64,  80, 127],\n",
       "         ...,\n",
       "         [ 37,  59, 101],\n",
       "         [ 39,  63, 105],\n",
       "         [ 41,  65, 107]]], dtype=uint8),\n",
       " array([[[101, 143, 176],\n",
       "         [ 89, 144, 166],\n",
       "         [ 91, 140, 175],\n",
       "         ...,\n",
       "         [ 71, 102, 132],\n",
       "         [ 64,  90, 117],\n",
       "         [ 58,  89, 113]],\n",
       " \n",
       "        [[ 92, 134, 166],\n",
       "         [ 83, 133, 166],\n",
       "         [ 87, 127, 159],\n",
       "         ...,\n",
       "         [ 61,  94, 117],\n",
       "         [ 67,  94, 129],\n",
       "         [ 59,  90, 122]],\n",
       " \n",
       "        [[ 79, 126, 166],\n",
       "         [ 75, 126, 151],\n",
       "         [ 84, 127, 158],\n",
       "         ...,\n",
       "         [ 51,  98, 110],\n",
       "         [ 46,  87, 110],\n",
       "         [ 52,  86, 115]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 63, 116, 157],\n",
       "         [ 57, 117, 147],\n",
       "         [ 73, 114, 147],\n",
       "         ...,\n",
       "         [ 78,  93, 130],\n",
       "         [ 69,  98, 122],\n",
       "         [ 76, 101, 121]],\n",
       " \n",
       "        [[ 55, 124, 159],\n",
       "         [ 66, 115, 154],\n",
       "         [ 70, 120, 147],\n",
       "         ...,\n",
       "         [ 68, 103, 125],\n",
       "         [ 77, 104, 120],\n",
       "         [ 95,  98, 128]],\n",
       " \n",
       "        [[ 73, 123, 163],\n",
       "         [ 75, 111, 156],\n",
       "         [ 57, 118, 146],\n",
       "         ...,\n",
       "         [ 73,  98, 138],\n",
       "         [ 72, 103, 129],\n",
       "         [ 92,  97, 124]]], dtype=uint8),\n",
       " array([[[132, 126, 146],\n",
       "         [126, 140, 150],\n",
       "         [143, 142, 154],\n",
       "         ...,\n",
       "         [104, 111, 148],\n",
       "         [104, 111, 149],\n",
       "         [110, 119, 151]],\n",
       " \n",
       "        [[135, 140, 147],\n",
       "         [131, 138, 147],\n",
       "         [141, 150, 159],\n",
       "         ...,\n",
       "         [104, 106, 144],\n",
       "         [ 99, 111, 130],\n",
       "         [103, 110, 144]],\n",
       " \n",
       "        [[129, 131, 153],\n",
       "         [116, 136, 140],\n",
       "         [168, 178, 168],\n",
       "         ...,\n",
       "         [ 96, 105, 130],\n",
       "         [102, 109, 136],\n",
       "         [ 81, 103, 121]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 153, 168],\n",
       "         [141, 137, 151],\n",
       "         [116, 112, 126],\n",
       "         ...,\n",
       "         [102, 103, 123],\n",
       "         [ 94,  93, 110],\n",
       "         [ 94,  86, 110]],\n",
       " \n",
       "        [[147, 140, 150],\n",
       "         [126, 122, 136],\n",
       "         [118, 109, 121],\n",
       "         ...,\n",
       "         [103,  89, 120],\n",
       "         [ 93,  93, 106],\n",
       "         [ 96,  88, 111]],\n",
       " \n",
       "        [[138, 127, 148],\n",
       "         [129, 136, 144],\n",
       "         [128, 126, 137],\n",
       "         ...,\n",
       "         [100,  88, 121],\n",
       "         [102,  92, 108],\n",
       "         [ 87,  91, 113]]], dtype=uint8),\n",
       " array([[[120, 123, 145],\n",
       "         [112, 124, 143],\n",
       "         [122, 132, 159],\n",
       "         ...,\n",
       "         [225, 205, 202],\n",
       "         [243, 219, 212],\n",
       "         [229, 205, 198]],\n",
       " \n",
       "        [[129, 134, 158],\n",
       "         [113, 118, 150],\n",
       "         [134, 129, 155],\n",
       "         ...,\n",
       "         [231, 207, 196],\n",
       "         [244, 222, 213],\n",
       "         [231, 214, 200]],\n",
       " \n",
       "        [[113, 122, 151],\n",
       "         [112, 125, 145],\n",
       "         [104, 119, 144],\n",
       "         ...,\n",
       "         [223, 205, 193],\n",
       "         [220, 209, 203],\n",
       "         [228, 205, 203]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 105, 127],\n",
       "         [ 96, 105, 121],\n",
       "         [102, 103, 121],\n",
       "         ...,\n",
       "         [135, 124, 138],\n",
       "         [145, 132, 148],\n",
       "         [142, 126, 147]],\n",
       " \n",
       "        [[129, 121, 139],\n",
       "         [105, 112, 136],\n",
       "         [ 99, 105, 123],\n",
       "         ...,\n",
       "         [154, 141, 151],\n",
       "         [141, 137, 154],\n",
       "         [133, 129, 149]],\n",
       " \n",
       "        [[146, 142, 153],\n",
       "         [122, 126, 138],\n",
       "         [110, 103, 129],\n",
       "         ...,\n",
       "         [140, 126, 147],\n",
       "         [162, 143, 161],\n",
       "         [136, 138, 156]]], dtype=uint8),\n",
       " array([[[108, 134, 154],\n",
       "         [111, 135, 157],\n",
       "         [113, 131, 156],\n",
       "         ...,\n",
       "         [159, 175, 192],\n",
       "         [164, 183, 200],\n",
       "         [173, 182, 198]],\n",
       " \n",
       "        [[103, 131, 147],\n",
       "         [101, 135, 150],\n",
       "         [112, 127, 148],\n",
       "         ...,\n",
       "         [159, 174, 188],\n",
       "         [159, 176, 194],\n",
       "         [164, 174, 193]],\n",
       " \n",
       "        [[101, 128, 150],\n",
       "         [ 98, 124, 143],\n",
       "         [107, 121, 136],\n",
       "         ...,\n",
       "         [154, 175, 187],\n",
       "         [156, 175, 188],\n",
       "         [160, 175, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[138, 162, 175],\n",
       "         [133, 154, 180],\n",
       "         [145, 156, 178],\n",
       "         ...,\n",
       "         [105, 133, 156],\n",
       "         [106, 124, 155],\n",
       "         [110, 130, 161]],\n",
       " \n",
       "        [[135, 161, 178],\n",
       "         [135, 164, 180],\n",
       "         [147, 157, 178],\n",
       "         ...,\n",
       "         [106, 131, 156],\n",
       "         [100, 129, 154],\n",
       "         [111, 134, 160]],\n",
       " \n",
       "        [[132, 160, 176],\n",
       "         [132, 160, 183],\n",
       "         [147, 166, 185],\n",
       "         ...,\n",
       "         [114, 135, 159],\n",
       "         [113, 134, 161],\n",
       "         [111, 135, 159]]], dtype=uint8),\n",
       " array([[[ 62,  90, 126],\n",
       "         [ 77, 104, 141],\n",
       "         [ 94, 121, 158],\n",
       "         ...,\n",
       "         [194, 215, 251],\n",
       "         [192, 216, 252],\n",
       "         [191, 216, 252]],\n",
       " \n",
       "        [[ 57,  84, 119],\n",
       "         [ 73, 101, 135],\n",
       "         [ 92, 120, 155],\n",
       "         ...,\n",
       "         [192, 212, 249],\n",
       "         [190, 213, 249],\n",
       "         [189, 215, 250]],\n",
       " \n",
       "        [[ 53,  80, 114],\n",
       "         [ 69,  96, 130],\n",
       "         [ 85, 112, 146],\n",
       "         ...,\n",
       "         [189, 210, 246],\n",
       "         [186, 210, 246],\n",
       "         [187, 212, 248]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[105, 135, 165],\n",
       "         [117, 146, 177],\n",
       "         [119, 147, 182],\n",
       "         ...,\n",
       "         [102, 130, 177],\n",
       "         [ 93, 121, 168],\n",
       "         [ 88, 116, 163]],\n",
       " \n",
       "        [[105, 134, 164],\n",
       "         [117, 146, 177],\n",
       "         [120, 148, 182],\n",
       "         ...,\n",
       "         [104, 132, 179],\n",
       "         [ 90, 118, 165],\n",
       "         [ 89, 116, 163]],\n",
       " \n",
       "        [[103, 133, 163],\n",
       "         [115, 144, 175],\n",
       "         [115, 143, 178],\n",
       "         ...,\n",
       "         [103, 131, 178],\n",
       "         [ 93, 121, 168],\n",
       "         [ 92, 120, 167]]], dtype=uint8),\n",
       " array([[[ 36,  75, 107],\n",
       "         [ 40,  78, 110],\n",
       "         [ 42,  80, 112],\n",
       "         ...,\n",
       "         [ 49,  85, 121],\n",
       "         [ 49,  85, 121],\n",
       "         [ 48,  86, 121]],\n",
       " \n",
       "        [[ 38,  76, 108],\n",
       "         [ 41,  79, 111],\n",
       "         [ 42,  81, 113],\n",
       "         ...,\n",
       "         [ 53,  90, 126],\n",
       "         [ 46,  82, 118],\n",
       "         [ 48,  86, 121]],\n",
       " \n",
       "        [[ 40,  76, 109],\n",
       "         [ 39,  77, 109],\n",
       "         [ 40,  79, 111],\n",
       "         ...,\n",
       "         [ 49,  86, 122],\n",
       "         [ 51,  89, 124],\n",
       "         [ 50,  88, 123]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 47,  87, 116],\n",
       "         [ 45,  84, 114],\n",
       "         [ 43,  81, 111],\n",
       "         ...,\n",
       "         [ 34,  65,  94],\n",
       "         [ 40,  72, 105],\n",
       "         [ 43,  75, 110]],\n",
       " \n",
       "        [[ 48,  88, 117],\n",
       "         [ 48,  89, 118],\n",
       "         [ 45,  85, 115],\n",
       "         ...,\n",
       "         [ 34,  71, 104],\n",
       "         [ 38,  75, 109],\n",
       "         [ 44,  78, 114]],\n",
       " \n",
       "        [[ 48,  89, 118],\n",
       "         [ 49,  90, 119],\n",
       "         [ 47,  88, 117],\n",
       "         ...,\n",
       "         [ 37,  74, 109],\n",
       "         [ 42,  79, 115],\n",
       "         [ 43,  79, 117]]], dtype=uint8),\n",
       " array([[[ 39,  76, 110],\n",
       "         [ 39,  76, 109],\n",
       "         [ 39,  77, 109],\n",
       "         ...,\n",
       "         [ 20,  45,  66],\n",
       "         [ 15,  35,  52],\n",
       "         [ 12,  27,  39]],\n",
       " \n",
       "        [[ 40,  77, 111],\n",
       "         [ 39,  77, 110],\n",
       "         [ 39,  77, 109],\n",
       "         ...,\n",
       "         [ 20,  45,  67],\n",
       "         [ 16,  38,  56],\n",
       "         [ 13,  30,  45]],\n",
       " \n",
       "        [[ 42,  76, 112],\n",
       "         [ 41,  76, 110],\n",
       "         [ 39,  75, 108],\n",
       "         ...,\n",
       "         [ 21,  46,  68],\n",
       "         [ 18,  41,  61],\n",
       "         [ 15,  36,  55]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 36,  73, 107],\n",
       "         [ 32,  67,  99],\n",
       "         [ 32,  66,  97],\n",
       "         ...,\n",
       "         [ 33,  77, 102],\n",
       "         [ 34,  73,  99],\n",
       "         [ 34,  69,  95]],\n",
       " \n",
       "        [[ 35,  72, 106],\n",
       "         [ 34,  68, 103],\n",
       "         [ 35,  67, 102],\n",
       "         ...,\n",
       "         [ 36,  77, 103],\n",
       "         [ 33,  72,  97],\n",
       "         [ 32,  67,  93]],\n",
       " \n",
       "        [[ 39,  75, 111],\n",
       "         [ 35,  68, 104],\n",
       "         [ 36,  68, 104],\n",
       "         ...,\n",
       "         [ 30,  70,  96],\n",
       "         [ 33,  70,  95],\n",
       "         [ 36,  72,  96]]], dtype=uint8),\n",
       " array([[[145, 169, 186],\n",
       "         [149, 173, 192],\n",
       "         [152, 171, 195],\n",
       "         ...,\n",
       "         [126, 139, 165],\n",
       "         [125, 140, 159],\n",
       "         [106, 138, 155]],\n",
       " \n",
       "        [[151, 168, 187],\n",
       "         [137, 167, 186],\n",
       "         [150, 169, 191],\n",
       "         ...,\n",
       "         [129, 144, 168],\n",
       "         [121, 137, 158],\n",
       "         [113, 136, 149]],\n",
       " \n",
       "        [[147, 165, 188],\n",
       "         [137, 166, 188],\n",
       "         [144, 165, 191],\n",
       "         ...,\n",
       "         [131, 149, 171],\n",
       "         [112, 137, 161],\n",
       "         [107, 138, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[107, 131, 160],\n",
       "         [ 89, 122, 149],\n",
       "         [ 95, 112, 141],\n",
       "         ...,\n",
       "         [118, 126, 143],\n",
       "         [137, 139, 160],\n",
       "         [122, 145, 156]],\n",
       " \n",
       "        [[109, 134, 159],\n",
       "         [100, 129, 158],\n",
       "         [ 99, 116, 147],\n",
       "         ...,\n",
       "         [136, 145, 154],\n",
       "         [139, 147, 164],\n",
       "         [140, 153, 170]],\n",
       " \n",
       "        [[105, 134, 158],\n",
       "         [ 99, 129, 154],\n",
       "         [104, 124, 145],\n",
       "         ...,\n",
       "         [153, 159, 172],\n",
       "         [147, 154, 174],\n",
       "         [144, 155, 172]]], dtype=uint8),\n",
       " array([[[ 65,  91, 130],\n",
       "         [ 58, 101, 110],\n",
       "         [ 87,  90, 115],\n",
       "         ...,\n",
       "         [155, 165, 177],\n",
       "         [170, 170, 184],\n",
       "         [180, 174, 191]],\n",
       " \n",
       "        [[ 57,  90, 122],\n",
       "         [ 82,  89, 120],\n",
       "         [ 61,  94, 116],\n",
       "         ...,\n",
       "         [159, 165, 178],\n",
       "         [174, 166, 190],\n",
       "         [166, 164, 168]],\n",
       " \n",
       "        [[ 61,  82,  97],\n",
       "         [ 47,  86,  95],\n",
       "         [ 66,  83, 111],\n",
       "         ...,\n",
       "         [169, 154, 168],\n",
       "         [176, 157, 175],\n",
       "         [174, 170, 178]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[130, 133, 173],\n",
       "         [128, 131, 151],\n",
       "         [126, 141, 159],\n",
       "         ...,\n",
       "         [ 68, 110, 110],\n",
       "         [ 98, 106, 122],\n",
       "         [101, 116, 119]],\n",
       " \n",
       "        [[135, 131, 149],\n",
       "         [138, 139, 163],\n",
       "         [115, 141, 156],\n",
       "         ...,\n",
       "         [ 68, 109, 139],\n",
       "         [ 99, 106, 136],\n",
       "         [110, 125, 138]],\n",
       " \n",
       "        [[125, 139, 157],\n",
       "         [110, 138, 168],\n",
       "         [136, 136, 167],\n",
       "         ...,\n",
       "         [104, 108, 135],\n",
       "         [114, 124, 149],\n",
       "         [104, 123, 145]]], dtype=uint8),\n",
       " array([[[ 58,  79, 125],\n",
       "         [ 61,  84, 130],\n",
       "         [ 61,  85, 135],\n",
       "         ...,\n",
       "         [ 76, 104, 168],\n",
       "         [ 74, 105, 167],\n",
       "         [ 70, 102, 165]],\n",
       " \n",
       "        [[ 59,  79, 126],\n",
       "         [ 62,  84, 132],\n",
       "         [ 63,  86, 136],\n",
       "         ...,\n",
       "         [ 76, 104, 168],\n",
       "         [ 77, 105, 169],\n",
       "         [ 73, 104, 168]],\n",
       " \n",
       "        [[ 61,  81, 128],\n",
       "         [ 62,  84, 132],\n",
       "         [ 67,  90, 140],\n",
       "         ...,\n",
       "         [ 73,  99, 163],\n",
       "         [ 77, 104, 169],\n",
       "         [ 76, 104, 169]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  96, 149],\n",
       "         [ 65,  96, 149],\n",
       "         [ 63,  94, 149],\n",
       "         ...,\n",
       "         [ 50,  79, 139],\n",
       "         [ 55,  83, 147],\n",
       "         [ 50,  79, 140]],\n",
       " \n",
       "        [[ 64,  95, 148],\n",
       "         [ 67,  97, 152],\n",
       "         [ 66,  96, 152],\n",
       "         ...,\n",
       "         [ 55,  83, 144],\n",
       "         [ 56,  84, 145],\n",
       "         [ 52,  80, 141]],\n",
       " \n",
       "        [[ 64,  95, 149],\n",
       "         [ 63,  93, 148],\n",
       "         [ 68,  96, 155],\n",
       "         ...,\n",
       "         [ 52,  80, 141],\n",
       "         [ 54,  82, 143],\n",
       "         [ 52,  80, 141]]], dtype=uint8),\n",
       " array([[[ 65,  93, 159],\n",
       "         [ 66,  95, 163],\n",
       "         [ 67,  96, 165],\n",
       "         ...,\n",
       "         [ 57,  83, 131],\n",
       "         [ 58,  84, 131],\n",
       "         [ 58,  83, 128]],\n",
       " \n",
       "        [[ 66,  95, 162],\n",
       "         [ 64,  93, 162],\n",
       "         [ 66,  95, 164],\n",
       "         ...,\n",
       "         [ 64,  92, 139],\n",
       "         [ 57,  83, 129],\n",
       "         [ 54,  81, 125]],\n",
       " \n",
       "        [[ 68,  96, 167],\n",
       "         [ 66,  95, 164],\n",
       "         [ 71,  97, 167],\n",
       "         ...,\n",
       "         [ 59,  87, 134],\n",
       "         [ 61,  87, 133],\n",
       "         [ 55,  82, 127]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 84, 111, 177],\n",
       "         [ 82, 110, 175],\n",
       "         [ 68,  96, 160],\n",
       "         ...,\n",
       "         [ 66, 102, 165],\n",
       "         [ 66, 103, 163],\n",
       "         [ 66, 103, 161]],\n",
       " \n",
       "        [[ 80, 108, 173],\n",
       "         [ 84, 112, 177],\n",
       "         [ 79, 105, 170],\n",
       "         ...,\n",
       "         [ 63,  99, 163],\n",
       "         [ 67, 103, 164],\n",
       "         [ 67, 103, 163]],\n",
       " \n",
       "        [[ 78, 106, 170],\n",
       "         [ 84, 111, 175],\n",
       "         [ 85, 112, 176],\n",
       "         ...,\n",
       "         [ 70, 105, 170],\n",
       "         [ 67, 103, 165],\n",
       "         [ 67, 103, 162]]], dtype=uint8),\n",
       " array([[[ 56,  81, 124],\n",
       "         [ 64,  94, 139],\n",
       "         [ 74, 106, 151],\n",
       "         ...,\n",
       "         [134, 161, 199],\n",
       "         [133, 159, 199],\n",
       "         [131, 156, 198]],\n",
       " \n",
       "        [[ 55,  80, 123],\n",
       "         [ 65,  94, 139],\n",
       "         [ 75, 107, 152],\n",
       "         ...,\n",
       "         [132, 157, 199],\n",
       "         [127, 152, 196],\n",
       "         [128, 152, 198]],\n",
       " \n",
       "        [[ 57,  81, 124],\n",
       "         [ 65,  95, 141],\n",
       "         [ 74, 106, 151],\n",
       "         ...,\n",
       "         [119, 145, 188],\n",
       "         [124, 149, 192],\n",
       "         [123, 147, 193]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 67,  92, 133],\n",
       "         [ 73, 100, 141],\n",
       "         [ 76, 106, 147],\n",
       "         ...,\n",
       "         [109, 128, 171],\n",
       "         [110, 132, 174],\n",
       "         [114, 138, 184]],\n",
       " \n",
       "        [[ 67,  92, 132],\n",
       "         [ 72,  99, 140],\n",
       "         [ 74, 104, 145],\n",
       "         ...,\n",
       "         [111, 131, 176],\n",
       "         [113, 137, 184],\n",
       "         [112, 139, 189]],\n",
       " \n",
       "        [[ 65,  90, 130],\n",
       "         [ 71,  97, 139],\n",
       "         [ 72, 102, 143],\n",
       "         ...,\n",
       "         [112, 136, 182],\n",
       "         [115, 141, 188],\n",
       "         [109, 137, 188]]], dtype=uint8),\n",
       " array([[[160, 147, 165],\n",
       "         [149, 153, 161],\n",
       "         [147, 146, 172],\n",
       "         ...,\n",
       "         [ 68,  53,  85],\n",
       "         [ 45,  46,  56],\n",
       "         [ 36,  53,  58]],\n",
       " \n",
       "        [[157, 143, 165],\n",
       "         [143, 148, 159],\n",
       "         [132, 143, 162],\n",
       "         ...,\n",
       "         [ 39,  66,  73],\n",
       "         [ 46,  57,  75],\n",
       "         [ 41,  35,  49]],\n",
       " \n",
       "        [[142, 142, 158],\n",
       "         [121, 138, 156],\n",
       "         [130, 133, 154],\n",
       "         ...,\n",
       "         [ 45,  64,  65],\n",
       "         [ 58,  51,  90],\n",
       "         [ 47,  35,  67]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 75,  83,  96],\n",
       "         [ 79,  70, 102],\n",
       "         [ 50,  60,  72],\n",
       "         ...,\n",
       "         [ 60,  69,  80],\n",
       "         [ 54,  64,  86],\n",
       "         [ 80,  68,  97]],\n",
       " \n",
       "        [[ 76,  94, 111],\n",
       "         [ 66,  77,  97],\n",
       "         [ 56,  60,  85],\n",
       "         ...,\n",
       "         [ 61,  69,  93],\n",
       "         [ 48,  80,  90],\n",
       "         [ 75,  85, 100]],\n",
       " \n",
       "        [[ 87,  91, 100],\n",
       "         [ 71,  80,  99],\n",
       "         [ 45,  67,  79],\n",
       "         ...,\n",
       "         [ 47,  82,  96],\n",
       "         [ 68,  86,  95],\n",
       "         [ 75,  71,  87]]], dtype=uint8),\n",
       " array([[[153, 153, 159],\n",
       "         [155, 148, 154],\n",
       "         [150, 161, 152],\n",
       "         ...,\n",
       "         [100,  94,  94],\n",
       "         [102, 105, 110],\n",
       "         [105, 109, 114]],\n",
       " \n",
       "        [[148, 150, 148],\n",
       "         [149, 151, 144],\n",
       "         [144, 136, 137],\n",
       "         ...,\n",
       "         [ 88, 100,  98],\n",
       "         [ 97,  98, 104],\n",
       "         [ 91,  95, 109]],\n",
       " \n",
       "        [[154, 143, 150],\n",
       "         [142, 135, 136],\n",
       "         [126, 128, 141],\n",
       "         ...,\n",
       "         [ 87,  93, 102],\n",
       "         [ 82,  91,  96],\n",
       "         [ 98,  99, 108]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[139, 146, 160],\n",
       "         [130, 138, 154],\n",
       "         [137, 137, 151],\n",
       "         ...,\n",
       "         [ 93,  97, 103],\n",
       "         [ 89,  95, 121],\n",
       "         [ 86, 102, 124]],\n",
       " \n",
       "        [[150, 156, 168],\n",
       "         [135, 140, 152],\n",
       "         [136, 138, 159],\n",
       "         ...,\n",
       "         [ 94, 103, 107],\n",
       "         [ 93, 106, 122],\n",
       "         [106, 115, 135]],\n",
       " \n",
       "        [[157, 162, 162],\n",
       "         [152, 156, 162],\n",
       "         [143, 150, 161],\n",
       "         ...,\n",
       "         [ 95, 104, 122],\n",
       "         [ 98, 109, 127],\n",
       "         [110, 119, 139]]], dtype=uint8),\n",
       " array([[[ 12,   6,   7],\n",
       "         [ 31,  31,  53],\n",
       "         [ 36,  40,  69],\n",
       "         ...,\n",
       "         [144, 158, 211],\n",
       "         [146, 159, 213],\n",
       "         [159, 167, 216]],\n",
       " \n",
       "        [[ 11,   5,   6],\n",
       "         [ 32,  31,  46],\n",
       "         [ 19,  13,  19],\n",
       "         ...,\n",
       "         [141, 156, 209],\n",
       "         [137, 151, 211],\n",
       "         [129, 148, 208]],\n",
       " \n",
       "        [[  9,   5,   4],\n",
       "         [ 20,  14,  20],\n",
       "         [ 18,  12,  18],\n",
       "         ...,\n",
       "         [130, 148, 206],\n",
       "         [124, 143, 203],\n",
       "         [126, 148, 207]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 88, 116, 172],\n",
       "         [ 89, 119, 179],\n",
       "         [ 95, 127, 183],\n",
       "         ...,\n",
       "         [105, 141, 201],\n",
       "         [102, 137, 201],\n",
       "         [101, 134, 199]],\n",
       " \n",
       "        [[ 87, 118, 171],\n",
       "         [ 93, 123, 181],\n",
       "         [ 99, 131, 190],\n",
       "         ...,\n",
       "         [108, 145, 204],\n",
       "         [103, 138, 202],\n",
       "         [101, 136, 200]],\n",
       " \n",
       "        [[ 91, 119, 173],\n",
       "         [ 91, 123, 183],\n",
       "         [ 96, 133, 191],\n",
       "         ...,\n",
       "         [110, 145, 207],\n",
       "         [102, 134, 199],\n",
       "         [102, 137, 201]]], dtype=uint8),\n",
       " array([[[  8,   9,  13],\n",
       "         [ 12,  13,  17],\n",
       "         [ 14,  15,  20],\n",
       "         ...,\n",
       "         [171, 175, 203],\n",
       "         [172, 176, 204],\n",
       "         [172, 176, 204]],\n",
       " \n",
       "        [[ 12,  13,  17],\n",
       "         [ 10,  11,  15],\n",
       "         [ 16,  17,  22],\n",
       "         ...,\n",
       "         [165, 169, 197],\n",
       "         [167, 171, 199],\n",
       "         [167, 171, 199]],\n",
       " \n",
       "        [[  9,  10,  14],\n",
       "         [ 15,  16,  20],\n",
       "         [ 15,  16,  20],\n",
       "         ...,\n",
       "         [154, 158, 186],\n",
       "         [159, 163, 191],\n",
       "         [160, 164, 192]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[126, 149, 171],\n",
       "         [128, 149, 175],\n",
       "         [136, 156, 185],\n",
       "         ...,\n",
       "         [113, 133, 164],\n",
       "         [125, 143, 174],\n",
       "         [146, 160, 192]],\n",
       " \n",
       "        [[133, 156, 178],\n",
       "         [138, 162, 186],\n",
       "         [147, 167, 196],\n",
       "         ...,\n",
       "         [118, 139, 170],\n",
       "         [135, 153, 184],\n",
       "         [155, 169, 201]],\n",
       " \n",
       "        [[137, 158, 184],\n",
       "         [145, 164, 191],\n",
       "         [155, 171, 199],\n",
       "         ...,\n",
       "         [133, 150, 179],\n",
       "         [149, 163, 192],\n",
       "         [166, 177, 206]]], dtype=uint8),\n",
       " array([[[202, 221, 255],\n",
       "         [199, 220, 253],\n",
       "         [198, 221, 253],\n",
       "         ...,\n",
       "         [156, 179, 220],\n",
       "         [152, 177, 217],\n",
       "         [140, 166, 206]],\n",
       " \n",
       "        [[202, 221, 255],\n",
       "         [200, 220, 255],\n",
       "         [197, 219, 254],\n",
       "         ...,\n",
       "         [156, 180, 217],\n",
       "         [150, 175, 215],\n",
       "         [137, 162, 202]],\n",
       " \n",
       "        [[199, 218, 254],\n",
       "         [199, 219, 254],\n",
       "         [197, 218, 254],\n",
       "         ...,\n",
       "         [159, 181, 215],\n",
       "         [148, 172, 209],\n",
       "         [136, 161, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 189, 231],\n",
       "         [159, 185, 231],\n",
       "         [153, 183, 230],\n",
       "         ...,\n",
       "         [177, 204, 237],\n",
       "         [176, 203, 238],\n",
       "         [171, 201, 234]],\n",
       " \n",
       "        [[165, 192, 236],\n",
       "         [163, 186, 231],\n",
       "         [161, 188, 234],\n",
       "         ...,\n",
       "         [177, 203, 237],\n",
       "         [176, 203, 237],\n",
       "         [172, 199, 234]],\n",
       " \n",
       "        [[165, 191, 235],\n",
       "         [167, 190, 236],\n",
       "         [160, 187, 233],\n",
       "         ...,\n",
       "         [179, 205, 238],\n",
       "         [176, 203, 237],\n",
       "         [171, 200, 233]]], dtype=uint8),\n",
       " array([[[147, 158, 215],\n",
       "         [145, 156, 213],\n",
       "         [143, 156, 212],\n",
       "         ...,\n",
       "         [ 52,  58,  91],\n",
       "         [ 70,  88, 138],\n",
       "         [ 48,  59,  99]],\n",
       " \n",
       "        [[145, 156, 213],\n",
       "         [146, 157, 214],\n",
       "         [143, 155, 213],\n",
       "         ...,\n",
       "         [ 44,  44,  72],\n",
       "         [ 53,  62, 103],\n",
       "         [ 54,  62, 103]],\n",
       " \n",
       "        [[144, 157, 213],\n",
       "         [143, 156, 212],\n",
       "         [140, 154, 212],\n",
       "         ...,\n",
       "         [ 37,  34,  50],\n",
       "         [ 33,  31,  50],\n",
       "         [ 42,  48,  84]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[165, 184, 230],\n",
       "         [148, 170, 224],\n",
       "         [134, 164, 219],\n",
       "         ...,\n",
       "         [131, 159, 206],\n",
       "         [131, 161, 205],\n",
       "         [130, 151, 198]],\n",
       " \n",
       "        [[170, 187, 232],\n",
       "         [152, 174, 226],\n",
       "         [135, 163, 220],\n",
       "         ...,\n",
       "         [135, 163, 209],\n",
       "         [132, 161, 205],\n",
       "         [134, 156, 201]],\n",
       " \n",
       "        [[173, 188, 235],\n",
       "         [154, 175, 227],\n",
       "         [136, 162, 220],\n",
       "         ...,\n",
       "         [140, 168, 213],\n",
       "         [133, 164, 207],\n",
       "         [135, 160, 202]]], dtype=uint8),\n",
       " array([[[ 95,  96, 106],\n",
       "         [ 99,  95, 108],\n",
       "         [ 93,  94,  98],\n",
       "         ...,\n",
       "         [187, 190, 182],\n",
       "         [182, 186, 187],\n",
       "         [167, 175, 187]],\n",
       " \n",
       "        [[ 97, 100, 104],\n",
       "         [ 93,  94, 102],\n",
       "         [ 82,  91,  96],\n",
       "         ...,\n",
       "         [201, 200, 201],\n",
       "         [185, 187, 190],\n",
       "         [178, 177, 187]],\n",
       " \n",
       "        [[ 93,  96, 104],\n",
       "         [102,  93, 111],\n",
       "         [ 89,  99, 101],\n",
       "         ...,\n",
       "         [190, 187, 175],\n",
       "         [200, 195, 202],\n",
       "         [194, 186, 194]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[179, 179, 181],\n",
       "         [155, 158, 170],\n",
       "         [139, 146, 154],\n",
       "         ...,\n",
       "         [115, 110, 123],\n",
       "         [113, 117, 126],\n",
       "         [132, 127, 141]],\n",
       " \n",
       "        [[172, 177, 173],\n",
       "         [148, 158, 161],\n",
       "         [132, 140, 152],\n",
       "         ...,\n",
       "         [148, 145, 146],\n",
       "         [122, 124, 128],\n",
       "         [134, 141, 144]],\n",
       " \n",
       "        [[185, 176, 180],\n",
       "         [149, 162, 161],\n",
       "         [126, 143, 151],\n",
       "         ...,\n",
       "         [175, 164, 162],\n",
       "         [150, 150, 152],\n",
       "         [154, 152, 148]]], dtype=uint8),\n",
       " array([[[138, 158, 183],\n",
       "         [140, 159, 182],\n",
       "         [144, 162, 185],\n",
       "         ...,\n",
       "         [129, 150, 195],\n",
       "         [132, 152, 198],\n",
       "         [135, 156, 201]],\n",
       " \n",
       "        [[136, 156, 181],\n",
       "         [138, 156, 180],\n",
       "         [143, 161, 182],\n",
       "         ...,\n",
       "         [126, 148, 193],\n",
       "         [128, 149, 194],\n",
       "         [137, 158, 203]],\n",
       " \n",
       "        [[137, 154, 180],\n",
       "         [140, 157, 180],\n",
       "         [149, 164, 183],\n",
       "         ...,\n",
       "         [122, 145, 190],\n",
       "         [127, 150, 195],\n",
       "         [133, 156, 201]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[121, 147, 187],\n",
       "         [123, 149, 189],\n",
       "         [120, 147, 184],\n",
       "         ...,\n",
       "         [ 97, 125, 168],\n",
       "         [ 97, 126, 170],\n",
       "         [108, 136, 181]],\n",
       " \n",
       "        [[123, 148, 189],\n",
       "         [125, 152, 192],\n",
       "         [122, 149, 188],\n",
       "         ...,\n",
       "         [111, 136, 180],\n",
       "         [112, 140, 181],\n",
       "         [120, 145, 187]],\n",
       " \n",
       "        [[124, 149, 191],\n",
       "         [123, 148, 190],\n",
       "         [119, 144, 186],\n",
       "         ...,\n",
       "         [117, 143, 184],\n",
       "         [124, 149, 189],\n",
       "         [124, 149, 188]]], dtype=uint8),\n",
       " array([[[153, 172, 215],\n",
       "         [164, 180, 223],\n",
       "         [162, 180, 221],\n",
       "         ...,\n",
       "         [166, 184, 213],\n",
       "         [163, 181, 209],\n",
       "         [154, 172, 200]],\n",
       " \n",
       "        [[144, 167, 213],\n",
       "         [145, 164, 209],\n",
       "         [151, 170, 214],\n",
       "         ...,\n",
       "         [169, 185, 210],\n",
       "         [161, 177, 203],\n",
       "         [158, 174, 198]],\n",
       " \n",
       "        [[138, 160, 210],\n",
       "         [138, 159, 206],\n",
       "         [141, 161, 208],\n",
       "         ...,\n",
       "         [173, 189, 213],\n",
       "         [170, 186, 209],\n",
       "         [165, 181, 204]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[135, 159, 201],\n",
       "         [105, 131, 177],\n",
       "         [ 96, 124, 171],\n",
       "         ...,\n",
       "         [182, 199, 229],\n",
       "         [200, 216, 241],\n",
       "         [198, 217, 238]],\n",
       " \n",
       "        [[154, 177, 215],\n",
       "         [117, 142, 186],\n",
       "         [101, 129, 176],\n",
       "         ...,\n",
       "         [203, 217, 246],\n",
       "         [203, 220, 243],\n",
       "         [192, 213, 233]],\n",
       " \n",
       "        [[170, 194, 229],\n",
       "         [133, 159, 201],\n",
       "         [101, 129, 176],\n",
       "         ...,\n",
       "         [202, 215, 246],\n",
       "         [195, 211, 237],\n",
       "         [190, 210, 234]]], dtype=uint8),\n",
       " array([[[ 56,  66,  69],\n",
       "         [ 62,  74,  80],\n",
       "         [ 76,  92, 106],\n",
       "         ...,\n",
       "         [162, 183, 215],\n",
       "         [158, 179, 211],\n",
       "         [154, 177, 209]],\n",
       " \n",
       "        [[ 58,  68,  71],\n",
       "         [ 53,  65,  71],\n",
       "         [ 87, 103, 117],\n",
       "         ...,\n",
       "         [158, 179, 211],\n",
       "         [158, 179, 211],\n",
       "         [152, 175, 207]],\n",
       " \n",
       "        [[ 55,  65,  68],\n",
       "         [ 56,  68,  75],\n",
       "         [ 90, 106, 122],\n",
       "         ...,\n",
       "         [158, 179, 211],\n",
       "         [155, 176, 208],\n",
       "         [147, 170, 202]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 80,  95, 114],\n",
       "         [134, 148, 168],\n",
       "         [166, 181, 200],\n",
       "         ...,\n",
       "         [176, 197, 229],\n",
       "         [182, 203, 235],\n",
       "         [192, 213, 245]],\n",
       " \n",
       "        [[ 70,  85, 104],\n",
       "         [131, 146, 165],\n",
       "         [165, 180, 199],\n",
       "         ...,\n",
       "         [179, 200, 232],\n",
       "         [186, 207, 239],\n",
       "         [193, 214, 246]],\n",
       " \n",
       "        [[ 79,  94, 113],\n",
       "         [133, 148, 167],\n",
       "         [167, 182, 201],\n",
       "         ...,\n",
       "         [182, 203, 235],\n",
       "         [188, 209, 241],\n",
       "         [192, 213, 245]]], dtype=uint8),\n",
       " array([[[152, 175, 207],\n",
       "         [151, 174, 206],\n",
       "         [155, 176, 211],\n",
       "         ...,\n",
       "         [ 83,  99, 132],\n",
       "         [ 71,  86, 113],\n",
       "         [ 41,  51,  69]],\n",
       " \n",
       "        [[152, 175, 207],\n",
       "         [150, 173, 205],\n",
       "         [153, 174, 209],\n",
       "         ...,\n",
       "         [ 85, 101, 134],\n",
       "         [ 72,  85, 113],\n",
       "         [ 40,  50,  68]],\n",
       " \n",
       "        [[152, 175, 207],\n",
       "         [150, 173, 205],\n",
       "         [152, 173, 208],\n",
       "         ...,\n",
       "         [ 83, 100, 132],\n",
       "         [ 70,  84, 112],\n",
       "         [ 42,  51,  70]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[190, 211, 243],\n",
       "         [196, 217, 249],\n",
       "         [191, 213, 246],\n",
       "         ...,\n",
       "         [108, 123, 150],\n",
       "         [124, 140, 162],\n",
       "         [ 49,  65,  82]],\n",
       " \n",
       "        [[190, 211, 243],\n",
       "         [201, 222, 254],\n",
       "         [191, 213, 246],\n",
       "         ...,\n",
       "         [108, 123, 150],\n",
       "         [121, 138, 159],\n",
       "         [ 50,  65,  84]],\n",
       " \n",
       "        [[188, 209, 241],\n",
       "         [200, 221, 253],\n",
       "         [193, 215, 249],\n",
       "         ...,\n",
       "         [114, 128, 155],\n",
       "         [120, 137, 158],\n",
       "         [ 44,  59,  78]]], dtype=uint8),\n",
       " array([[[  9,  15,  28],\n",
       "         [  9,  13,  30],\n",
       "         [  8,  12,  30],\n",
       "         ...,\n",
       "         [ 37,  46,  89],\n",
       "         [ 39,  46,  94],\n",
       "         [ 52,  61, 108]],\n",
       " \n",
       "        [[  9,  15,  28],\n",
       "         [  9,  14,  30],\n",
       "         [  8,  12,  30],\n",
       "         ...,\n",
       "         [ 36,  44,  86],\n",
       "         [ 39,  46,  94],\n",
       "         [ 45,  54, 101]],\n",
       " \n",
       "        [[  9,  15,  28],\n",
       "         [  9,  14,  30],\n",
       "         [  8,  12,  30],\n",
       "         ...,\n",
       "         [ 32,  40,  81],\n",
       "         [ 39,  47,  93],\n",
       "         [ 41,  51,  96]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 18,  22,  46],\n",
       "         [ 17,  22,  46],\n",
       "         [ 17,  24,  48],\n",
       "         ...,\n",
       "         [  4,   9,  31],\n",
       "         [  5,  10,  33],\n",
       "         [  6,  10,  33]],\n",
       " \n",
       "        [[ 19,  23,  47],\n",
       "         [ 18,  23,  47],\n",
       "         [ 18,  25,  51],\n",
       "         ...,\n",
       "         [  5,   9,  33],\n",
       "         [  6,  10,  34],\n",
       "         [  7,  11,  35]],\n",
       " \n",
       "        [[ 19,  23,  47],\n",
       "         [ 18,  23,  47],\n",
       "         [ 19,  26,  52],\n",
       "         ...,\n",
       "         [  5,   9,  33],\n",
       "         [  6,  10,  34],\n",
       "         [  7,  11,  35]]], dtype=uint8),\n",
       " array([[[183, 184, 185],\n",
       "         [129, 136, 153],\n",
       "         [ 91,  88, 114],\n",
       "         ...,\n",
       "         [114, 115, 171],\n",
       "         [126, 127, 184],\n",
       "         [133, 136, 191]],\n",
       " \n",
       "        [[145, 146, 157],\n",
       "         [125, 126, 144],\n",
       "         [ 92,  91, 116],\n",
       "         ...,\n",
       "         [128, 132, 182],\n",
       "         [129, 133, 183],\n",
       "         [134, 140, 190]],\n",
       " \n",
       "        [[112, 112, 127],\n",
       "         [100,  97, 115],\n",
       "         [ 82,  81, 109],\n",
       "         ...,\n",
       "         [142, 145, 191],\n",
       "         [148, 152, 199],\n",
       "         [141, 147, 194]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[249, 252, 252],\n",
       "         [232, 235, 248],\n",
       "         [214, 218, 242],\n",
       "         ...,\n",
       "         [126, 144, 219],\n",
       "         [134, 154, 221],\n",
       "         [146, 161, 223]],\n",
       " \n",
       "        [[248, 252, 251],\n",
       "         [230, 233, 247],\n",
       "         [216, 220, 245],\n",
       "         ...,\n",
       "         [132, 147, 215],\n",
       "         [143, 160, 218],\n",
       "         [154, 168, 225]],\n",
       " \n",
       "        [[250, 251, 251],\n",
       "         [231, 235, 249],\n",
       "         [215, 219, 243],\n",
       "         ...,\n",
       "         [137, 150, 221],\n",
       "         [154, 169, 225],\n",
       "         [157, 171, 227]]], dtype=uint8),\n",
       " array([[[ 47,  57, 107],\n",
       "         [ 47,  57, 107],\n",
       "         [ 47,  57, 109],\n",
       "         ...,\n",
       "         [ 51,  65, 108],\n",
       "         [ 50,  62, 104],\n",
       "         [ 51,  63, 103]],\n",
       " \n",
       "        [[ 54,  63, 113],\n",
       "         [ 52,  61, 111],\n",
       "         [ 48,  58, 108],\n",
       "         ...,\n",
       "         [ 47,  60, 104],\n",
       "         [ 50,  62, 104],\n",
       "         [ 52,  65, 105]],\n",
       " \n",
       "        [[ 56,  66, 114],\n",
       "         [ 51,  61, 109],\n",
       "         [ 50,  61, 109],\n",
       "         ...,\n",
       "         [ 50,  63, 107],\n",
       "         [ 52,  64, 106],\n",
       "         [ 52,  64, 104]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 40,  54, 101],\n",
       "         [ 35,  47,  90],\n",
       "         [ 32,  40,  80],\n",
       "         ...,\n",
       "         [ 42,  54, 108],\n",
       "         [ 48,  60, 114],\n",
       "         [ 56,  69, 124]],\n",
       " \n",
       "        [[ 47,  62, 115],\n",
       "         [ 41,  55, 104],\n",
       "         [ 34,  45,  91],\n",
       "         ...,\n",
       "         [ 43,  55, 109],\n",
       "         [ 47,  61, 114],\n",
       "         [ 55,  68, 123]],\n",
       " \n",
       "        [[ 50,  68, 125],\n",
       "         [ 51,  67, 122],\n",
       "         [ 50,  65, 114],\n",
       "         ...,\n",
       "         [ 49,  62, 117],\n",
       "         [ 52,  66, 121],\n",
       "         [ 57,  72, 128]]], dtype=uint8),\n",
       " array([[[124, 137, 155],\n",
       "         [122, 136, 155],\n",
       "         [128, 140, 158],\n",
       "         ...,\n",
       "         [ 82, 110, 148],\n",
       "         [ 83, 112, 149],\n",
       "         [ 83, 114, 150]],\n",
       " \n",
       "        [[126, 139, 155],\n",
       "         [125, 140, 157],\n",
       "         [131, 146, 162],\n",
       "         ...,\n",
       "         [ 79, 108, 146],\n",
       "         [ 80, 109, 146],\n",
       "         [ 79, 110, 146]],\n",
       " \n",
       "        [[127, 140, 156],\n",
       "         [129, 142, 158],\n",
       "         [133, 146, 162],\n",
       "         ...,\n",
       "         [ 73, 102, 139],\n",
       "         [ 75, 105, 144],\n",
       "         [ 74, 105, 144]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[132, 146, 165],\n",
       "         [131, 148, 170],\n",
       "         [131, 149, 173],\n",
       "         ...,\n",
       "         [ 55,  81, 118],\n",
       "         [ 59,  85, 122],\n",
       "         [ 62,  88, 125]],\n",
       " \n",
       "        [[131, 146, 163],\n",
       "         [131, 147, 171],\n",
       "         [131, 148, 174],\n",
       "         ...,\n",
       "         [ 61,  87, 124],\n",
       "         [ 64,  91, 128],\n",
       "         [ 68,  94, 131]],\n",
       " \n",
       "        [[130, 143, 162],\n",
       "         [130, 145, 168],\n",
       "         [127, 144, 171],\n",
       "         ...,\n",
       "         [ 66,  92, 131],\n",
       "         [ 70,  96, 133],\n",
       "         [ 73,  99, 136]]], dtype=uint8),\n",
       " array([[[115, 156, 229],\n",
       "         [116, 158, 229],\n",
       "         [117, 159, 230],\n",
       "         ...,\n",
       "         [ 68, 121, 202],\n",
       "         [ 66, 122, 201],\n",
       "         [ 46,  96, 160]],\n",
       " \n",
       "        [[118, 160, 229],\n",
       "         [118, 160, 229],\n",
       "         [117, 161, 229],\n",
       "         ...,\n",
       "         [ 74, 127, 208],\n",
       "         [ 63, 118, 197],\n",
       "         [ 52,  99, 166]],\n",
       " \n",
       "        [[119, 162, 229],\n",
       "         [120, 164, 232],\n",
       "         [120, 165, 232],\n",
       "         ...,\n",
       "         [ 80, 130, 208],\n",
       "         [ 69, 118, 204],\n",
       "         [ 58, 102, 175]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[140, 171, 222],\n",
       "         [136, 169, 214],\n",
       "         [138, 169, 218],\n",
       "         ...,\n",
       "         [162, 186, 228],\n",
       "         [157, 182, 223],\n",
       "         [146, 177, 221]],\n",
       " \n",
       "        [[147, 175, 224],\n",
       "         [145, 174, 220],\n",
       "         [150, 177, 223],\n",
       "         ...,\n",
       "         [166, 189, 229],\n",
       "         [162, 184, 224],\n",
       "         [152, 179, 223]],\n",
       " \n",
       "        [[149, 176, 221],\n",
       "         [144, 178, 227],\n",
       "         [145, 176, 225],\n",
       "         ...,\n",
       "         [167, 185, 227],\n",
       "         [168, 186, 227],\n",
       "         [166, 187, 229]]], dtype=uint8),\n",
       " array([[[ 33,  52,  79],\n",
       "         [ 43,  63,  90],\n",
       "         [ 43,  65,  93],\n",
       "         ...,\n",
       "         [ 76, 105, 136],\n",
       "         [ 78, 107, 138],\n",
       "         [ 75, 106, 140]],\n",
       " \n",
       "        [[ 37,  56,  84],\n",
       "         [ 43,  64,  92],\n",
       "         [ 46,  67,  95],\n",
       "         ...,\n",
       "         [ 73, 100, 131],\n",
       "         [ 73, 101, 132],\n",
       "         [ 74, 101, 135]],\n",
       " \n",
       "        [[ 36,  57,  85],\n",
       "         [ 45,  66,  94],\n",
       "         [ 48,  69,  97],\n",
       "         ...,\n",
       "         [ 66,  91, 123],\n",
       "         [ 67,  94, 125],\n",
       "         [ 72, 100, 131]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68, 102, 138],\n",
       "         [ 67, 101, 137],\n",
       "         [ 67, 103, 141],\n",
       "         ...,\n",
       "         [ 42,  66,  96],\n",
       "         [ 41,  65,  95],\n",
       "         [ 41,  65,  95]],\n",
       " \n",
       "        [[ 68, 104, 141],\n",
       "         [ 68, 104, 142],\n",
       "         [ 66, 102, 141],\n",
       "         ...,\n",
       "         [ 38,  62,  94],\n",
       "         [ 39,  62,  94],\n",
       "         [ 43,  68, 101]],\n",
       " \n",
       "        [[ 71, 106, 144],\n",
       "         [ 70, 106, 144],\n",
       "         [ 68, 104, 143],\n",
       "         ...,\n",
       "         [ 36,  61,  95],\n",
       "         [ 39,  64,  98],\n",
       "         [ 47,  73, 107]]], dtype=uint8),\n",
       " array([[[ 72,  99, 140],\n",
       "         [ 73, 101, 142],\n",
       "         [ 74, 102, 143],\n",
       "         ...,\n",
       "         [ 41,  60,  81],\n",
       "         [ 37,  54,  67],\n",
       "         [ 39,  53,  61]],\n",
       " \n",
       "        [[ 72, 100, 141],\n",
       "         [ 72, 100, 141],\n",
       "         [ 74, 102, 143],\n",
       "         ...,\n",
       "         [ 41,  61,  82],\n",
       "         [ 36,  52,  67],\n",
       "         [ 34,  50,  59]],\n",
       " \n",
       "        [[ 69,  97, 137],\n",
       "         [ 70,  98, 139],\n",
       "         [ 70,  98, 138],\n",
       "         ...,\n",
       "         [ 37,  55,  78],\n",
       "         [ 42,  58,  75],\n",
       "         [ 26,  39,  52]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 82, 109, 152],\n",
       "         [ 77, 103, 143],\n",
       "         [ 73,  99, 139],\n",
       "         ...,\n",
       "         [ 82, 111, 144],\n",
       "         [ 84, 109, 141],\n",
       "         [ 78, 100, 130]],\n",
       " \n",
       "        [[ 79, 106, 151],\n",
       "         [ 81, 108, 150],\n",
       "         [ 78, 106, 147],\n",
       "         ...,\n",
       "         [ 84, 113, 147],\n",
       "         [ 87, 112, 144],\n",
       "         [ 77, 103, 132]],\n",
       " \n",
       "        [[ 83, 112, 156],\n",
       "         [ 86, 115, 158],\n",
       "         [ 83, 112, 153],\n",
       "         ...,\n",
       "         [ 87, 113, 149],\n",
       "         [ 86, 113, 147],\n",
       "         [ 80, 108, 138]]], dtype=uint8),\n",
       " array([[[ 74, 106, 142],\n",
       "         [ 73, 105, 144],\n",
       "         [ 73, 105, 144],\n",
       "         ...,\n",
       "         [101, 118, 138],\n",
       "         [101, 116, 135],\n",
       "         [ 94, 107, 124]],\n",
       " \n",
       "        [[ 74, 106, 142],\n",
       "         [ 72, 106, 142],\n",
       "         [ 71, 103, 144],\n",
       "         ...,\n",
       "         [105, 120, 140],\n",
       "         [103, 118, 137],\n",
       "         [ 96, 109, 126]],\n",
       " \n",
       "        [[ 72, 106, 143],\n",
       "         [ 72, 106, 142],\n",
       "         [ 72, 104, 143],\n",
       "         ...,\n",
       "         [110, 126, 143],\n",
       "         [107, 123, 140],\n",
       "         [104, 118, 135]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 78, 108, 149],\n",
       "         [ 59,  87, 128],\n",
       "         [ 47,  72, 114],\n",
       "         ...,\n",
       "         [ 97, 120, 147],\n",
       "         [103, 125, 150],\n",
       "         [116, 134, 151]],\n",
       " \n",
       "        [[ 81, 111, 152],\n",
       "         [ 63,  91, 132],\n",
       "         [ 52,  80, 121],\n",
       "         ...,\n",
       "         [ 99, 121, 148],\n",
       "         [103, 125, 150],\n",
       "         [114, 132, 149]],\n",
       " \n",
       "        [[ 86, 116, 157],\n",
       "         [ 66,  97, 137],\n",
       "         [ 55,  83, 124],\n",
       "         ...,\n",
       "         [ 99, 121, 149],\n",
       "         [102, 125, 148],\n",
       "         [116, 132, 150]]], dtype=uint8),\n",
       " array([[[ 25,  25,  47],\n",
       "         [ 40,  42,  73],\n",
       "         [ 47,  50,  81],\n",
       "         ...,\n",
       "         [ 27,  34,  89],\n",
       "         [ 28,  35,  90],\n",
       "         [ 27,  34,  89]],\n",
       " \n",
       "        [[ 37,  37,  65],\n",
       "         [ 44,  47,  78],\n",
       "         [ 47,  50,  81],\n",
       "         ...,\n",
       "         [ 27,  34,  89],\n",
       "         [ 28,  35,  90],\n",
       "         [ 28,  35,  90]],\n",
       " \n",
       "        [[ 43,  44,  77],\n",
       "         [ 49,  51,  84],\n",
       "         [ 49,  51,  85],\n",
       "         ...,\n",
       "         [ 27,  35,  89],\n",
       "         [ 28,  35,  90],\n",
       "         [ 29,  36,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 65,  67, 102],\n",
       "         [ 62,  64,  99],\n",
       "         [ 65,  67, 102],\n",
       "         ...,\n",
       "         [ 36,  42,  77],\n",
       "         [ 36,  42,  77],\n",
       "         [ 35,  41,  79]],\n",
       " \n",
       "        [[ 64,  66, 100],\n",
       "         [ 64,  65,  99],\n",
       "         [ 64,  66, 101],\n",
       "         ...,\n",
       "         [ 38,  44,  79],\n",
       "         [ 35,  41,  76],\n",
       "         [ 34,  39,  78]],\n",
       " \n",
       "        [[ 64,  66, 100],\n",
       "         [ 67,  68, 105],\n",
       "         [ 66,  67, 105],\n",
       "         ...,\n",
       "         [ 36,  43,  76],\n",
       "         [ 35,  41,  78],\n",
       "         [ 39,  44,  83]]], dtype=uint8),\n",
       " array([[[25, 33, 93],\n",
       "         [26, 34, 94],\n",
       "         [25, 31, 90],\n",
       "         ...,\n",
       "         [ 7,  9, 19],\n",
       "         [ 5,  7, 18],\n",
       "         [ 3,  5, 15]],\n",
       " \n",
       "        [[26, 34, 93],\n",
       "         [26, 34, 93],\n",
       "         [26, 33, 92],\n",
       "         ...,\n",
       "         [ 5,  7, 18],\n",
       "         [ 3,  5, 16],\n",
       "         [ 3,  4, 14]],\n",
       " \n",
       "        [[29, 37, 96],\n",
       "         [26, 34, 93],\n",
       "         [26, 33, 93],\n",
       "         ...,\n",
       "         [ 5,  7, 18],\n",
       "         [ 5,  7, 18],\n",
       "         [ 2,  5, 12]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 4,  6, 24],\n",
       "         [ 3,  4, 24],\n",
       "         [ 5,  6, 25],\n",
       "         ...,\n",
       "         [ 6, 10, 25],\n",
       "         [ 4,  5, 16],\n",
       "         [ 0,  2, 12]],\n",
       " \n",
       "        [[ 3,  5, 23],\n",
       "         [ 3,  5, 23],\n",
       "         [ 5,  6, 26],\n",
       "         ...,\n",
       "         [ 6, 10, 25],\n",
       "         [ 5,  6, 20],\n",
       "         [ 2,  3, 16]],\n",
       " \n",
       "        [[ 4,  6, 24],\n",
       "         [ 3,  5, 23],\n",
       "         [ 4,  5, 25],\n",
       "         ...,\n",
       "         [ 6,  9, 23],\n",
       "         [ 3,  4, 18],\n",
       "         [ 3,  5, 17]]], dtype=uint8),\n",
       " array([[[ 52,  63,  90],\n",
       "         [ 60,  71,  98],\n",
       "         [ 56,  67,  94],\n",
       "         ...,\n",
       "         [ 48,  63, 109],\n",
       "         [ 46,  62, 108],\n",
       "         [ 48,  66, 113]],\n",
       " \n",
       "        [[ 57,  70,  94],\n",
       "         [ 59,  71,  95],\n",
       "         [ 60,  71,  96],\n",
       "         ...,\n",
       "         [ 46,  62, 108],\n",
       "         [ 46,  62, 108],\n",
       "         [ 46,  64, 111]],\n",
       " \n",
       "        [[ 60,  73,  95],\n",
       "         [ 61,  74,  96],\n",
       "         [ 59,  70,  96],\n",
       "         ...,\n",
       "         [ 47,  65, 110],\n",
       "         [ 49,  66, 112],\n",
       "         [ 47,  65, 111]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 70,  82, 109],\n",
       "         [ 69,  81, 109],\n",
       "         [ 65,  79, 103],\n",
       "         ...,\n",
       "         [ 49,  60,  90],\n",
       "         [ 50,  61,  91],\n",
       "         [ 57,  68, 100]],\n",
       " \n",
       "        [[ 69,  81, 109],\n",
       "         [ 68,  80, 108],\n",
       "         [ 65,  78, 105],\n",
       "         ...,\n",
       "         [ 56,  68,  98],\n",
       "         [ 57,  69,  99],\n",
       "         [ 63,  74, 104]],\n",
       " \n",
       "        [[ 66,  78, 107],\n",
       "         [ 68,  80, 108],\n",
       "         [ 71,  83, 111],\n",
       "         ...,\n",
       "         [ 61,  75, 104],\n",
       "         [ 64,  78, 107],\n",
       "         [ 67,  78, 108]]], dtype=uint8),\n",
       " array([[[104, 107, 113],\n",
       "         [176, 174, 183],\n",
       "         [254, 253, 254],\n",
       "         ...,\n",
       "         [160, 174, 183],\n",
       "         [160, 172, 181],\n",
       "         [156, 169, 183]],\n",
       " \n",
       "        [[101, 104, 117],\n",
       "         [209, 207, 216],\n",
       "         [255, 255, 254],\n",
       "         ...,\n",
       "         [148, 164, 175],\n",
       "         [147, 163, 176],\n",
       "         [150, 162, 179]],\n",
       " \n",
       "        [[138, 140, 154],\n",
       "         [244, 244, 247],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [148, 163, 176],\n",
       "         [143, 158, 175],\n",
       "         [144, 158, 177]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [244, 247, 254]],\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [243, 247, 255]],\n",
       " \n",
       "        [[255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         ...,\n",
       "         [255, 255, 255],\n",
       "         [255, 255, 255],\n",
       "         [237, 242, 252]]], dtype=uint8),\n",
       " array([[[146, 161, 168],\n",
       "         [147, 157, 166],\n",
       "         [144, 155, 163],\n",
       "         ...,\n",
       "         [ 47,  42,  37],\n",
       "         [ 43,  32,  35],\n",
       "         [ 33,  26,  28]],\n",
       " \n",
       "        [[148, 159, 168],\n",
       "         [140, 155, 164],\n",
       "         [138, 147, 159],\n",
       "         ...,\n",
       "         [ 46,  41,  40],\n",
       "         [ 46,  32,  39],\n",
       "         [ 35,  29,  26]],\n",
       " \n",
       "        [[141, 152, 164],\n",
       "         [128, 149, 161],\n",
       "         [131, 144, 157],\n",
       "         ...,\n",
       "         [ 40,  37,  46],\n",
       "         [ 30,  28,  26],\n",
       "         [ 29,  32,  20]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[117, 129, 156],\n",
       "         [ 91,  99, 126],\n",
       "         [ 86,  93, 115],\n",
       "         ...,\n",
       "         [ 79,  86,  89],\n",
       "         [ 84,  87,  91],\n",
       "         [ 88,  91,  92]],\n",
       " \n",
       "        [[111, 124, 150],\n",
       "         [ 95, 102, 129],\n",
       "         [ 87,  95, 114],\n",
       "         ...,\n",
       "         [ 70,  81,  85],\n",
       "         [ 78,  87,  87],\n",
       "         [ 87,  86,  80]],\n",
       " \n",
       "        [[107, 122, 147],\n",
       "         [ 85,  96, 122],\n",
       "         [ 84,  95, 113],\n",
       "         ...,\n",
       "         [ 73,  87,  87],\n",
       "         [ 91,  91,  94],\n",
       "         [ 92,  92,  82]]], dtype=uint8),\n",
       " array([[[ 54,  73, 131],\n",
       "         [ 59,  78, 135],\n",
       "         [ 62,  82, 140],\n",
       "         ...,\n",
       "         [135, 164, 215],\n",
       "         [137, 170, 223],\n",
       "         [142, 183, 232]],\n",
       " \n",
       "        [[ 57,  72, 131],\n",
       "         [ 62,  77, 135],\n",
       "         [ 62,  80, 139],\n",
       "         ...,\n",
       "         [123, 148, 191],\n",
       "         [126, 149, 197],\n",
       "         [123, 158, 211]],\n",
       " \n",
       "        [[ 55,  69, 128],\n",
       "         [ 60,  74, 134],\n",
       "         [ 62,  80, 138],\n",
       "         ...,\n",
       "         [ 93, 116, 155],\n",
       "         [113, 131, 174],\n",
       "         [114, 145, 198]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 54,  65, 113],\n",
       "         [ 63,  72, 120],\n",
       "         [ 56,  63, 109],\n",
       "         ...,\n",
       "         [ 96,  88, 119],\n",
       "         [ 95,  88, 122],\n",
       "         [ 93,  87, 122]],\n",
       " \n",
       "        [[ 57,  68, 116],\n",
       "         [ 49,  58, 107],\n",
       "         [ 62,  69, 116],\n",
       "         ...,\n",
       "         [ 98,  90, 121],\n",
       "         [ 96,  89, 123],\n",
       "         [ 95,  89, 124]],\n",
       " \n",
       "        [[ 57,  69, 117],\n",
       "         [ 56,  64, 113],\n",
       "         [ 56,  62, 109],\n",
       "         ...,\n",
       "         [100,  91, 122],\n",
       "         [ 97,  91, 124],\n",
       "         [ 96,  90, 125]]], dtype=uint8),\n",
       " array([[[161, 167, 180],\n",
       "         [159, 164, 179],\n",
       "         [160, 165, 181],\n",
       "         ...,\n",
       "         [169, 173, 193],\n",
       "         [170, 172, 195],\n",
       "         [174, 176, 199]],\n",
       " \n",
       "        [[165, 171, 182],\n",
       "         [161, 167, 180],\n",
       "         [162, 167, 182],\n",
       "         ...,\n",
       "         [165, 169, 188],\n",
       "         [165, 168, 189],\n",
       "         [168, 171, 192]],\n",
       " \n",
       "        [[165, 172, 182],\n",
       "         [166, 172, 183],\n",
       "         [160, 166, 179],\n",
       "         ...,\n",
       "         [162, 166, 184],\n",
       "         [164, 168, 187],\n",
       "         [163, 166, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[189, 195, 208],\n",
       "         [189, 194, 209],\n",
       "         [182, 189, 205],\n",
       "         ...,\n",
       "         [160, 168, 190],\n",
       "         [159, 165, 188],\n",
       "         [157, 163, 186]],\n",
       " \n",
       "        [[190, 196, 209],\n",
       "         [188, 195, 210],\n",
       "         [185, 192, 207],\n",
       "         ...,\n",
       "         [165, 174, 194],\n",
       "         [165, 173, 193],\n",
       "         [167, 173, 194]],\n",
       " \n",
       "        [[190, 196, 209],\n",
       "         [187, 194, 208],\n",
       "         [190, 197, 212],\n",
       "         ...,\n",
       "         [175, 183, 203],\n",
       "         [173, 180, 201],\n",
       "         [174, 181, 201]]], dtype=uint8),\n",
       " array([[[ 65,  67,  96],\n",
       "         [ 64,  66,  90],\n",
       "         [ 71,  72,  91],\n",
       "         ...,\n",
       "         [ 71,  68,  71],\n",
       "         [ 71,  67,  72],\n",
       "         [ 97,  93,  99]],\n",
       " \n",
       "        [[ 60,  60,  86],\n",
       "         [ 57,  58,  79],\n",
       "         [ 42,  42,  58],\n",
       "         ...,\n",
       "         [ 71,  66,  74],\n",
       "         [102,  94, 104],\n",
       "         [ 97,  90,  97]],\n",
       " \n",
       "        [[ 66,  66,  88],\n",
       "         [ 60,  59,  79],\n",
       "         [ 49,  48,  64],\n",
       "         ...,\n",
       "         [ 79,  74,  90],\n",
       "         [ 70,  63,  74],\n",
       "         [ 96,  88,  99]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[113, 125, 159],\n",
       "         [106, 117, 151],\n",
       "         [101, 112, 142],\n",
       "         ...,\n",
       "         [135, 146, 173],\n",
       "         [137, 148, 175],\n",
       "         [142, 153, 180]],\n",
       " \n",
       "        [[119, 132, 164],\n",
       "         [113, 124, 159],\n",
       "         [105, 118, 150],\n",
       "         ...,\n",
       "         [135, 148, 174],\n",
       "         [135, 148, 174],\n",
       "         [141, 154, 180]],\n",
       " \n",
       "        [[121, 135, 167],\n",
       "         [116, 130, 163],\n",
       "         [110, 124, 156],\n",
       "         ...,\n",
       "         [134, 147, 173],\n",
       "         [135, 148, 174],\n",
       "         [141, 154, 180]]], dtype=uint8),\n",
       " array([[[183, 186, 214],\n",
       "         [182, 186, 211],\n",
       "         [183, 187, 212],\n",
       "         ...,\n",
       "         [104, 108, 130],\n",
       "         [ 68,  67,  82],\n",
       "         [ 71,  68,  75]],\n",
       " \n",
       "        [[182, 185, 213],\n",
       "         [183, 187, 212],\n",
       "         [182, 186, 211],\n",
       "         ...,\n",
       "         [110, 114, 137],\n",
       "         [ 69,  69,  84],\n",
       "         [ 75,  73,  79]],\n",
       " \n",
       "        [[178, 181, 209],\n",
       "         [183, 187, 213],\n",
       "         [182, 186, 211],\n",
       "         ...,\n",
       "         [124, 129, 152],\n",
       "         [ 75,  77,  91],\n",
       "         [ 75,  73,  79]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[173, 177, 204],\n",
       "         [160, 162, 191],\n",
       "         [142, 143, 176],\n",
       "         ...,\n",
       "         [192, 197, 215],\n",
       "         [188, 194, 211],\n",
       "         [176, 183, 200]],\n",
       " \n",
       "        [[175, 179, 207],\n",
       "         [173, 176, 203],\n",
       "         [167, 170, 200],\n",
       "         ...,\n",
       "         [206, 209, 223],\n",
       "         [192, 196, 212],\n",
       "         [185, 189, 207]],\n",
       " \n",
       "        [[175, 179, 206],\n",
       "         [177, 181, 206],\n",
       "         [178, 180, 209],\n",
       "         ...,\n",
       "         [220, 222, 234],\n",
       "         [204, 207, 222],\n",
       "         [194, 196, 214]]], dtype=uint8),\n",
       " array([[[ 44,  59, 108],\n",
       "         [ 43,  59, 106],\n",
       "         [ 44,  60, 107],\n",
       "         ...,\n",
       "         [ 10,   9,  19],\n",
       "         [  7,   6,  16],\n",
       "         [  6,   5,   9]],\n",
       " \n",
       "        [[ 46,  61, 110],\n",
       "         [ 46,  62, 109],\n",
       "         [ 43,  59, 106],\n",
       "         ...,\n",
       "         [  9,   8,  18],\n",
       "         [ 10,   8,  18],\n",
       "         [  6,   5,   9]],\n",
       " \n",
       "        [[ 44,  61, 110],\n",
       "         [ 48,  63, 112],\n",
       "         [ 44,  60, 108],\n",
       "         ...,\n",
       "         [  9,   8,  18],\n",
       "         [  8,   7,  17],\n",
       "         [  7,   3,   8]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[  6,  10,  25],\n",
       "         [  4,   5,  19],\n",
       "         [  5,   6,  20],\n",
       "         ...,\n",
       "         [  4,   3,   8],\n",
       "         [  5,   2,   4],\n",
       "         [  4,   0,   5]],\n",
       " \n",
       "        [[  6,   9,  24],\n",
       "         [  6,   7,  21],\n",
       "         [  6,   7,  21],\n",
       "         ...,\n",
       "         [  5,   4,   9],\n",
       "         [  4,   1,   3],\n",
       "         [  4,   0,   5]],\n",
       " \n",
       "        [[  8,  11,  27],\n",
       "         [  8,   9,  23],\n",
       "         [  7,   8,  22],\n",
       "         ...,\n",
       "         [  3,   3,   8],\n",
       "         [  5,   2,   4],\n",
       "         [  4,   0,   5]]], dtype=uint8),\n",
       " array([[[109, 123, 151],\n",
       "         [111, 128, 155],\n",
       "         [112, 129, 156],\n",
       "         ...,\n",
       "         [ 93, 118, 152],\n",
       "         [ 88, 113, 147],\n",
       "         [ 87, 112, 146]],\n",
       " \n",
       "        [[111, 125, 153],\n",
       "         [110, 127, 154],\n",
       "         [115, 132, 159],\n",
       "         ...,\n",
       "         [ 87, 112, 146],\n",
       "         [ 89, 114, 148],\n",
       "         [ 89, 114, 148]],\n",
       " \n",
       "        [[105, 119, 147],\n",
       "         [109, 127, 154],\n",
       "         [108, 127, 154],\n",
       "         ...,\n",
       "         [ 91, 116, 150],\n",
       "         [ 89, 114, 148],\n",
       "         [ 88, 113, 147]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[136, 151, 176],\n",
       "         [136, 155, 182],\n",
       "         [136, 154, 181],\n",
       "         ...,\n",
       "         [ 55,  71, 100],\n",
       "         [ 55,  68, 100],\n",
       "         [ 51,  69, 101]],\n",
       " \n",
       "        [[136, 153, 180],\n",
       "         [139, 156, 183],\n",
       "         [140, 157, 184],\n",
       "         ...,\n",
       "         [ 58,  73, 106],\n",
       "         [ 51,  69, 102],\n",
       "         [ 53,  73, 106]],\n",
       " \n",
       "        [[137, 151, 179],\n",
       "         [139, 157, 184],\n",
       "         [141, 160, 187],\n",
       "         ...,\n",
       "         [ 60,  78, 111],\n",
       "         [ 57,  78, 110],\n",
       "         [ 58,  79, 111]]], dtype=uint8),\n",
       " array([[[ 83, 108, 140],\n",
       "         [ 84, 108, 140],\n",
       "         [ 85, 110, 141],\n",
       "         ...,\n",
       "         [101, 116, 135],\n",
       "         [104, 117, 134],\n",
       "         [108, 118, 130]],\n",
       " \n",
       "        [[ 82, 107, 139],\n",
       "         [ 83, 108, 140],\n",
       "         [ 83, 108, 139],\n",
       "         ...,\n",
       "         [105, 120, 139],\n",
       "         [101, 115, 131],\n",
       "         [109, 119, 131]],\n",
       " \n",
       "        [[ 85, 110, 142],\n",
       "         [ 85, 110, 142],\n",
       "         [ 82, 109, 140],\n",
       "         ...,\n",
       "         [106, 116, 136],\n",
       "         [105, 117, 132],\n",
       "         [105, 114, 124]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 51,  74, 105],\n",
       "         [ 46,  66,  97],\n",
       "         [ 44,  59,  91],\n",
       "         ...,\n",
       "         [111, 133, 159],\n",
       "         [115, 138, 159],\n",
       "         [112, 134, 153]],\n",
       " \n",
       "        [[ 56,  78, 109],\n",
       "         [ 49,  70, 101],\n",
       "         [ 47,  62,  94],\n",
       "         ...,\n",
       "         [112, 133, 159],\n",
       "         [114, 137, 158],\n",
       "         [112, 135, 154]],\n",
       " \n",
       "        [[ 61,  83, 115],\n",
       "         [ 54,  75, 107],\n",
       "         [ 49,  70, 101],\n",
       "         ...,\n",
       "         [113, 135, 160],\n",
       "         [113, 136, 158],\n",
       "         [110, 133, 151]]], dtype=uint8),\n",
       " array([[[ 88,  81, 101],\n",
       "         [ 85,  79, 104],\n",
       "         [ 89,  88, 122],\n",
       "         ...,\n",
       "         [179, 191, 238],\n",
       "         [179, 191, 239],\n",
       "         [176, 189, 236]],\n",
       " \n",
       "        [[ 94,  88, 107],\n",
       "         [ 89,  81, 103],\n",
       "         [ 88,  89, 119],\n",
       "         ...,\n",
       "         [178, 190, 237],\n",
       "         [179, 191, 239],\n",
       "         [178, 190, 237]],\n",
       " \n",
       "        [[ 92,  90, 108],\n",
       "         [ 85,  83, 106],\n",
       "         [ 92,  94, 127],\n",
       "         ...,\n",
       "         [179, 189, 236],\n",
       "         [177, 189, 236],\n",
       "         [173, 186, 234]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[159, 172, 210],\n",
       "         [160, 176, 213],\n",
       "         [162, 177, 216],\n",
       "         ...,\n",
       "         [145, 168, 216],\n",
       "         [147, 168, 216],\n",
       "         [152, 172, 220]],\n",
       " \n",
       "        [[162, 176, 213],\n",
       "         [163, 178, 215],\n",
       "         [165, 180, 219],\n",
       "         ...,\n",
       "         [154, 175, 224],\n",
       "         [155, 175, 223],\n",
       "         [152, 172, 221]],\n",
       " \n",
       "        [[163, 175, 210],\n",
       "         [168, 180, 218],\n",
       "         [168, 181, 219],\n",
       "         ...,\n",
       "         [153, 175, 223],\n",
       "         [155, 177, 225],\n",
       "         [148, 170, 220]]], dtype=uint8),\n",
       " array([[[181, 191, 238],\n",
       "         [184, 194, 241],\n",
       "         [181, 192, 239],\n",
       "         ...,\n",
       "         [ 86,  84, 108],\n",
       "         [ 86,  81, 101],\n",
       "         [ 95,  87, 100]],\n",
       " \n",
       "        [[180, 193, 239],\n",
       "         [185, 195, 242],\n",
       "         [182, 193, 241],\n",
       "         ...,\n",
       "         [ 87,  85, 109],\n",
       "         [ 89,  82, 104],\n",
       "         [ 89,  83, 101]],\n",
       " \n",
       "        [[178, 188, 235],\n",
       "         [181, 191, 238],\n",
       "         [177, 188, 236],\n",
       "         ...,\n",
       "         [ 87,  88, 112],\n",
       "         [ 86,  78,  99],\n",
       "         [ 88,  82, 101]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[187, 203, 246],\n",
       "         [172, 192, 241],\n",
       "         [153, 178, 230],\n",
       "         ...,\n",
       "         [163, 179, 225],\n",
       "         [162, 178, 220],\n",
       "         [160, 173, 213]],\n",
       " \n",
       "        [[190, 205, 247],\n",
       "         [176, 195, 245],\n",
       "         [158, 181, 233],\n",
       "         ...,\n",
       "         [165, 178, 222],\n",
       "         [169, 180, 219],\n",
       "         [162, 177, 214]],\n",
       " \n",
       "        [[189, 204, 246],\n",
       "         [180, 199, 247],\n",
       "         [159, 181, 233],\n",
       "         ...,\n",
       "         [168, 180, 221],\n",
       "         [166, 178, 219],\n",
       "         [162, 176, 214]]], dtype=uint8),\n",
       " array([[[14, 16, 26],\n",
       "         [15, 17, 27],\n",
       "         [15, 17, 27],\n",
       "         ...,\n",
       "         [52, 54, 72],\n",
       "         [53, 55, 74],\n",
       "         [52, 53, 73]],\n",
       " \n",
       "        [[15, 17, 27],\n",
       "         [15, 17, 27],\n",
       "         [16, 18, 28],\n",
       "         ...,\n",
       "         [47, 49, 66],\n",
       "         [51, 53, 71],\n",
       "         [51, 52, 71]],\n",
       " \n",
       "        [[15, 17, 27],\n",
       "         [15, 17, 27],\n",
       "         [16, 18, 28],\n",
       "         ...,\n",
       "         [44, 47, 62],\n",
       "         [48, 50, 67],\n",
       "         [50, 52, 70]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[21, 24, 38],\n",
       "         [21, 24, 38],\n",
       "         [20, 23, 38],\n",
       "         ...,\n",
       "         [ 7,  6, 16],\n",
       "         [ 7,  6, 16],\n",
       "         [ 8,  7, 17]],\n",
       " \n",
       "        [[22, 27, 42],\n",
       "         [22, 26, 41],\n",
       "         [21, 24, 41],\n",
       "         ...,\n",
       "         [ 8,  7, 17],\n",
       "         [ 5,  6, 16],\n",
       "         [ 8,  8, 18]],\n",
       " \n",
       "        [[22, 27, 42],\n",
       "         [23, 28, 43],\n",
       "         [24, 28, 46],\n",
       "         ...,\n",
       "         [ 9,  9, 19],\n",
       "         [10, 11, 21],\n",
       "         [12, 13, 23]]], dtype=uint8),\n",
       " array([[[ 81,  83, 113],\n",
       "         [ 82,  83, 112],\n",
       "         [ 94,  95, 123],\n",
       "         ...,\n",
       "         [137, 138, 159],\n",
       "         [147, 148, 169],\n",
       "         [132, 134, 155]],\n",
       " \n",
       "        [[ 82,  84, 112],\n",
       "         [ 83,  84, 111],\n",
       "         [ 87,  88, 113],\n",
       "         ...,\n",
       "         [138, 136, 158],\n",
       "         [132, 132, 153],\n",
       "         [132, 133, 154]],\n",
       " \n",
       "        [[ 83,  84, 110],\n",
       "         [ 77,  79, 102],\n",
       "         [ 80,  81, 102],\n",
       "         ...,\n",
       "         [137, 135, 157],\n",
       "         [139, 137, 159],\n",
       "         [138, 137, 159]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 68,  70, 100],\n",
       "         [ 63,  63,  91],\n",
       "         [ 54,  52,  81],\n",
       "         ...,\n",
       "         [141, 144, 172],\n",
       "         [141, 143, 171],\n",
       "         [142, 145, 173]],\n",
       " \n",
       "        [[ 84,  86, 115],\n",
       "         [ 64,  66,  94],\n",
       "         [ 66,  66,  95],\n",
       "         ...,\n",
       "         [142, 145, 173],\n",
       "         [140, 143, 171],\n",
       "         [142, 145, 173]],\n",
       " \n",
       "        [[107, 109, 139],\n",
       "         [ 76,  78, 108],\n",
       "         [ 69,  71, 101],\n",
       "         ...,\n",
       "         [139, 142, 170],\n",
       "         [137, 140, 168],\n",
       "         [142, 145, 173]]], dtype=uint8),\n",
       " array([[[146, 149, 164],\n",
       "         [145, 148, 163],\n",
       "         [149, 152, 166],\n",
       "         ...,\n",
       "         [173, 176, 201],\n",
       "         [175, 179, 203],\n",
       "         [172, 179, 200]],\n",
       " \n",
       "        [[141, 144, 157],\n",
       "         [146, 149, 163],\n",
       "         [150, 152, 165],\n",
       "         ...,\n",
       "         [165, 168, 192],\n",
       "         [161, 165, 190],\n",
       "         [171, 176, 200]],\n",
       " \n",
       "        [[142, 146, 155],\n",
       "         [146, 148, 159],\n",
       "         [159, 161, 171],\n",
       "         ...,\n",
       "         [148, 150, 173],\n",
       "         [156, 160, 185],\n",
       "         [168, 172, 197]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[161, 169, 193],\n",
       "         [161, 171, 193],\n",
       "         [161, 172, 194],\n",
       "         ...,\n",
       "         [151, 159, 190],\n",
       "         [171, 178, 206],\n",
       "         [180, 186, 213]],\n",
       " \n",
       "        [[162, 169, 194],\n",
       "         [161, 170, 194],\n",
       "         [161, 171, 195],\n",
       "         ...,\n",
       "         [158, 165, 196],\n",
       "         [170, 176, 205],\n",
       "         [181, 186, 214]],\n",
       " \n",
       "        [[162, 169, 195],\n",
       "         [162, 170, 196],\n",
       "         [162, 171, 196],\n",
       "         ...,\n",
       "         [163, 168, 199],\n",
       "         [174, 179, 208],\n",
       "         [182, 187, 212]]], dtype=uint8),\n",
       " array([[[173, 206, 254],\n",
       "         [156, 194, 248],\n",
       "         [144, 179, 242],\n",
       "         ...,\n",
       "         [ 87, 120, 187],\n",
       "         [ 64,  96, 165],\n",
       "         [ 60,  82, 157]],\n",
       " \n",
       "        [[163, 198, 252],\n",
       "         [144, 182, 241],\n",
       "         [130, 166, 230],\n",
       "         ...,\n",
       "         [ 70,  99, 169],\n",
       "         [ 62,  91, 161],\n",
       "         [ 59,  81, 156]],\n",
       " \n",
       "        [[147, 183, 245],\n",
       "         [122, 160, 225],\n",
       "         [109, 147, 216],\n",
       "         ...,\n",
       "         [ 73,  97, 172],\n",
       "         [ 76, 101, 175],\n",
       "         [ 50,  72, 148]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 64,  94, 166],\n",
       "         [ 61,  91, 163],\n",
       "         [ 71,  99, 170],\n",
       "         ...,\n",
       "         [139, 170, 232],\n",
       "         [131, 165, 225],\n",
       "         [121, 156, 216]],\n",
       " \n",
       "        [[ 61,  92, 167],\n",
       "         [ 61,  93, 167],\n",
       "         [ 78, 106, 177],\n",
       "         ...,\n",
       "         [138, 170, 229],\n",
       "         [130, 165, 223],\n",
       "         [121, 156, 215]],\n",
       " \n",
       "        [[ 61,  87, 167],\n",
       "         [ 61,  88, 165],\n",
       "         [ 72, 101, 173],\n",
       "         ...,\n",
       "         [135, 166, 227],\n",
       "         [131, 163, 224],\n",
       "         [117, 152, 212]]], dtype=uint8),\n",
       " array([[[ 23,  40,  61],\n",
       "         [ 23,  40,  61],\n",
       "         [ 24,  40,  62],\n",
       "         ...,\n",
       "         [109, 124, 162],\n",
       "         [112, 127, 164],\n",
       "         [109, 124, 160]],\n",
       " \n",
       "        [[ 23,  40,  61],\n",
       "         [ 24,  40,  61],\n",
       "         [ 26,  40,  61],\n",
       "         ...,\n",
       "         [109, 120, 156],\n",
       "         [110, 122, 158],\n",
       "         [110, 121, 157]],\n",
       " \n",
       "        [[ 23,  40,  59],\n",
       "         [ 25,  40,  59],\n",
       "         [ 26,  38,  58],\n",
       "         ...,\n",
       "         [106, 115, 150],\n",
       "         [110, 120, 155],\n",
       "         [110, 119, 156]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 60,  71,  93],\n",
       "         [ 69,  80, 102],\n",
       "         [ 71,  82, 104],\n",
       "         ...,\n",
       "         [ 43,  57,  86],\n",
       "         [ 43,  55,  87],\n",
       "         [ 43,  55,  91]],\n",
       " \n",
       "        [[ 60,  69,  95],\n",
       "         [ 68,  78, 104],\n",
       "         [ 74,  83, 109],\n",
       "         ...,\n",
       "         [ 44,  57,  89],\n",
       "         [ 43,  56,  89],\n",
       "         [ 44,  56,  90]],\n",
       " \n",
       "        [[ 60,  68,  97],\n",
       "         [ 67,  75, 104],\n",
       "         [ 74,  82, 111],\n",
       "         ...,\n",
       "         [ 45,  57,  90],\n",
       "         [ 43,  55,  89],\n",
       "         [ 44,  56,  90]]], dtype=uint8),\n",
       " array([[[187, 188, 209],\n",
       "         [186, 187, 207],\n",
       "         [182, 183, 201],\n",
       "         ...,\n",
       "         [162, 164, 182],\n",
       "         [156, 157, 177],\n",
       "         [157, 157, 175]],\n",
       " \n",
       "        [[175, 176, 197],\n",
       "         [176, 177, 196],\n",
       "         [176, 176, 193],\n",
       "         ...,\n",
       "         [175, 177, 192],\n",
       "         [158, 159, 176],\n",
       "         [157, 156, 175]],\n",
       " \n",
       "        [[158, 159, 179],\n",
       "         [148, 148, 167],\n",
       "         [135, 135, 150],\n",
       "         ...,\n",
       "         [193, 193, 205],\n",
       "         [160, 160, 174],\n",
       "         [154, 154, 172]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[160, 166, 197],\n",
       "         [139, 145, 181],\n",
       "         [140, 145, 186],\n",
       "         ...,\n",
       "         [161, 167, 196],\n",
       "         [162, 166, 195],\n",
       "         [166, 170, 195]],\n",
       " \n",
       "        [[174, 181, 208],\n",
       "         [144, 152, 186],\n",
       "         [145, 152, 193],\n",
       "         ...,\n",
       "         [161, 167, 196],\n",
       "         [162, 167, 196],\n",
       "         [166, 170, 195]],\n",
       " \n",
       "        [[191, 196, 221],\n",
       "         [156, 161, 194],\n",
       "         [147, 153, 193],\n",
       "         ...,\n",
       "         [161, 167, 196],\n",
       "         [162, 167, 195],\n",
       "         [167, 171, 196]]], dtype=uint8),\n",
       " array([[[140, 160, 181],\n",
       "         [149, 169, 188],\n",
       "         [143, 162, 182],\n",
       "         ...,\n",
       "         [164, 181, 202],\n",
       "         [161, 179, 202],\n",
       "         [157, 175, 199]],\n",
       " \n",
       "        [[145, 163, 181],\n",
       "         [138, 154, 171],\n",
       "         [138, 148, 163],\n",
       "         ...,\n",
       "         [162, 179, 198],\n",
       "         [161, 178, 199],\n",
       "         [154, 172, 192]],\n",
       " \n",
       "        [[128, 144, 158],\n",
       "         [ 86,  98, 107],\n",
       "         [ 89,  94,  99],\n",
       "         ...,\n",
       "         [164, 180, 197],\n",
       "         [159, 176, 195],\n",
       "         [152, 169, 188]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[161, 178, 197],\n",
       "         [160, 177, 198],\n",
       "         [160, 177, 198],\n",
       "         ...,\n",
       "         [164, 179, 202],\n",
       "         [159, 177, 203],\n",
       "         [154, 173, 201]],\n",
       " \n",
       "        [[159, 176, 195],\n",
       "         [161, 178, 199],\n",
       "         [160, 177, 199],\n",
       "         ...,\n",
       "         [166, 181, 207],\n",
       "         [160, 177, 204],\n",
       "         [154, 171, 200]],\n",
       " \n",
       "        [[161, 178, 197],\n",
       "         [158, 175, 196],\n",
       "         [160, 177, 198],\n",
       "         ...,\n",
       "         [161, 177, 205],\n",
       "         [157, 174, 201],\n",
       "         [154, 171, 200]]], dtype=uint8),\n",
       " array([[[153, 166, 189],\n",
       "         [152, 165, 187],\n",
       "         [154, 167, 189],\n",
       "         ...,\n",
       "         [ 57,  64,  76],\n",
       "         [ 54,  57,  67],\n",
       "         [ 41,  45,  45]],\n",
       " \n",
       "        [[160, 173, 195],\n",
       "         [156, 170, 192],\n",
       "         [155, 169, 189],\n",
       "         ...,\n",
       "         [ 52,  61,  72],\n",
       "         [ 45,  52,  61],\n",
       "         [ 45,  49,  53]],\n",
       " \n",
       "        [[157, 171, 193],\n",
       "         [158, 172, 193],\n",
       "         [158, 172, 191],\n",
       "         ...,\n",
       "         [ 56,  65,  75],\n",
       "         [ 45,  51,  59],\n",
       "         [ 48,  52,  56]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 52,  63,  86],\n",
       "         [ 87,  98, 126],\n",
       "         [100, 117, 145],\n",
       "         ...,\n",
       "         [ 43,  46,  44],\n",
       "         [ 40,  44,  39],\n",
       "         [ 42,  47,  42]],\n",
       " \n",
       "        [[ 46,  57,  80],\n",
       "         [ 83,  94, 122],\n",
       "         [ 99, 116, 145],\n",
       "         ...,\n",
       "         [ 47,  52,  47],\n",
       "         [ 54,  59,  56],\n",
       "         [ 55,  60,  57]],\n",
       " \n",
       "        [[ 45,  57,  78],\n",
       "         [ 68,  78, 108],\n",
       "         [104, 120, 151],\n",
       "         ...,\n",
       "         [ 57,  64,  61],\n",
       "         [ 66,  73,  70],\n",
       "         [ 64,  71,  68]]], dtype=uint8),\n",
       " array([[[145, 164, 197],\n",
       "         [148, 167, 201],\n",
       "         [152, 172, 207],\n",
       "         ...,\n",
       "         [154, 170, 216],\n",
       "         [154, 169, 215],\n",
       "         [155, 170, 216]],\n",
       " \n",
       "        [[144, 163, 196],\n",
       "         [149, 168, 203],\n",
       "         [150, 170, 205],\n",
       "         ...,\n",
       "         [149, 165, 211],\n",
       "         [151, 166, 212],\n",
       "         [152, 167, 213]],\n",
       " \n",
       "        [[145, 164, 197],\n",
       "         [149, 168, 201],\n",
       "         [151, 170, 203],\n",
       "         ...,\n",
       "         [147, 161, 207],\n",
       "         [149, 163, 209],\n",
       "         [150, 163, 209]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[161, 183, 219],\n",
       "         [168, 191, 226],\n",
       "         [170, 193, 228],\n",
       "         ...,\n",
       "         [154, 178, 224],\n",
       "         [154, 177, 224],\n",
       "         [155, 178, 226]],\n",
       " \n",
       "        [[162, 185, 223],\n",
       "         [169, 192, 230],\n",
       "         [170, 193, 231],\n",
       "         ...,\n",
       "         [153, 177, 223],\n",
       "         [153, 177, 223],\n",
       "         [156, 181, 227]],\n",
       " \n",
       "        [[163, 188, 227],\n",
       "         [165, 190, 230],\n",
       "         [168, 193, 232],\n",
       "         ...,\n",
       "         [153, 177, 223],\n",
       "         [155, 178, 225],\n",
       "         [158, 181, 229]]], dtype=uint8),\n",
       " array([[[139, 151, 199],\n",
       "         [140, 152, 200],\n",
       "         [138, 150, 198],\n",
       "         ...,\n",
       "         [115, 133, 164],\n",
       "         [116, 132, 161],\n",
       "         [110, 127, 152]],\n",
       " \n",
       "        [[138, 150, 198],\n",
       "         [136, 148, 196],\n",
       "         [137, 149, 197],\n",
       "         ...,\n",
       "         [114, 132, 163],\n",
       "         [117, 133, 162],\n",
       "         [113, 131, 155]],\n",
       " \n",
       "        [[136, 146, 194],\n",
       "         [134, 145, 193],\n",
       "         [135, 147, 192],\n",
       "         ...,\n",
       "         [114, 133, 163],\n",
       "         [116, 134, 163],\n",
       "         [112, 131, 155]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[118, 130, 170],\n",
       "         [118, 130, 170],\n",
       "         [121, 133, 173],\n",
       "         ...,\n",
       "         [106, 122, 153],\n",
       "         [108, 124, 156],\n",
       "         [108, 126, 157]],\n",
       " \n",
       "        [[119, 131, 173],\n",
       "         [118, 130, 172],\n",
       "         [121, 133, 175],\n",
       "         ...,\n",
       "         [106, 124, 155],\n",
       "         [105, 125, 156],\n",
       "         [106, 126, 157]],\n",
       " \n",
       "        [[120, 132, 173],\n",
       "         [118, 130, 171],\n",
       "         [121, 133, 174],\n",
       "         ...,\n",
       "         [107, 124, 156],\n",
       "         [104, 123, 155],\n",
       "         [107, 126, 157]]], dtype=uint8),\n",
       " array([[[ 13,  13,  25],\n",
       "         [ 12,  13,  24],\n",
       "         [ 12,  13,  23],\n",
       "         ...,\n",
       "         [ 48,  50,  89],\n",
       "         [ 49,  54,  97],\n",
       "         [ 53,  58, 101]],\n",
       " \n",
       "        [[ 13,  14,  24],\n",
       "         [ 11,  12,  22],\n",
       "         [ 10,  12,  21],\n",
       "         ...,\n",
       "         [ 43,  46,  83],\n",
       "         [ 48,  52,  90],\n",
       "         [ 52,  57,  97]],\n",
       " \n",
       "        [[ 12,  14,  22],\n",
       "         [ 10,  12,  20],\n",
       "         [  9,  11,  18],\n",
       "         ...,\n",
       "         [ 41,  44,  75],\n",
       "         [ 46,  48,  84],\n",
       "         [ 51,  55,  91]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 16,  22,  41],\n",
       "         [ 15,  21,  40],\n",
       "         [ 13,  19,  38],\n",
       "         ...,\n",
       "         [  7,   6,  22],\n",
       "         [  8,   8,  23],\n",
       "         [  9,   9,  25]],\n",
       " \n",
       "        [[ 18,  23,  44],\n",
       "         [ 17,  22,  43],\n",
       "         [ 16,  21,  42],\n",
       "         ...,\n",
       "         [ 11,  10,  26],\n",
       "         [ 11,  11,  27],\n",
       "         [ 12,  12,  28]],\n",
       " \n",
       "        [[ 19,  23,  47],\n",
       "         [ 19,  24,  46],\n",
       "         [ 19,  24,  46],\n",
       "         ...,\n",
       "         [ 13,  12,  28],\n",
       "         [ 13,  13,  30],\n",
       "         [ 14,  14,  32]]], dtype=uint8),\n",
       " array([[[ 85,  85, 126],\n",
       "         [ 84,  84, 122],\n",
       "         [ 77,  79, 111],\n",
       "         ...,\n",
       "         [ 46,  50,  72],\n",
       "         [ 49,  53,  81],\n",
       "         [ 59,  63,  98]],\n",
       " \n",
       "        [[ 68,  70, 104],\n",
       "         [ 62,  64,  96],\n",
       "         [ 56,  58,  85],\n",
       "         ...,\n",
       "         [ 39,  42,  62],\n",
       "         [ 40,  43,  67],\n",
       "         [ 48,  49,  80]],\n",
       " \n",
       "        [[ 55,  57,  86],\n",
       "         [ 49,  51,  76],\n",
       "         [ 46,  48,  69],\n",
       "         ...,\n",
       "         [ 38,  38,  55],\n",
       "         [ 36,  37,  57],\n",
       "         [ 40,  41,  64]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 58,  63, 112],\n",
       "         [ 55,  61, 108],\n",
       "         [ 49,  55, 100],\n",
       "         ...,\n",
       "         [ 86,  92, 145],\n",
       "         [ 85,  92, 144],\n",
       "         [ 86,  93, 143]],\n",
       " \n",
       "        [[ 60,  66, 117],\n",
       "         [ 60,  64, 115],\n",
       "         [ 55,  60, 109],\n",
       "         ...,\n",
       "         [ 87,  93, 146],\n",
       "         [ 86,  92, 145],\n",
       "         [ 88,  95, 145]],\n",
       " \n",
       "        [[ 63,  69, 121],\n",
       "         [ 62,  67, 120],\n",
       "         [ 64,  68, 119],\n",
       "         ...,\n",
       "         [ 88,  94, 147],\n",
       "         [ 87,  93, 146],\n",
       "         [ 88,  95, 145]]], dtype=uint8),\n",
       " array([[[166, 182, 224],\n",
       "         [166, 182, 223],\n",
       "         [166, 182, 225],\n",
       "         ...,\n",
       "         [107, 124, 151],\n",
       "         [104, 118, 146],\n",
       "         [102, 117, 139]],\n",
       " \n",
       "        [[157, 173, 219],\n",
       "         [158, 175, 218],\n",
       "         [159, 176, 219],\n",
       "         ...,\n",
       "         [107, 125, 154],\n",
       "         [106, 120, 148],\n",
       "         [101, 117, 141]],\n",
       " \n",
       "        [[155, 170, 218],\n",
       "         [155, 171, 217],\n",
       "         [155, 172, 215],\n",
       "         ...,\n",
       "         [110, 126, 156],\n",
       "         [108, 121, 153],\n",
       "         [101, 116, 143]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[130, 153, 199],\n",
       "         [125, 142, 189],\n",
       "         [120, 136, 179],\n",
       "         ...,\n",
       "         [ 96, 115, 150],\n",
       "         [ 99, 115, 152],\n",
       "         [ 99, 115, 152]],\n",
       " \n",
       "        [[131, 154, 200],\n",
       "         [126, 143, 190],\n",
       "         [120, 136, 179],\n",
       "         ...,\n",
       "         [ 98, 116, 153],\n",
       "         [ 98, 114, 152],\n",
       "         [ 99, 115, 152]],\n",
       " \n",
       "        [[133, 157, 203],\n",
       "         [129, 146, 193],\n",
       "         [120, 135, 180],\n",
       "         ...,\n",
       "         [102, 119, 158],\n",
       "         [102, 120, 157],\n",
       "         [100, 117, 153]]], dtype=uint8),\n",
       " array([[[ 67,  69,  69],\n",
       "         [ 59,  59,  58],\n",
       "         [ 56,  52,  50],\n",
       "         ...,\n",
       "         [ 92, 118, 169],\n",
       "         [ 93, 120, 171],\n",
       "         [ 91, 118, 169]],\n",
       " \n",
       "        [[ 70,  72,  72],\n",
       "         [ 56,  55,  54],\n",
       "         [ 54,  51,  48],\n",
       "         ...,\n",
       "         [ 96, 123, 173],\n",
       "         [ 94, 121, 172],\n",
       "         [ 90, 117, 168]],\n",
       " \n",
       "        [[ 71,  71,  71],\n",
       "         [ 64,  63,  62],\n",
       "         [ 50,  46,  45],\n",
       "         ...,\n",
       "         [ 95, 123, 170],\n",
       "         [ 92, 119, 169],\n",
       "         [ 93, 120, 171]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  61,  74],\n",
       "         [ 84,  98, 114],\n",
       "         [ 98, 122, 145],\n",
       "         ...,\n",
       "         [ 47,  56,  94],\n",
       "         [ 48,  57,  95],\n",
       "         [ 58,  68, 108]],\n",
       " \n",
       "        [[ 51,  54,  66],\n",
       "         [ 79,  94, 108],\n",
       "         [ 97, 122, 142],\n",
       "         ...,\n",
       "         [ 47,  57,  97],\n",
       "         [ 57,  65, 107],\n",
       "         [ 61,  73, 115]],\n",
       " \n",
       "        [[ 55,  60,  72],\n",
       "         [ 80,  95, 109],\n",
       "         [ 97, 122, 142],\n",
       "         ...,\n",
       "         [ 53,  65, 108],\n",
       "         [ 57,  71, 115],\n",
       "         [ 58,  74, 117]]], dtype=uint8),\n",
       " array([[[ 96, 123, 174],\n",
       "         [ 94, 121, 172],\n",
       "         [ 97, 124, 175],\n",
       "         ...,\n",
       "         [139, 152, 166],\n",
       "         [121, 135, 149],\n",
       "         [131, 139, 153]],\n",
       " \n",
       "        [[ 96, 123, 175],\n",
       "         [ 97, 124, 175],\n",
       "         [ 97, 124, 175],\n",
       "         ...,\n",
       "         [148, 161, 175],\n",
       "         [134, 149, 162],\n",
       "         [125, 134, 148]],\n",
       " \n",
       "        [[ 93, 120, 171],\n",
       "         [ 92, 119, 170],\n",
       "         [ 98, 125, 176],\n",
       "         ...,\n",
       "         [159, 168, 182],\n",
       "         [142, 156, 170],\n",
       "         [133, 144, 158]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 96, 120, 180],\n",
       "         [ 96, 120, 178],\n",
       "         [ 93, 118, 174],\n",
       "         ...,\n",
       "         [157, 170, 185],\n",
       "         [158, 174, 190],\n",
       "         [169, 179, 194]],\n",
       " \n",
       "        [[ 94, 118, 176],\n",
       "         [ 97, 121, 178],\n",
       "         [ 91, 116, 172],\n",
       "         ...,\n",
       "         [165, 177, 191],\n",
       "         [163, 178, 194],\n",
       "         [175, 184, 198]],\n",
       " \n",
       "        [[ 92, 116, 173],\n",
       "         [ 95, 120, 176],\n",
       "         [ 96, 121, 177],\n",
       "         ...,\n",
       "         [172, 184, 198],\n",
       "         [165, 181, 194],\n",
       "         [172, 182, 193]]], dtype=uint8),\n",
       " array([[[129, 144, 182],\n",
       "         [132, 148, 185],\n",
       "         [137, 153, 187],\n",
       "         ...,\n",
       "         [222, 211, 227],\n",
       "         [227, 217, 230],\n",
       "         [238, 228, 240]],\n",
       " \n",
       "        [[125, 141, 178],\n",
       "         [128, 144, 180],\n",
       "         [130, 147, 181],\n",
       "         ...,\n",
       "         [228, 218, 231],\n",
       "         [238, 228, 241],\n",
       "         [243, 233, 245]],\n",
       " \n",
       "        [[124, 137, 174],\n",
       "         [126, 140, 176],\n",
       "         [128, 142, 176],\n",
       "         ...,\n",
       "         [225, 216, 227],\n",
       "         [229, 219, 230],\n",
       "         [241, 232, 242]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[164, 176, 212],\n",
       "         [154, 169, 205],\n",
       "         [150, 169, 204],\n",
       "         ...,\n",
       "         [168, 169, 197],\n",
       "         [171, 171, 200],\n",
       "         [173, 173, 202]],\n",
       " \n",
       "        [[179, 187, 217],\n",
       "         [176, 185, 218],\n",
       "         [165, 177, 210],\n",
       "         ...,\n",
       "         [165, 168, 199],\n",
       "         [159, 162, 193],\n",
       "         [164, 166, 197]],\n",
       " \n",
       "        [[196, 197, 225],\n",
       "         [190, 195, 224],\n",
       "         [184, 190, 220],\n",
       "         ...,\n",
       "         [150, 155, 186],\n",
       "         [155, 160, 191],\n",
       "         [157, 160, 191]]], dtype=uint8),\n",
       " array([[[212, 217, 241],\n",
       "         [217, 221, 245],\n",
       "         [220, 224, 248],\n",
       "         ...,\n",
       "         [145, 162, 199],\n",
       "         [155, 166, 204],\n",
       "         [158, 170, 207]],\n",
       " \n",
       "        [[214, 217, 245],\n",
       "         [212, 215, 243],\n",
       "         [216, 220, 246],\n",
       "         ...,\n",
       "         [144, 160, 197],\n",
       "         [153, 168, 206],\n",
       "         [163, 177, 214]],\n",
       " \n",
       "        [[212, 214, 244],\n",
       "         [215, 217, 247],\n",
       "         [204, 212, 241],\n",
       "         ...,\n",
       "         [150, 167, 204],\n",
       "         [155, 172, 209],\n",
       "         [162, 178, 215]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[210, 218, 247],\n",
       "         [211, 219, 248],\n",
       "         [207, 218, 246],\n",
       "         ...,\n",
       "         [209, 213, 234],\n",
       "         [202, 211, 239],\n",
       "         [198, 207, 244]],\n",
       " \n",
       "        [[209, 217, 246],\n",
       "         [211, 219, 248],\n",
       "         [207, 218, 246],\n",
       "         ...,\n",
       "         [210, 212, 239],\n",
       "         [199, 208, 239],\n",
       "         [196, 205, 237]],\n",
       " \n",
       "        [[208, 219, 246],\n",
       "         [207, 218, 245],\n",
       "         [210, 219, 246],\n",
       "         ...,\n",
       "         [201, 208, 239],\n",
       "         [197, 203, 240],\n",
       "         [198, 207, 238]]], dtype=uint8),\n",
       " array([[[161, 159, 145],\n",
       "         [174, 174, 160],\n",
       "         [182, 180, 169],\n",
       "         ...,\n",
       "         [169, 167, 167],\n",
       "         [169, 168, 168],\n",
       "         [170, 170, 170]],\n",
       " \n",
       "        [[162, 160, 146],\n",
       "         [175, 174, 160],\n",
       "         [183, 181, 170],\n",
       "         ...,\n",
       "         [168, 166, 166],\n",
       "         [165, 163, 163],\n",
       "         [169, 167, 167]],\n",
       " \n",
       "        [[165, 164, 150],\n",
       "         [178, 177, 163],\n",
       "         [180, 179, 167],\n",
       "         ...,\n",
       "         [163, 161, 161],\n",
       "         [164, 162, 162],\n",
       "         [166, 163, 163]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[169, 174, 159],\n",
       "         [168, 172, 160],\n",
       "         [166, 170, 158],\n",
       "         ...,\n",
       "         [121, 113, 127],\n",
       "         [121, 117, 129],\n",
       "         [121, 119, 131]],\n",
       " \n",
       "        [[170, 175, 160],\n",
       "         [168, 173, 158],\n",
       "         [164, 168, 155],\n",
       "         ...,\n",
       "         [118, 115, 130],\n",
       "         [120, 119, 134],\n",
       "         [119, 119, 133]],\n",
       " \n",
       "        [[169, 176, 161],\n",
       "         [165, 172, 159],\n",
       "         [164, 168, 157],\n",
       "         ...,\n",
       "         [123, 120, 135],\n",
       "         [121, 121, 135],\n",
       "         [121, 122, 136]]], dtype=uint8),\n",
       " array([[[165, 169, 170],\n",
       "         [162, 168, 167],\n",
       "         [159, 164, 165],\n",
       "         ...,\n",
       "         [ 75,  85,  93],\n",
       "         [ 66,  72,  77],\n",
       "         [ 59,  63,  62]],\n",
       " \n",
       "        [[163, 168, 169],\n",
       "         [161, 165, 166],\n",
       "         [158, 162, 163],\n",
       "         ...,\n",
       "         [ 88, 100, 102],\n",
       "         [ 70,  77,  81],\n",
       "         [ 57,  59,  58]],\n",
       " \n",
       "        [[160, 165, 166],\n",
       "         [160, 164, 165],\n",
       "         [156, 160, 161],\n",
       "         ...,\n",
       "         [ 88,  98, 104],\n",
       "         [ 72,  79,  80],\n",
       "         [ 58,  60,  60]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[100, 109, 118],\n",
       "         [103, 111, 119],\n",
       "         [105, 114, 118],\n",
       "         ...,\n",
       "         [ 85,  95, 101],\n",
       "         [ 80,  86,  96],\n",
       "         [ 71,  77,  85]],\n",
       " \n",
       "        [[109, 119, 127],\n",
       "         [105, 115, 124],\n",
       "         [106, 116, 123],\n",
       "         ...,\n",
       "         [ 95, 108, 110],\n",
       "         [ 89, 100, 106],\n",
       "         [ 86,  92, 102]],\n",
       " \n",
       "        [[110, 121, 129],\n",
       "         [108, 119, 127],\n",
       "         [108, 119, 127],\n",
       "         ...,\n",
       "         [105, 121, 120],\n",
       "         [100, 113, 115],\n",
       "         [ 89, 102, 105]]], dtype=uint8),\n",
       " array([[[ 48,  82, 110],\n",
       "         [ 51,  85, 112],\n",
       "         [ 43,  79, 104],\n",
       "         ...,\n",
       "         [ 64,  98, 141],\n",
       "         [ 68, 103, 144],\n",
       "         [ 71, 105, 150]],\n",
       " \n",
       "        [[ 51,  84, 109],\n",
       "         [ 53,  87, 111],\n",
       "         [ 45,  77, 101],\n",
       "         ...,\n",
       "         [ 65,  96, 136],\n",
       "         [ 65,  98, 138],\n",
       "         [ 65,  98, 142]],\n",
       " \n",
       "        [[ 56,  86, 108],\n",
       "         [ 50,  81, 103],\n",
       "         [ 42,  71,  91],\n",
       "         ...,\n",
       "         [ 52,  80, 115],\n",
       "         [ 56,  87, 124],\n",
       "         [ 62,  92, 134]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 59,  89, 130],\n",
       "         [ 61,  90, 131],\n",
       "         [ 54,  81, 125],\n",
       "         ...,\n",
       "         [ 38,  62,  91],\n",
       "         [ 39,  63,  96],\n",
       "         [ 39,  64,  99]],\n",
       " \n",
       "        [[ 60,  90, 131],\n",
       "         [ 60,  89, 133],\n",
       "         [ 59,  88, 132],\n",
       "         ...,\n",
       "         [ 44,  68, 101],\n",
       "         [ 42,  66, 101],\n",
       "         [ 42,  68, 106]],\n",
       " \n",
       "        [[ 63,  93, 134],\n",
       "         [ 60,  89, 133],\n",
       "         [ 60,  89, 133],\n",
       "         ...,\n",
       "         [ 52,  76, 110],\n",
       "         [ 46,  72, 109],\n",
       "         [ 49,  73, 114]]], dtype=uint8),\n",
       " array([[[ 69, 107, 145],\n",
       "         [ 64, 102, 140],\n",
       "         [ 60,  95, 132],\n",
       "         ...,\n",
       "         [ 64,  86, 115],\n",
       "         [ 53,  77, 105],\n",
       "         [ 45,  70,  99]],\n",
       " \n",
       "        [[ 70,  98, 137],\n",
       "         [ 69,  98, 135],\n",
       "         [ 67,  94, 130],\n",
       "         ...,\n",
       "         [ 65,  86, 111],\n",
       "         [ 58,  82, 106],\n",
       "         [ 48,  71,  97]],\n",
       " \n",
       "        [[ 59,  83, 120],\n",
       "         [ 52,  76, 111],\n",
       "         [ 47,  68,  99],\n",
       "         ...,\n",
       "         [ 57,  77,  94],\n",
       "         [ 57,  80, 100],\n",
       "         [ 51,  73,  94]],\n",
       " \n",
       "        ...,\n",
       " \n",
       "        [[ 53,  77, 122],\n",
       "         [ 41,  65, 108],\n",
       "         [ 38,  59, 101],\n",
       "         ...,\n",
       "         [ 44,  79, 119],\n",
       "         [ 49,  83, 121],\n",
       "         [ 53,  86, 125]],\n",
       " \n",
       "        [[ 55,  81, 127],\n",
       "         [ 47,  72, 117],\n",
       "         [ 44,  68, 111],\n",
       "         ...,\n",
       "         [ 49,  80, 121],\n",
       "         [ 51,  81, 122],\n",
       "         [ 56,  86, 127]],\n",
       " \n",
       "        [[ 59,  85, 132],\n",
       "         [ 52,  78, 124],\n",
       "         [ 49,  75, 118],\n",
       "         ...,\n",
       "         [ 57,  84, 128],\n",
       "         [ 53,  83, 124],\n",
       "         [ 56,  87, 127]]], dtype=uint8),\n",
       " ...]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Closed',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " 'Open',\n",
       " ...]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:14.430046Z",
     "iopub.status.busy": "2022-02-09T16:24:14.429795Z",
     "iopub.status.idle": "2022-02-09T16:24:14.610281Z",
     "shell.execute_reply": "2022-02-09T16:24:14.609164Z",
     "shell.execute_reply.started": "2022-02-09T16:24:14.430015Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1452\n",
      "(32, 32, 3)\n"
     ]
    }
   ],
   "source": [
    "for i in range(len(X)):\n",
    "    img = X[i]\n",
    "    img = cv2.resize(img, (32, 32))\n",
    "    X[i] = img\n",
    "    \n",
    "print(len(X))\n",
    "print(X[0].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:14.612160Z",
     "iopub.status.busy": "2022-02-09T16:24:14.611646Z",
     "iopub.status.idle": "2022-02-09T16:24:14.619716Z",
     "shell.execute_reply": "2022-02-09T16:24:14.618809Z",
     "shell.execute_reply.started": "2022-02-09T16:24:14.612126Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1452,)\n",
      "0\n",
      "{0, 1}\n"
     ]
    }
   ],
   "source": [
    "label_encoder = LabelEncoder()\n",
    "Y = label_encoder.fit_transform(Y)\n",
    "print(Y.shape)\n",
    "print(Y[0])\n",
    "print(set(Y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 1, 1, 1])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:22.436326Z",
     "iopub.status.busy": "2022-02-09T16:24:22.435984Z",
     "iopub.status.idle": "2022-02-09T16:24:22.445544Z",
     "shell.execute_reply": "2022-02-09T16:24:22.444942Z",
     "shell.execute_reply.started": "2022-02-09T16:24:22.436289Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1452, 32, 32, 3)\n",
      "(1452,)\n"
     ]
    }
   ],
   "source": [
    "X = np.array(X)\n",
    "Y = np.array(Y)\n",
    "print(X.shape)\n",
    "print(Y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:22.614749Z",
     "iopub.status.busy": "2022-02-09T16:24:22.614218Z",
     "iopub.status.idle": "2022-02-09T16:24:22.622111Z",
     "shell.execute_reply": "2022-02-09T16:24:22.621200Z",
     "shell.execute_reply.started": "2022-02-09T16:24:22.614713Z"
    }
   },
   "outputs": [],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:22.623624Z",
     "iopub.status.busy": "2022-02-09T16:24:22.623233Z",
     "iopub.status.idle": "2022-02-09T16:24:22.632691Z",
     "shell.execute_reply": "2022-02-09T16:24:22.631772Z",
     "shell.execute_reply.started": "2022-02-09T16:24:22.623592Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1161, 32, 32, 3)\n",
      "(1161,)\n",
      "(291, 32, 32, 3)\n",
      "(291,)\n",
      "(1161, 32, 32, 3)\n",
      "(1161, 2)\n",
      "(291, 32, 32, 3)\n",
      "(291, 2)\n"
     ]
    }
   ],
   "source": [
    "print(X_train.shape)\n",
    "print(Y_train.shape)\n",
    "print(X_test.shape)\n",
    "print(Y_test.shape)\n",
    "\n",
    "Y_train = to_categorical(Y_train)\n",
    "Y_test = to_categorical(Y_test)\n",
    "\n",
    "print(X_train.shape)\n",
    "print(Y_train.shape)\n",
    "print(X_test.shape)\n",
    "print(Y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualizing images of Closed Eye and Open Eye from the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:22.634543Z",
     "iopub.status.busy": "2022-02-09T16:24:22.634030Z",
     "iopub.status.idle": "2022-02-09T16:24:23.518965Z",
     "shell.execute_reply": "2022-02-09T16:24:23.515430Z",
     "shell.execute_reply.started": "2022-02-09T16:24:22.634505Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure1 = plt.figure(figsize=(5, 5))\n",
    "idx_closed = np.where(Y==0)\n",
    "img_closed = X[idx_closed[0][0]]\n",
    "plt.imshow(img_closed)\n",
    "plt.title('Image of Closed Eye representing Driver is sleeping')\n",
    "plt.axis('off')\n",
    "plt.show()\n",
    "\n",
    "figure2 = plt.figure(figsize=(5, 5))\n",
    "idx_open = np.where(Y==1)\n",
    "img_open = X[idx_open[0][0]]\n",
    "plt.imshow(img_open)\n",
    "plt.title('Image of Open Eye representing Driver is not sleeping')\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualizing the Data Distribution in Train and Test Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:23.521114Z",
     "iopub.status.busy": "2022-02-09T16:24:23.520876Z",
     "iopub.status.idle": "2022-02-09T16:24:24.131297Z",
     "shell.execute_reply": "2022-02-09T16:24:24.130477Z",
     "shell.execute_reply.started": "2022-02-09T16:24:23.521084Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "unique_train, count = np.unique(Y_train, return_counts=True)\n",
    "plt.figure(figsize=(20, 10))\n",
    "sns.barplot(unique_train, count).set_title(\"Number of training images per category:\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:25.220683Z",
     "iopub.status.busy": "2022-02-09T16:24:25.220294Z",
     "iopub.status.idle": "2022-02-09T16:24:25.727245Z",
     "shell.execute_reply": "2022-02-09T16:24:25.726466Z",
     "shell.execute_reply.started": "2022-02-09T16:24:25.220651Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "unique_test, count_test = np.unique(Y_test, return_counts=True)\n",
    "plt.figure(figsize=(20, 10))\n",
    "sns.barplot(unique_test, count_test).set_title(\"Number of testing images per category:\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The dataset is already balanced, as can be seen from the bar plots, hence there is no need to execute dataset balancing."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Defining the Model Architecture"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:32.411790Z",
     "iopub.status.busy": "2022-02-09T16:24:32.411476Z",
     "iopub.status.idle": "2022-02-09T16:24:32.439015Z",
     "shell.execute_reply": "2022-02-09T16:24:32.438219Z",
     "shell.execute_reply.started": "2022-02-09T16:24:32.411757Z"
    }
   },
   "outputs": [],
   "source": [
    "def driver_drowsiness_detection_model(input_shape=(32, 32, 3)):\n",
    "    model = Sequential()\n",
    "    model.add(Input(shape=input_shape))\n",
    "    model.add(Conv2D(32, (3, 3), padding='same', strides=(1, 1), name='conv1', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Conv2D(32, (3, 3), padding='same', strides=(1, 1), name='conv2', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Dropout(0.2))\n",
    "    model.add(MaxPool2D((2, 2), strides=(2, 2)))\n",
    "    \n",
    "    model.add(Conv2D(64, (3, 3), padding='same', strides=(1, 1), name='conv3', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(MaxPool2D((2, 2), strides=(2, 2)))\n",
    "    model.add(Conv2D(64, (3, 3), padding='same', strides=(1, 1), name='conv4', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Dropout(0.3))\n",
    "    model.add(MaxPool2D((2, 2), strides=(2, 2)))\n",
    "    \n",
    "    model.add(Conv2D(64, (3, 3), padding='same', strides=(1, 1), name='conv5', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Conv2D(64, (3, 3), padding='same', strides=(1, 1), name='conv6', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Conv2D(64, (3, 3), padding='same', strides=(1, 1), name='conv7', activation='relu', \n",
    "                     kernel_initializer=glorot_uniform(seed=0)))\n",
    "    model.add(BatchNormalization())\n",
    "    model.add(Dropout(0.4))\n",
    "    model.add(MaxPool2D((2, 2), strides=(2, 2)))\n",
    "    \n",
    "    \n",
    "    model.add(Flatten())\n",
    "    model.add(Dense(128, activation='relu', kernel_initializer=glorot_uniform(seed=0), name='fc1'))\n",
    "    model.add(Dropout(0.5))\n",
    "    model.add(Dense(128, activation='relu', kernel_initializer=glorot_uniform(seed=0), name='fc2'))\n",
    "    model.add(Dropout(0.5))\n",
    "    model.add(Dense(2, activation='softmax', kernel_initializer=glorot_uniform(seed=0), name='fc3'))\n",
    "    \n",
    "    optimizer = Adam(0.0001)\n",
    "    model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:34.126413Z",
     "iopub.status.busy": "2022-02-09T16:24:34.124120Z",
     "iopub.status.idle": "2022-02-09T16:24:36.210218Z",
     "shell.execute_reply": "2022-02-09T16:24:36.146477Z",
     "shell.execute_reply.started": "2022-02-09T16:24:34.126345Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_1\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "conv1 (Conv2D)               (None, 32, 32, 32)        896       \n",
      "_________________________________________________________________\n",
      "batch_normalization_7 (Batch (None, 32, 32, 32)        128       \n",
      "_________________________________________________________________\n",
      "conv2 (Conv2D)               (None, 32, 32, 32)        9248      \n",
      "_________________________________________________________________\n",
      "batch_normalization_8 (Batch (None, 32, 32, 32)        128       \n",
      "_________________________________________________________________\n",
      "dropout_5 (Dropout)          (None, 32, 32, 32)        0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_4 (MaxPooling2 (None, 16, 16, 32)        0         \n",
      "_________________________________________________________________\n",
      "conv3 (Conv2D)               (None, 16, 16, 64)        18496     \n",
      "_________________________________________________________________\n",
      "batch_normalization_9 (Batch (None, 16, 16, 64)        256       \n",
      "_________________________________________________________________\n",
      "max_pooling2d_5 (MaxPooling2 (None, 8, 8, 64)          0         \n",
      "_________________________________________________________________\n",
      "conv4 (Conv2D)               (None, 8, 8, 64)          36928     \n",
      "_________________________________________________________________\n",
      "batch_normalization_10 (Batc (None, 8, 8, 64)          256       \n",
      "_________________________________________________________________\n",
      "dropout_6 (Dropout)          (None, 8, 8, 64)          0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_6 (MaxPooling2 (None, 4, 4, 64)          0         \n",
      "_________________________________________________________________\n",
      "conv5 (Conv2D)               (None, 4, 4, 64)          36928     \n",
      "_________________________________________________________________\n",
      "batch_normalization_11 (Batc (None, 4, 4, 64)          256       \n",
      "_________________________________________________________________\n",
      "conv6 (Conv2D)               (None, 4, 4, 64)          36928     \n",
      "_________________________________________________________________\n",
      "batch_normalization_12 (Batc (None, 4, 4, 64)          256       \n",
      "_________________________________________________________________\n",
      "conv7 (Conv2D)               (None, 4, 4, 64)          36928     \n",
      "_________________________________________________________________\n",
      "batch_normalization_13 (Batc (None, 4, 4, 64)          256       \n",
      "_________________________________________________________________\n",
      "dropout_7 (Dropout)          (None, 4, 4, 64)          0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_7 (MaxPooling2 (None, 2, 2, 64)          0         \n",
      "_________________________________________________________________\n",
      "flatten_1 (Flatten)          (None, 256)               0         \n",
      "_________________________________________________________________\n",
      "fc1 (Dense)                  (None, 128)               32896     \n",
      "_________________________________________________________________\n",
      "dropout_8 (Dropout)          (None, 128)               0         \n",
      "_________________________________________________________________\n",
      "fc2 (Dense)                  (None, 128)               16512     \n",
      "_________________________________________________________________\n",
      "dropout_9 (Dropout)          (None, 128)               0         \n",
      "_________________________________________________________________\n",
      "fc3 (Dense)                  (None, 2)                 258       \n",
      "=================================================================\n",
      "Total params: 227,554\n",
      "Trainable params: 226,786\n",
      "Non-trainable params: 768\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model= driver_drowsiness_detection_model(input_shape=(32, 32, 3))\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Training the Model\n",
    "\n",
    "Learning Rate - 0.0001<br>\n",
    "Optimizer - Adam<br>\n",
    "Number of Epochs - 60<br>\n",
    "Batch Size = 128<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:24:42.511936Z",
     "iopub.status.busy": "2022-02-09T16:24:42.511634Z",
     "iopub.status.idle": "2022-02-09T16:56:26.606441Z",
     "shell.execute_reply": "2022-02-09T16:56:26.538478Z",
     "shell.execute_reply.started": "2022-02-09T16:24:42.511903Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/60\n",
      "10/10 [==============================] - 4s 266ms/step - loss: 1.3141 - accuracy: 0.5306 - val_loss: 0.6935 - val_accuracy: 0.4914\n",
      "Epoch 2/60\n",
      "10/10 [==============================] - 2s 195ms/step - loss: 1.1557 - accuracy: 0.5297 - val_loss: 0.6914 - val_accuracy: 0.4948\n",
      "Epoch 3/60\n",
      "10/10 [==============================] - 2s 215ms/step - loss: 1.0203 - accuracy: 0.5581 - val_loss: 0.6720 - val_accuracy: 0.5189\n",
      "Epoch 4/60\n",
      "10/10 [==============================] - 2s 206ms/step - loss: 0.9185 - accuracy: 0.5788 - val_loss: 0.6398 - val_accuracy: 0.6048\n",
      "Epoch 5/60\n",
      "10/10 [==============================] - 2s 231ms/step - loss: 0.8973 - accuracy: 0.6072 - val_loss: 0.6217 - val_accuracy: 0.7045\n",
      "Epoch 6/60\n",
      "10/10 [==============================] - 2s 257ms/step - loss: 0.8858 - accuracy: 0.5891 - val_loss: 0.6142 - val_accuracy: 0.7526\n",
      "Epoch 7/60\n",
      "10/10 [==============================] - 2s 222ms/step - loss: 0.8229 - accuracy: 0.6141 - val_loss: 0.6079 - val_accuracy: 0.7835\n",
      "Epoch 8/60\n",
      "10/10 [==============================] - 2s 213ms/step - loss: 0.7379 - accuracy: 0.6296 - val_loss: 0.6010 - val_accuracy: 0.7698\n",
      "Epoch 9/60\n",
      "10/10 [==============================] - 2s 228ms/step - loss: 0.7649 - accuracy: 0.6391 - val_loss: 0.5946 - val_accuracy: 0.7491\n",
      "Epoch 10/60\n",
      "10/10 [==============================] - 2s 227ms/step - loss: 0.7277 - accuracy: 0.6245 - val_loss: 0.5893 - val_accuracy: 0.7457\n",
      "Epoch 11/60\n",
      "10/10 [==============================] - 2s 219ms/step - loss: 0.7070 - accuracy: 0.6486 - val_loss: 0.5816 - val_accuracy: 0.7423\n",
      "Epoch 12/60\n",
      "10/10 [==============================] - 2s 234ms/step - loss: 0.8205 - accuracy: 0.6339 - val_loss: 0.5743 - val_accuracy: 0.7491\n",
      "Epoch 13/60\n",
      "10/10 [==============================] - 2s 243ms/step - loss: 0.6855 - accuracy: 0.6400 - val_loss: 0.5655 - val_accuracy: 0.7388\n",
      "Epoch 14/60\n",
      "10/10 [==============================] - 2s 217ms/step - loss: 0.6487 - accuracy: 0.6477 - val_loss: 0.5557 - val_accuracy: 0.7491\n",
      "Epoch 15/60\n",
      "10/10 [==============================] - 2s 214ms/step - loss: 0.6760 - accuracy: 0.6727 - val_loss: 0.5441 - val_accuracy: 0.7595\n",
      "Epoch 16/60\n",
      "10/10 [==============================] - 2s 243ms/step - loss: 0.6274 - accuracy: 0.6761 - val_loss: 0.5322 - val_accuracy: 0.7629\n",
      "Epoch 17/60\n",
      "10/10 [==============================] - 3s 274ms/step - loss: 0.6285 - accuracy: 0.6813 - val_loss: 0.5186 - val_accuracy: 0.7663\n",
      "Epoch 18/60\n",
      "10/10 [==============================] - 3s 243ms/step - loss: 0.5774 - accuracy: 0.7140 - val_loss: 0.5070 - val_accuracy: 0.7869\n",
      "Epoch 19/60\n",
      "10/10 [==============================] - 3s 255ms/step - loss: 0.6088 - accuracy: 0.6934 - val_loss: 0.4952 - val_accuracy: 0.8007\n",
      "Epoch 20/60\n",
      "10/10 [==============================] - 3s 271ms/step - loss: 0.5731 - accuracy: 0.7003 - val_loss: 0.4814 - val_accuracy: 0.8041\n",
      "Epoch 21/60\n",
      "10/10 [==============================] - 3s 266ms/step - loss: 0.6280 - accuracy: 0.6658 - val_loss: 0.4674 - val_accuracy: 0.8247\n",
      "Epoch 22/60\n",
      "10/10 [==============================] - 2s 268ms/step - loss: 0.6076 - accuracy: 0.7140 - val_loss: 0.4511 - val_accuracy: 0.8351\n",
      "Epoch 23/60\n",
      "10/10 [==============================] - 3s 246ms/step - loss: 0.5622 - accuracy: 0.7244 - val_loss: 0.4381 - val_accuracy: 0.8454\n",
      "Epoch 24/60\n",
      "10/10 [==============================] - 3s 287ms/step - loss: 0.5770 - accuracy: 0.7106 - val_loss: 0.4268 - val_accuracy: 0.8522\n",
      "Epoch 25/60\n",
      "10/10 [==============================] - 4s 425ms/step - loss: 0.5708 - accuracy: 0.7261 - val_loss: 0.4133 - val_accuracy: 0.8488\n",
      "Epoch 26/60\n",
      "10/10 [==============================] - 4s 436ms/step - loss: 0.5405 - accuracy: 0.7382 - val_loss: 0.3978 - val_accuracy: 0.8591\n",
      "Epoch 27/60\n",
      "10/10 [==============================] - 5s 461ms/step - loss: 0.5298 - accuracy: 0.7304 - val_loss: 0.3818 - val_accuracy: 0.8694\n",
      "Epoch 28/60\n",
      "10/10 [==============================] - 5s 471ms/step - loss: 0.5079 - accuracy: 0.7519 - val_loss: 0.3714 - val_accuracy: 0.8694\n",
      "Epoch 29/60\n",
      "10/10 [==============================] - 4s 401ms/step - loss: 0.5144 - accuracy: 0.7545 - val_loss: 0.3585 - val_accuracy: 0.8729\n",
      "Epoch 30/60\n",
      "10/10 [==============================] - 4s 371ms/step - loss: 0.5010 - accuracy: 0.7657 - val_loss: 0.3454 - val_accuracy: 0.8729\n",
      "Epoch 31/60\n",
      "10/10 [==============================] - 3s 336ms/step - loss: 0.4760 - accuracy: 0.7606 - val_loss: 0.3328 - val_accuracy: 0.8866\n",
      "Epoch 32/60\n",
      "10/10 [==============================] - 3s 365ms/step - loss: 0.4801 - accuracy: 0.7743 - val_loss: 0.3222 - val_accuracy: 0.8969\n",
      "Epoch 33/60\n",
      "10/10 [==============================] - 3s 321ms/step - loss: 0.4847 - accuracy: 0.7752 - val_loss: 0.3116 - val_accuracy: 0.9003\n",
      "Epoch 34/60\n",
      "10/10 [==============================] - 3s 287ms/step - loss: 0.4643 - accuracy: 0.7898 - val_loss: 0.3007 - val_accuracy: 0.9072\n",
      "Epoch 35/60\n",
      "10/10 [==============================] - 3s 286ms/step - loss: 0.4722 - accuracy: 0.7933 - val_loss: 0.2903 - val_accuracy: 0.9072\n",
      "Epoch 36/60\n",
      "10/10 [==============================] - 3s 294ms/step - loss: 0.4228 - accuracy: 0.8096 - val_loss: 0.2800 - val_accuracy: 0.9107\n",
      "Epoch 37/60\n",
      "10/10 [==============================] - 4s 354ms/step - loss: 0.4195 - accuracy: 0.8174 - val_loss: 0.2672 - val_accuracy: 0.9141\n",
      "Epoch 38/60\n",
      "10/10 [==============================] - 4s 360ms/step - loss: 0.4269 - accuracy: 0.8226 - val_loss: 0.2512 - val_accuracy: 0.9210\n",
      "Epoch 39/60\n",
      "10/10 [==============================] - 4s 375ms/step - loss: 0.4090 - accuracy: 0.8140 - val_loss: 0.2347 - val_accuracy: 0.9313\n",
      "Epoch 40/60\n",
      "10/10 [==============================] - 4s 409ms/step - loss: 0.4103 - accuracy: 0.8217 - val_loss: 0.2197 - val_accuracy: 0.9416\n",
      "Epoch 41/60\n",
      "10/10 [==============================] - 4s 407ms/step - loss: 0.4028 - accuracy: 0.8329 - val_loss: 0.2090 - val_accuracy: 0.9416\n",
      "Epoch 42/60\n",
      "10/10 [==============================] - 4s 416ms/step - loss: 0.3704 - accuracy: 0.8450 - val_loss: 0.1994 - val_accuracy: 0.9450\n",
      "Epoch 43/60\n",
      "10/10 [==============================] - 4s 342ms/step - loss: 0.3614 - accuracy: 0.8475 - val_loss: 0.1904 - val_accuracy: 0.9450\n",
      "Epoch 44/60\n",
      "10/10 [==============================] - 3s 316ms/step - loss: 0.3515 - accuracy: 0.8441 - val_loss: 0.1819 - val_accuracy: 0.9450\n",
      "Epoch 45/60\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 0.3304 - accuracy: 0.8544 - val_loss: 0.1722 - val_accuracy: 0.9416\n",
      "Epoch 46/60\n",
      "10/10 [==============================] - 3s 301ms/step - loss: 0.3244 - accuracy: 0.8527 - val_loss: 0.1652 - val_accuracy: 0.9450\n",
      "Epoch 47/60\n",
      "10/10 [==============================] - 3s 295ms/step - loss: 0.3177 - accuracy: 0.8682 - val_loss: 0.1595 - val_accuracy: 0.9450\n",
      "Epoch 48/60\n",
      "10/10 [==============================] - 3s 340ms/step - loss: 0.3341 - accuracy: 0.8665 - val_loss: 0.1594 - val_accuracy: 0.9450\n",
      "Epoch 49/60\n",
      "10/10 [==============================] - 4s 342ms/step - loss: 0.3221 - accuracy: 0.8803 - val_loss: 0.1483 - val_accuracy: 0.9553\n",
      "Epoch 50/60\n",
      "10/10 [==============================] - 3s 337ms/step - loss: 0.3336 - accuracy: 0.8854 - val_loss: 0.1448 - val_accuracy: 0.9450\n",
      "Epoch 51/60\n",
      "10/10 [==============================] - 4s 348ms/step - loss: 0.2783 - accuracy: 0.8889 - val_loss: 0.1425 - val_accuracy: 0.9519\n",
      "Epoch 52/60\n",
      "10/10 [==============================] - 4s 381ms/step - loss: 0.2935 - accuracy: 0.8777 - val_loss: 0.1402 - val_accuracy: 0.9519\n",
      "Epoch 53/60\n",
      "10/10 [==============================] - 4s 358ms/step - loss: 0.2810 - accuracy: 0.8975 - val_loss: 0.1302 - val_accuracy: 0.9588\n",
      "Epoch 54/60\n",
      "10/10 [==============================] - 4s 361ms/step - loss: 0.2472 - accuracy: 0.8958 - val_loss: 0.1255 - val_accuracy: 0.9588\n",
      "Epoch 55/60\n",
      "10/10 [==============================] - 4s 354ms/step - loss: 0.2581 - accuracy: 0.8923 - val_loss: 0.1231 - val_accuracy: 0.9553\n",
      "Epoch 56/60\n",
      "10/10 [==============================] - 4s 360ms/step - loss: 0.2692 - accuracy: 0.8941 - val_loss: 0.1132 - val_accuracy: 0.9519\n",
      "Epoch 57/60\n",
      "10/10 [==============================] - 4s 382ms/step - loss: 0.2388 - accuracy: 0.9130 - val_loss: 0.1052 - val_accuracy: 0.9588\n",
      "Epoch 58/60\n",
      "10/10 [==============================] - 4s 369ms/step - loss: 0.2589 - accuracy: 0.8975 - val_loss: 0.1011 - val_accuracy: 0.9622\n",
      "Epoch 59/60\n",
      "10/10 [==============================] - 4s 385ms/step - loss: 0.2272 - accuracy: 0.9001 - val_loss: 0.0997 - val_accuracy: 0.9588\n",
      "Epoch 60/60\n",
      "10/10 [==============================] - 4s 425ms/step - loss: 0.2339 - accuracy: 0.9044 - val_loss: 0.0952 - val_accuracy: 0.9622\n"
     ]
    }
   ],
   "source": [
    "aug = ImageDataGenerator(rotation_range=20, zoom_range=0.2, horizontal_flip=True)\n",
    "hist = model.fit(aug.flow(X_train, Y_train, batch_size=128), batch_size=128, epochs=60, validation_data=(X_test, Y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plotting Loss Values and Accuracy against Number of Epochs for Train Set and Test Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:57:24.199002Z",
     "iopub.status.busy": "2022-02-09T16:57:24.198686Z",
     "iopub.status.idle": "2022-02-09T16:57:25.797681Z",
     "shell.execute_reply": "2022-02-09T16:57:25.731319Z",
     "shell.execute_reply.started": "2022-02-09T16:57:24.198970Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(10, 10))\n",
    "plt.plot(hist.history['accuracy'], label='Train_accuracy')\n",
    "plt.plot(hist.history['val_accuracy'], label='Test_accuracy')\n",
    "plt.title('Model Accuracy')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.legend(loc=\"upper left\")\n",
    "plt.show()\n",
    "\n",
    "figure2 = plt.figure(figsize=(10, 10))\n",
    "plt.plot(hist.history['loss'], label='Train_loss')\n",
    "plt.plot(hist.history['val_loss'], label='Test_loss')\n",
    "plt.title('Model Loss')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend(loc=\"upper left\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Evaluating Model on Test Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:57:26.629172Z",
     "iopub.status.busy": "2022-02-09T16:57:26.628857Z",
     "iopub.status.idle": "2022-02-09T16:57:29.228239Z",
     "shell.execute_reply": "2022-02-09T16:57:29.227524Z",
     "shell.execute_reply.started": "2022-02-09T16:57:26.629139Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10/10 [==============================] - 0s 33ms/step - loss: 0.0952 - accuracy: 0.9622\n",
      "Test Set Accuracy: 0.962199330329895\n",
      "Test Set Loss: 0.09521085768938065\n"
     ]
    }
   ],
   "source": [
    "pred = model.evaluate(X_test, Y_test)\n",
    "print(f'Test Set Accuracy: {pred[1]}')\n",
    "print(f'Test Set Loss: {pred[0]}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Classification Report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:57:31.103443Z",
     "iopub.status.busy": "2022-02-09T16:57:31.102931Z",
     "iopub.status.idle": "2022-02-09T16:57:34.123344Z",
     "shell.execute_reply": "2022-02-09T16:57:34.122485Z",
     "shell.execute_reply.started": "2022-02-09T16:57:31.103405Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.95      0.98      0.96       148\n",
      "           1       0.98      0.94      0.96       143\n",
      "\n",
      "    accuracy                           0.96       291\n",
      "   macro avg       0.96      0.96      0.96       291\n",
      "weighted avg       0.96      0.96      0.96       291\n",
      "\n"
     ]
    }
   ],
   "source": [
    "ypred = model.predict(X_test)\n",
    "ypred = np.argmax(ypred, axis=1)\n",
    "Y_test_pred = np.argmax(Y_test, axis=1)\n",
    "print(classification_report(Y_test_pred, ypred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:57:34.425000Z",
     "iopub.status.busy": "2022-02-09T16:57:34.424630Z",
     "iopub.status.idle": "2022-02-09T16:57:35.122055Z",
     "shell.execute_reply": "2022-02-09T16:57:35.121007Z",
     "shell.execute_reply.started": "2022-02-09T16:57:34.424967Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "matrix = confusion_matrix(Y_test_pred, ypred)\n",
    "df_cm = pd.DataFrame(matrix, index=[0, 1], columns=[0, 1])\n",
    "figure = plt.figure(figsize=(5, 5))\n",
    "sns.heatmap(df_cm, annot=True, fmt='d')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Saving the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:57:39.398962Z",
     "iopub.status.busy": "2022-02-09T16:57:39.398651Z",
     "iopub.status.idle": "2022-02-09T16:57:39.697606Z",
     "shell.execute_reply": "2022-02-09T16:57:39.696649Z",
     "shell.execute_reply.started": "2022-02-09T16:57:39.398930Z"
    }
   },
   "outputs": [],
   "source": [
    "model.save('Driver_Drowsiness_Detection.h5')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Testing Model on Images\n",
    "\n",
    "### Testing the classification performnace on random images of Open and Closed Eyes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:58:28.198854Z",
     "iopub.status.busy": "2022-02-09T16:58:28.198536Z",
     "iopub.status.idle": "2022-02-09T16:58:28.607499Z",
     "shell.execute_reply": "2022-02-09T16:58:28.606466Z",
     "shell.execute_reply.started": "2022-02-09T16:58:28.198821Z"
    }
   },
   "outputs": [],
   "source": [
    "labels = ['Closed', 'Open']\n",
    "img_closed1 = cv2.imread('desktop/prooo/closed_eye.jpg')\n",
    "img_open1 = cv2.imread('desktop/prooo/open_eye.jpg')\n",
    "\n",
    "img_closed1 = cv2.resize(img_closed1, (32, 32))\n",
    "img_open1 = cv2.resize(img_open1, (32, 32))\n",
    "\n",
    "img_closed1 = np.array(img_closed1)\n",
    "img_open1 = np.array(img_open1)\n",
    "\n",
    "img_closed1 = np.expand_dims(img_closed1, axis=0)\n",
    "img_open1 = np.expand_dims(img_open1, axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:58:29.898994Z",
     "iopub.status.busy": "2022-02-09T16:58:29.898423Z",
     "iopub.status.idle": "2022-02-09T16:58:30.805219Z",
     "shell.execute_reply": "2022-02-09T16:58:30.804190Z",
     "shell.execute_reply.started": "2022-02-09T16:58:29.898960Z"
    }
   },
   "outputs": [],
   "source": [
    "ypred_closed1 = model.predict(img_closed1)\n",
    "ypred_open1 = model.predict(img_open1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:58:31.121540Z",
     "iopub.status.busy": "2022-02-09T16:58:31.121248Z",
     "iopub.status.idle": "2022-02-09T16:58:31.326035Z",
     "shell.execute_reply": "2022-02-09T16:58:31.324969Z",
     "shell.execute_reply.started": "2022-02-09T16:58:31.121508Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 144x144 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(2, 2))\n",
    "img_closed1 = np.squeeze(img_closed1, axis=0)\n",
    "plt.imshow(img_closed1)\n",
    "plt.axis('off')\n",
    "plt.title(f'Prediction by the model: {labels[np.argmax(ypred_closed1[0], axis=0)]}')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T16:58:32.898820Z",
     "iopub.status.busy": "2022-02-09T16:58:32.898502Z",
     "iopub.status.idle": "2022-02-09T16:58:33.107331Z",
     "shell.execute_reply": "2022-02-09T16:58:33.106486Z",
     "shell.execute_reply.started": "2022-02-09T16:58:32.898787Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 144x144 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(2, 2))\n",
    "img_open1 = np.squeeze(img_open1, axis=0)\n",
    "plt.imshow(img_open1)\n",
    "plt.axis('off')\n",
    "plt.title(f'Prediction by the model: {labels[np.argmax(ypred_open1[0], axis=0)]}')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Creating Pipeline for making predictions on full face images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T17:00:43.398644Z",
     "iopub.status.busy": "2022-02-09T17:00:43.398300Z",
     "iopub.status.idle": "2022-02-09T17:00:43.421519Z",
     "shell.execute_reply": "2022-02-09T17:00:43.420586Z",
     "shell.execute_reply.started": "2022-02-09T17:00:43.398609Z"
    }
   },
   "outputs": [],
   "source": [
    "def full_face_detection_pipeline(input_image_path):\n",
    "    face_cascade = cv2.CascadeClassifier('desktop/prooo/haarcascade_frontalface_default.xml')\n",
    "    eye_cascade = cv2.CascadeClassifier('desktop/prooo/haarcascade_eye.xml')\n",
    "    detector = dlib.get_frontal_face_detector()\n",
    "    predictor = dlib.shape_predictor('desktop/prooo/shape_predictor_68_face_landmarks.dat')\n",
    "    fa = FaceAligner(predictor, desiredFaceWidth=256)\n",
    "    test_image = cv2.imread(input_image_path)\n",
    "    test_image = imutils.resize(test_image, width=800)\n",
    "    test_image_gray = cv2.cvtColor(test_image, cv2.COLOR_BGR2GRAY)\n",
    "    rects = detector(test_image_gray, 2)\n",
    "    for rect in rects:\n",
    "        (x, y, w, h) = rect_to_bb(rect)\n",
    "        faceOrig = imutils.resize(test_image[y:y+h, x:x+w], width=256)\n",
    "        faceAligned = fa.align(test_image, test_image_gray, rect)\n",
    "        faceAligned_gray = cv2.cvtColor(faceAligned, cv2.COLOR_BGR2GRAY)\n",
    "        plt.imshow(faceAligned_gray)\n",
    "        plt.axis('off')\n",
    "        plt.title('Aligned Face')\n",
    "        plt.show()\n",
    "        eyes = eye_cascade.detectMultiScale(faceAligned_gray, 1.1, 4)\n",
    "        predictions = []\n",
    "        for (ex, ey, ew, eh) in eyes:\n",
    "            eye = faceAligned[ey:ey+eh, ex:ex+ew]\n",
    "#             cv2.rectangle(test_image, (x+ex, y+ey), (x+ex+ew, y+ey+eh), (0, 0, 255), 8)\n",
    "            eye = cv2.resize(eye, (32, 32))\n",
    "            eye = np.array(eye)\n",
    "            eye = np.expand_dims(eye, axis=0)\n",
    "            ypred = model.predict(eye)\n",
    "            ypred = np.argmax(ypred[0], axis=0)\n",
    "            predictions.append(ypred)\n",
    "        if all(i==0 for i in predictions):\n",
    "            cv2.rectangle(test_image, (x, y), (x+w, y+h), (0, 0, 255), 8)\n",
    "            cv2.putText(test_image, 'Sleeping', (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 1.5, (0, 0, 255), 3)\n",
    "        else:\n",
    "            cv2.rectangle(test_image, (x, y), (x+w, y+h), (0, 255, 0), 8)\n",
    "            cv2.putText(test_image, 'Not Sleeping', (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 1.5, (0, 255, 0), 3)\n",
    "    output_path = 'desktop/prooo/test_image_prediction.jpg'\n",
    "    cv2.imwrite(output_path, test_image) \n",
    "    return output_path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T17:00:44.098515Z",
     "iopub.status.busy": "2022-02-09T17:00:44.098020Z",
     "iopub.status.idle": "2022-02-09T17:00:57.625780Z",
     "shell.execute_reply": "2022-02-09T17:00:57.624657Z",
     "shell.execute_reply.started": "2022-02-09T17:00:44.098475Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(5, 5))\n",
    "predicted_image = cv2.imread(full_face_detection_pipeline('desktop/prooo/active_person.jpg'))\n",
    "predicted_image = cv2.cvtColor(predicted_image, cv2.COLOR_BGR2RGB)\n",
    "plt.imshow(predicted_image)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T17:01:12.723720Z",
     "iopub.status.busy": "2022-02-09T17:01:12.723389Z",
     "iopub.status.idle": "2022-02-09T17:01:22.123260Z",
     "shell.execute_reply": "2022-02-09T17:01:22.122464Z",
     "shell.execute_reply.started": "2022-02-09T17:01:12.723687Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(5, 5))\n",
    "predicted_image = cv2.imread(full_face_detection_pipeline('desktop/prooo/drowsy_person.jpg'))\n",
    "predicted_image = cv2.cvtColor(predicted_image, cv2.COLOR_BGR2RGB)\n",
    "plt.imshow(predicted_image)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-09T17:01:30.798703Z",
     "iopub.status.busy": "2022-02-09T17:01:30.798082Z",
     "iopub.status.idle": "2022-02-09T17:01:40.198753Z",
     "shell.execute_reply": "2022-02-09T17:01:40.197940Z",
     "shell.execute_reply.started": "2022-02-09T17:01:30.798667Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAVUAAADnCAYAAACuecXkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAEAAElEQVR4nOz917MkSXbmCf5U1Yi7XxY8InlWksrKLA4UUBQcXSCNbgADNEiBdPfKvq/I/jUjsk/zsA8jsrK7svuw8zAzIN3oAqoKxZKzSB4ZmcEuc2ZmqjoPqkdVze+NyBQsthuzkpZ54/p1NzdTU/Kd7xA9R3nv+eT45Pjk+OT45PjnOfR/6wZ8cnxyfHJ8cvz/0/EJqH5yfHJ8cnxy/DMen4DqJ8cnxyfHJ8c/4/EJqH5yfHJ8cnxy/DMen4DqJ8cnxyfHJ8c/41Hd68M//le/4J1zDMPAYC2rrk8/865n2XX01qKcB21AgTJQmSr8VBW60iilUErlC3tQgNYB0733LJdLZrMZk8kEbTTtZIIClvNjZpOWupbrVdRtS2UUWiuUDtf33uOdox8G3DCwWi3p+56+Gzg6mnNwcMTgwCuFBrRSKEApRVPXnL9wjq2tLZRSaAXGhOtqbcCr2GiPMQbvHeDRukrPUB5aKTQKH/4YfaaUT88cvl9+ptLv8rVGQYzS0FrH74YvOkV8fjCmIkRz+Ph9hfc2PpNGK/DOh+sVbfPegw7t9d4HSevTUKGMBufBeyRaRNrn43sOH5row3laqXyN4nsQxt5vXEOeWc4NfS+do0GBNmp0bmqH0mFclUL53H9KgfcOrzVKmzw2sSmqMqldci+tNRqPR4EKP945jDGxH8OSqeoq3ENrjDGp/7TO890Yk/4mtUnhnBt9buK1IM5lF8bXOYs2Bud9ujZ4nLd5/GPbvPc4H+edjIlz4TUeay3eedbrNV3XsVqtmc8XrFZrVvMli8WS46Ml8/mC4+MFR/M5q/mabujp+p7BOobB0jvLMFicdXhn8c7hfegqnA9zDtJ8pXztw8JXMudwnH74PAFHvC/M6RGW3ONIc+6U80fvqNBmtRkJJe8X8zR/pHDD/qkNuSeobm1tgXdYaxmcYzoMrPue5aqjWa9o1oblqqPvB5zzeKVQSqO0QmlVrJ68cPITjRfIZDJhsVhQVRW1qunXHdPplKquOF4smLYtdW2pXBgIX2m0LhYWBBDte7quj4DacWf/gNWyw/sIorGPFWGBGa2oK0Nd12mSh8tG4JKJoAjPVoCYUpwAGVloyoOKC03ezws4fD8ApIt/j6+TrhXBSRZRCShax75WMtl07FOPUjo+rS7aqTAmtAtUMblj+wBHBlWlFD5io9bhfOfGC0EWsGE86bzzafy992kSO+fCc4ebo5VO19RapwHyLgCzkjmlNF65U/tHnjUJ6dje8F5Yuj5+ngSe9+jKnBy7KGzTkjYmTdlwfYOOAhcIYKs1yuhw3wigWilMVYH3qII8aK3Tj6kqtBHQyG1wOLxzSSjIGKviGuWcKvvP9jYBt4xHkJkaSwDjtm1RSmOMpq4rZm1D29a0bcN02jCdtUznE+ZHC+aLJat1WOODdQzW0lsbMKHrGfoea10SzCoKVq/jxInzTqlAaJR3se3gvYzlxwnrlNX7Mc6UtbYJpoWg/3j3vPtxr1DUe4LqbNrEgXRY5xisoxt62qaiWRnqSlNpzXrds+p7Bpk0qpDysf1aZzDwEahcZDQqgkZd18znc7a3twHPcrVgOpuxXncslguaocZ0a+qupq6rdB0IbGKwFuccfW+Zz+ccHy+wdkApEydlBnEtP1pTV4EFBzYisja2txgXAadNYC1BLj4geRKMOz9NjZKJyiIhQl28ppMF5Elt0SrwqNitJwFBqciGBVQyA5R7yPdUZMACGE6eDUDYEuAj0CrytU6T3iNGqsO8Sc8JOOdRRie2Le+byuBdvKYOz21M6JdA7GOv6dxXjsxmtdLgZbxUZuAEzcAQ2KwqxlyrAOwyFgmsfdBG5Pvee6qqSoxQqcw+PVFAiSDlpPAr+6qqqvTaGJPIhjBQVQiYIJVBGx2fFZyzI7Yr15ZrOGtHgr485HytFc55qlqjVE1lFENfU9WGuq5omop20jCZNMwmLbPFhPlixXrd0fUDQz/QDUMA2aqi6yrW644hMmElamg52Xz+MzBPn4W2L1lpeZwOoKex1FE/nwqo5Wsfzxm/VbahXC9wkqF+1HFPUG2bikobPD4Aq/d0fUVTGZqqojKayhjmeo0xmvXgGLxNqvXdFp/8rQBvXeoIbTTOW+bHh2xtbWGtwnnH9s4Wd27eZBg6TFS3lMoSXzrOOcd6veLoeMkw9GilMboKTIcANjqq31pFoPdgFFRBN47XGzPgvEDcaKyUyoMRxtPn76KCElkMuNYaWa52Y4CUCmppeh4dACBeLPWRV6R7lCqrsLVwTYcwV6V8WnS5HSoxxNgzibkLIImqbUoTgffp3GIgRyqnPEtQcc1o3KMGnvpkpMpnCYXCo0WNh6i6B7ZDBDRTCjNUAsmkJidBB87lMdQR/JBrF0ItgX1si45g6fEYHYUuUd1XCkd+XqT/GD+jqao0T0stwxiD825035G2EuWIjeck1ukc/pT+E5OCcz5aYHx6T0cB7a0Fb8G70H9GobwB75lOJyilqKqKpmlomshcZy3bqzWrVc96tWa1XgcT4Lqj63qqyqCMput6hn4A5yNexJ88UcL/StYGeczRBbDlNVRM/lE/l3182mshc5m8hLU4wu5CiN71OIXtjjTuuxz3BNXaGIwxmMh2rHM0VUVTVZHdGeqqpqlq6uWKRRcYq3M+TAYf2ckpnSF4FCaQjwRDMalrhmGgW6/QRmPtgLc9u3u73Ll9i8FDXQVV3WuPVcE80Xcd63WHdRZQVLoqFl1mlOVCVAQzRWUMxuhkR92UVOP268QsSkAtuv3EmJR212itwygVoK9oUwLgCAqns9CTE0lA1XsBiQBCm/f3kYWFNqhkJ0zX2xgfAahSlTzBVJ1Hxb8dPrBdoCruqbROzFLMAiqC8YhFq1P+1hoVbY1iP04jEdm1MMUshNRIiCglQoUkaEzsYzmnqqoMXMKOtcKYAKoBjBVa2lIAaslOZTJkzWc8ZmL+EEZaGSOUOhEFay3gwpiW88l5UcwyYBbXGoYhAawmXyv4G8I1w9cVzlmcDWtFKU1lNLOJpjJZY6sqQ9vWTCYNXdfTrdugNa7WLJZrVqsVy6pCa4PWht70uCGYBpwL2q1OAkDGLrLUyGiDEHOkB9sAP1WQiI038+uRaVGlNSaAKs+c7uF9MkuhTt7zXrbYj3PcE1Rl0KoqdjKayuvIUAMIVUZTV4aq0pjVGtNplqsudmwYNC0Nx0dpHx9UB/ah4mutAgC2bR0nhwXn8HbAG82ZM2eYHy+wwxDsOYMNEtiFQQkMRie/UnZGUfw+Bah0ZnmbqvwYxHTxd7iJ9NGIZYgGXNhUU3/G3y4t+LGQSY2VaynQ2pxg/ncH1wAiznlQolbmNsoiLJ/V44NDxNqk4gvDkXuKM0QWbbq3Vihh0NLn0kYf2uDJNldd6WT28ZH5mk2gFpVYBZuu2FSrDYDygJZ+TBrMeHwdwq6zzTnYKfVI2JTahCcwPqIjVNh6MJfEsY2D5NW4v7QAqc5zJZsO8vPJ+akf49gnDQ6N85Flpb4JbaeYa8kZVZpe4j3FfOGdC+Qkfu6ci4w2a19hrQazS90YtJlRrwMTrSpD21QMk4auW9Ouatq2ZrGsqapAfrTRrPsK2weC01uLH8I9lbD/+Jw+quAy531ky9lslk1Dpx0KsZNnNlqawlDlGpE+l/Wa8VOpIKjyHxustWCqH0ftl+MjQVXaFRYsQf3RgcEGD79JoFpVhmplAgPpgg0mdGq4hgoiFifSQoFypYWQZOMLDxtUiWSL8sEO66wbTaCRCx1Z2AXzYlO4jQFJKx0iAuTsghEppeJEyGxXmFA0HEYpmCyxxWLx0Rst9jmHU4ArATVLxgRoxYLEg7N27ElOj63juSTWL59XlY4CWUfmGs0dWlGZOvRt7HsdB1nr6OHWeTJqMugICBljCtuf2HlJiyexbcTMMwZ9Hcc5OW4ScAQAHS0nrZArKCW2eZ0WhlxDkZ9fXntCJIrMQW2EvcZIlWivxrtgl1WBnQYWXy6ibKIwOt9byI8xGm1MYLE6Cx1hpdIWH4WJ9IWcY6oq3wewUYOSFlgBnMSks3ATZi9mC+dCb4nqHbz+4hzKbQtsODoevWhdAbQrE2NXmgpwVLWhXxustdR1cOrWdUVTB621qSvapmPVDazXPet1RdVbuq6j73ucs1EYkMBP2if96lEoJ2shmzxGUJZIQAbT/FEG1LQekuDLY5XeVflCPpoewhweTz85RkL/5Mej4yNAtWBRsQVGKTA62iujF1OFxW3EGRDZpV07ut6e9BgnECgevJDem880RAN9eWT2G9qWAIlC4CUL+ag741sZNLVOXGbUaQKoshASiyiAUHsFDpQRoSPPKKFLPs8CFVoqrwUuvMvOES0SM6ooxgSb1WkTSARelE9kVhqNl5EpBtum+MBVUmdRUXVHoZRBmTQbU38pUZWiQ0b6ITHXJNA8yhX2VU1qnICJjEsepzw+Os4dCYkKTVcbzx1Zu8qqO+Q+3zSRiMM0AbIiC2AThKJ3LthLtcFGBgtjQCxNCT5KSdFaMtBn4BQWnNoSwUyL4NWioqoUwRHMZGGqmBjqJevGKBU0P6JWoRgBamCewT6O87nfIksU0JXvWJsjBJTS2MgoA6sVcgNGK9qmZhgsygcgFkKltaI2miay2MmkZ7nuWK4H1quO9Wpg3UWzQdcxDKK9yjwV9ZvYTpkbZNW8WL9jIFNxLm+uBzmvANaCIPm8SjISCHfJj83obgVbHdtT7w6t9wZVaf7IJhImijEqSugY1iNMSkOtNJU2VEpztFjSdQM2qiOJ9scOVLFjvUTTeFfcJz1Z8RCFiIkdqXMXjdtfUvdT+iCpbTo8B2p8FwrVINn7pEXepxBUrcNi8xrw2TGQ1ckoSMo2EdqdQaTw5KrImTciJjZfJ/CRfigcLsBIzR+Fg6ni2ZWKzEa0ko3+je3wUWIIoI5CdtI9S1AN13M2xmQqXUxQDwVQpTlB1Bai6p36ttAetDYRcHUCvnIsU/8QwqEcPgG2jIs0OjjmMvhpgt+gDHuSZxQg8d6llgbg9Mm2KyBu4t+mtGVLO2MIlZxvtE5aWXY2OcTXFtRyUCqzVW+zBmQFeKXfvSOQT1cAKVib2XMJxHKU4yk20XKd1LWhMhqrFVoHh29daerahEiB3rJcBofWat2zXPYsVyG8cbXuWXcdq3XP0HfR9OCQmG2wWXh6j1c6hF55Q9ZgpS3Sqs341fC7hIykaQuRKbRbJQRHR3bqVTIjlgy5RBYRmh913BNUvXS0V6gYLhFIgkpAU0cV1ETDfF0ZmrpOhnpjDIvFmuV6TS/AKlI62wVOUPoNYrrBVFViNfLFkUrPSQw9jc2UoBqkoUpAdtpWs8TaEzB5sI5kBI9YEMwPJjETMXAk0CMP/6YNcNM0cdqRz8uMTxiPd2HBaKNDYxJg6bgwGcVZ5mD5YCOXxRiHKYGB3ehRYarE+3sYCRUf45RTXOhgR6qwi5EWEssrTiuFAu0IE40EClpiiLXGBw9fFkIbnnU5kslKFqTWGB/iqT3Z7JH62o9D0EZCOc4iZbSIw3gPA94lW2FS71UOidPk9iZGW8yLPGF9ul9Qmf1I8IDH28xQIYyPAKC0s/wuBPtpeN+NQrG01gzDkLSJTbtsvn8Ac61VmDteU6kKVykmlWawnt5atiY1624IoLrqWa4sy3XPYhkAtV11LJcruvWaYRiS9hRlCl77SKwU3kchvBnLGkHy9JWRT83ribi2hZ9ucF7pWxcEfTBFxO0fogkVTOue943HPUEV68MEJyySYJsaL3oFNFWFqQKA1nVF1dRUdU3dNtRNw2Ezp1oYlqs1fd8X6nnJ6vI17xa2UH42UoH96edkNbZob3HdMePzG+AsNk81msQZGCKgqMyiBBSEFZXfSe0ogYAxcJbB66Mj9tdmv6R7KJXjJbPATwtHeZ0YltrYMBH6L7NeaYdzLjMtMf0UzK0MA1IenMo2qcToldjsQFcmMXDvXAqqD6aKHBnghS3HPjUm2NO1EWcd4110AlwFYx3NkRg2l+yQiYWMtYMgGEKsqPRbMsmMnjuaH9xo0sW5okeCQzaPOMYOPOl3YfWuaK/WKgfTx8O5EOHiVRBGQpZLz7+wz9IZ5aPppnRmifov3xF2W94rC1Vf/LjoiNMYZUKYGhpf6xDt4yr6tqK3jnVvWXcDy86zXA8s1z3zRcd62bNcrpjPlywWixit49DeIg4t7y0oPbLPyxoYEyc1/pyT60POLOe7vCVKU/q+jsAayVo0ATO6Y5oj94bWj2SqLjIxhQkqbnzYEUuI0lhrg6lrqqYOsW5tS9PWTNqG6aTl+HjO8WLBar3GumyrOI1h3O0Ydazs2oiE4zT2lz4+hQEmIIwxoSaGJRFIS2KgJ8A3XScu8NgAYeFhQCJwRJCQTQ4ugUZGfFFPy4iA+E805p/sIwF2aWMGE6JdMH7mM5OUzhJ2Kw1Q+OK7cfE7ot0x2ly9D7uGBpv7NdqiibufHCQbbWC8G30vgK5N2DGkx+FKSvtsIkrAXPSVzA2fQ4mS4JA5o0ATw8DwgRMUgjAwTWFDxUKMAJ4YJYVjLYFXACmR4xLwryJ4ZikeVq0T0FfZ9okugvVdWL1eZVbtIm0rw6ES0JXOv0IYwHinW7qXC9tTy00dNkZ4eO9G9lMBWzE/BGEYTQ9E84XEtyqoorlOV1W4rvNYX2E9cZOQo7OwHjzrzrJYBsY6P14yX8w4Pp5xeDTn+PiYYQAXt1MH8ppjbVXUnPTm/E/9XGr1vmCk5Ynx02TnB9HaRLiW4xZICkTnSb5+QW7uddwTVEWiKSIrUsF2WKrdcRSDWoDBVIq6qWmblknbM520zNop0+mE6WTCZN6yf3jMYrGitwPZdXL6cRqYjN84KcFK6XZaQPYmOzQxZAmJoSzYRmBopzNcAaSyRUmNLQWGnBuIU2JxAhays0fFEB65oCfvAJKFKNcUZhlwqnDsxPFIqnTuivjdHOKTrhWfswQ0UxdxmxSsKAJvYtyRvYS1kOMgVWFDlS27icFJRxQCIalsqNQGvE9e+dDTLoFqYLEmsVpZYPLIYrv0zqEg5iaIKnPBRoG0v15XJreZMkRNxbky3tYqHRrmg05/O+fSNlz5zPs4Li4sfYkRFTtssKPKPMmAWbJMN9hwzUKY4PPaETVf9vmL11+AQUATnyNorLUJlWSMU/SHj/HYDhQub++NZg7JkSFaV5gDgRw4pRjQWKfprWfdOxarnoPDBfsHC5p2TtU0mKri+PiIvl+H+ROFjpdIAF9oJMU6K4FQnHHSdyeO+DgQNUvCdRWiIauUX0H6J80rxwidlCyIe5DVezNV60IejcQKdGCrcQ+28kSvXfCkaqXBhK2rvva0k5bJdMJ00jGdTZhOJ8xmLZO25c7+IYfHc7rexlZm6RtGOCHLqccJIKVgvpSglrtk81JJbYzM1Gsy45F+U6Rtgrl7o00q9qzXpG2vSc4UwCOAaX0OeE99LM+yAcQBfGKEBSo6i8asWRa+i21NYK+D4ymFfKnQJ1qZCF6FXS5hkc+7XQpVUfqhZGyeELRubXAwOB9Bn2yj1iLRNyZgWujyDHEeIR5xpQjB/nIv6eegLakI/tb7yJQje/T5NmJmALCRoZZxpSidBCdRQxA7swe0kXNdBDwfIiMUCdBlbJ2wubSnPZgzbGS2ASAkxjcw8wQSKoRiqchYsx1QgzYM0UkVdkLF27siWY0b20KN0cl04ONcdfigFfq86UAcUd654OBSweElDFXhUU4cSaFzvZUkQgrlfGCsKAxBoTFR60CHcCxlKpRpcLrGaU1nPd2gOLuw3Lx1QHvzTgyV9BhtWcw1637A+iH2hWjFOm5ckAkUzCkJ7HykA0r8NRFNZC2WJKoUwDGSTMVVHdazfN/LrTILcmnlC/2463FvUBUJaV1aiEqQVDlQJnPvuHiUIhq0q8SwJpMJky6A6tZsGhhr21BVFQeHh6y6Pl0mdYAXsDnZLgGUkuaXrGxkL0TUaaCwB5csJC0SMoAkNijX9xF0dFj0EnTu4rVEdfA+g+Lmte5pi4kg7ZXEfRYe43jtYKrY8HaLI6Tom9B9hV4Ur5kSt5QsWsY69aHPgIc4JnLXlQHzOsZ5BjDOapeN2ZVKW6Rc18RsZvJeEhiRaZy4fh5IZFcUZOYLgXmmWMx4cRfttlrFXVeRnVsRvsUYJTtoAqggNHxsowg4EZC2cPzIMcTgeVQHeKz1+CgElB+AEGplY1yoIrI8qyIQx9hQHdcYNo3XYG3q69DOnFhG2GxQnW1ix945XGSiEiNaOqpk/AcJp0KEoA85BgRx8FRRoGud2Z3WIbyyMipujnAxX4NBa9CVxtQaVTdYZUBXVE3L8WpgZ3fK9taESTtBqQblK5Q6RK0WdH2IGEEHARKyjKnUtiAgSZqAAJ6AYyIpyPTPJhhVaBQhWicIdE2MBRaWGq+W/iSv6cLWcNfj3o4qMYJHqYbTYOLDuQiuGkmRkHcwESMFlKKuK5RqmExappOWrdmU2bRl0jbUdUVtFLf2A7C6YrBJj8bovbvZM+5uJiiouyKraWT2pVUADlOqnmUnSnt8eX2dmVX8PJghx46s0harVFb3ys/SNVO3j0OFQhKMoo9HwmDMzNL9RIPz0WsbIu6ToJEjmBBMcf9sE00sUj4rnmPUqXEBJvU9aZ0ZUEXolWtBNIqyjwTpgpzSOdHKxlEGabuo4o9PyNqLUbKhIXxFEqSUJgBi30ZoR1g+YniwwpyG1G/WBbuxcx7nepwLSYcCkFu8l9R4WQML+/3DPKhM2JgRbO8aXZmU4a1S9cgWK0ImXMenuNYczO9AeZwdRPED5yIAaWwREZBsrqKp+HKsHCk+IYKSsy6GOIXzKxP8D7WRjS4WyWJWKagrg640dVvhjMfUNefOXaAbLG3b0VSaSVOxvbXNbDrjvaalvl1TH9csVwu6dcfQO5yyeFwAVp/NIBAco8R2h9c6CwIvuS9AdqCFea6S6USmbpounFyH4mdIgfUf87g3qMoRpYTYc5xS6CQRfYoxlYaGRQIq7umXFGNNUzOZtLRtQ9s0YUdGbdCm4uadfZar9QhEZU+5Fy1ECWvLPTIyGYzakLhicU19om9STGL6XlQH5NEVaQNAUN1IjRH7X2pvYrY+5RaADAAqLVIyeMt9ZFvkKcAlwnMEwCX4x7eNyiwPNQ5aL5+3VO/FSSb9FtqSA9/zB+OOy31emAoSIOoQSJ/uW/RRBNjSxjlyBJbomBbHSWYt80KeNQm2uLAkpV6KsogsL9mdN45SwAnTUyrErQoLDkzPxh+H9TEFXh9SYnof7JbWDiEfRd/TdWuGoQ95fl1wDlkXkg4ZU9NOJsxmE7amE6bTGU3VYKoaqrylOEQwZAcXBG1gLNxiu1EBzL3wthgxIEAKIzuqJ5gwgjB04B3eZpDU0YggNtWqMhjvMTgUmpCv12NUYKhNFTZTVHVL3/dM24b7HryA7T3OETQ8PJPWcOnyNrPtht0zW1x7b4cPP7jDwdEB88UBy0XI+zrYDhdDrBKoJvNAmJvKeqwlCm+fN1NA1AJEyhd0Qua6isI99paPc6WElBIP0nv3YKwfS/0X6o0PhvbEmRHYKn+yar65mLUO4Co/VV1R13W0HSo+uHmbVdfFfMg+reV0lbgwSGtdnfqbbGUEsaaNFmRuU17MkW1BWng+AkC4ZwTEAsTlOdm8f2zzyElWgkO4eBIO8kwBlCOr2lgwJbiE0JqgBgl4JJYor1OI1el9lBliaK8xWb0V6ZLUqVHfFs1SeauktDPFTI5CtwqPrD6Ze0Cef3OaluErYyFzkvXLOcH0ZNJ7ugiul7FzMSXhScdfjoJwLqjF2QMfXg9DAM1+WNMPA+t1SPgcdg71HB0vODw44s6dA+bzJcqLeUalaIG0rpxHGY82MJnWXLx4jgceuI8LF84z3dqhrptgAnLETQ/isBENwqetxt67FG0gIXTCRt1gQ8RFuZ6JRMEGNuucDdm+tA4xxKJme4dWnkprtA6AoeN3lY52f6OotMZoqBtNXbcs1z2z7SkPPXAfwxAyWt2+c8zNgxW9M0wmUyqjOXdui70z21y6eIF33rzDe+9/wK3bE44mRyyXS1arJeuuC05t79E+asxpHYA24K3HDz4J4hAAE7VpIULxLSHhJW7J2g/XzetYNINybt7drR6OezPVYrKlrXDREB3bERtZwnp2NIwmUDzHmIqqqqmqOm4YqMIaRmGd58Nbd1j3fXooJU+cmrSxuFVJ3PM5mywps1VRy4OKqZMNi8yU4qI1sqc9AnSylcr1k7BhzFjJQFRKtJKRlW0q7+3SPnSyeiNMUOX7lH2RQEHi7Irn3jwHik0IwmQ1oHLYirRLcgGU19mU0CN7pMv9iCK1B6WKZw1hTaWwDEwghBRt9hEC7f70Zyn7ImQuy+ckO7DRKds/xA0NKqf5k0gIAdDQDpfY5jAMybmz6tas12vmx3NWq4758ZrDwwWrxQqta7a3z/Dg5c/whWcucPbsLtvb20wnE9roQ1BK4ayj7zq6bs1yueLocMH7H9zgjTdf5e+/+yKzrYrHn3yYBx98kK3tWYwAqUJ2Nq0hJmdxtgijcrmf0lh4sEN0PvnxWtQiEOOYGoJq7CnJTNjZFVIrhu2ymqDe4z0hGiNmeNMh2XvVtCyWK7Z3dnj40fvp+hWLec+b797gzQ9uMV8P7Jw5x67y7Gxt0dQtdV2zt7PD2b0znDt3lrfePsOHt65zeHSH5WrNfLHgaL6g7zpwFkxst6wvr6gUeO3wQ6xIQATUNPNc0mriRM5sNRGwPOMEAxK2JWD2bEy9E8fHYqrla0F6SrU/tad8CBIob4KLMSbtuNLaJE/i4D39YLm9f0Bv7cY1C/ZYLBhZiAjrKtpTAkEJjJCZcwoJUTGjUVy8ujA3iAjJjCoAnZH3fFr6aa9NyeJOAFN8Gp3gtxQb4aHSM6W38hkSSgPkhC2SaT9JosKOuQFG42D2zXSHOcg/5xMlLb7TzBNy7eBkC6FPFH2Txglp9mYsYfT8x/4YObiI4ZmnPMdpLLbMCZu6o6AhqriO9z4xfU9QrYeYgGQYBvq+S0lBuq5juVpydDxnsVgxP14yDHBm7zxf+crn+dRjj3HlyhV2dndomhpT6VBhKNC5KMiiFuIpTAohv6kfPMt5xztvvs9f/9Xf8l9+8Le8+MLrfOnLn+XS5QtMmmmYL0W2sEAMTE7vB0E1RohQ3F2nTYgKGG0OiN+xFp26J7J060QWUusYUkjo1krndRDWT5gvptJUTcXR8ZLzFy/w4INXsHbFatHx8ivv8t0fvczbH9zh3KXzXFivceo8TWOYTNuQlKVtOH/uLJcvP8rZ8x9w9Y2rvH/9PQ4O7tBOWpqm5fDomNV6Cc7GuVTGr0ahoBze6VTuJaQV1HivCM51CkyLE6SQ8EKKvBJG6tMcHhPUf6L673zY5VDmxrQelBcbT5y6SgZExW2sIiVyI41SI8GhdSjrkIKe8fR2iMkXevYPj0POShEiPi9cYYvpUJmBnjyidNl4t1yYHn9ib74vJxpjVT4986gJ0bwf2aTaAAH57XyUsjpbckr/fd5KINdTI3Yq4xC6JdSGknCP0j66eW7JOt2GzXSTwZoYnC/dJ17o0wRkei7nYkIWUJSOr0KonWChnCg5U5o8TzLTsWOrbIsPHZD6MDl2YitceV78J4C1CzZHFVrsvccONuT0jWxytVpxcHTE8fGC5XJgMpnxpS9/kaee+gyXr1xkNmupmkgSCiEtJoqcfGUsDMpFrYCt3S3OXNjjkSce4Ovf+hr/w//wf+VH33+Jp555iPvuv4w+c47aB+0uxOjGFI/S0zFcSikVbbsWSfOHrFVijKx3cda5lOxFRZVfa4UmeP2N1tHR58FZlDIoHfJeGG0wMUtV1RgOj464cuU+7rv/Cm5Ys15ZXnrtGn/7jy/x3CvvMF8NvPX+bR5+5AIKS1M1TCYz9nZr7r/vMc6eu5/Fomf3zBnOnT/Lq6+e45133+T27Q+Yti1NU7F/WHG8XEaW7lObIVgFvFZ4p8E43KDADRsVCcQWHDAqmzdF8If3lcpxv+GL4sD76ONjOapOslWfaxml2+o0uGLfS95diolV2CuNMaFeTlxwdnB0Xc963bHuQjJcH4u+5QUmdLwIcEdY1JiVpLadwteFsUkVgc0FK09FYqfpnUKFYHSvksVJkLEIAmG8JYBK4uZMFdRIkiamJ7fzIFEVuV9PZ47SJwK0wQuaF3fp/S7vJyykDNYv+/Bu9yvNAHLv0EVFKFhi06Hvkt23uC4bYzAKfSPbSkcgnwaD0b1Ls5RSQaUPYLthc43nWW+jbdIxDJGdLtfs7x9yZ/8QUDzzuc/xMz/zM1y8eCnYPKvIPmVe46PgFKEpKyM+g8/OQW3ktY5RI5LXAL74M0/xf77wf+K//+//L7z71ntMWsO0nWBmuwHg4uOVKn85tqUmktYt4qwqoiVUDLeLfaQJoXyKkDRFIgGMCmYHYwJDroyKPpGKum7Y3z/k/vsf5r4HztF3K7r1wLMvvsXf/OAlfvzqexwvHfPjBcrD1dc+BOtpq5b7Lj3Ipx79DI889CTWaabTjsm0YXd3m7Nndjh3do+rb1zlw5vvYmqFrmr0QcvRfBlCv5RFqRhba3UkYrGiQqXwLqTOFNNUns/FPInEzUlEEwSHaqn559l14p3N4yNBVdhqqJhK3P9KMidKC8uFnv6GUeiLvFcexhgmbRse0jn6QTLarBhu3KYbXLpecl7FniiUYyQI/G6AWgLBaMFqncJYNlmUj5iaUxUWDGujX9UmoxTmwynnhQalDP8JdCPmKKVStiax63gKgCkEVupXNY7xTM8QO8U7n5PhFMcJO6/P3vyy7Zvmh83zy2vl74/V/BRgLza/U8Zj1J74W+J1JQ+vIpsoUh/EcZRxEu1i2IjLNEa2g5a5SEOpoGEYsEOYg13fs1p13L59wIc3boAy/Mqv/hqf/+IXmc0mmEqDku9tAnoAHrXBUqXfQhtyJiwR7lKFePfMLn3f8emdKX/5H/6E/+f//f9BW5sYtxmub63FVDECwo13Xm36MYSVEX+rKJxD3o2cHF55R6UCS9WSEMdHVmqiVqUVVawUUDehYsLtW4c89MjD3Hf/WdbDinU38OwLb/A333uF51//gPmx43jegarROphF58cdldni53726zzx+NMo6mBSqzR1rWibium05uy5bc6e3eGVl3d599q7KHUdbcJW+Pl8nqok4G0kHCFLlwGcCqq/hFI5p/AuzkhVprku4stj32QlWZHrPJRy+p+o/otdVwbOOw/mdPVvtMDl/QgaIwZYvE6TTAz4WwP90LNarZgv5sznCw6OFvGR5Hu5YWI7UsLyuDuTOg2ARuVEPKc+V4Hb8mbByfP1yhyr92SPxADkhK2uYGBxkH3xvESwkuDvODBex2t5nbDce1cwu8yIy7ac5jjb/HvElIvfo+e9x7Nugvtmv0JgqZsOs/B+jtYoBUXRgJxvIQXfi61fpVlfMvmy7ae1x3sJhQolzvtuYLnsODpecOPmLY6OFvzyL/8KT33mM9S1wbqBoXP4mAHKl1sZS3udGrdDRXU6xKaG7dHaxBImOvgZUqkgHE4NzHY19z90Ca0Uk+k0gDnFPQQrhaG6DACZpeZYz2IaB8FTmB+qKmxqqXSO+dTJphrqlWmtMJWmaStMbbh54w6feuwJLl85w2DX9GvHT599k//8j6/y/NUP2V8MLBcrKqXANLS158rlXb71ja/yF3/+H3jyyadAdmP5EBZYU6MIHvxJq9ndnnFm5xyT53bQpsFU71HVirY1HM9X9N0Q4nPVENlO3mWIMgFAtQKrQIUdWsppgVOU14gpQCnibivp43GfSTTAvY5721SdI0T3RwlXTkglXuONSRuo1sZrg5TEkB/J9qPilsFKK9ppy7adcvbsLvP5nKPDOav1wLrroqqsE5tLwKoKNXtTjd04SkZk9JgplEu3XMje5XpG6b14La1OAhCczopTGzZAIjFRYalxG2AyA2wAZCTN8XW2v4o6XS7gUrs5jcFvMtTNXWYj1igSlgBAp7Hi0wB3sz/Lv0+Ac9EfYsN21o6YsXwnLZqyX5ycK0H2uU1lerzytfelWSuMd9f1rFZrDg8POTo64tFPfYrPPPMZTKUZhh7fO6yzOG9zftIIXtInJePf/EmVMyqpoFHHKhqh9pvW4IaB27dv8Td/+1fU00koo96EyBnxZIstELInPz137BcBBWFdAUaC9inlfqRUu/YS5B/Ii46yX2I/jVaYylC3BlO3fPjhbZ588nEuXj7DMHSslpafPvcm/+UHr/L86x9wZ95xvFym6IC2Njz4wEV+5Ze+yl/8xV/w0IOP4QA7WFL0STTPVBVMmWCMCbbXzzVs7U6YzibUrzeYm+9R6SO0WrBYrVgtF8lZq5WPtuWYb1YV27Vtit4Na8ZVeBUdWjZqdYzndCkoiz/venwMUM0TeeQUiKwzw3iUeKpcQFH90aIGRSkdf+Q9UCijaeqG6WTC7vYWZ8/scXg45/B4QTf0SSxnW9VIOYWPkB7JHBHBUMqTyE4bSBGto4Uu2aVSzGZa3GMmlvh5wVDKe9/1KNUJFQB1BCDBEoYJVZ7CwigXaQRUIMwTJYtGj2NFN9qzuR1UrqXJ5yYwKzYmlHGpm5mRRn1dgPJpgmcE6PnN8J0CkEaHyu3NlWDjNNRhdngfmZqPNmupX7vBmlX0CIdA/sg2nQ+llwfLet1xdHRM27Z88Yufp502eB9KNA+DZShiVp23cQeVjwmYw1wNz6DTLrhSmJhUbNJQVTV1BNSQDcqynh/y//p//0+8/va7fPXrX6dpWmqt0FG9DdcK3mzZ7x9CoPJaTSYB52PQPYGRyfyCkYNKITkQkFS8AWwVwRmlw260qm64/uENnvz0p7l4+Sxdt6Rbw0+fe4u/+sELvPD6B+zPB1bLBZXyoCe0k5aH7z/Hb377V/nOn36HixcuhT504XmU8hgTmKpWAbyVCrhgjMJUiieeuMJsa4ut7V2ee2GLa+o94CbKAGpgvQI/aBRDgVVhs4WHmE0vbq+3CpyKuVzj6i7S/xFNZuO5fXIen3Z8vL3/MTuRC/tgwoUl8jadLMAV8ndKIt+R/a+0WypppE/f19rQthNms4G93W3On9nhzsE288Wc9RB2coV7bwCP6FrC2zYMnuXiVaI+RvV/FItJ2oGdO05l22JKTRxBVgAoeQ8ROSP/hatGZT4AZMn+5D4i/nzYfhfs0qRcDsIvUCp8nm9EFmQKH/em5oRJwup82vdcMtNNRr8JvtInvvhOed0Ri01cKH+/LHh3wuwQtLTQr6rMc0pqg4+hHqkAAy72d9j5o0ZZnaQ/VBofhY4mArlOts9HCRTmtc/hR9Y6+r5nsViwXC759FNPcOHiucB6YrhV1wW7f9d1AVTtgLPBwWVtj8fFTTwhiY2pYj5YHdZFiDs1mLidU2tNpQy11gE0bc87b73D9773A575/Bdpm5ambqg1WNcl9VQplRKsDC70h5XkK1HDCTuvCrVVkqEoFZPeCIDGBC8aiIy/MkFLNaYK22orha4N731wi2eeeYrLl/ZYr1Z0a8uPn3+bv/3eyzx79UOO5mtWiwGlDdrAbFrx4AOX+c3f/Fd850//hN2dXVaxv2R4NOBDaFFQjmW7LgZdtyhl8GrgoQfPsDV9ip3tbX7y0zO8/d5bmMN3ora5YrVaYgeZCmEOGAILl/H3yuMUqYirdyr6tlRIFlWkrRQSk+f4Rx8fkfovBu0okDAEid0Kr0mxb15ArQD1kU1rU1fLSyy9qbSmqmomkynbW1vs7u1ydu+I/cNDuqN5kYFbjS+n4uOnBXOKDa9gCzoBqkYyvQeh4YsJmLc45hZ6xHsV1rtKaipxkud9+HEQvGRvOjkuSb2HhKAiX6WYnjyvgHP6bgQsOV+AWIZAnuM0FfxUW6/3OMLGg3LconaZjjIxcil4SjGSdvZsajgFKxZboFy7LC+dwDvYNIhkIqih8kyqAPs0Poo83XKH53lLZCXpoVNbQ6D/EHdNhXCqyWTCY499KhZRtAxDSECyXC5ZrRf0qxXD0IfqvsOAHYZQtRQXwU5jTE3d1Ji6SgleggkghmBVFdooKqWwSoEbWHdL/v57P0CbigceeICmDlu6sUOw/0kgezGvFOTUjBRjJOOkiKp1dIKWxQ6TQPN466iMCuCGozINlVZhn3/VcO36DZ757Oe4774LLJaHrDt49vm3+M/ff55nX7/OwXHHej2gjKYyiq1Zw0MPPcBv/fZv87u/93vUkxmLbggBSl42uxAFSiBulYGKGBkRkV8bRaMM3vacO9vwja9/nt2dK/zgH3d44x2F1u8A+ygFi5XGD3HLu9cxdrVH+5Bcx0vIFISKLXi8N0F4K49XwQkpE+8kzbj38dHqvzLRJBFsTkGij00BEWbzBA96RWZTm4CqPCEvwBhwA5sNBvvJdMr29hZ7uzvsbG9zvFjRWyf8MPC+xJwEQOLrBIVZ5ZfrC6CayBwScylYmjEmdqZK1x49mzodmJLDRQk7DfG5ULC8qF2kWkliVtgYrJHK7DxoMX34xESIERmhN4LDK9VKSlcn9QYRQDbzhKb7FPc97bk287qWbU1RBjIPTlH9R3ZAlQGw/LxsizRcBOVmouKRDV36b8NGKzkItMpAg9hPI6haW6TD856+71mtljzwwAPs7OwAuW7TuluzXB6zWsxZLxeBqa1WdH0oETL0ln4YUEDVVLRtS9tOaSZh55CpDFpJTKvBDBWV0SG+EsAOvHftGs+/+ApPPf0MO7s71LFEPFrHGPG40FOi6QCAQRMiCXjnYqYrJ8H8Ou29NxHE8D4y/iCwjIkJaFTYutyokIlKVRXvXb/F05/9HA8+cJHV6oih1/z4hav87Q9e5LlXr3Fw3NN1FrTBVJrtWc2nH/8U//rf/i6//u3foJ1M6GwgYEGYKaz4kLSnNRqlo9agxHsfl5yGYb0Gb7l86TwwY2u6zaSpmU6mmDcatHoTY/ZRRrNcgl8HOur8ACpsBtA+2+Q1srRC/H1Si3QIP0TZE/xsU+s67bg3U3Vxj7TTKWls+RPsWiE2TMe/lc7p2YqWFG1T4NUJBhSmRlhoVR0qB8xmU3Z2ttnd3uL2wSF22SV7mTygHKNdOKq4eARLUYfEnqW0TiE+m2qv99HGVFCpTRBK1yYDovc+l8M9RWVO9k9fnpPBwPsNT3hkxCp9KdwtpfBLqr/0oWS3ChM3tb5Q13PTx69LO+jmuWXJjtSugn2mvyMIbpoWNh13PtpKNoF33LUqneu9R0pxj4S57FiLTxuEoGw/pQDk8TF2WgXbqATJW2tZLpd473nwwftCukDnoO8ZBsdytWA5P2Z5fMTi+IjlYslqueTg8JAbt25zsD9nve7QWtG2NdvbM86c2eXc+XPs7u0ynW1R1TVa6+jpr7BG47TG4ui7gX/4hx+gq4aHH3mEyaRFx/oeEoxujKHv+8xOZTwjeOZzfZESkRS1YmLaPiX6L0XQv46fG01tNFUNyhjeev9Dnvnc53jk4cusloesV45nn32Dv/nuc/z4jWvsH/XYlY2+EcXO9oSnnnqcP/jv/jt+8Zd+hapqIjsN4t8VqQktHkzIHSBOM+tCykN0BQwcH9xmUlfcd/kyVVXjHVy8UPOVn3mISTvBmAlGN9S336BpDpi3ddyssYZB1qZs7Q22Z+dVZMJRWAlRS2aCyFi5ezTPacdHMlVR95xXOBezeovqTyjaZchSP7oFEnsp1b9iyQRg9QVQRalJBL+6aZhMQlLr7a0Zs0nLatWRN5CcDhRi4xOgVEo8mdF2ZXJBwgQi5XfJoFFeewSORaC3RxxGpN1e3vswaSMoin7mhRVsMl1PsDdvPofKjEvaGDhJBAQ8xjOKsU1tl2vF1ykpc+rjsbA4VWhs9MXdwC8ISHXiO2W/nTAZFOem3yVglvdS4oDKbTRyzyisXKCeYXGk8clHGcdZvifkVZI3B3vqkr0ze+zu7YACZz3OdqyHjm65oFsuAktdLlnMl7z2+lXevXad+WKFtcGvEDzlCnPjNrWBra0ZFy6c5777r7B39gzT2Yy6rqmrmroyOBP2r7/9zvtcfeNtPvX0M+yd2aMyFWBjoHtYMxI6l3MVFH0PIA6ZUjtCBdAKxoEkqE1UrxWBpWoVwLWuKtoqBPy/fe0GT33uaR597DKr40O6Dn7y/Jv8zT88z/Ovv8fR3DJ0od/r2nBub8pnn/40f/jHf8xXv/4tamPAh23oqa8lt6vECxNSJDqvApt1wfSznC94/qc/5IlHH+Txz3wao6sw3gqMseydVXzu85cwVYimqF+v+XD/Tdr6gKauODTHHM89g1UhMQ0W5wL+aE/ODgekWm2yUSUswGhFCv2UXbN3Pz7SUSXlFcrUW4mpEuLcBJjkO95FGl1M4Djn01vpb1lUmRQmNtm2DbPphK2tGbPJlAM9T0kkTgPB094XVTcFWFcVpqpCnGAE17AYGX9fwGLj/ZGtkaTJIvZQ+VtF8IpfBl2AIz6noovXGedqTe/m/ivuKeyz7EglQkYLI04Nz/cpOn/TW3+qA42CGd5FUku7dPGdzZwHo/NPYbHpcD7V1zotwXVIkBaFQnxf+kLF810xlsTzC4Ujbl0t9r4XgfPDMHB8fEzXdzz62MPBlmotAwPOu+DlXi0Z1mtc3zF0A1evvsnVN95l3QdQAEneHOu2eXBWsThecX19nTu3brF3Zo/zF85z5uwe01mY27PWYLTipZdeYra9yxNPPMZs2sas97Gd5BSE4jQr+08ScstW6CCXAwMzkVyoYnuqMFPRoLQOybmNVlS1wRvDu+/f4smnPsOnH3uY1eKQ1drz42ff4H/57nM8+9q7HCw6hj6Acd0aLp7d5stf+Bx/8Wff4Qtf+jLoKpCxyJoDoEYzoicQqMpQ1xo79Ligh6NNxdHhET/4/j/w+aef4JmnP0Ot85r06Zkd29uGzzxzlmbyDNNJzUuv1nxw863IuMN35osVbhBQVGHnmvYo7SK5i4THK7RT+Mhk07yPcy7P87uz1o+d+i8wBZMAtFxszmf13zuHLya4LlRyHwFgtEC9ByeGE+koRRVDTdpJE/JNbk1pmwa7Xsc1lh9UFktaSBssLDuldLBpFfuz5bxQDiVn1irVz9JxUxDqKBTEjiU3j4PmCwBQY1U8YvDY1BzZKsX9k01x4/3UPrmOZ6RSnyi9XIzXaWr5ab9hXIa65H0jJl8IVDlOOrM2n3bcHiBVPZAy26Xt1kPSjvDZtqrjJgAnxqNTBEJ6nqJPQ++EPAzOh5jTvg8OqsViQdu2nD2zhyLkLbWekO5vvcb2Hc72uN5y7dp1rr7xNl0nAfcKo6AyHqMikKGCn8BEb7qDo/1D5sdHXH+/Zm9vj3NnzrK1NeXo8IBbt/f59JOf5eKF8zR1gxuEYY/HWCabitpMGZ8axtinckeSWS71pvIhHlapWMAvFklUIQNVZTS6rnnz2nUee/RxPvPpT7Fe3GG9Gvjxc2/xv37vOZ6/ep3DpaVzobZXU2kunJ/x81/+PP/xP/4fefrpp1E+OLsHD70NCbxDlEfe/GK0pjKGbrmibkxMxq54//0PeeHZn/KL3/w5nnzsISoFkizGxQUTCExNZWBra+CJJ84yaT/HpG147kWDvhmcUoMNsTrLhcUPLkQuqeiAVzE0TWZowFUgbtONxTuN1mnzg1LB0Xi34+OFVPkgVQQ70nvWZYYQk+lq51KyW1XU0IkoE8DZZZVRfgemFR1DKFAhWUPbtMxmU7a3Z7SThmXfxcmU/c2nMSx5PfL2G5NKaZ/qrImL7YQqmzqEvKijLND+dLaZErQgi0CAIJ8jma7kfEe+Nt6HpDr6dOASh5h810fxHcKOclUnsSVtytZNh9NpoFsCYymdN80AJSvPzizZfCDXHWsUm/e1uLEJoBS+wki9FJzbGOt0n/DjXI4JdTF6RQAZn22L1rsYwB/2/HcxTOrCxfO0bRPUURfOsX2PXffYrsMNA4dHx7zy2husu7DQ5ZqVhAMVAtEYqCqVnENaKXCwXnR8OP+Qm+/fQinN4BznLlzi8SceZXs6i1vCXQJTvIoFA4u5ptRY4GiV9q0rLQGC0cLuXbSZRvNENBNopSBm8a9jBM5b125w/4MP8dlnnmS9mLNY9/z0xdf5q79/lede/YDDecfgHJWpqE3FxXNbfPXnvsR//A//kac+/RSKYBe1EAWXi1tig/lCtsSCY77umdUGoxRWOa6++SZvvPYq/+bbv8rDVy7GvvT4IvcDXqF8ADytPQ01Zup4+OEZVfUUda0xz9c4/wrDEJLkOLfGLcC7Aaf6uEIkRjsIQlmp2gQCVmmNrhR1pamqUH/PmFxu/bTjI/KpxgUbGZvb/IlMVGqSG6cw2oeiYTFLurUn7X1ZTcu7KCQBibBQpRSVqWjalul0ymw2ZWs2Zb5cYYNRMU6gk6q5KhZ4qfrrIotQ+TNexOMFX6rontjOKNIE/05LkHUCeOICSAXLCgab1HGJmCiYnffi9c9tgGzv3nx9GnDJrqQyEqF87tPU9PK6YpeW98q2nQ7MFOeMNwjk74znRHnP094vd69JftmxRhHP0zHNW7ono/6U77uo+uNVilFdr9d4PGfOnkl9LeYBOwx4N+Bt2ABw9epb7B8c4dGJFWoBKxU3kqgAsJWRHXwRcGM7wjMQU9bBZDrhiaee5My5s2itQ/0ochijlUKAbhyyJr0tPoxU1sj7lPUrzSpFSuWHt6gKUCaUQTEOTM1b129y/vxFvvy5p1iuDxh6xbMvvMdf/cPLvPj6+xwvB6z3GG1oasOF8zt842s/x7//y/8DDz/yMN0QQNx5GFwoPCglywcpJkoo0d33HVWlGbxn6D3PvfgC+7dv8ke/+9tc2N1GMAEZxjSaWZBDZpCzqebBB2qq6imUrrBO0Q8DnVRfsI4VA66rgnqvhnQNRViCdaOpjaE1hqYyVLWmaSqaqqKuDEZXJ7dPF8e9HVVR4jpisGyckNY7tHMBUJ0DSVQQ81A6PBhdgGtRqVEF+1cqx+JLkIgy1YtdRQeDedMwbUONq6Zu6AYb1DilRiWhR2q/liBrnV9HUE22VE6aEU4oqsIyVT5XPPwSlS6Oo1O/ny4jiyBmMBJSJtVeozSWnUICnpuqtrqLhCwX2eaAq6gpOO+pqippFqcBorxfgq2onzKHx6B5knkKkN3N9lReq/z+5j3L598E0BQLG2OJx+fpIm2bXNyhlMlaVtAzU04Lay29HYKNczpJfaRUsac+5uc8PDji7XeuBcIQw5GMViFVntEpP7CCuEUzps8TsIuC2cnuOa3QpubBRx7m4pVL6ErjcSmU0Q55hxAiDMo+io+Y6nAJYSHH9cqYaUUILaqqkEs4Mr1KhTa8/cFNZrt7fOVnP8+wOmI9DDz30nv81Xdf4NnXb3C4sPTeo0xFW2suX9rlm9/4Kn/55/+BK/c9xDC4VEnW+VBQz0Vgdc6FpDja4KI5wKOwg2PhLD/64Q/Ynbb86e/+a7amcTuuPJ0/SRZktZWbfSqjmE0d99835ee/+mnA0DtP72DoHYPto5atwi44PEoZDI5KG+rG0NSKttZM6oppW9G2NW1T09Q1talDbHGR6WzzuDeoxkdSUb0UG1QwNlu002G/bGS0eFAm+sTjQKq7gJ78zq/FbpTLbUCwh9Z1xURAtamSBUTKaYy83xGQgt0j5hjQKiVcLu2rqJx/poo5COQobajKZ+AU0My2y5PAkkRqcZ3RJJAOS3V2MmvZ/J7YdPMlSgkdz4hAIh+V1TaJ45e4XCH2BaiyZzm8L4Ak4UnyW756EthPjw7IODB2TuXPM3B+nPcTcJJ72MfwF3zB/Hz53RhX7bIZQLSs8Fkove4IAmV3dxsdkwaJ+cM5G5JweIcbLG+98x7Hi1Uws6jCB6BUivoIrCfYC4PKGONCZUEh8x+0MVy+7wqPPvYY09kMpdWo2sC4D0gmt9BGmy4pGeQkzlSqHolGhYrVT1WIBFD4kHGKcM13bxzQTCZ882tfZOjnrHrPSy9f56+/+wLPvnGNo+VAj0IZQ1tX3Hdpl1/5pW/wZ3/6F1y4dD+9HehtsWkozgEro6U1ysG66xlsrrG1Wnf85Cff57FH7uOXfu7nmJoK713MfDp2GG/Oh/gqzsE89tOJ5r4rE37+q09gPcFZNoRIDm/Db3wXhLOBxlQ0yjNpwncnTcWsbZhNWqZtQ9M0NHUTK5bUKPNPtanGCahFXYoTzfogtdWg8D7s6qm8RxnPIJaPAuTCXMrAt2mrC5uJhAW60Pkqq/CV0TRNTds21HVN70LoTDhBcap9VO6vs11ViaE5hjUhtq90b5nzpTNIhEPBCnw5UcM/UiAwO5DGDCw3jGTjzCDoi/46MXNOHxg1elGkstO5nXJGcQ3ZdROpNkF10psXHgm+zQiArNJns8BJxnmSUZ8UPuX5p9+v/E6aP97nGNWYLCN3nN8A1fzdoD7nGGkX4zQ9RHDybG9tBbHsXepLb21MNALLVce7194PXEKFzPhKmKjRsfRImDfGhCB4sWFKHLGwL20UTTvh4qWLPPrYY+zu7aatppuCxadnHgt+MSeoogt00qJyfLFzlqoyKHzalhrMEh6tKm7cWdBZxy9982fw/ZK+hxdee5+//YeXef7qBxysggYaEpxo7r9yhl/81tf48z/7S86fv8xgB/rBMTiVakc5T8hnmuIgPat+oB8GtDY4Z+nWS37843/kq1/4LD/72acwOgb9o3J5qY9xlEIUBRrDpLXcd1/D17/+eCBAVoHLdmbjHRaPMmsmyjCtNVuNZjo1TNuGrUnLbDIJxUojqJqqQlVVjJ89/fjIzP94H2pie48Smw5hF4ISSu8sLoYrSZjKyLXiM+NNCqGpUCpI2ZCxLYKiknpCMdxDxcmpdUo6UQ1hcYSGRGAubIrlghplYdeS3AXB0Xyu2mTOhUkggpBK/8aJWoy6ovDwwwkw9OlfhfUysaM5IDp1TuCnkuxDUls9ApDcb6Rmj4HEp3l8cnFuvt6sBJCvMf7u+PoCsPkJN9nqaSB6N5PAyeuetPt6ebBCS8j5fTO7HplMHHETR7TLxrvbmDk+TDUf2U1LU5vCPJNNVDreIySsPsIrFW2kIUqirkK14FqbEH9a19RNExwc6ZFjG7Whamom0wk7e3ucOXuWvTNnMHUd1H3r0mwTLUJRag5RkAbECsuA4CwzJm7+UHGuKtkppWOYlws2VRXeU0Zz42DB7aMjfvu3fhXlOlZrePXqNf76H57l+asfcLjssU6hTRUyTV3e49d+5Rf4o3/3J5w5e47BDgyOYKMkawI2xgGHyqZhrgyDQ0VAPT7c5+UXn+Pbv/Q1nnjwAWrAKZWqNUvszUcdo3kXCZpSUBkdgPVKyze/8WmqagL/RaFUKGa4RGGNRnvDxHi2Gs1Wa5hNaramE2ZtANSmbZi0dQDVpgZTjT3OG8e9mWocMKcUygZN35uQ90fjccpSuYrKGaT8rncOX9cp9YryMXOgTCnRCfCouFNEaw0+2D2dbJnbyMCtVSjEV1UVWg+B7XnG1UQFFOP5RFUJSLbVUv2imKCozLrS7wh04ppJ9aAisEnZauTzU4DUjS5YgGvUYUM5kXxvBDzSFQQbXXoWUX/D+xn4Soani3LcI5ChVOML50/hICrPLwFXGOBJJrhh80z2yOIMn54c8CPvqVKlQBnbb6WdwlCBZJssLh41nlJHKOKnlU5ZpGQOBhOMRsV8B0aHCp9ZDinyv0GNtt7z4Y1bDNaiVagEvD3bYra1xWxrGsuvt1H41zR1FW2sYnsNpgpjTNg12LbBETubYuoqqa9hPQRykuN1VWpM2uhA3HLsJSpCnJKi/st5If5UK6hNHQS0tmhtOJqvuXbjFr/x7V9F09N3jtffvsHffP9FXnzjQ+7Me7rBY3RF21Y8cHmX3/i1b/GdP/4zzp69SDcMQQNQkhPVJhNMwAmHUxp0zXy1pveeysOdWx9y7Z2r/O5v/hr3XTiLFJL2hKB8WSIf5xhpM4Qk2+I9rrRmNlFcvqz52tcfQeuev/s7eAvNkXkbu1Joa2h0z6xW7EwatqYtk7ZiMpkyaRuatqJpmkDo6hq0GVXs3TzuCaqDs6lUrSMwVuUcxuaCeWKvslbjjU/hE7WrUR76qLY479PNvJdei5UsYwC+VxrQySaoFKkqpKg6Om4vdUrFUrknQbVkiyX7LNVs5Lyk5gs4kViSZImSRSiflUe6m8/LWWmdrjtGCJXuET4PDF1sqyNVWumQVKVQbcXrfYLRcpKBOhzaj0ucxGYGprcRp1te4zSbZlgoJ5lrqaKPWWpU4TYbe4KSj/h9An75bATgm8/BpjBNcFoIizwuglrKiYAM6q9zIVE6RZmR1Eyfd8dZa7mzf4DWmqadcOXKFc6dO0PbTqjbOpYWqYMd1VQ0lUleaREcOft/YKtVZLW6MqNENE5Kz/jcz8nXoHInjOcwQX12A+VpwYQWQruMUSGFoK6Zry2vvPEOv/kbv8b2pMIPA+9cu8Xffv8Fnn3tOneOOrrBYkzFtK25/749vv3rv8Cf//F3OLt3LuWZkMz6Iu2D6u9ojaJtGpSuuHW0wA5rZnXFu9fe5ujOTX7/t7/N2a3ZSHwVjzaaF6cdm5EriQwkART7xSumLVy+WPP1rz9BpSv+89/VvHvN0zXvooc5FZZJ5dhqGqZtQzsxTNuatq1DHtu6ytFESiXt57TjnqDaWYvxMRejE8ePxiqFsWHnhTMWpwODdM5Re4OLQeOpVk4l6lv2XCbOIo3zoRCbU0HShrQDQT2WfdkecsZ4pZL9So5kG1R+tNiS6lgwKSDZNoEc/6hU6rgx4Iq3WRU4UBo5Svti6VwoQEJAPdoeosUrqkbjWNRyEWXVZpMJ5jwAp21+2GSP8tlIyBR9d5r6Pn4vf+acH2lAp9kwpSxyAso06UlMYtNmeprJIL0XWdnmfe51BGVYxQ1+peBktGbrqsbH2vKlcBMLqI4Mve86ppMpjzz2GA8+9EAEjdB3VRWdoBE0mypEIXvJsRfnpY7rpaprqroaCaeUrT/2dRk2J21KQh8NZRJq5wLzJjur8ETbqaKuFFUd5nzXOZ578VV++dd/mQtnd7Bdx7Xr+/yn773As69d4/bxmm6waGOYtBX3XznDr/3KN/jOH32Hs2fOp77USlEbg/cOL9tmncMomNQNtVGs1x2VGji70/L6qy9jfM/v/cavst00gA978D9ay/8Yhx8JkxxJFKIzJi1cuNDwc1/9FJ6K7/6d49YHPXb1AUYNNHqgjUKuqTVVHXK5aoLQCEx6CHj4T1X/u/UQjO+xno5RLjJFhdUueBFjMgjnXLCpOkdlPDGaPQCGDaaByrmwFVGBokmB7oL8WXkzUQ2WqpDRExonvDYK0CPwE+aZWKiAiQAqeQFmTVOAWqe/7zm68tkpp5QsdsyMyepmeHe0oEeAl9qVWZJnDBxZTY+AFR12IUe4T+aNEhju5SAqf5ftLreJbto3N9t91+tSLPakGYR2Ou6+lTUfY+2gBNRNU0X5rL54P9w3sKjBuWRXTTZZk6MmlgvLoOLmFZfNLUqFcLzJZMIDDz7AmYuWRx9/nHPnzlJVhsFZhn7ITNrHwnimANVIK2XOmqrKiZg3ngGykLMS7B/fk2qpRFurVGsNqkTYdCOJpYMN1VPXOu7oMtTashw8P3rxKj/7lZ/hkfvOs14vuX17zl9/73n+8ZX3uX3UseyHYENt6gCov/xNvvPHf8r5M+fSvZT34Tm1ThsbeqvQvU9+kHW3xnvHVlvz7AvPsrcz4+tf+gpNVcXJcYpz9h5zajQ7Riw1dHz4LYQoDkbECKMck1pz/nzFV37+YWy35kd/f8zhbYuzt2kNNDGRjNE6kALrsAwx6Xv4Cdmz7t7qe4Nq16dBD50W6zppouHbBHuqLthkFQDV+yKJhanA+VGJC6OCp1R5hVUWzCZz8Xiv6PuBfrDR6B2W6WZi6ZQsJB5J2m8srpEtrmCvPt5XVGPIdlQ2AEIOCbH6qAmRfFkJj0+yRLzY0ciCoTArZLWmZJHhfefDLhrnM8MKS7hQhwvGuclSN5nr3XZZldfZvOaJZz4FJMrXorGUJoh8XslaisDv4tryHVcCXz7hZP8W3xu/H14bY3DesVjMcbVmtjWLpUVUijOd1Ibt7R2+9rWvMWiD9Qp0yIgP0K9DbTVpi5ZMUMpjRTiQK9jWMVNV6kuyrVQYvWgkWqno7Mn7Q6QiRYhDzWw6ODV1AlQdY2erWlErhfUVP33xZZ548km+8LknWS+PODhc8Lf/+AI/ePldbs0HjldraqNomppLF3f5xW99lT/5oz/hwtkLWdB7cZiSomhkI4RBgzYcLxagQCvPs8/9mIfuu8KXPvs0JgKfz06Gux53E9yban+c8Zm8lPM9rkHlDVo7msZz9pznC196gPntL/DSs0esl0tqNWB0zI1gwakQk+89eO2Shqzyk5963BNU58tlVGfy7qMqSiBjNNY4rLEhH2RlwgJwIQbMGINzJmyrq5s4GME+NSSQVtE5RWqmijYZhcc76PuOruvpErhmT7AslFGezYLBpM69h1QZhWOl33cf62RK+CjJSQZqsfdlxhw9tAVolWVK0n0E4IvPTjC72FYVGaoIiDKG9m7lqOVzudfI5JFoprBm0vl3A+SR+uqjWUPaWfbXBpPO1wCJV85/q9E1TxuLsaOCWJIkO8u8j4CligoDG/E6WivcYDmYH7Gzt4upKyoVNolMJxN2d7aYTqds7Xa8c/0GDz74EKvVin69RCuDax1N09D3fQRCEBut8qQcEcFMEDKlCZGyXra6RjB1Di/liaIACusjhCuKYyrlJI5hcsr7WEBQtsNG1T8KBq80z770BucvXuJbX/sSQ7fiYD7w3R++yveff5vb84H58SrYjOuKSxf3+NY3fi6o/LvnGIYBSbKdNMPYt4N1dJH84D3degVKMdieF577EZ9/+imeeOSRIDwA48McGzSjcLDThPDmcZqGk2faSA0ksVevQhIVr9DKU9eK85danvr8I9y6cZ0P3/kA5Tq0X+OsxRJyqjrtUE5HwSE293uTqXuC6vGqy2CaApjD66YyWBN/Ko2zNpSUMBYTQ5+cs7iqKhJ+iGFb47TBaYPVIYA6Yb+Xzgzsd7Vas16vWa87+mFInapjp53o4NPeIwzkptc4ZcgS4C3UfyVgJcgSkUvY7cdSWeDU88QskGsFZWfGafbL8nsq3r9kdnKugFrZutPsp+laG0weSMXTgq0/XNtJUKa6+/VSn8eHTrbJBJ4kwJZjHHEQHJS5ZlgADVB3XWgCqJs2Y4rX/pSejE05waabpuHdt9/g/KUL1G0LdUNVVbSTSaiNtLXFdBvm/cBrr7/GM08/jesnLBcrfO2p65rlcknXrYMqLv3iFdYOYUefLqr4uryzS7Q6eXpX2kqJAi+GJp3I/x5jryuk9pUKCV3iPv/aKBSGl95+H6c13/7Vb2HUwNFqzQ9+/Cr/8OxVbh8OHB0tUcrT1jVnzu/x9a99me/88Xc4d/ZCcEQplfbyS3Js70NUUNcP9NaDDlUMqqpi/84drl59la/+7Jd44NKF4JUP+97xhHhUCZ+81zhvzrN7/X1ypIUZEMKQbGSseOrWc+7KNvc/8jCH11+mWx7gVaiH51SsPivVV0WIxB18p5EqOe4JqotlH/czR5uMVrGkrsY5E72chtqGNGHeelzlMZGt1pVJmXLC2Gu0slSVDTZSO+CH0M82LsSQii/YXgc7sF6tWa7WLLo1a+tiQqtsP1VKhR0mRSfLZye6tgCS0B6VOqlkVHL9zIBVSpAyZkYbu52Ke8gZaVeaL9uU75GvGscpsWSfQT2qd8mUEzcvSL4E2c6WzQShC4NqXMhWP34W6ZMAdiH7fHpP5XAxObdEp9PUf6XUKCnyaeYGeV7vs5lGtihLH2TZtmFTLQRA6dyRL4vQLFmthxSKNRYiIeTHEjpWAVtbWxwdLbhzZ5/p1oy2bUNfaYXSFVXd0laGBx+8n+VqzcsvvczTzzzDTtNwdHhIpSqm0xatwQ5DdC75qCrraKrRWTNJQOIiQ8+7xaoY+WHL6qiiekaWqlFIrS6Np6mCxqiVplYu5E/VwR781vs3uXn7kH/3+7/DtNIcL9b86PmrfPenr3HzoOfgcAFK0zSGc2e2+MqXn+E7f/SnXLl0OSxHgnnKO5sTLHlP7zzrwTIMMfWh0rQV3Nz/kLfeeI1vfu3nuXTubC6qWYiKRFg25sdH209lThdzE9F+orpcfO6J3nqf55MnVANopw1nLp6hmZxntXgd5QaQiBAfylt755NWcG8QD8c9QXW16mLMW8wEXkkQvsYOFZUZqCvDYAy2qrCupnKOyjpcjAYQtSXYdkJgtEubBuKPjTkjRQq4EBO47iKgrtdpaxuovMe5YKUlgzRRPZEBKoGi/E7SDTfez6xrrCq7YqGixiz0NPuimBJOtFXU4xL4SwAiq4rOu1ACIoJMyilK3DgQMtrm+wvGCruW6npCIuM5J9qhVbpviCjIu3c223q312U/lCxw00wg4uS0aqxiH8smgFNU/g1Twma+gpRYXTy2cR6W7CKYJsLcMCZUtphNp2xvbfPeO+9y7txZpu001qyy9HHLaGMatre2efozn+GNt9/h2Wef5emnn2bvzBn27+yj4iYVRQhtss5FU0oOs0sONdFYUoIUEMYmGkPu38InoKKQ1sJYg1NMVwadqpIaKu3BVFy/fcTrb73NH/7+v+X8mR3WyyU/fuF1/vYHL/HB/prbh0dYr2ialjN7LT/75c/yH//i3/Pg/Q+meTZaJ2HwGKyjjz9DCn3sefv999m/+QG/9ou/yJmtmG0r4WcZ2e0/0q56TxBTIwNT6qcT+qEH7yPLBgZcLKGj6K3Fssb7JW7ocn5oH3w6Co/XbnTJjwLWe4LquhtibKiisorBWmpjsNZQG4etTEiWoGMjvafxFeV2Zas1VquUWNeKmWADVAObUzhCxitrB5brjvmqY7la03V9WjySaLhkpYm96iz/gjaaF7MAFZDZrVJ5smx2VgRWFy4wGjYKpnkqcGwCj88M6m7npdsowkRGi2xI7DX8LyepMaAi380vRMKG0LTIep0OFVelL9TY0eWkn+6mdm+w1NFznKJWl68TqIjGceL55bxxf93t991APfd7oL4nTAA+BKuW7L6pKh568EF++OMfcuODD5lOpjRNQ9d3rLs166Gn8S11W9O0Uz795JMYbfjpT37CZz/3DOcvXuDD96/Tp4z8oURI2Pl0kkWfZke31kVTVTG/EU0hfC9sppG+8VQxnaUyigqoYxVToz378xXPvvAqv/Pbv8H9Vy6yXi346UtX+avvvcS12x23Dpb0HtqmZm93wpe+8Gn+8s/+hEcfejT0jXV5I40Kwl05cDasOEmaEuah5513rzKs5vz6L3yLvekkC3FK/ijzn1OP00Dr5DiTADVNvdHaiu/F10HAOgarWA+OZddzdNxx48Yx77z1Nod33sa7JdbblMDaB7tM3r2Umn8Sysvj3t7/YQheeq1wRmFcyKFqjcNqTW09w2BD5u64+wrn8XVUO5SmtxZjdZgsRZZ1KQestcuqadyk4LxjPXQs12uW6zXrfqCPoSQmehoVKmWJDzbWcA0dd02NGE9E2aBaFeAqo6HGVVFlRBLoyu8N5ioDebffsqijgD4BppsAkBxbAttCdCOQiqBQEtcX30+C4hSA2szCL2zVO1CmEDj4WKeHdK3T1G75vQkISY3nZN+cOBR3ZcGbQqe8xmn3LPNEbDJkCDzdnWCH2dFZArfScP7CebanM954/U3OnjlL0zbUbc1ytWKyWtG2E0ztaGrN9taMZ55+mjN7e7z8yitcvnKFy/fdx5tvvEHfddR1YI6yqMu+HNf98rFCQWyHy7vCxHmoCURAsk/hgxOrjtmmjA7LxxhDqIKiOO4cP3r2BX7pF77Gpx97iPliwUuvvcVf/f2zvH1jzu2DY/qho6lbdnamfO6zj/Pv//xPeerxTwc/SFzTIVdGsHlb2TmpYqYwaaP2XHvnLdSw4td/4ZtsN01mqGV+hnuh0WlT5VSAJV3oVKEcx1fMFFLcsR96loPleOk5OFhy89pN3njxJd587h9ZL69hWBXaQ7iDJgoRPLKlUtbp3Y6PLPznlcdEz5nTGht3UVkdgLKuY+BvNLjLTpVBGyoTJ5QXrCpyBSQTgI8JFAAVALWzlnW/ZrkOwLru+lDkUHY0RJui0pntBNVonPvTU0hYH7MvSZIMUbUgeTRlQGRwNqMG7saqNl+X7ymdF/DmdU61HRXfC4AcVBBRdDzF5PRBB5SSN+H7Wa091SQBsXJnCNLO9uWiEuwGGJ9g1IVqvgmCpf2yfMbyb7nX3c5JfRcXjwjBTeHhCxYqAswW2Y/u2r+M2Z/3PpbpUUxnUx5+5FGe/elPeeedd2lnE6q4UypURm2p6gpjKmrT0rYNjzzyCOfPn+fVV1/j+gcf0k6m3L51i+3tKVVV2LWLvhUHFSqw0lIYRFmRVW3CtNSI5uHBkf0cKmzHrLRGG1DG01n40U9f5rOf/Rw/88XPsFrMefHlN/ibf3yZ198/5M7hnHXXUdUVuzszPvPEw/yHv/gTvvDM5zC+wnuLN3rUc9aFSgiDczHFn6cyhsGtefvqK2xPGr7+c19PYWZCllxkdx83QcrHsVtuniHameCM9SGX62AdXT/QdT3LbuDweMHNG7d5+/WrvPPiS9x++yrd0R1QCwbfodEoFWvyQXKuiaPde581ubsc905SjSyUkDkKJ3sKfJrQMtgGhdMWa3UoTzEMVFUwFYjNKANrZLzWhmqVEhztHM4NrIYhstSOru8ZYiKXoPrH5CJFuj+dfmd1WUBmBBSJtsYUYD6D6+ZgikqcJNPdWNdGX21eR25Zfv+u6msCdRlIwiJKBof87/hVEc8Zv66USna5suUhmUtm+9Jusce6Mm1gbI4AlpR1iTp+Zq+6ePbimpv9IofEY0oc8SYInmYWKfuuzEcg8cSlZrB5nMaG80xITxSOquK++x7g+rX3efPNN9nZ26Gqq7ADKhaNTFnPlMKYECFwZu8MX/j8F3jn3ff48U9/wsHhIdootmaT0b0lR4YbYi7PQtsKbc8lfaQeUojoCHbhVErGqFAaSAcfglGhNIrRCovhpy+/wuX7LvHNr/0s6+WKZ19+g7//8Su8+vZN9o86Fqse07Rsz6Y89qn7+cu/+EO+/PkvUKs62m3HQUreubA1XGm8t6G0tDb0buCN11/h/O4WP/vFz9HqKvWm9LL2+fVo/n4M8Dxt/ClGrxzuxEod9Nay6i2L5Zr5Ysnh/hHvv/ce71x9jfffep396+9gF0coa6NPJ9QhC+FdA7KXbhAVF/exMAA+ElRTKpHc+OK6gSyNA7RLA7xI5ACkJHZq44N4p3E2VmzVISN4N/Ssup5l17Hqwt5j70m5BpSGShuUIQX9S6JqLeFZSjL6+7S9MPyECW29x+mYkVz4X9ywULK7Mts86iRYbB6q+C19U0LgJmikKxUAK8w5X0TItS/uUbLHcf8nRitvRh1mxDh9UP+9LtIsnvpc4kg4PdB/dI/42+GTpSSzTVBxw2hYZFI6JX95k82PzQ2bwindIJlo7maS8cV7I8EWf2shCypoZlopZrMJjz/+GAc/OuCN164ynUzG8ZnxXs7BdKowlaZuWuqq4fFPPYbRmv/0d/+Zg4Mj6jqUolYqlEcO8z5IK4VKambYYQbK5+3HWsX8FtLWyNwVxB1LxdxXYLRF6ZbXrr6H9Ypf+eVv0K+XvPLa23z/uau8/PZNDuYd88Waup3QTmseeuAyf/yHv89XfuZn0d6Q1PSo8ThciD0v1H9D8KnMh45XX32Z+y6c44tPP4Uxca5Er5REp0gEkFeF0ziO98kRGc+/8MlY/Ak0R6NV1IYd3oXKAovOcbxYc+fOIR9ev847b73Oe2+/ye3r77Lav4VbH6OGAW8dgwspDaVApHcWFQHUq+ykEzON9M29jo9kqlmpDP9ppVM9HmGIgearxGzki2ES5gntiAmDI/tNWa28ww4hCHo1BEBd9j2rIZRtUDFyQCkSU9VaB2+njruz4iYFua9k7ZGoTRfVZecdvXNRNbBpl5eLZTXSYEdG55J9K9cCuhuTOu29AKzj8KSkNhudwKw0PYQ3ymswGkdVnrLJAnFpsqbJ6HObvfd4K6BWbDCIbRhVMZVJBcSd5vd+3vinS98v8DYxYClrXjAOaeYGeG/2s4xPyMVZJj/xJ8Lq5Lck/ZDz5P3UpV4WqY87fTy+Upy/cJ5HH36E1157jbeuvknT1CmjWHa6umRXRCmaasJk0vCpTz3MnYPP8fff/S6r1QQzM3GNBNYjJpxMVDzoyLqVp4qmH5WeRfI3qbgG4o4p5fI8N6B0zbUbd7h+8wZ/8Pu/g+97XnnzPf7xhau8+MZ1DhYDh/OOqq6ZTmquXD7P7//b3+JbX/8m2leBbGCjlhfBKkbieDfQ2QHvoKlrutWS119/iQcuX+TzTz5JrQriFYFHkR65mL++mOZCOmQusHGNgqgU3wnnxbHAYr3CWuh6x/Fxx83bB1x9/SqvvfwC7797lePb1+lXRzB0qMGCt8FuPeQk4KlaQYy/hQhpSct2SfCPn+fkcU9QjZWEMqDq8ifv1AgsUo22iwakj1I4TjxPKMsivRXjgLHO4vD0dmDVB6ba90NM2hGvrUJyAxMrUxqtU72pSpeAq6N9VQLhGQ2W9Q4TQ0B6axjsEDzfLmynS4lbCrufUqKOBaaSArU3QKWcDx+lKohKNY5X3WCUFIJp9OUIwJs6bPrYp1paItEFWMvQI+993BWRv1uGJ6X7x7b6IunKvZxL44f0sR0hhlXGxPniPk44sQI9vka4djTrpOf2BXCrsUax2Q8wyv6UnntDQJZOKxQ0k5pHHn2Yo+NDPrj+AdPZNKR78wrbD/R9z2q1ZrVas7u3x9ZWz2TSUxlD3/ccHR0B0Pd2lBhHdKP0bN7HMLnwT9rhJyYBRJDkSJewHoaYsjDsEDJVxcHC8uJrV/nN3/5XtI3m9dff5PlXP+CF1z/geOnYP1qFrP3TiiuXz/E7v/ltfvPXfp1JVUc2FjSNXraUe/CDY4i7pCyeummYD2tevvoyj1y5wmceeywW8MtjXWpl5Rw67UgMsDxUJgRKUXxecFTlcE5jfYhKWqzggw+Pef3V13jhRz/k7bdfYX54naE7QvsB7YMZwjkHzuKDgbjQpCNwFhqNJzvWBaukFdzjme4JqkkyykDqLCmD+mECoKYqpSHprTK5oF5geGXaOhUcJUFfwSkxflu6fmDd93R2CHFvOpeFlXsG43ysTW7kPYPUMDdK53AUpVJWKZkk1iuM1fTWo1SWUioCavjtUnvzwEMIR7p7p26aCsLLu5yXmIpPAH638+U7o0Tc3DusI4EjY5NGYs4la9tYAKWXvQSduwGuJHMpbbHSBhCTRMHIi/uOBIjOjoZx32f7grDLBIjx07IvRqw8nl/em2LhyPvjZwqlV6bbMx5/4nHW6xXvvf0Ok7bFaBNiNIeBbt2xWq1YrZfs7e4ynU7Aw4svvcL/53/6n/nUo5/CO7Cx8GJpt073JmsyAhmR16ZSKCXLCxto5HeF0Z6qVgwWfvzcC3ztq1/hyrkzXH3jLV556wbPX32fow4O5h2YmratOH9ui1/9pW/yb37zN5m1kwjsoQ1ijxycFRdKqEUXQX61XvHy1Ze5//JFnnrkU4FVi6CVgbi3djw6Tjor87OOfBzp3cBSHTB4Sz8ojo4cV19/lx987/u88tIPOb59DTd0KDtgXAZo52zYxTbYDKgu7O1PSctFq44AayOw5qxqbLTz5PER6r8UVZP8ork0SWUCiJr4OxfYE7aq0p0TwCkVQVjHwnse63qs8/TORkANahXKh51cUlLaKKqY0KWKYFtVgSVXBVsOBf7UaKEm6ebCQjfWYiwoZVEq2GEGZ4Od1To8GuVyJ47AIu5kkUV9N2C7qykgTSJGau9mFii5xibAiLqUogA4yRA3AXHzGmOgHYPs3dpeAuVpbDqxsFKlPeU4jVGWBfa0MSfan18TWYUbRWa4uIWyPDcJ9Y37bW44kHkpGaAg7/TSRnPm7B5PPPEELz7/fDAD1A1cuphMAP3Q03cdq8Wcpq44ns/5H//H/xumauPc1YVwETI3NgfpuHCV0aksdUg5F5aQNnGDvC+0MUzMTWBBK55/7jUee+wRPv/0E7z3znu88fYtnn39BjcXA4fzsFtq0hjOnNniV37h6/zR7/8eZ7a3ohMJvHdY6+mdi0X6Yv5kFdig5Gh9/eqrPHjlMk8+8giVUnilAuBCmpv/lOM04V4e5bRyHqxTdL3i9v6Kn/zwFb77N/8rN6+/jO0OUb5DizYSzQQ+FKYKznDrw+5P64PT0LukzUjVEhvLlg8FwKpRS/7JTDX8mx1A4WGl5o4YyJM3WQU1vVR/VVTdR5VNTdgKYnE46+itpbeO9TAEVQNPHRmoqfTI1FCZUD42mB3ytlmjA/AGUB2HSJWg6Gzc5aUcYNJzYcWuIh3nInMt12UhTTe03NMmAoyB4bS/S1A8MZGEYRWJlhOrUWLLlgaFhiQ1mRzLKnbtErgT63Q+ObJGwOuzKuqjiqrv1r6STRXyZ7PfpI9KMpMA1Ye4y7gPeaM/cljVZj8mtlr8PWrbKRqA2MZLG/EmgGutsThMU3Ph0kUeXz/Oa6++xtVXXwPvOXfpAoO1oUBf19MvF4DlxZde4/q1m/z8174a7Z6E2O3CJidFB4G4H45kFlFBpAemqiXHL7F4ZayFRVD5tXGYquaVq29StS2/+M2vcXB4wMtvfchzr7/P7eOOxWpgsJ66rtjdm/DNr36JP/ujf8f53TMJ2qWUkfMWb23QOvDUusI6z9r11AreeedNHrz/Mk889HBW+eNYhrl2bw3to47svCwga0QGQu5V62DZOW7dXPDd//wjvvf3f8P88E20XWC8x3uD90PYSMSAioyUUTinDREN8cd6mffizA5mGyvqf9SHPkqjhI/jqFL5typCScQZRALVcodRoRoSz5Xy0DGHpPUOPwRpn51GMURLhwS/woBNTLIrGXcqE3K6hmS/kkVLKqZuhFohUjACkw4JgpUNButQacBHV0CUbFpU6yC9xx0odrcwAcQUsKnKjibKKa83j1JNDS/LkKsMEHKGPJtkXdpUvZUi7lmOQJxo0hiYwIM/WZ/qRDvIAFU+i0j3076TW1tsHiDybE8KLhfZEN47GWcqwjqzZBc9sz71BTCKUR0/I6Pxkft6pU4w1/A84hoKP1VtuHzfffR9z9tvvsXV119n3fecvXCOdjKhq2u6SrNezvnhD37IA/c/xPnzF2nbOmyBTWaH8E8SirK2UKmUND4LOCmLEkrBqKgJGoyCygxUteL6h7e4s7/k3/zeb2EUvPLmdZ5940OuH8xZrTu6dU9Vt+xstfzMl57iL/7kD7h89hzaa3ygNURxlrJaZVao6PqORiveee9tLl+8wOMPPRhz0oZ5qXwIp/TKj22O/9RDld8fzwPvZfu648bNFX//dz/ke//lr1nN30P7BS7+p3zY9u6kz320XbtA4mzUMrChiKlzcZOAxA/HuSSA6qyLc1TCqkoWcfL4CFDNC1vsk6IqZeDK+SzFwK5VtLtqg6oMVVtRtRV1U6GMCslT8OlhBhceTqlgEzVl4lsTw0UEIAtbooAlKgZ/eBXCQiCmRwvnBWYio+VROhg2tNcY76m1Cls4tY4DZxPzlsz6Jwzq/mQkQM6CNT7XkcO1hIVFLknmoKRvSphM+Z4cpVNF4mjlTF2cK7a6LNxE9SyYpY/OIQETH8NfdGTBEueaCWSi6eJgEiBIgKXYAJHcG8LQdLxoMhu4rAX5URdnIZBrkMYx3GCvFrFBykIswTJfM4FoVOvGYB0Xb0xqrQnAizE00wkPPPwQvre89957vPPGGyyOjzh/8QKTrRnWVLz95ltoZXjqM4+zNZtQV3EuJnnn03XDmIScGKLmG2IMMQ5FhZR5VmhUdLRoFRJDN1XN0bLnxatX+Z3f/i3O7+3w2tV3eO6lt3n/wyPWVrFY9hhTM5tVfPaZR/jLP/1THrryICqhTexbAR4dxi/0CSy7gaY2vHftHS6dO8NjDz8YozZk/pCuoaSc8IZ1564+hXseWUOR385rBgfd0HHnjuUn33uJH3//u3SrD9CsgtAhtMFHfJGk5j7Oz+Cb8rjBRc9/CKu0Ub13AryuCAGNpgBZ72kRbT5ocdxb/Vdlp2TWl0FWj5lhZLJGVyGDVWVomorptGE6bamaKhXfs4mKR4nAOLhfQqREPS/Zi/Me7YVlZKXJRHYkJW59VJvyghYsGe/8SW3HRy9hjo+UuZMWRqnSFgv4o11H8VsutyMAUmYoYV4W/K545nB+YXcdqUXhcAKwqa1iZI9sSHZSJSCVLwYgkZ1O3vro4JOxleeVPLCxfX7MBMUxltoo/STVCeJ3RMtzxXch7mxLz5s7PL1XbugolffYjyhxsm2OVdH/hQAhgtrm+ydUPBWC6yfTKQ888jAYzQfXr3Pn5m0WR8dMt2YoFMfHc77yc1/hypVLKB18BiFovLi/CLP4PKJJiBktaX3Ohg7TISl7WFceYxxVZegH+OELL/P1b3ydhx+4wo3b+/zDT17ijWvX6ZzhaL4CUzOd1jz+6AP85Xf+hMcfebTYxi7mh8AyVQKLWL7FO3Sl+OD6B5w7u8fDDzwQiM1Ywo/6Vo1p5j/pOKlphDZ5D4MdODpwPP/cm/zoR//AcnkTZfq4pqJALuZkuSJFowrb5YPqb6PdODHS6KB28TzvQ+RDcGK5DW3tnwiq4/LOBZgqEoDqOOjitKqNoW0aJpOW6bRla2vKZNZStXUoXaEizZbaU9FIPMo4H609zjuUU6MYxBCgHZiJ9wrvNDHAMMTYeY92RbSCy6qlDJeLgCI/KJXWJXFiOxW3D8o1NjozgFfBSO8ifUcsdPOcQsVPLFGY5YYKLFc7cZeCYZUml8Qo4/tJysZrSpb4kS2RHMYjnE0ATkf33Oj+G41xMUv6prlEgEPMJaUgSAIz2o29zt+TfA4JsH0UYMkkchIQg8PLF3c/2feZSXuGIkfvph32xPla0WxPefDRh5lMJ9z84EPm8zlHdw6Ybm/z9Oc/x+X7HwBTJXuddw6ncwLq1B9J8yILb+9johkf7LCAw6B0iEoxGupKo3XFD19+lQceeoTPP/0ZuuWaH/z0ZZ574zrzAY4Xa7yqaCaahx68wJ//8R/w+aeephKhNdL2fNqMYGOblQrr9NatD9jbnvHgffcFoIga3z/FXloem7bxzfc2zg5JsJ1nvXK8ffU2P/7hTzk8ehell2hvgylI6bTdvRxf4pwRwAzRGHHjj4+g6gPZkeoiLmoxzoYtuWk+eTEK3fu4J6hWqYZOZlZSWTJIeVJIU1UZ6rqiqWvaSctk0jLbmjLbmlA3NUrrGEQcHq53Q1LFRsXOXGZDWge1Iu7ryEZ7D06H6AClAqXXUYWLuR+KiRu/k1RLmUSB3g+xg52XHS0ylMLqMlMaLzY1SqO32dleQDpeS6kxmOQThaWNeW65937TQTT+uk8rU8zpUmYjDRzjSVs6i9JrAZSkeeXJLmDg4qIvw4PKa0uijbF9N9qzI0MTdiP9XNqOQ6A1iZE68hiGocsqvdyjDP9yKtpLk7QsNiKU7fRE84FPAmZzfEthU/adMQY1nXDxymVm21scHR7hvefCxUucuXAetI5MKGhhynu8DbXsw7V80jhC72STUbhPDP3DxfDAYB6oFNRaU+ma1999n6Ou4ze+8mW0t/zk1Tf5/nNvcGdhWa9DSrtJXXH50jZ/8G9+i2985edotJY0UWHNJHXWJYh1Ymv2jhu3bzBpax6670o0vcUZ8/8loG4e9/QzxOFwHoYB9m87fvKjl7h96w3wS0Iyv7DgvXapD5N5LFGDrK1u/ljncxyu5CMhkDfrs63Vy9Y3MWaNKPv4uCeoTpom9aNSGqPC3mKjVPwdBruqNE1T0TQ1k8mErdmU2daUre0pTVOBDo0MNcJdcEpJmIkOGXZ0rKmgTUwerEB7jdYe61XYPaI1SmmUdlgHSkndGFC2iDBAxYQUaeQIyn2Y1LL3PAT8qmg7Ccy3BEeffjbiNomsTi4/+lb+XjYN+cTS2Dg3nRYB54SzqwCidH9pS7yxAGQuFUK6n1Y6LpRxeNWILUKqfJDKqBS2szLkSq5Vgmro4lPaGOdeyvCDL+5fPn8MZfEOY6qQJk9C4cT+gx6plmFjSAbWUb9Thn5JeyMrK7pTWK+Nu2jG6t3JI9nOtaZqG7arPaa7OyilaJoJFo8d+jwOkSX5IIlEeQibPopNKnmaSnhbDIaOuxcrDZVWVFXLrf1jXnj1Tb76za+xO5vwyuvv8L/8w7O8f3vJenAMfUhheO7sjN/9zV/j27/8S7Smytf0Pq0D5Yt4TJsLSt66fYvGGB6+/36MMmnb6T83oH6cQ8Cw6+Hqazd59703sO4WSkkglwbl8jQBFLJTUYddnD7Ik1BrVkL/IqjGuZycVWRAtQkjQjSWuC/vHkgZjnuD6rQlee9VAFEpJCYhT3Ud1P22aWgnQd3f3pqxtT2jbSvQimEI9aXW6yHE9VkbQ6tM8Bz6WO5YK5QNdowA3CEeLSVM0QRVSGx9OntNlYs2KhdLttjYwaJ6Kp9sg+IwEFzI4RobbDRp0SXbIQOKGoPJaDIUTK+MSyxx+7RogfIIoJgB8DTnlRL9Ud7z2R5ZppuTrFcCHAJ6+SLymPL9gMrhUX1yniVA3mCq2Y61AUzKh5hfYUTiFOh7jo+Pg/rtPP3Q46ylrltAo+uKtp2wtbdL3bQxv+W4r8TbvwmqoT0ZUKWvR2aBwqQAPjr5ckq+1Pw098abdFWM1a6kvzWp3I8cEiQVVqUbmdDCbkWJ78yMWEoPKaUxaGqtqTWYynC87vnBT1/gyn33c25vh9uHx/z195/nzevHrLuBYbBoU7G92/CLv/AVfufbv8G0muARQC3mn4/2VBSDDSq/VrC/fxuj4YH778MokyX2qO/9xt///EcaN+exFo6PLVevvkfX78dKCnHMVHCiSp8FfCBoNVawVeMGIqBK3Kr0g+yaIhKsAKBWQDYMXTGnPzqxyj1Bdda2QeU3JgKqzt75qgoMta5oIqhOp5PAULcmTKcTlIbBWnrnWPV9yODf94DCGNAOvAnquol+RUmqHCoZkiW6IqSqMwrtdLKXyiQlOrWk/IscGnG0uKQiZ1Qb4WUCL8lPQDozzESZjyquFQowkUNMAdnRosasFaJjQFTcyJ42+l7Yq4cU6J5UffI9fHFeYpVkz39qX+wrcYaNG+TTNSkWeOqj0JGQ2iqUoADzdP94Mw/KO7QPxR6xA5XS2L5juVzQLRYYa9nb3ma5XHK4WKCspWNFZ0OWs95ads6c4eyF8wSgrZltbWPqOmS4ClI2m2eIi8uH98UpmD6LwiAxe2ezABIhEvtDbYztyMwgQBo7XSuFjdpP6HsTr+WzOcmLMIuRJ6WJRGeXinMWraCRWGwVYlIH5/nhsy+i2gkXzp8Hp/if/+77vPDmdeYLxzD0mKpmMqn42Z/5LH/0+7/L3mw3MjJx6GYhiTC1YQiDazRHBwc453nwgQfC1u84oDI9Nkb7/+eHtNU7xeGdJbdv3QJWgIn96iinojKyaSdUxEArvBXHasiulXOsBuC0LiRyEieWdfITwDSYCGK9Kh+0Kf8RrP2eoNo2dXQ+yR7/6JCqDE0VYvDqugqAOmmZTSa0s5bprMVUmsH2aT//YtWx6PuktnnvMFIywoetrCpuNRUnmPMu7DZR2UGmrEJrn0BCWEQCY+fS+eIlT4HV6qQam7omevwlJCjYVqJDK86s0lZX2lRO2FuTnhfQN4NOvJ/L4OV9BFlhLyqHSKU2lvZQYb0FyxQALr2vycu/cSRnWKEH5+iC7IQobZ2qvKI8vtwrqdI+MVFlB9zQ0y+XDF0X7N0ujKVpDG3Tsr23TV1XTKcTlsuWtq5YLTsW645WT/Des16tqJzn+MMbDDY4JA4nE2a7Z6gnU6rJhLqdBEemKtrlyzGRjirFaRSV5bgpYTCRARUMd+w0VHin4vnh+UO2s7zAwYtBOPV5EnRpHLNjUkqjOGvRSlHHbddGx0QpxvDyK29w684Rjz/1JH1v+f6PXuDZq+9xcNzRdxala0yl+MyTj/Dnf/gHXDl7MdHS4PmOAOWjrdDFqezAGDieH9MPax64/35qXSURS36M1PL/aocCfNhNtjge6FYrRJEXUhPwTQddKsanUo67UlHNzw5q6xyDDzGt1suOqhDWaT3RcRU3YKEi6EKaQ360qk8cH+moqquKpqqo6wpTmVCnqgoOqbqqI1OtgmNqOmEybdFGYX1gqMuuZ7HsWKzWDGIIJypcmqAWia3PhcB7pz061tl2LoKpyjkAJCmz1mNAK0Egb08FrQtbIzLRMnMokChKZh8B1SfnSWkaSEHrnGSqCaDiBTN2+YSzY4eJfJQtNXkyn/S0ngDaAhzl/vlRokqUNP30gCfAc/M48Z4QXp9tbz6CJQSxPj8+ZjmfM61rtidTjm/vc+3a+zTGsLM1ZWdnxtmts+zt7aA8TKcTnHP0faj+qJSmqWv6YWB7e4ut2YShH6jqir7vg0NBeea3buKUpp7M2D13lsnuLs5UIRwuNdjhvA3yC1WMiQCvJyUkEttrmgZZ6CjiglIyb6M3eAS0pEWe1nqaF2WYm0daKGF4SdtxPmmFkpio1p5aO96+fsBzr73J448/RuU9t+4c8PpbH3J7f8Wyh6ZuUAYeeuACf/rvfp9HH3owVikN7Q3zMJZq8TZogPGZnbesV2u61ZIHrtxHbcxoDv43PXw2+QS1PJCxsBtSCI8AXPmTjzTuRfxqsLO6FAGQ4lIR09Z480fAA5KglHPudnzENlUfgvCrUPSvrmvqpg5A2zTUTUXb1jSRqU6nLcbomBzFslitmS9XzFcrumGISYl1otvEh5WdVAqF8TqCq8Ypm3dxEb7jtI3xlMFuFqku4NPOqjAgYhYIyRIkhGg8Zhs9E9FH4M05h7dj4M5qZhzKAttkFEcsJC6mEvhLu2oZTnUaCdgEPTEBnAaGJ95TEpsKCVALBrvpvNq8xib79sTk39Zi+47j/X261YJKQ9u0rFcr7LqjqyuOlwvWR3O26pbZpGV7a8rFC+c4e/4szaRBK0Xf9Rzs77M4Pubg8JijwzndMKC0wrkerOPMmTNs7+xQ1zWrfgUe+s5yPF8yMKCGNb5boZsWVIVVJmscqZvD6tOoXO5FhaKKHuLOs2z3tmmssnCRaAqxy3qXzQ14h9Ymn3NKlEK6liJv7Y6LONQLKzKySWIgbdk/WvK9f3yWi/fdx2zasl6v+fDmPrf2V8wXHd7U6Mpw/vyM3/vX3+bLn3sGM8rCGrUln3cDyYYW5yzWO9brFVcuX6KpJLY2z5nTtJ3/moePcb5VZdCqDus6mmqSIzKcmI5Eroo+l8Mp0tyQdZmcWdGOKmzUx/F2BdYkk9I92vyR21Sj3E5MUcwAVR1CqNq2YTJpmEyDym+tpRs6FqsV8+Wa+TJk8LcuTjzx2BM37FiXHl5FWqAk+F5rdIx9TEHRnhSsHPJo6FTsL9TqDqYAis4URpgcNpzCxCCVVw6vC4kktrjUk8V304h6oSgBzNL1M5jKn5Erk5muUNZCzS/AbhTeg5Crk5ECHwWM6Xobzy1mk9OYsRxB4/Uo7+iWc66//Q6ro0NmbUu7M0UB2g7M2pqqMXjn2Nme0tYV21tTdvd2MJVmPj9kudJMJ1MqEzSgnd1tLl26SNeFsheyFW61XLFerTjcv03TNKgqzJvlYkm3XNFub9Mv59QaWu1xpmEwddwEoQj5nnJg9yZjHfVN0T/iEdfk7bs6qEUbQjQy2Tjupy40iWpJ3n8f50gZAx6iNOrKpNIotVGsBs9/+cfnmW5tcencHkYZ5us5+0fHHC1XOA91BTs7Db/8rZ/nX/3KL9GYCuWFdERl2Wehr5WOmZdCccLlYsHlixdo6nqj4f8SuKpP/VrVGqUqwprJ0SOqPJcMoir2uVV2036RNcK0rmM4YgRUiQJIDmxy/8lyd6cvE+Ajd1SptIDzezHsyYQ99HVdU7cN2misd3R24Hi55mix5Gi+DGr/YKOUH5cSds6nLaPS5JhwCI8PjixtUM7FYHxxWrm4LY7o7ROmGxZ+2NkzBjMfP5OcnsnuUoBf9ooXtlfxLBdU1BM6XTLhhHeVzIENfPQJa6EArbSAowkiCgwB5U0wLJ8ljYU8mB8zrZGTpVRjPUEzIHuzS9upeMTL9+V6Co/xnvXRETfee4+JhguXL1EbQ9+t8EPPzmzKmXNn2d3bwXnHwa198GGuTGcTprMZSgUTQrdeo7ymbVuapqGpalbLJQcHd1BKMZ1O2d3ZZphOQ9ISa+n6jr63bG9vs7O9w52DA87u7rJer7B4FsNAu3sGU7V4ZVARQFIITRwgVYxDGbUAJ/d/j/qjmFeSM0LFsc+CTsY8R22kyrhE4qCEuYYCfSoCqSR/V5E5/fj5V7k97/j85x5nWlV4NN3gma8GejfQVBV7Oy3f+Pkv8p0/+AN2JtvgQ0SDc0Nx/zBjpU0u2h4XiyMunb9AW9cjPppdef+tjxh1pGE6qanqBrU2oCq87xLZCWeGOS4bdhLoqrhbTZPmQXl9UCHhSkp6HcMsxUygZL0LwOfoobsd92aqSkWJqhP7SqFQJmxBbdpQo8cTqhUuVivmEVCPF0HtT80vJrLYM0Wa5gwCIC12+BiKQkriW0r4ACTZxqdVoaqrkwtHjpKRJpyKW68yg5STs8dYYiXT1ulTu6y854bNFllgKr0W5iSqWbrnvcak6KUU5B+/J4AsdkOPCKnYNj+eXKNwqGQvOpmKUHvP8viI+e3bNCpMnNt3bmOHgbau2NraCiyo67lz4ybrbo3WmqZpGYaeo6OB4+Ml1g4M0SEzmUyxdmB+fMze3i5t23LmzB5VVaG1ZrVasb9/SF03DIOlW3d47+m6Pi4WxdGdOyit2b99B+cc9cER7fYO7c4uZjILQffJZCPjMxZaJXvf9PiPHHZBZQrakVIFEJe6ZxyZxJZFOPkEqvn9cKqPTtFQVUOh0Lz17jVeePktPv3ZZ5hNp7RVhXUDShkGGwa1bWoefeh+/vQPf59Le+fA6yIKwYYkJ6PoE5/U1+VywdmzZ5i0baHsy4n/rZX+cCgV8h0Y5WlbE9q6MIRaSkpOiuSKEFZZ4pR3wbQiq7fQ9oq7JHbqKdYHWQNJy3L8tbse9wRVI6nGVAz6j7lNg021pm0b6sbglacfgg31YL7g8HjO0fEy1JeKjYm5ohPKO+dC6JMP1QC8zlYg7YPtTqLKnI0TX4WdVPiwM7Usiqe1Tg7X0LE+sYEMcBuqdAKgqJUVEz70YgSp1CMSKsTG+4VqHQdBIFIlgD5tFHy6DYBT2UOcWhEbpxCgjBF6AqaS2BkJOM+sPcy28WTQsR8FbMetEWGn01zyyoO3HN+6w/LwkGG14sNr1zHeM9ua4azDW0VVWZarW1S377C1PWVvb5dJ02JMhWoV/TAwny84OjrKALZ/yM7WNu1kCkpRTxrquuLo+IjBEjQcFEdHc5bLFd1gmbQtVd2wWM5Zr9ZMJlPOnj/LmbNnWRzNObhzwPvXrlNNJzzw6KfYPnuOQcarUO8k8N4VzFJ2oiUhKnM2mg6CoAnbpNGys4ywzz+OUdC+NLgYdeI9Sgevu1JBIoeMTmLnjI5aNBpLpTT7hyv+0/d+wt658+ztbVM1hnYyAe9o9peh6J6C6VTzxJMP8cCly+DLlII+SVIBf++DU8orz3q55MzuDtPpbHO2/Ys58loFFNStoZlU4GNhwchIGcL8RGp8aWLujgCKRims0ihlgCGNc9Y4hXjIQvEjn4fQrIggcf3du7/uDaqS/NkYqip6+5uKyXTCdGtKO21QGno7sFivOJwvODyaczRfsO76sPiVImSRCs2zEpyPDvlLY5IOfIj1C/MxPKAEZKdOhpTjFCTTlACTgFrsCJ9VrATn6dyS3EksoS7yghZMzudOL00AFMyydGLJ9aN1IjPeYhCykM2oFjJphfg6FVmOjU+vE9hTJGor2ERJVGXClR8UbCm9Xwg52dUfnlNqUfkA8t6yPp5j5wt22inXb91hZ2ubSdsCYIeeppnggaqqaeowV7yXMJ0htW1vb48LFy4AsF73zOdznHMMg2W97nAHh2gUfW9TlEfbNjHvq6W3A3cO92maCdPJBFt7bt68ya07t9nd3WFvZ5fZbMadwyNu73/I/uGcBx99hPOXLmHaFh+FhY9PLZLPxWUSMpuJip+BKbQ/qTQh1E/MT6pcYEX0iQLRonyc7y6SAXwIyyrz0AYWq1n3ju9+/yccHC157KmLkby0tNOWxlRMp/NAKoyhbSsuXDxPpetk2klmrdLEEeezV4rVcsnW1haz6YwxLfiXwU7Hh0/205CRLeu0SHFMRcrVgYqYYTQmOq+dG6crBVLYpFjvUmY1n30oMqybG4Lix/c87m1TTYAanVKThq2tGdvbM9ppA0bTu4FF13G8WHB0POfweMlq3RES34aGalHBBPhcyCSllIoadQZHqUvlvA9b+2JbJLs7aaLIvm49Cq1KdmAyyAWGIZNfgDBeRdi9ymp5CarpftLho2MMprnj4mChUKfM1M3zs4c5sG+RomKrcz4sTPG/xdiOeCMtdDy3KEkNn9iKT++RxiI5DIUFxz4KEy3Yn4f5MfMPbqAGy9I6JnWDajV937FYLkNUiB+AKpqBglPo8PCIrltT13VgtM7R9R2Lmx8yP1owny+YLxbU0XyEd5w7e4ZLFy9yeHjMYC1N0wCKuq7Y2t5iMtsCoO8HlosVtdGcO3sWlELHKhDduuPCuXOYumX/8Ji3X3+DbrXm8kMPUU0mCf+ct3E3X+g1pzy4XL6bKGji5EARPf8Sz6wdmJzAXZhwYDwO4RPEHYjaC9hmz7RHpVwKlVY4r3jx1Td46eo77JzZY2trRtu2TCaT8FM3bG9tZWdxVbG9s5Pmj1SkEBMQxHXjQ4TNer1mOpmwPdv6Fwigpx2iVQUcMRWySGJSJZWEVrL/yeaxyFrLCByQtUCODknkgngNkpM6tQFFyqmCELi7t/reTLWqMLWhqmvaSRMTpMyYzFp0rRmsZdV3HM/nHBzN2T88Zr7sIrsSFZvUmgR6ilGjxDsrkyPt2y6TikC2H0bQNdHpFfC28HhHlqgTgMpnY2ZJHCPBVyk6p9QGzysYaKkqpaskSjru6WyLzcdpXvtkgkh/BwaftibEiVVyCWFWrhhg6VchLcKkxnGtuZknogd87A/j8c4yLBbsv38dve4wWnH27Fkmk5Zbt2+zNdvh0sXzONtHh2VD0zT0/Zqu7zHacObMOYwxUfg59g+OOTo4pKkbzp45x96Zs0y3t9ja3mJ+eMTi+BjnHOcvnOfGzZvcvHUbrQxaG5bLFSiYTlrqumJ7e8p63dP3Fq9g3XeslovAfK1l0tRMmor5csGNa9eZbe1w/r4r2NjREpAvQyq1ijKXV3k4VZ4NYmcN7zuUrtDaFCvTB9NAXPjg8YMD2RkY51eY08IoQ/Lk4+MVP37uZRw1k9mUnd1dtra3adoJbRPys862ZrR1zXLog1Yh0SycnH+SuR4Ffd/TVDXbW9v5rH+WrNL/FQ6v6LsOGEKpJKtioU7ibkMJnwygGLPY4r3kAAmRS4nseJKtOQ0bwlgJ2ouXCN/42Wnn3eW4N6gaTV3XtNOWydaE6faUdqtF1xWDtyy7jqP5kv3DY/YPj1ks1zFYPysWSiSNylUvhTmObHtqvMg3WWcqxOc9OoJQWdxOkpp5CPEOOgPRCSYpnSPvJ4bBCHBGDPA00JQ2y5RW4+uq4t/QF2MgLd9X5b0oQHSsoWUWXtxfWG2I3lHRDhqkhRMBUVz/NDErwA7B5rhazDl49xr2eM500rC9u4euw9a/s2fPMD865OD2TabTKW3TMPQdi/lx4T3XLBYrxMk5WEvf93S9xbmO+eJDUNDsH3Dh4gXwnnU3cOPWHa5cuci660FpBus52t/HO2I13bC77+j4iL4LxenqySTUMasqlPeshwGtYW9nBnj6vuPDa9fYOrPLZG83hG2RA7yztl+EuMV+So7PjSnkvMPbsvppGCAXvZiDG8LWUaVo64raGJwKyda1hqauQjVgE0ICt9qG9drT9T5sAW8aZtvbTGdbVHWNriqIjr/ZdML+coFSIexsMzm0tNnFJCr90KO1Ymd7+54Zz/6lHYn1e4/3Fq09VaXphshCXdSyEt5kx3BaU0ntz3HqXmVbaoppVmKCK9ag33ydY9RPTIjiuCeoNk3NdBoyTs22t2hnE3Rj6P3Aat1xPF+wf3jEnYMj5osVzotRvKTaqng9duYoUbEK+CltkM4HG2NZ2VS+b+X8aBZIcZQqLDysxBT6BJj+LvNpNCgUahyhQX6jXZvHpk31tM9OY6jy/uZ3pd0xKBcxjQvU+khJJawsfyLOvXzvFD7kS/AmU1oKswDx/WFg//oHzO/ss1UHFXx//zBoEMREJt4zaRuWixX9EGygw2CpKhPyPsSM+lUVQu68D3kgvM8Zy/COfrXm9VdewzQ1Wzu79NZhbuyzu3cezwHH8wVKKawb4tZKRd22zKzjxvwW625ArzvWfUdVVTRty5m9PYahxw1LJpMGve45PjjkxgcfcmnaUikdmUgeYxiJvwSkeVx8mhfeRy+69rlYYHzerh+4fec23nvOXzjP3t4ZdrYmTJom1FjTIXdGU4eSQWKmqTy8d/0tuiEUHFRGY5qGdjJNdmqtFE3TsD2bwm2HtQN39vcLp28ed6nDNQwD3nl2d7YDc/bF0I95xL+4Q+ycQSuDqvKYKtutgSD4Rigib5daXnjhEZNhWC+SyjJFSBDOdaKZqKg1QuFpPxnRs3l8BKg2kaVOaWctutIMbmDd9RwdLzjYP+TO/hHH8yXW53unYJIEKGHAszQZA8nY5ldI3UKPFdlQXpcCF+R88VZn25jYyaIx4C6SOrE/YSpFe8WuEhudvuPleoW9smS/SbvShfAoBEq6Rvy+2nyeUumQBZH+CM+ae4ek7stELMddpk24zEnWmswyePY/vMH+BzfR1uLrhoPDI1CaxlTYYaCKJXJ0VTNtW5omAqdzzI/n9INleztsCFh3HcdHR2hj6PsBbeKOOm2oTIWZaC5crDk4PGQ+nzNpJ1z/8BaD/YD5/Ji6CvbU7Wob21uWqxX+wDObzjhz9hzduqfrB6qmZb5YcHRrn+VixYMP3MekbqjWHSu9Zliu6NdrGBzeqMRQ8mCOBaKHZH7aeJdYjySkg4sL36rgbHvr3XdwDi5cvEDXW27vH3B0dBiqYJgqJJlWUFeGtjKxnDs0yvD2+9exKKpoMnHeR59Gg67CPql20nD2zB7m3Xfw1nHjxoesuiX1ZDeNroSsS52lne3tUFo7ToByef3v5bDOonBUVSxGWXBGSeWZaVqhnSGpL3MM8ohsFEnJRNCI6UzWl6wjSenox4v0xHHvLFVbU2bbs6jyawY7sO57jo/CtsLbdw5ZLNdYR/JkFnkkUohUipuUQY8T+LRAcyFRqqDrqMzeEhak+DMtm1biqaGooFMqhc0EZ5grrzgC8pLl+cgApWOlHnoKiZFeVSrV9okjGx9aJfBTUGyJE9WcmCUq3ttnwFZJfYkDK4taq6JfAIKNLl2muLZkUJJaU3EEwjMqndQlERTe5yTNeM9qveLau+/ghp6dqmF//4Dj1QqnNLO64ezuNrtbW0z3tpg2dfDWDzZm0A9POp+vODpaRRnimW1N0c7ibMiK5JyjH4IjyuiKvh/Y2trCe0dVVTjnmDQ1jTZ4HzKYrZdrqsqwtb3Nuu+5c3DIpGlom5DNqfLQNBUXzp9BATc++IBhcChTo5Rl0jb49Yp+Pkdt72D1huNRtAMv0LmpfUSwkvXrsxNysAN9P3D9wxus+4GzZ8+GOG5TxeQoOpunYjyURhEybGnayqAdLFc9mFByyA6OVdcz+FAjaRjCVs3JbML9919i8uoEbTU3b97g1tEtdiZ7yM6gAMgW6wZ2tneozMfYOPkv9FAxBqjvLQ6LMR6jNFYZlLJ41zPOyK8oDDtRqyBVpRCM8p60aSgfOXyqaAB5NcvcUJtnjY579vbWzozZVovRGjsMrNcdx4sldw4OOTw4Zr5Y4lJcSFZFFULg/JiqbxybNlQoVHE1JpWb3nji5PYZubNqRmaekphYbLmb7DjnySw6VBaWsNUYpJ/YawTW5Dr6KJHvs6VGwpVS9ne18Vx36acoPkhMv3gOgchs9s19VIb8lOaXtHmisCF67zi6dYfFnUOUH9jeNmhj2NraAa/Ymk649OAD7N+6xfL2Ief3dpm0La53+FVPN/Q4ralMzapbxZ0tjsV8ifdRRUUFj3YTQmL6vmPoe2bbWxij6fuB+WLNarVK7Xcu2Bm16WnqgXbSMmumwZQw9FR1BYNla7rFdDZluVgwdMGJNV8t2JpOmM62aKYVrp8z2CmeajRw4hUWrgfjdH8Sv1seYrMb+oHbd+5wdHzM3tmzgKKuKmbTKZO2CXHeRqUE75VWIWqiqtCVoa0Nw7qPFYdDtY2htxwdHtNdHGiNifM8pNy8/74rnD93nsOjA5bLnrffeY+HLz6MIpRxUcDQD2zNZlSmuuv6u/uM+5dxZN7tWHce6/tQ/VULYcj2UDlyaJSk+PNF6aacnUvA0Y+4rdw44tkIYTdDq/6J6v90O6j8zlu6VcfR8YI7R8fcOTxmtVwTKhimVLxR7TwJommtl++V9lU4FVxTBvWNz9MCUEXgu1Lj3UWxPaVUkaTGo/hQ2V21AUajVMVFxyoVcxZEYEvysbDBIqoFvsDMMdBtCpzNOAFptZdnUCKswrVdcV5+Gh+vP9YMTls+GUxjKBqe9XLNO29dY7HsOLs1wSvN3plt+sGjlWdSV9y5/SFVbdBobt+6Q93WbE2nVHXDpKmwRmG8YbI1Zb1eY3sbkuwMA3Vdo7XBe0ff92ht6LoOXRmG3nL7zn4snAN1U+O8CyxLKZy1ESAUyoUg9qqq2N7aYzqdsF6tWK1XTNuaSm+xf+eA1XpNM2npUKwOjnn0zGVqA5XzrHHYHKOWBbzPo1HOz7SBZOwSxVnPfLFkf/+A2WyW+reqDJNJw9ZsShWLWRodyqsbHcIN68rEZNcaO1jato4lgwzeweH+Ec4GcapNjTYhmdG5cy2PfeoxfvT8s/hB8/Lrr/PzX/xZWhV016HrmU6m1Ka+x9LnxNr7l3colLLgYb20ON+F+WFU0l6z80nWYyAXAqiSI9VFO7jkQch253KM4239GEA315A/8fn4uCeobu/tMjjLYhF2Se3vH3H74Ihl1+NdjrdTED3y5XQbD1bJHoVVlp+NmNcJAB2zy7u9Lh9d6hvp9H42EIRr56z46fZSsSMCY6lQlGBOfEp5PS5aWN5fvl88a3ypN4HVk6MJNpxyKlL/lE3JR6eJloURN/mqfBMVox/yrQuRrqJsjnW58ODswPX33uX29Q+oa41DsdVOOD46Rlc1qtIcH6+hqjDOs721RdU29Hbg8HAOeo7SPiQ+8aYoIqcYhh6loOtgMglsrK3Cbiw9OLq+587+EcvVitlsQjtpQp9bh9c5u5K1Fucd08mMpqrxeJbLJVrBbNaytTWh7wcUnul0EkdO025Pscs1x4dHXN7dZTKpWXRrnDdj0PGp+9L8K+fhCbbiPauu4/atO5gYViaH0YZ2GjK3NVIlozIJUBVhl6JXCsnFOp0ErVBpg0JzcHDAuutQuzvUTciRUJuKdlbx2aef4tU338D2jjfffo+bB7e5/+wVhr6POY5buCek/u/j8D6k/Ds+OsLaJdb1oHwqnWQlrhRyuk7vY/05myqjJnAlpvUsu0arlHoRWVsU4w/IXPLefmSb7wmqO2cv0tuelYPDD25yc/+A1aofUV+xM0pDku4fPswNE+YWlWZJBKyKc3NHjifuiMVmxI4M3afckWWbBKhdAqNs401WSDUO8k9qdmQrqdZ9/EoSCOka4/ZmQTHmnaPYx3hko7ewpQ1pmLoy2z5HMaWpz9Vo7ZRX2fSxJMdWcU/vApu+c+M277zxDqu+QzGhrlr+N+r+K9a2JE/vxH4Rsdz2x1+X16etrCyTlZmV5bq6q6rJbnIwJFrkSBAgCBhB0Is0AvQiiAL0KulVgB4EvXBmNKTGcUj2kD3NbrZhtWFXVlZWmkp//b3nnnv82X6ZiNBDRKy99rk3bzWakNhamfvufbZZK1aYL76/z8uCdD6nOx8jY0VlLFGc0mp3mFcVMorJkthZ7JG0VAxpSqfbxXq94Ww2ZTg8cT7FCMqycGGm0wna62Kn+RxwbkZKKMppicWilGI6m7qIGS9RtNoZZeFYaxRHoA3z+YzBoIvEUhUFZZHT63YYDFYo51NWhjOuTkc8LBMmeU5scmIhmBtNiNhxm5ufmV5J//g8lDW4AlTaMBqNKLz6op6f1vldx5Gi026RxjGxWgAquE1PWIMREm00cVyw0u+RJQmVFSghmU4mTKczhJDIKCL2iWdUknDp0gWuX77MJzc+4/BwxIeffc76N9ZQUpL4aLdfdvz1ZajUG6mxgtmk4uRkj7wYY3RJqLclpfS5Z10lVYvLuxoqo1ZVqIen0Uaz8Dy1/v+FWxWEZCr+K17aDG5WixDgwP/+iuJ/knZIIoGOYg5ORpid/cUJ/YAYn/AEEco6i1ocD14IDv/8QhYLzwAjQq2eZRBZHuwFOwx/i8Z7ThReVjssXJIazNnaRuKWeujqc9SO+kEkCN0fWKP/fi1uN1QNC59a2/gmjzHy0LhwbikW25N57PtNeGy4hTV3z1Pnto1na5f7oKmLJoyH77UyL9i+e5/ZcIpBYYUkk4bzewd8d1RyudBYJRHWoJRiFh/zYTflg3Or5ElGJBWDecnX9veZn+nyoN9lYjTzIkcIp19UyuU5zYsSYwxJHCPiCKVarKsBRlvmszlFWaHSBGsN2mgkEZF3PQru8kjFeDInTSJ6vTatVoo2hm63TRxHTCZT5rOcKE7pa8P37+3w6u173Lhwlj+7eompsHTTmPm0qLe7wHAEgFz2b15IDGHSOUknn88Zjca0Oq1avxqmRllWGG1I4ogsiYm8waoZpAIGIxTKaMhKBv0eg26H49EMLBRFydHhIebyRVQUOV10miGTlHY34rvf/CY37tyhLDU/f/8Dnr98lSvnL1Hnbvjri5l/qcNaS1XC7u4Jxye7zGcjqrLA+LpmYQaHAIBQ/sQFgDhADWx1IbIbEM2V6hMpeaCyQbHWJHChPQ2V2l9Z/BdlhUr7DNa6XHlOMplMuX/zHrpqOtkuhGRrBdZHkzaBfPGnXUpGEsCpFpk9/QplRfwtL8Tv+uYgELSFZ4GtreQBnJaZxgKIQtE1v0E515VGW+t2N9UKYcE0qOsSEWzok933l0XH0zrWpWvgQwxF4zq+MbWov/hBzarCm4FRN53Qm/0b1DSLXRnvC2ERxnK4t89kOMFagdGWlrK8MBzyP9kf88KkQsvgK+gNAwiePYnZVDF/cb7NPFFcLud8++42o6OE3fPnwQoiAVWpacUJSaqotCVWEXHiajjJKCGOIiJdMpqXSCtIogIhYXVthSSOOTk+orIaaQWTSYHRUMxmREoyn2ms1hgjUDJmMh4TtxMGvS5SxJTG0lIR3dUW3LFELUF3JaOQgl4WczzPKbX0o6a9W6D0EcvaS1USg0T6EsgIx27LsuJkeOIs+VJihUYQO3KBA9UiL5xE4v1O8YECrgDgovAeVqFabXr9LhsbqwzHc1fZQsP+7gF5WRHFMUmSkbY6LrRXRbzwwnN8+cWX+OTWZxwdnvDRnc/Y3DxLP4lpem/+9cbWppKt+bcLWZ9NDbdu3WU03Scvp+iqwuoSa6s6haH7WaMsilkAamUMlXHPxgcSOEEk9I5Eek2+sG5MdN13vl11CJX1asOnmal+CahOjo5JSWltbrJx9hmuvzRjMpqw/2jf74R1IKgHD1XHp9c7v1/oTTA5baQ5JaUuszxr3WSsqakHthAptOQA3yBkgWUsobsDyUbkvGu7wCc2buhC7UJMFo3zhfM4BnwKWD1oBqB8kmN/8xTWs+y67afb6p9rl6fwnv/Fkq52qR8betnwjt/t6s3Qvz88OeHB/XveJxNiaehUOX/3RHMlr/iTfpt3V7pMUkUnTUlUyoX5mNcfPuK1+48ospgPr19kMJzQ0hUml+hijlARLR/iXAiv9hGSUhsi6dM9SkkUCeZ5iZKGfjtCiAQhBf12CxtLKNrMpyVFUaKM8Xk12xirEbGk0+kAgjKfYAvFZDKl1erR60VM8yl0Wuy+8h1mL11Hb60Tb64THQ2JBHTjlKPKLyhjQVikcZUHhC+N7hLMGISNUNaipaTCMp7mjKcFWdICXHJ0iQSrESIiLyum8ynzsqJlrMtBLIQTV+uYdOmrEUiESOn0Opw7u8ndezt1yPDx8ZCDoyOuXLrk/MazjDRNXU6FVsTf/OEPuPsP7zA8HvPpzbus9H7Bqy++QjtuLQHrX2/muiyVBWnYaNjZOWHvYJd5NaYoc8qqwhqNNRrjdaVGW7TBP2yjeJ/z1Q0qgOAJ4BhWKJnkkKB2q/TSoIfQWjWw5Nttl1fb6eOpoDo8OELMBWe7a7Q3B2xduMQz1/cZnpxQzcu6PLS7XkPU9uqBcOkaCBrRVaFtgUGx1K2L18Gqv2S0qmnXqXur79k80Qd2CcStj5tfBKIssX3RbH8DFJcNbM37xYNyEBKWXZeav2nqfMNMP22cax5fJGo4dqwadxXO1eiQJ64kR9utMRwcHJLPi1rvbGxJrFps5DnTWPDh5oCbz5wj67bYGQ9ptTscR5uYC1tcOpggL27R7bbpT3PAEinJ1vo6vSRC6gIlYrQVtKUh1ZrKSmZCUkQud4S2c+i1SbRB4ErlZEVFb1pQ2RJhKlSSkkQwWNlgdW2VOI6Yj2ZUpsAi6FuJqCwTUzKRMZP5lFYa004T2u2MfLCGfP0ZiAQ9oTAqJp9N2MhixtNjrInpFRUITWEF46SNwSCFxdoKrMJIJ/4nWtOa5hS7e6xQUZChjE9JifU8R1FWmuFsynxeYrqLvLnBR7hWFwhHTiIZ0+l0OHNmk26nxTTPcZtFyf17D3jlS19y7ldJQpa0nBO8lVy/epnXX32Vf/MXf86jB4d80ruJVPD1F75CSyXLhRr//+gwxlLklgf3HjGdn1CUUxclp126RFM5v+eQ36DygQ6lB9rAUgOwLiqlWrR1EZk+P44LCEDWBqxaSgz/BZYa3g+qtS84ngqqVT5nONwlHZwlW12lN1jn/JXLbN+7x/6DXReqt6CWS+ws/B3E7sCQFkfQLYonrv2Fi8vivAGMmve0JDQ8ycAlHj9n7apVf24XRoYgKn+Bsax5LMJnPWsUdY8vbwJL/bJ8vie9/qLrLXS34d69EGMXbW66m9VjEu711Ajkec7x4SGm0hR5jtGadtYmTltMoimrpeGMsNyyBmUEnTjh7GqfNMs4fuYMVSslyjo8oytW5i7Fn5KSlXaLLI0QNkNYSff4hLOffEZnZw9rFeOtdQ6uXmRnrcPMJig0UraQSnBmMmXz1l36O3uoqmI86HNy/To3Bxllq4XQ0BE5V+7eo7IVnXHO6t4QISwnnRZ7Vy9yeH6Tw2JKkmUMuj2y0YTBZx+gzm9x9NxVkkSyadtE77xP35bI4ZRLdx8ibcUkTbhz6QqfPLNBHsdIFFYYlIFOqXn+zl22bt0mGU+YJykfbZ1DyApsxXvnLzJJEidlYZhOc2aTKXqlh01Oj7GXGoTAZVqTZFnG+voqZ7bWuX3vgZeSBA8fPGR3f5/z5856AHYBDwLIkojvfvtbfPzZZ+zt7NHp9yjRSCV59blXSEWyWCx/bYG1uTbqV8xnhoODY/JijNZ5LXoboz1DXQbQAKKl8aJ/FYDVB0QYu3htrc9p68KVXdkZr3sN2OUfy4lVLL8EU58OqsZUzCczDh/usnr+HN3NFoO1dc5cOMfx3iHFvELW4Z/hoosF3ewvp/c7DRYNcfZpbKzxm8Acm4khwi8XmbGaSMpjc8n6DgUWURUhisAuEciFYegU+H1RW5/W9voemvfzBedcctBvtts6MG0y6WCtPsVvw49clNgT2jufzijnBUmkEHFMGsWs9fqU0xlvxRHXZiXfvr/PSlFwb2WN6NJZVLdPnLWwEUyrgqyYkamI2O/wkZKsdtrMswhhNasHQzb+9Z9z7s6DunaSvnWPk49usPLmV3j48rMMUwtINo+HXPuzt3jm1gNiE5Qzuxzd3iF95TqfvXgFmSWcOZny7FsfsDLLSYvKswqnkz65fZ+Hr73ML65fpOp0yRLFyu4Rz/63f8DB8xcpLpxjLhVnH+5w/nf+NS9EMd18TlJpP7kEh3cf0vvGK/zkuetoFWGlpVPNeP2D27z+zjsM5rkbOyt47eEOuZJUImKnv8qNtQ0iazEYJrOCo9GQjWKVdqfNcvCAxViXEtBKgZACFUV0ux0uPHOOBzs79YY5G8/45JNPefb6NVa6q7UNwGGyYWN9he98+03+6b/477l39z5RK+Fn739EJ8l46crzRCLmry9XfXKrrBHMphWT8YSinLscBtZgrXaVErRz2dPaeZBUlasoUVaVA1PtQVa7wn16IfUvjFLG+CKPCxG/DtOp16MzXtUgaxfy+BcdTwdVoamKnKNHu4z2j+mstmm1emycOcvd7m3yfNjArEU8dYDUBUMKeovTXeiE5VDUr3kzIqT1g3oCNYehFnbF4zcZmFpTr7rw77T1j087+NbTrmE8+yJR/EnAuOQsfuo7Ta7wuHvUslHtNKv1b9ai41KbRWMTa25m4XunQbtx7kgpup0WNi/ptzOUEKBLjmzBHw8SzrUzvrE/4lfu7zPcPWG2s8f0mUd8fH6N4foa2aBLrCukMXR8WQ6BII0UWhj6h0ds/csfs3bvIfvXnmH+pRfIY0Hr3kPOvv0R9ifvYS6dw25t0Do85Ll/81O2bm+zs7nBg2cvM5OWzf1Dnv/0Hi+98wnjQZtHF86S5RWtoqRVaHaeOcv4lRcoOhn9g0PW//wdrv7pz5nGEY9eO0OURkRFSTsvmE7mJEaQ9Dt0laRbFPTnFffWunx69Vn2Bx3OHZ3w1Q8/5tX3P+PW1nl2VmLaxvLNX3zCGz/7kKmS/OvnnmV3pcfqPOc7t+9weThmFlUkuvJuUm42lVXJ4XjIeDqj3+8TR1EdOmxZ5MlwLnMCqRTtTouLly7w6Wc3OTgZobxu9cbNm9y7d4+tlXXiOAKZoYQjPlJavvTCC3z86ae8/8lHbN/JSK5f409/9nOyrM21c5dQKE6vvr+OhxCizmc6Hs2Y53O0Lp0F35cdd477LMT+pYcDUq1tLepX1qJtI5mKDQECizWxWLXgEcO/DkbahthvG199wvF08d9UFPmMan7I8d4hm5fOknTaDFbX6K30OTkceo+EWrNIk30KL9rb2nXI+wKK5g1Q32hgZjUAegA4HVkVjEG12F5fN4jhPHbuJaaJb3Pdb7YWpZsbQvP7T5qONfgFI9IpYGyK3U/63WMbyanvNn//RWNYiyLC30ej/8I5rD9PXRbZ32dVaaqyop3EpJEkiWJGUw0yZkem/KuLG7zT3eXNSc7zhyM2Do5Q+0dsfZqxd+0Z7r18nfLcWdJWQiJHvgkGWxakScT6L26xeXMbvb5C+YNvc5xIxtWUzc7zTB7ss769y/HHN5gO1uh/do9zN+4x6WWcfP1FjvptKmsxgz5nDkZsPTrg2Tu7lM9epzVzlvnZoMPhb/0ax2fOQqtFmc+xrTZnf/fHPPPhpySvf5Vpb4Uk2nWzMpb0e31mSUo1myEM7K+v8sfff4NP19YYK1id5Zx/+JCNo2POHO3zaNDmzHDMyx99Btbw29ev89Yz58izjNgajtsZ/9G7v6BfVGCF9wJw8epRaZmMZhwcHrMyGJAlsfMyCfpU8OzViZ9CClQSs765zvVnr3L49nteOyUZnoz56ds/4/KFiz4pjXBJUkxFWZXEqeKb33yNh48esbezS5S1OH/hLH/y1lt0vpdwbvU8IOpKFmEDflwp9P/rI0hUCxJgcUx1MplSVQVVFTKUOdHflY32oadau4cxLq+EB1fHZB24Olcr/O8W4auOedq6Fxa6VHwKR6fOk4g6hWagq18grAK/jKkWhqIqKaopk6MJxdzQ7SrSrEW730O6rbLmeLVIakGERCch31hIIuHaxCLk3mKRj4nbQfeJWBZcrLW+qmVoJHWJat8NjfOypEsUjXNIIWs9qnCFbRpXcczBFRkEfH14ToFf8HR43MeUx9tTf/AEFYV//zS7xfryEGLBfBfAXUM/tWXyCees2xCAv7F1CCxxnFAWBcpKEumczpU1xFFMtL7KLUqGccSPj0f8RrvP6vYOG7vHXP7gBu3jKTd/s4dop8RK+bNaYlx1ytbOPmllMXvHbP3n/4wNARaNMoqkKFDGInYOSOdTOo+OSbQlOZmS/cFfcD3sjVaQFRWRsfRGY86s9hjkzrCgE4k4u0lrpU+cthCmi/j+d5h+8BGbD/bIj4bY61dI08SPtXTZorLEqwsEszNr5BfOMs9dtNYsiTFSoowlrQzCGNZOhnSnJbvtlJ9srVFmCQooIsnDlS67nQ69/ARpQVhV67dLAcwLDg6P2VhbpdvOiGSyGCdfwM5hbHBih06nxQsvvcCtO/fZPxiiiBAm4rNP7/DO++/x5je/QddaIhEjhEt0pHXByqDDm2++xu/+wZ+wc2+HLE2Rts8fv/0zfv3bLdbaq96sueyt/e//WNCWwAaNtcznBcaWTuQ2TvTHgnW0073nfVCNtlTaUhkHiAFYKwuV/662tn4496vl69n62WCF+74hrD/jyVmIgvtiVH06Uy1LirKkKAWj8Zh8XtK2LSKV0Gq3iZSiKqsGUV4wo3pHbjwv6yVPA4sgZIJadrpmCXAXHgD1z5afofaFXVITLF3JoVTNmgVLoOQWhc9q4wHrydEn3iXjCR99kWGqeZ0ver/+ncBrc04x2MXOQfC6WOqrJ2yjTaNfIPO6KtFlgTKGTtahlUZ0uj3SKCWyhrQdscEKnbQD/QFvZxmDq2e5Pp7y0h/+lPXtPaa3H7LdTpmOR/RdS6h0BVWM0K5MybSlKBKFEZErgWEtpJI8bVG89AJzCgQlIJhmEdOWy+EqrcUKxbQj0Kkg/uGbrJ1dpT2ZIoVGomi3Voi6A2ScIqOIbnuD+doGnXv7LgdpHCOjBBeDLJEqIopj4ixzG0yiGPS7mP0TsDgDCE5K0r76QlQ5F5FSCGySeAnCWd8hdv0pGm6CfhwsoCvNyWjE/uERKyt90iQhFs6dqrkFB99j5RPSnDmzxde+9hX+6N/8uVOBCUWeF/zFT37K1plNrl2+ShIlKKnQRqOrCiEsly5e4PWvf5U//+nb3L9zF6WukKQpb73/Pt/52tfpp31qH81TmqJ/P8fpFWq93lM4NzrlyZi1Dkyt8xWtxX2jqSon6lsrvOgPWgu0kc6QVbmE4tbYOhAgMF8HyiFz1SJIwBFSAcJ/J7QuSP9PoapPBdW8KKjKCq1jylKjtUWpmCRNSdMUqRQI/UQRd6GnoJ5oT+/M0OhlNUAAiCeJ4Kejj0LUEY3vNrUjARybrHMh6p86f61eWI7Tr1teN8jWBoi/jDGreTyWNSv8rskwT7HN+r5ObUiL9xbXfaw94bUvsTGdTKnKklaaEseKOJLoUpNFEjHPOdneZXNrk1YSEacdkiRhdWUVezmhGOckf/ATVu/cRX7/G6zOSgSWJI65fO06uVREaYZWUL75NSZfeh7TybAITFGgc81cRRx0IrI4Jk5TKmkR3/kG5etfpSo1aWKRcUwn6RB3M0bnN2hbSbo3dSUSRUx3dZX5oIeUEUhBPDpBPdxHIGhnbaYqIY5cYhErBHGakKqIyMtNSgpaSYIV3tExjJt1iU9cfHkJwqCISUTMREiUdOETRoCwQcoIRMD4ueXgazafs3dwyPraKu12G6UiVL0+grSxGFehFKmMef6F57l95wE3bt1DKEWkEra39/mzP3+bTqfP2kqf2OdJNcb9k0jByy9cJ59P+en7v3CGqzSjlR7w7icf8tqXvkoranm/73+vaLp8BJCw1qlRjFt3UeSSegcLk9EGXelGPL9jl7q27LvQVgM+/wRolxPT+7N6EDULsLQm+Kx60KUxDYIdprmcf8nSfjqozp2zrbYGIRRCRqgoJslaJDWoEva9hoO+E92lR6p66Dzzkk8YzOALFspTLN5bAE7o+2YUVR1d5G/2cVa6eA7nlaFfmuK6XYBYk3EHYF0AqljUf2oshtDOx/Siv+Tvv8xn1tqlpC2m0S88gSkvNgpRM3brJ6WbMN63r8zJ0tilp0OQpQmTakoLzcujKc89GvPutGKvG9MbtGn1+2RSsZpEyCTCYmihEFvrZKOp2+1VRHdtnaydoa9fQb/7IWJU0P7OtynbbaJWgpzPmPz2/0Dy4YdEX3uFYmUDubWBEYLpw0eYVszk0hnKRNFPE6qf3WT8s3dJf+V12tevk3R6zFAIoei0Umyrg7CKWGv4/DO6+3scnz1L8vwLqFaGVAotcWocqzEKSlM5NxphlxZtiK9yQTQaKwz7acw0jlmbz3jx+Jj3z65SCYgsrM8mDPI5vninX43+fD4cUhvD0XDIzv4e/UGPNI7dPAdXQVg4NubGy+lYpVKsrAx4/fVXebS7x3ReImSMkjEffvgpm5sbvPr1V+i2MqRQYIWLb7eaNJa8/NLzjKZTPvr8Nndu3qGdxnx2+z7dVosvX3uZWEY0rBB/DY7QgcEKr4liSRxHLkUiDmiDbyr2SXpSvNtUw/nfOLWO9cmprdezBgAFn2uVRjj8AlE9CIS6ziHC8t8hTDWf5ZjK+JMACJRyVTOTJFTBxIs/NF/U3bRwgmfxmU8K8CQreP1b/1nY0YPYb3CRKY9x1+afDfCsuawHehV0WP590/gcYZ2LFctAtQR2gtqAVkc5nWKETQBsHk9zr2oGNvyySS6bm8xiPzl9Yv+BP2djsxBCgjHkRUFZFtg4xRqNrjQRES0peW004ZW9MecnQ94+v0I56zOYFJwZWjYf7RC/+yEoSfXcJbSAEOjrgF4iZUzy67/K9KfvkvziM6p/8vus/o3vYVsJ+c8/ov9f/ktMpUle+irJ8y8R9/tMP7pD99O7RL/3J3T/gx8ie32i9z+j+of/hDSfMev26bzwHCKJQFiig32G/89/RPdv/QDbX8He3kb/P/4RlZAU3/o64twGEYZIKZQFVRlMXhJJWev9lYZumpFJyQxnuceC8GyzMpZPsi4/XV3jBzvb/AcffUxWPcujXof1fMoPP77N2fGEStRbdS1eS69mssZSzHN29w5YG6zQbbWIIoUUy1myglYr+DyrSHLxmfO89trX+fGf/gRrDSqKmRVzfv7z91kZ9Lh+/QpZkiKswITKS8LQbqd8/StfJi9K7tzf5s7tu8TRNT749BattM2zz1wnkk9YR//ejmUqKISm1Y5ptTLG08RtHEtuUbUcjiVk/1/givMQ8KJ8M/VfbfBqAKMNxDAc0gNrkELN4018yvFUUJ3N5lSlxsqFlS2wyTiOiRMX61wnUXlSV1nrjVKLwVtYpsN7ciGmN4ClyTIf2xlE6MMAYrb5kX/hr1f/7V13/QZRJ7cQ4NJ6+ffqn/8SJiqaDtzwJIb9pP54Gltd1u2eAtxGGxpKAX8vX3C6cM5mf1ino8uyDOYlRZFjk8glibZzKgnvb21ydm54djzh2qcPQewAgshalNHkUczsR9+j+s1fwcQJJAlFFCHiiCyKQEZw/Qqt/8N/wuT/8n+n909+G377d0BYWhWUSpD/T/8em/+jv8O8I7GbK3T+wf+O6f/1/0brz95F/PQXgEToCi0E5m//Omu/9beZxRko59CeFgWrv/+n6H/zbzHeEq6MYPSbv8HK/+p/yTjLiOZDRNYijySzRPoQRwEqoVCSqYLcVMRRzLQssUIwTdxnuVJUlWC3yPln186TRZJv33/I//ztnwMKiSarSmJjqeLGGDTUVuCkIGMso9GInUePWPW61dTnQFhy9YN6jkoBrVbGV7/yMju7+3z82U2kVGRpxsHBEW//7N06CiuSoSa2lxslDPodvvmNr1Lmc3b2D7mlEpLnr/Huhx/SSlOe2XoGhVwClKfOzf+vHV4mtD5/iDUgNN1ei06nw2iSEccJIbdILUf60OsaYH0wkvuecM7x1lMrT4TrvqbZ7wuVYHC3WrTpNJJ64HnK8VRQnc5LqsogI4mMUgdeViClIoojkjhCCO+eIBYJRYJYXqdQw7GCoMBfXuSioZ+kBowlx/cG26pvN4i14cYDwNVQvQyIYSgWYv3iu/W3RY23p4Qi/0vf7lqtEb7MMgCePhZAugyoS2qGv4QOtuku1dQnP7aYm7rlJSq0uGdrIIpidOVKPHc6GUJJOq2EThIzXFvhrfNbXNo7YH33kNZkilSRa8O5daqXrmC/8xplJyOSAnHxDMVvfI/Os1chidCRq3dfvfgcnX/wv2X0//6n5DduYC1kVy6TvPF1+r/5A4o0AWUxEsoXLtP+B/8JJ//VP6f64BOEtUQXN4lf/Qrt3/gheSd1cfhCApKi12X25teZfvo5Vijs+S2y175G5z/8LWYrXdAaZTLE9Usc/sb3kVfOcyAg1iXV85e58Z2vUbx0hYNiRmFLKqcl5e0Xr/FwZcDD9TVXk60qsCur/G7WYdRKuHZ4QLuAPJJUScLLD/d9nk7qstSOfji/bWmd0a0sSnYPDujv9Fzy6ijyYLhQNTn3wWbEn6Db6/GtN9/g4OiI/cMhcZwg4ha379ynM/iAb772KquDLsqXTZGeXSkJ62t93nzjVf7wx2+xv7tHlMTEz13m3Y9+QZpmbPTXvUQn/z0A6uk5H1QALg9Fp5vQ73cYT/u0Wx2G6pi5nddsFSmwoYpPw0bijMyBPNnFaZvfe8J6ayawrhmxXy+1G5Y/519d/K9KKi1ptbv01zdp9drESYKtIpdFR9UQuoxWAhamRWoOK5oiv3RA5brwyQLIaePQ4nwu52kNwDXLDTgdEJrQ+/5PL5g1fAOpf9cAqgZDdQRi4XgfJnxQEbgqrl/MLMPffn00OsidvFYlwFKUWPMHp/vmcd2tXXxv6f3lLWQhBbgZFuKnZaxIpIJSMkh6pKqkJ2NGKym31laYPH+VdDph69wZ+p0e1aBN0W0T2ZhoVpEkgipOWPm7vwlphi1KpAVLASqCC+dZ/V//x6g8d+DXaVO2M0osoiiIKonUGiEk8tIF1v83/zFqPANdYNOEst1CW0U81w5UC42wUAw6dP4X/zN6CJAK3WqT93qUcYoqKqSuUJWlbLVI/v7fZjQeUhUFcjrhZGuF7b/5K4zLOZNSE4sIgaFQ8O7Fc9w4e45ZLClnLr+AUpK9Tsa/eu4aG/MLxBaqKOLC8SEvPNplt9thkqVoQFmL9F4ZpkEYrLaMJ3PuP9x1uVNT57GgRGCLHl3rEuvuoWLFmbNb/Mr3vsPv/t4fkpeaOE4ojObDj2/Q7fX42ssv0u20XWWFMB+Ey4i1tbnBa1//Mj/+t2+xu7NDr9uinT7D+598zKtfeoVuq40SCoWq51BtJzk1954mhf3VjtBBi7kqvOSYZpLBSo/xZMBJt0+aHTKZTCAU8NOW4IQqLN53VTumax2TtUY7BmGbEjJLJMYGY5ddLJOgnw35dmsgx9aGyC86ngqquqrQtkN3ZZON82forHTI2il2GiGlcqV0hWea1oFVbYG3NZWrW2qleAy4AjgJ8cUD9TRjj3jCb2vQ88lsa2xtXnPpfF/cBzKAqa8KsGRkE82cscvAGiz7i/chMNVg+FqaoE9TGbAMuL9MN7vohXBOd9fuL59PUljSLCXKUjrtNpUVrE3HvHl3xOXdfTrWhW1Kq5B+HKMoRihJJkKqwoaXhhAYCc51SaBwhdkVzvo6D2QfhSDCCr0ssfjXWoQ2EoqWesLhBrLCEs1yBrMZFCXz/+P/GRsJrL+uC8l1Cfvw9ckS7RZXajXtV77E0Q9fx1y6hG6lzOYTIpmQxQlyWvgtUzGOjWOZStKKFVZoVgrN5aMR0yxir92jXxR8afuASBs+2trgMM18CrmGRIVbtMHXWFcVR0fHPNh+RK/bJYpjhAhSoLdIi8Yq9uOZpjHXr1/lO+MJf/jHf4pVEWmry2w65oP3PqLTbvPic1dpZxkI5Waqn3NKwuWLZxhNXuTPf/pzHty5Ry9zBq6Pbt7kpevX6SSZW0dSeWPE8hz7y3iz/NWOAKj1lepbj+OIldUe4/GAk+EKve6AyXhEWc7xViv3TAhf1WC1B1r/t6mw2r0OiZlCRdVg5KoDAGyoHrBQKYTv11pDC9ZKLNUX3tHTnf9LgVBtBptnWdlap9NrkcQxVRSTZilJltagxdJEcg0LQBAc9k+/Dn1aY/ISXj3O/pZ0lvLJ4sqCvVoP1gG8xNLiDPqnhY6ybjmwAFP3nQUFrwE0fNxQV5zexR83WC2zV/9i6XnJ0yGI+qd/84S/Hzf6LcYiXLtprEII4iwlTRRpEkOZ8+KjPb55c5tuoVENcWoxMI4R1Hsmy/umltRVGBbv+9Hw5vGFymQRvbZ8U4Rdqv6wqa8PPxeAMSW9z28Bzorf7B1pF9/FSrTwWabu7VLZguH/eAWrK6bTCa12zNwWlLJyDNNKgpucSiKyLCGyhpf2Dvl7777POJM86K+yPptx6XDC3ZUu750/yzRSCOMz1UrnoSUt/t4XEluZlzx8tEe326LVajFQUW0XCEbhUHY5AIGU0GqnvPLKS+wfHvHT9z8kSjq0si7D0YifvfcB3U6Lq5efwRl4I78m3X3HkeK5a1c4Ojzm489vcOv2beJ2CxUL0izh+oVLtCJDjEsiI5Ss/b2fNMf+3RlrEMObr52bVDBsS2XpdlNWVnuMxmuMhkPGoyHz6ZhSG7xDKraqMLrCVBWmcjl2XXRVKEnt8gU4/yrjGW3wUQ0O/4t7aoKsdaUE6nVYr4qn7DFPZ6o6Im71Gaxv0Om1yJKEWCrSOKXbHdBfGRAlEcWsXEx6a30S3iZDYyF6fsEgBEd3wQKMn8Zcg0jd/N4CqE6/7zvMBloLp/WmtYoi+JyGv09d033mPjkNds3vPA6A/jenvmNPnWMB34C1v7Qvnnj/UBs+amBZ3Cgga117GklynbOVF1w/GNGqKoRXl4TQPE94lsuQh0lHEOB8WZsAhA0UDIDa1DkG387HjlrCsc7GYIOkEcDZ+4Ba4SzewoCVdRvCSU2tqLEgfHlyC50yZ/7Oxxz+7R9gUKAVk+EUrSt3Lz6Ri3P9g0hIulmGtRWTS+vcf7jOtYf7XDp6yDySvHdmkz+9fpGP1tcw0iCCyGiUZzWLTchYjTASbS2j0Zjt7Uf0u33SJK1zy2J9zk9jXO7VRtdIIeh2O3zrW29wOJpw4+Z94ighTTJ2dw54590P6HRanN3cQMXK94gHZ6HI0oSvfPkljk+O2d57RHQzodt+mVv3tollzKWz5zDWEkcJSuDUEk/RQf7VDz8frAsvdePri3DWa9cABVJp+v0uq6srTEZrjE4OmQyPmI5HVJXzWNFlhSkdqOqyQlcGU5UOoLXFVt6lqgbZBaiGSKpa5RcWTHgfQ10C2wYN69P74ulMVXborm3SXx+QtZ0LlcLFiHc6PXorqyRZRjErwYcmSrlIXOKszIuopYVpKXTcE9gojzO+5rEApZpzPf45QeRtftB4fuy8Lm3LE4HL65ce+0ywVGrlaYaqZtvc0bi/eh+wy2qExeXr757ul0U/WL9xmBq8wyPoiheLI+CWRUWxO7kO/pKWyDijShFJdjZ6VEoSWZe1XgkPllJ4hu78K61seDv6KKSwf9Ww7COQgvGmpps1K7X1751902CEcS5uVhLMoAKNFarO1G5liRUpRgRVlG3U4nKbo9I5K/d26E5zNy+0QecGaRW6gvF8hpCQGkEerPAhqbcUZK0WRT7jRhoz/uaXuXZ/l/bJnFGieP/cBgetNqUIgQMCYTXSSJTn2Db8ZyxYjbCuBPXB0RH37t2n02kTRa40tVROdeGMLS75dRBVhXCeLqsrA37tu9/h5Oh32D86IY4Tkirl5o17DAY92q99hbXBKkrE9Xww1qCkoNdt8fqrX+P3//hP2L77gHbS5vlnr/H5rbukScrmyip4KdPKx+fyvwtDXQCzwZiKsiowJojRzgAuhavenBdz8qJAW0iziLW1AbPJGidHqxwd7HEsY4yeURaVq3VWluhK12wV7UHUAynBT9Vaj5PBqb8hyYXpGER/3JpqjiI8AT5OHU+vprp6hgtXr7J2dp2sk6Fk5GpSqYhWu0uvPyBtZYyPh19ovLbeChWqez6pQUuiawN3T0dXPY0JhkM01yoBjKiTupw28CwYZPi9aJxr2VWpNlF5YA4M2O1wC/B6ms4ziOHg+iTc52JoH0/qEmoOfdH9Ltq3DL7ByFaf3S42HSsFWZYxiSJsJbE2Ihj0rLBMOi0+//4bVD2XPq+VtkgTV+gvbSWusqdUKBUhkxihIqyM3N8qcsk+ohgbKax04qhAoq2GSHo49ncqldOPAVZKx84DM9bay9FgRYjgi0G66BkhBTJqY2OFjSKsdbpJIwWycrrUaDJk/3//f6L90Wd1UcdpNaXCUpVTVrOMb1y+Ti4j/vyzTznMcxAWhUQpiRKKtNOBXLKnJEcvXGaea8a508EaoRBoZCXQeL9GaxFoF+pqaOhJBRiDxjCdzXn4aJd2J6OVpayuKmLpKnZaK51/pXBz1FhbVwaOoohzZzb5wa9+j//ut/8FlS5pJRllpXnv/Q/p9zK+9sqX6bb6tcFMeD26UoL19TVef/Ub/NEf/xm3b94hUoorl57hs5u3iJ6ViP7AgapyIN5M+A4LtdYv83Q5NVP9s6HSJVWVu2QpusAllVfEcYLWMM/n5PkcrQ1CJiRxxGCly3y6ysnhGseH64zGQ6bTiYuwKivnT19prA7iuqkDeiTO8FS3WTQkQ69qCOstQOcSM/eGKW9br41XX3Q8FVTXL13j/PVLbJxdpdtOiUL1URmRZG26/R6dXpvDRwIfsrJkhFk2mjiLuxCPA9djR2C2vgNOBw3VXqlS+MnbZLALN6nwbETYa4L4uYglWVjxA1gvPAuWGsPjqgvry20EGdWdP9y7JRht3HdZkDPrfWtt8ErwwqsfKROuL1zInayHnFpMqSG67m/XDNNoZ1O94SZOYLQgrCBKFGmaosvcKeiNZ70WSgGP0hjdTkmTiFYck6YJbV92OU1i0jhGyQgVpchYIeMEJSRSRG7TiWNQEqEihFBYY5FK+lpiYWMRNasUgBWunpPVTmQTAVylACn95ihdUgshnGFFJaBiRBRjrKiZsrUWowu60lJGkRtF65hIVWo0hkxKXnvuOa5cvYaVEZXR/MGHH6KtdIANCAWRVEjZIseghKWbxRQnlunMOlFV+JJxnkXYelcIhpeaKbgAAwPaGkbTKfd2duj0OqRpQk8pnzDIrTVhXahlXVLHM9Y4Vly7epHvf+/b/O7v/REiErSzFuNpztvvfECv2+PF554lS9tOejDazxVJpAyXL57nG1//Mn/+1jvcvn2brJUgleTmvfskVyOkgAxJJATWuOxPFotSEmETv9EvqMBpqXHBaBfz1FqN1gVlOaeqcsqqQGvnEyWlQFcztDYUpc9EZUBJjUUjVURv0GXzzBaTyZjj42OO9w+ZMQajfbCGRgiD8rong0baUAmVWiEksEgBul7nth6nhR7bvQ45TELEZzBgKaH4ouOpoHr20kXOPHOWwWqfNI0I9EEKRRJndLo9eit9VBShvYXsi44aZH3/n2Z0bvfz5t4AkKIxKjSArskgRQC2xXWWvhu+Q1CXLAOOg74F+z0dTXX6XI0m+OdldcZpRho+DflhF+eraeqiTU9gurXS/FRfhM+EsNjgwL10zyzGwwZAXRjtEML5pfb7jPNDqvnslN7M+thpJ0JVQhNF2k9L6UBSKlAxqAjjDYdGiNpqLqRPYiLcsxHGIRTucxdn7Rpq/EbTbEHTKGbrGxH1/HEbkfGF4CwRIIRCqggrJQaNDjUzgjyHG/sIiZ0XrHUHXH3mIswKPv/oHbZWV2jHEeOqWho/KV00ISYBU5FmGcNxjtYzIinrEuzWehUWpt7o6ra7WbEYA2spyorD4xPu3t+m2+oQRTEtIRCRdBuk9w13qgBfMtmXC2q1Ur76lVd49Gift3/2Lmm7Q6fV5eTwiLfffo9ev8/F8+eJVVRPCCGce1iWSl568VkODo/4+LPPuXXzNq2sTSQjeq0W0fmzAMQ2wpoKa62rNiBipNQ+7NN4gqCQPgdBU1IK/eHGSTtmWuaUVU5ZziirOZUunFLHOJWAW8vKMXUEopJY5Qxt/f4K5qxlNByzuvqI/d0dRsOjpSkvbBDznepI4tRaxhMfEUiY/8yIoKr03gDGLPTgtl48HrQXa9o8xa3qqaC69cw5+mt90iz2xcosEoW0iiTK6Hb79AYDVKKoigqEWPa1fMIRkP5x1ncqlLXupgVro7k2GhgS6kKx9O/id0FM/0Kjjwfd0zkJltUNywAKwWNg8R0pRY19thF1sawzdr8NIv+TWPvyxAz3e8ryGjYKW39j8TnLEd1BTRjesl7vKKVAZQkkEWXw72tcNGTw0dpAJBAoD2rSg2OEkLH3xHCLwFiIlGOVIbuSkJHLsC6dKsBJHwIfaoQUksoYRORaravKSSPWEKo7WQCtawdsqRRCGg84FVaWaF0hVIwxkQN8KVwiDaObnB0VKTqdDmI25czmJkSSW598Qn54yNbZNXppzMQHRQjhWKKUPoNUlmFtSaUtO4922NjaZD6rsNr3uWelQYJwFw7O4qJ+XRsSrWCeV+zsHdJuPSDLUraUQAiFENIbchrzHxwzthIpI7rtjO9/7zscHR5y48492u0OnazHvfs7/PTtd2mlKWfWNxyj9wMbllMrS3jj1a9ycnzEw50dsqxDEqfcuvcApeDMxhqRlERKksQxUqQYYyir3AWNWIjjxHka1HOtwfpYBKsYo9FVSaVzdDVjPj9hOh9j0VirPGPFBZigsEYSRy3aXefyp2RKWTg3wJWVFbbObLK702d3t7Fm693X4giaA34CgBqDsEFPj9cJOLWMxfq8rMvMsNHtYWE7vHmK/P/UxIrr5zZod9tO5YVGe9YkrCBWKZ3OKoO1dbJuG6vcYmsaMvCspfna38aCRAWwqL93CkQbR3B9eLILxEJMXGaMoT+eDPZNNtLUtYTz+ld1iwULcBQNt64gRgT1xmndTX1OFn3zJK+B5faGXb7x+7CwQvuCgaYJuE2GJ4TPaSuXgR63GWkBpYWi0j4xb+NaNjy8OCsFSJfIxHo2YYz1hgLtnbHx7sEOYLVPIAxu0wltDEYE91xiqoKyyKnKAl0UVGVBZSrXSmOcm0xZoIs5psqpihnlfEo1n1LNJ5j5FD2fUM3H6HyGqVx9+PDb5bGEJEtJkoh2ljArZqye3eTitSsMul1Wu13cdF5sylIIVCTIsoSs3ebR3h6dbotvvPZVNjbXaE7WerO3wX1nYSRpvg7zBQuT2ZztR7ts7+wwGo9ckTujXab7BhBbu/i9NYZICtZW+vzNX/8Bq/0uZVEgk4w4avPpRzd47/0PORmP0FYvrTshQCnBSr/Dm69/g1aacO/uPW7evMPhyZAPP/ucu9sP2D85ZJY77wjH/DXz+ZyyLIgiRRRFp+avOSWReZA1Boum0lNG410OjraZzkduftgSbQpm8zHj8QmTyQhjDd1ej8FgjSRJsdZQVjOE0qxtDuj3uxg0SknvL++XlQ1sdPGQAqRoMtRQdQGXl9UuslMJP+5KCGIpiaTLVqaEqH+zCAZ68vFUprq6MSBJlFOQW+fi4hYqSBmRtXsM1jbpr61zfDTElk1UpwaV2moWGEcAQz8Ynu9R7+JyucTKEtCdEqvDpZpHaGPA6TCLmt978rnD75YZtxALR+on/U4I0cg/4ME1ZJdusO3H3FJ834Rr1tVpWTDdAM4B75olsFk658IrYtGKenOtJwMofGF7J2pFCm2N01ee6kdjXUIRIV3KtHBU2iC1dlnKtEZ63bDUGoR155XGXUpAVRbg+6gef+8uZIwFa9BVCaW7D0f4vDpAGlf50hhMWVAZjZCConT6OCnCglIkSYYVESJOiFodRBQ7w5dPmB76CSFRStHvdFC6QlpDf7BCrg1ZkjLodBBiv56/jqlCFEnSOGY0m/Nob5/XXv86nU6bTrfLvjx2Vmfh9OBBlGoaId1dLaJ7oiii2+tSVobJfMbxaMy97R16nS5Zq+sSFhnpJQNHZmrDirVOZ4ggihXnL5zhN379h/yTf/4v0MaQttqMj2f87J0P6A76fOXlF2mlmQ9hracfSgnOnd3kzde+wR/88Z9y++ZNlDRsba1SVnNefO46SewSKFFKsCWRUrTTFnGUukQntUojbBZNw5YT6ytdUBQThsMDDo8eoW1Fq9VBqYhSl0xnE8bjESDp9dZptV2qybIqqfSc2XSG0RqhBIYCREV/pUe712Gez9BaI7VL5YiVPhev8R4MXrqxgVxY0ItxEdbbURDODEIgIo05I23t8vU0lgq/BFRbrQglw24acN/WE0bFGb3+Ov3VdaJkm6LMF6K3n0JNUb8W8espFl4sgLIZMOAG/skuVmG3DrukrMVhuziPELXbkz/BE9UAojH5BYBchLAu+c161hh8+gObXFxiGWgXTPPxe6lZPKLxOC16iLqfwsbjwDQY2Zb7waMAS8vY65AQgdniF6jL9mVVRJwmztlbNXTTjp5RWYOtLGms6mtpXVFpkD7/nZURAvddF4zj22S005P5mEvtLu30byJ4/Hn2VlXoqnSbiXS6xNL3U1FpprMZx8fHTGZTkC7NXRrHCGtpZRmtNEFIhYxS4lYbmefErQ5x1oJT+i8hBFGU0OkO6KUZrXYbUUl06iLGIqV8xQXvXaCcF0AUKaIk4v7njxisrfLMpfOMxhMm0xmVqeqF6PpbLvo7DGJI6CMsaZpy9uwZet0OQij2Dg7YPdhn7+CIe+0den3nv5qo2KlBjG7MKYNSyp/WqQeiSPHiC8/y3W9/kz/4N39K2u7QHqxwfHzAWz95h9VBj2tXrpLEUa06c0ZnSNKYF567xsH+IT/56Tt8/nmFjJ7DWMP97Ue0WxmRUhRFSStr0Wl1iOMMKZ2Kws0zL2ovUReDNiVVVZAXQ4bjfU6GRyAUrTRDqciB6WTMZDKirCo6nS6tVgtrLcPxEK2PMcaiZEQcJVRlRVHkdPtdzpzdYm9vh3w+cx4WXoVljF/jUhGirULXWeHSB+rA+MPQiGBED54NDSJoXPrGsJ7C+190PBVUVS2uEVQPdcNAoFRMu9NnsLZJqzugzA8xVbFY/L5jlVALei4aN+BvqZkpJ8zD2keuuSvU1HNZFPfUZjGeDSYrgv6xCaQN1vo0Fy1x6ns127GirnNy2u3KzVZqkXfRlua/zRtyzxYa3gyL8jJuw1mUfglnMPWGEiJx3GdLNpkazOXS5SwGJSWxipiMxuiiIC/Kx/VJCOdALUBrS6Vdfkq0pZo7dVAiUoQxLobdGJeJHhCqIpKq9g+MlKrbVQOr9J4AukIXFVVRUBmDVC4EutAVo8mU/f1D9g+PODoZUlQVZVmiIkm33aHf67M66JInCVIpl+1/NidKM7KyJK5KukY01rrb2NOshcLSXes70DSg0hiiiOl8Ws8ZKSRSCq9XjJiMJuw8esQ3v/06UZwwGg8xFuIkZj6bE0WJm0tNVhmu6/s0ayWcO3+e6WzORz99m7NbW1y7fo1Cl5wcj9je3afb79Jqt1mJYmIhkSjnt+tngAnSkVMOIoQkyxLefOM1dnZ2+fDGDeKsRb+/xu7uAW+99XO6nR7nzpzx63HBpoWANI149euvsLe3xyc3bnH7VkKWvcCj/SP6vS7RGcVqLyXL2igVe0lqWXtYe9+EzdeUVNWcPJ86QD3ZxVjI0i4Iy9HRIQdH+xg/b1pZm1arQ14UzPMDKq1BCvq9FVpRhzyfYzWkaUq712awvsKZ8+dcJdWipCwLjNZI1VDYNTZUi1fFNBei74ZQhDGoD7Hexc//vt6ETqken3Q8FVSlFzu8azxeAiak1lJC0co69FY3aQ1WmUxm6GlFbbH2uo1wA4ELLliV9f6rNHKUeseHsOmJ0BY/O0+BZH0+sRjY5u3WorA1XowXp963dcLgeiA8mIqahQYDVLhIUBN4HSpi+brCGXWCOqGpywqi3OKsoc0NCyXN0FTq7+MV7OF3dRfVUWDUeo9gV3ebgQ2duNRPUgq6aULVaTMRwkchhT4NnMi5tuRlybwoEHOF9EzejMcuKEA6FyqXEjIhTRKkFKRRTJrExFFEacM1XRIFIQVCRagoAmOoioIiz53tQGq01UzznP3DYx5uP2J//5DhaMK8KJBKkiUJul0hNNiyQklARsRJgrGWrN1m/cwWAyWwUbasLhKCJI5R04qDh9vI1oBWqwNKUpSW4/EUlEIJhVQCpfD5TyNu3X7Aymqfc2fXyecFv/joBnu7Bzx79Qrz2Y7bMHzCHicZmZoyCAu9bosz589wcDTk408+I04iClNxfHzIhXNnmE7nnEwm3N/ZYbDSJ2tlKBQycvMpRB0GF0Dn8etGX0pBv9fhhz/8PrsHe5yMZqRJRruzwuc37rG27iKuBt1+A1j9HFKSXq/Nt958nf39Qw4e7nG/3aX1wnUe7R2z3l9jY5CAlXXGJrnETMOzqQG1LHPKcsp0esJ4PMRYQbvTBgu7e494sH2HUue0Wy2SVheL5GQ0pqiOXZWROGZlsALClaWxxrtCmRJNycaZTYwWzCY5o5MR89mcsiiXhT/fN87319QtlX58hHXALXy/Ouna55A2QZZyz03PAf6qoPqYAWUhrzs9hJAkSUq31ydt9yBOMXKKqUqU9YGCUmK8iCIbd1p7AdQ5Ax53mm+KT0H8bX62ZJxhwQhPL6AvcsgPagLb+O6CB9Ngxos3nfHCg1/TlavRrqAjfZKEUOPyqb4N/geNm61f1gY5lpm1c2p+XM9b90A4h2cj4bQCQWk0lJZMCDIhSfs9pDpiqUXegl9qgyhK9HDMvKyI04TZbMZkMiMvS7QQVJXLMhVHMUo60Ot3Wgz6PQa9LlkSEyvlbV1OT6giB4LgLP5FXlBWJaXRFJXhZDzl4cM9Hj7cYW/3AGMtg/VVVtfX2NhYc+fNEpTyEVZRTFFWTMZjVye+KhHGuMTkjX62uACD+WjM9OCQ1ppBnY0RUjAucobzmVtiUqCEK+WdxDEnown3dvd5882vEcWSBw92+eTDm+wdnXDu/AU2zmxyfHzs5ogXsTEuIbhA0l9ps7G1zqO9Yz77/DZbZ85w7epF4kgyGp5QlCVnz53l3r1tDo+G3H/wkH6nS7KZeFFbgfAJbhqGK2Odl4XBBeacPbPJ3/zRj/iv/tt/itGaVqtNWeb8/Ocfsba6yldfeYlW2kIGpbefl1EkOXt2k+98503+h9/9fbbvPaDX79Hv99je3WPQHxCnqQvwEMKJ2TL4ny9IkbEVZVl4PWrOfJ6jRIt2bwDSsLPzgO3te4wnI+I0wmjNeDqmKE+YF278k6zFoLcK1kVZxXGMFiWT8ZjZbEZ/sIIUEcqm7D7cZffhDsfi2HmseFfAYCRdiOwLwiKEISzlgGfY4NNqawOWxTsJhCgscxphHj9+KaiePrzu2Sl0rSCJUzqdLp3+ABFlVCLCmAKsWWTo94tTiCAOBZ2gdI1thFI6p+3TF3TCU1AdPA6o7ggx6aet4U/6rlwoRh+/b5ZBLwCkF7wX1whNbLSTRl33x/tx2XH/8et+8QYQ2lqLLnYBnMu/CZ6fIsgstYQQmilCO6UgUSlRmlElcaMrgtpAoK2ltJZqXjAlZ1JUKOX0q7NZwXg6Yzybo41BCoUuKzAQR4p2ltLrtllbXWF10KPTSsiS2IFUEpNmGVYbVBxR6oqiLDg+PmY0nXIymrHz6JCHj3aZz+dsbW7ywnPXuXj1Mr21FZcg3Vv2Kyw6jsm6faIoZnR0RDEd0WmltFsZsWy4/DSejdH0sjbtJHM5LPKS/eGIWVUhpHMjDKK/lIqbt2/RGbS59MxZirzk08/vsrt3jE0jLl27wtVnzvMXf/EXzKYzH5Lq2I4pLWsbfdY317h1+wG3bz/k8tVLXL12gVYrwRiNVIKTkyGr65sMVvoMj0c83Nml327TyVqoKELJFIzz95VeWjLGjVMgLsZqEqV48fln+c633uQPf/xnJO02nW6P46NDfvLWO6yu9rh2+TJp3KrnpIutkMRJxLPPXuWNw1f58Z/8Bbdv3Kbb6xGpmDvb26Rp6nTOAiAiYrGWHIHz+nQJpnSqmjhOaHe6VFXJw5273H9wh/F0iFKSxKcwzGdzitKt/ziJSZK4LqUivFRrjEabirWNNbK0w3xWkmUZ3V6PlZUVTg6PmE2nrhipbRDWWpUjEEqghXHSVq1SA6t9QJD1eVX9ugoShrMpOV/6QAS/6HgqqIaF5TrMk2BjXay3BYEkUhHdTpduf0CS9ahaBceTCbKc005SlFDOxUaFhjlQDT6dElEX3RKeTi3tBD7BhZVOPHW1fBaZ/r+QhQbMabLBL9CfNgGy/vsUqAaoXLhLiQVA1T+kBrLlN/1ZGtd1i9osh/w9DVD9TYXyuIty302n/tB+vxFY3DdPpWAMbTTGifHr/R7T4bFnQP5rwtdO8nrbWTEHYymNJIkFSZKQtWPitEOrXTCbz5lNp2gqqrJkfDLkUVG61HlZxsqgx+qgz8qgS6edsTrosr4yQHQskXCGAwPM5gWPHh2wd3DMweEJWSvj+eeu88yFc/T7LTr9lP5KhyjJ6qzCQikqBEZFjCdT5rMZmYrppG1aSYrSDUbmH1aAVZLB+jppq4OKYmyueTQcUlm3gSsBcSRJk4TReMz2zkO+9tpXaKUJ9x8ccePGNoXVvPzyc/zWb/1dzqyuU+YVb//sp74wXYUxmsFqj7WNNT7+5BYPtne5/twVrly9QJoldW6MtJXRqkomkxFnz2wyncwYj6c82H5Iv98lyVLaSiFwZazdIJs614YTu6VPeSjJkpg333iN+9vbfHb7LmnWptsbsLO7x9s/e4+VwQqb664aa1M6U0rSaad87WtfZnd3n08/v8mNz2/S6bSJlaLT7hDHLquWFBLbKHpZuyZZ4ySPonC5E+KMUuc82n/A/e1bzOdjWq3UuUoJyawssRJ6/Q5pEhNFCqUUnVabKHJ+yFqXCCFYX98kimKMNhTzOaUu6PbarKz1OdhrMx4n6KrySLgc9aSEC/0Vwqm0pF8OxoR1tRD2Xf0ysMYb6Ju62SVx9vHjl4Jq86iZJF6ktAIlI1qtjG67TRwndLorYEoe3b1BlZf0uz0iXPVI4fVp/mx1+eWnWdKa14aGCCwkiwQiT2akTYaIZ4EyxJY/QS1wGlwXv4SgpwyKfWEbbk4BpGBhGFs6i6w3pcfupwmKp0HVLnTQYbBP0fjHzrHsybDQCdugE7KOxRqrEUhKBINBn/58jTRaRN5IBImUJFIx0znaQFUZ8nKOtTOUdO5FWZbS77a4cG6TTqdDHDsGeXR4xM7DXR483OHkZMjdByP29g8Y9Htsrq8gxBadLKPVzpCRAhSyKIiSBBXHWAzPXDzH2uoqWZpS5jNGJyWVNuQzx36qqgo7CEnWJmql5POcQZYx6HTJkgSl4qX0hHidWVXkSKVIB32kSqmKigrYORmCkihfxTOJXRq8W3fuEccpl585T1kZ7m8fsHc4ZLAx4D/6rb/Dc1eu0opa/P3f+vtcvXyFn779Fnfu30EI2Dq7yXvvfcr9B/tce/YSV66fo5UmrgIsFnxgQa8/4OT4GIvm7JkN7t/bZv94yJ3723R7fZI4RaZ+TKX0LlYujFWpCGGDVlAjlEvw/Dd+9Gvs/uP/mklRkrVSymrAR5/cYXPzU775ept+p+vnGOBVSijJyqDHd77zBsfHRzx6+JDPOx3SNOX2vft0Oy2yNCWODBG2YZR1YrVLYmKJ44QoUuTzKQeHuxwcPgKMy+MbSaeysIIsVqz0u7RbXaJIukJ8fi5rq8nLnChK6XY6znJfGfL5HGM0SRLT63dJs4Q4UaSZA1VZSrTSyKqiqgSqMs49T1sQCo12xXOx3o5D0Jz6ctW4kOfAvrF+jQcN619Rp/qkoxYyPbApqcgSF/WAFRgt6PVX4NxZHty5izmBXq9LJhKXV7zOsB+a5oR2WVsSReNxGhwXOsYg4taweUq/uoxN7jyyAXYOaxbMtRYTbPPKLIvQYtH5gabWLluyAaTLJ1hqR7Ms9en2CRYAGapzCkGt51mweXv61KeA1WNNEFNsjT3UTXeriNJaVOrqzCdqsbMLa0mkpJ0kFJXmpBwzmeYUhWMM/V6X9dVVNtZW2Nxcoz/o0WqlxHFMWRasrfVYX+3xzPktTkZjjo5HTKdTrLEkaepvwaJU5NQA/p57/YKV+Yz1rXXiKOHRzi7D42PiOCZLWlSVpCpc0maAKInJdYW2lnYkWBl0aaUtkihByAiEwlq93FlYynlOZEHFMSpOKKZT5lpzMJ44cJHOTSmOI2azGfcfPOTKtWt0u31OhjNu3LyHEJLXvvFV/tav/ZCOzJBErK+s8aNf+xEXL17kP/sv/lPKquD4ZMbh0YyNzS22zq6RpimxzxBmrNv8nJeZoD/oMxoOWV1d4eRkxHA05uHePiuDbbrtNqtR7KKjvIuVEMJFCgntvGiExCiLRBOpiAvnzvKjH/4q/80//xcuLLnTpchLfvbOB2xurvCl558jTbJagEEIlHLgfPbsOt/77rf57d/5Pe7euUur3SKNr3Pj1u1aT66NcUbHECnnGV0UxQgD8/mI0XjEbD4jSTJ0qySfA8ISxTFJnNJu9UjSFhZJUeVUZUlZVcRpRlka4sjd42w+c37JRCilyLIWIJlOxgxWBqytbzCdOp9VIaAoLBAhLGhbobV1Bj6xcKVyoCk8LbUNC7/TAbgsVe5YAtSn8MBfAqo+WgeBtN6JWiisDO+7jEBxFNNqtRCRZDTJGXQT+msbWFOxc/8ho9EYJVZQmSEKzthBlPfAGPQWQrgBCnpWcQogCZ3hQaUOd2QhuoZSFNhl3agDxQVoB6AJaghRg41jM8GVyYSfE1hy8DF9skqh1tvZEHrrHsHGz5KOM/joBk2zG+nao6ChY1jyq61bZGtj1YJ5yzqyZOGnGwyGgNA+n6mlxHA8ybmcJUSJXxjh3FKQKcW59RVaScLewTHzoqLUhjSNUJFFSQO2QgmDEgYpjHPRms0wpSaNIvrtFrGC9qVzJGnCZDx2ZaFxVvU0aaEFKCKqXonFkLQcg+302uzv7HO4f8B4MkENT0hbLaI4QkhBlMb0Bj2SLEZaQytOSGIHWFIpZJQgdEHTsc0Kx0ZUHDvgjSValxxNS0ZFgYgsSigSpVCR5N7tRwgRceGZM5jK8tnn97l5f5eV9R5/6zd/xNn1c04lZa0HJ8W1q9d57Ruv89OfvUWctrly/SrzfI5QyhudfKSccH4iyuuvZZxQpimjyZDzz5wlv3mP6bTg3vYjBr0+WdqiLSOE8OPpXb6Mt6ZI5SRIDEhpiWPJV770Irdv3+Wtn79H1unT7w04OnzET976OevrK5w/e45IxPXcQwiEVCRxxPVrl/nWG6/xRz/+M27fvEm/3yFJYj67eYvsSzG9rIuMJQq8r6ib58ZW5PmU2WyGRZJlTqeaS0uSSpIko9Pq0e2tEMmUoiwYTo4YTccIGdFpD2i1uwihauoURzFRlCBFhNYWSU6RF2RpxtbWeeajOeOTMfPZnKqqkJ4xn9bRhWor4Xadgco0qgDYetMHfHhrU7pkcYInHH8JpurzHPr47oBwNug+rZu8aZahlGQ8mZFGEd1OzPrmJkoIdnd2mRdz4qSN8hEwNaDWoNhArsXTkgHGXbehO1xoOsNyaTDWQDIXetDTDHHZ+t4EYFufvclo7anfhHME8dLW5xJeNRF+1xTTH1fHLAICFn9rbJ0k2IY2LBTFNUQ0rf+n768u7SEWDL5OgWi9XhHLcT5HdTo1ewpttkASRSRpSjtLWe12ODweMprlnIxGDE9O6oJ2RV7Q7XaJowijDbNJwXyWM5mMmc4m9Ps9NtYHrK6t8mhnB53nLvmFT9UmRYyKJK2shcVSYchaLZeVaXOVdhqTVxXT2Zy8KAFNp9sna6X0el363R79dgdhLFQaFacOvKRCyog6KY1PeCIjRbvXI8kyqnlOFKfsHO8z98lKpHejyouSO/cesHl2k8Fqn6OTMb/46AZlpbn23BW+9cY3fVpDbxvwPrFRlPDtb3+XO/fuIKOIVmfAZ5/dwBi/qGVzjola+kJA1moxn8+RErbObPBwe4fjkxPuP9yh3+8Tx6mzvvt7EiJ2m7/VCAMChfCCrBCKTpbya9/7LvcebLN3OKw9du7c2ebdd39Br9tjpTsg1G4Lc0ypiKwl+frXvszu7i7vffwRn332Od1OByGg023z8rPPYmwEVUgi4wIVqrLEWkiSzG0AukBJF0RC0qLd6tHrriNlxCyfcTw6YjafEUUJvf46g94a1goqXZGomFbWIUtatQ5U+LkbRZJ2p0Wv36Hb79LtdUmOMvJ5SUFV63nBSXx16LANCVSsr2sVRH57qgCgWaxhUQuoT1Op/hJQDX6dgtpaXCcVbJxYCBfGFicR81lO0eogehlSGNbPbCCl5Wh/6HQlOKZgZQNI/DUkwapuayA7LbYtXjb0j0G8bbJSHtc1nj6W9LCeJy5A+Anna6oL/GvZYNK6wR/FKTG/qUP1zV9mnnbBoYO+V9tFJvSFygMvnjSYM48D6kJVYX26uMXmJP29YZ1j/1CXzIwhiWLPkt3hMkcJWkmCkNCOYlY6bSoEu0cn3N95RJFrqlQwHOWUJVitKYqCg/19MC5r+9mzW6ysuHhtdEUiBaiIWAikqRCVRiYxCEmauVR1lS7BCLqtDr12B72lKcuS2WxOWWmqsiJtpbTbLaSKyXzUT+RdjwKghqTZi93MrxitQQkqBK1ul2lecGd/34n+IiKOBHESce/+I/KiZOvcFijFxx/dYvvREe12i+999w3Orm35zcmB6uIyls31Dd547Q3e++gDzl44x/7hEfP5lFleEcUu5EV4d5fAEoOKqNPpMBqesLK6xmjUckEHu3us9Ad0Wm2X51UKhAGtfZgwfiMVwSvAjbOUkvX1FX7zRz/gH/2X/wRjNFmrTZHn/Pydj9ja2uKrPoxVCIW1Cx1rFEl6vRbf/e6bHB4dsvNgm4+yhPRrr3Lzzg7rqytcPHOGCOVjV9wqSJI2SdKiKGZUZQm2IpKGNE59hifBeDxmnhccTw+wCAb9Dfq9dTrtPkIojK5I4pg0btHJXORZWRYUxdxF9VUhWmtOURVknYz1rQ2msxxrIM8LCgq3SVuDNhatgysajeeGkWoJUL1qoBb7/3LHL3GpkvWghOQhQSTHLkrrCqGIk5Qsc2FkeW5ApCA1mJLVjRXGwykQwlTtgjnUojGLOkan9JDQBKDHgSToB2tcqXWny8abL7KsBxa3uOzyNetzhjDERj+IJhj77y1E+nCux697GvybrxdAvwz2gSnb8BvPXk/f14IR+74UeLWD72e7UDYYBHNr2RmPeK5qtnQBRBJIohQROVcpIwWdXpc4i7l37yEPHj4ABGkaEwlX8yprZfR6HdbXVkjjiCSSoDVVWRBZizUahQFdYcoSJWOX5DpOSYQi0pVj+xIfKOAY3grOhcd6tqIiBwJShWKUkRex5UL1YoNqyC8QYyhnc6o4cdbrVot7+wfcPT5ACJc8Q0USbQx37m2ztrFGq52xt3fMp5/fQxvFxUtn+e6bbxJJZ9wLVVNNAG2/ab7+9deZ5DOOhk6c//zzW0xnFWkWk8VR7Wu8tNCxjqTEEePxkLNnt7g9u8dkNufBwx0G/Q5xmtCqM3ws1pJL/OX6y1gnqVjhGN3z167wnW++zh/82Z+TdTp02n0Oj/b56U/fZXNjhcsXLxL7oIDgNy4FxLHizNY6P/jVX+Gf/tP/ngf37tMfrNLOOnzw8Q067RYb/T5SRAgREwnnFWRMRVlO0SbH2BKLCyIpyoJyNCLPS0pt6PUHbG2eY331HGnSRlcGgaGSUBlX7FvrCmNL5rMZRVmgIkfkZtMps/mcJMtY29hCEGEqmIxdztWaADbWmKlB0zbUaw1J8NQ6XQ5NXazDLzr+Es7/kjrBdPBH8/+EbFEgiKKYJE2wpnI6jbKPymKM16Aq7yaxYIE0YqXr2V+DgAkRUI0bWBhp3HVlQyS2geUKQZ2NqcHyTt9X3WH+vbpGlm+cEMvW/dDWZjG/JQ9QL1qG64boqNCI0yC67AK1rJ54kiHrSWFxp92pmpuHMaZRbcFf22fiMbUKwNZuIw9PhkyLcul+tF+rIclvHMUkSYTxaQMvXzhLK4kZjdxEN8aNXytL6Xa7rAx69Lod50APVIVLGSeNj8QxxmWSKkuIHCuXcUwUp1itfZ+6JC2uv8M9mjAjFxFayJoECAHGatBeP28alVtxfTOdT9k8e4EkaTEvK9759HMmRUncSlGRm88nwynHJye8dOVLjMYTHj484uBoTNqKef2bX+PKhavOgd6z1MXcdNKBkopO1uHVr7zKH/3ZH7Oxscre/hHDkyHZLCKN3G/DuLkQSnceYwxpmjIcj0jTjI2NdXYfHXBwfMz9hzu0uz2iOPGbh0IIU0fY0VwL3hERnB782996nRt3bnP/4S5xktHtDrj/YJd3fv4LVlbWWBtELJys3FqQUpIkgmtXLvG9736b3/2DP+Lm55/TbXcRXOb9Dz/lm6++QieNiGTis5EJ51eqC4wuKKuC8WzGyXDEZDomr0qSJOPypetcPHeNQX+NKEooioLcTJnlUyaziVuXVcF8OmY2n1NpTZa1aHc6mEoTxTGrK6uupl9lyJIWwyPnihdFLvovsMzFOnJjtMh2Ry3mN9VsCwlyIeXZxvtfdPwS8R/P0BolFcI/1ngdhPBZpSRxrLC2YjaZkeeaLEsQIqIoxiRJShRS5flHLWoHWLVhQYBtGMkCgIBYqF9rQF8+wnrF/zZ0YuikcK7T7PUUjIWL1Lt2YB7a60pPty3oYuskKV/Q6QvvhMfZZb0D2gawhvM2Trc8qI+zamtD8UXqxRqyfonQbzZkqnd3MSk10xrIBCAxPquUSyYRfIsFkZAud0CkiNfWKFY0VaWptCFOXJhqq9UiUgolXAYgXZWUlYZKQxXyoHog0QYTcqEKhUyzRV+ZCkzltE71BmoJFS7dvSx0/c4Sbmrx1VRgSheMEjZtaw2tVpu01UWJmJs7d/no7j2slA5QY5cD9u7dHTq9Lt1emwfbe+w+GqJL2Hqmxw9/8Cu0k54vceKz/VsLuEgel9kqRhJxdv0cz129zmd3bnLp8kU++vBTZ3uIBa00XUTQ20WWeoOLRkzilKOjY9bWNhmPp4zHY7Yf7dLp9Wi12y71ngzJnRdSGw0VlbLSGW+FpT/o8pu//iP+0//XP6aqSpI0JS7bfPDBZ5w/d46vf/Vl2lnLZ59yhyupArTg1Ve/zO7+Pj95+2d89OEHZFmGrgr63S5f+/KXSISjYNoUFKXbbIuqZDKZMhqOOTkZU+qclZVVrl19kQsXrtNvryIFTCYnHB7tcTI6Ji/nDtCVZD4dkucFlTZkrS4t1WZezIhVzGAwoChKppMcLSqKKCLLYpI0Ik4jojhClhLKIK0tLPyO4Aeb/kIyrNmtn2c18sJiu3mKLuCXgGpzxxMNRBVg/e6MjxrRwevUUhQFZamxJEiZIETsMwFViwY1Y/stC1CqN8gg0jdabxtNaD7XYFkLeIubF4+D6Omd5rQFv4lntZTd7PD6Cw1xuQbyRjIVnrCrCVG37Um7Qp2UuL5n+2R8FosdtgnEi/Gy9fkX5hB3/TAGxjck6JG03xAsIKREJSlzayi1dsp8o7HGJS1Rvj58S8VYFTZCZ7QM9y3qRhpsWUHlq1t6R0CtLWVRURYFIs4QkQt1RUZI5crmWa0QRmF1BdYlm3ZESNUjUlcX8INlw8IxbpMwuvT5DxbjLDVMTkYcVUP+1Z/9KYfTCWm77ZIyR4r5vOThzi7PvnQVqSR5UVGWBqkkr379ZV569vlapbCwGLvNwWKRKq5ZsxKKF669wKODPUojOX/+LPfv3mE0nrnosmh5GVqvPrDWkiQpu7uHDId3OX/+HJPphPFkxvbDHQa9HlmS0PZs1Sk1XYWAEJav/EYqfBSkUpIrl57he9/+Fr/7h39E2unSaXcYnhzy1ts/Z3NrjWuXL5Mo5ZeVnzvC1cZqdzK+++1vsvPwEbcfPODjjz4g/eqrfPjJTc5srXHl3AWMwZVLKQvKqiLPK6rSorUrPri+fp7r117gzOYlsrSPMYbh+IiHu3c5PjlEW+OKjEaS2WzOZDrBGGhlHYSE6WyKlC7TVSQkVQlaF0ymE4ajQyazIUJZslbKfO7YbylLN7eErtd2s1y673m3lqT1pamDunIxzqJek1+Mqk9NUi2sXEwav7hdYcJG1IF1GbPLSlNU7kK6KqkKX3fbKoRskaSp2zWQPh7a1o2zGJe4wy9uYd1EqONv/aO22llwMcYNB91gVbXUE7IpNjd/7/rS1kAIjpxpa9H+/Ma6enMGV8vG1g9b12Q34YErPfJFYvpjrLR5/eb3WLzVbL9T/rsd1WDQ1tVX0sKgvZpi4U0Xft9ku/jfOq8CY10aPlfCQlOFrP+hFK+wWCmIOx0Xplo5Hz9d45LrZCmFc1uSEZGMSFRMhERal04V7fM/GIuuCsoyJy8KqtD+0mAKiy5cFcxQShgTqoe6+lZGONbs/E5dbS9rhQNWqXxQiVh6mMb8FFXVAFW3uB893OUXn33IP/69f8F7d+5irEUJi1CgRMT+4QHzKufCM2epjCFKEoqipN2L+ZVvfZtO3EWivR1AYI2L+tFGO52sWOTYFVhW2is8d+V54thy5kyffq/HZKoZTXNKXTU2YgfQsYpc1NPmFpcvXWNv99CFsa6sUpYVh4cnPHjwkOPjQ4oyd5ueT/qN70OrjYvsMr7uvTYIY4gSxRtvvMpzVy5R5nOSOKbX7bO9vcdbb7/P4fExxlZ+7lKrkKR0eWjXNwb84Fe+SyeKeXD7Lp9+9inD6ZSfvPM++yfHlLqs13ZVaZzhKyJJMs4/c57nn3+Bc2cu08q6aJ1zdLjN/e0bHI+OkLEiTRISKbDlnNlsRF7MQQpkHJN7qSP2SZC0dtZ8rQsOjna4u32Tg9EeKhF1QcUkSTyjX1TlbRKzhWl2IdUur9961S7mlXjsa/XxVFANQHp6sZpT4FFpTVlWLvu7n8hau3w6rtaMREYJMo5dMg3Mov0erIxpujqYpcQIdbZ0fNYkL7p6Ml/XUgriZDhPpbWfVA0A9C4VLqrI6W7DOWsbX6PP6zb6ZArGlxgx1vkG6totw30WANl64Lf1bigbg+fee8y7IIygsEtAaIXACNB+89HW1CC+GKcAu83/WPSnv//6u77dru9CEmqnP3dRVxa6LYpYOYm9XqBmCfCbG33o/7Cp4W9FVyVFUTCf55Rl6URwY6hKV6e9yl22f1NW2FJ7bwWJDqzZWqTWvhaVL3PiE5lLtwc40GCxKQkb5o9Fa431xfksMJ7n/O5bP+W/+qMf8/6DBxReFxspQewU+mzvPKIz6LG1sca5zQ3SOGWaz7h08SyvvPyyyw4VQjSN9jlmS3dt4fS7Mojivi7LpQsXWe+vEMcx5y6cR0jJeDxjnpe15wgWIhWzubHJ+toarTRjfX2NK1cuc+f2XbIs8wwsZ3d3n51H+0wmU8oqx5iqsV7CetB1hJIbI7dyBoM+v/7rPyRWEqMNcdoiy3p8+ItP+PDDT5gWed2ZTUkuiiLiOOHKtYt87ztvMhvNuP35Te7dc3kQfvbeh+RVSe0sbl0K0TSFzY11rlx8jtXBWZSKqKqck5N9Do72kFKxsbrFSm+ddquNUJaimjujVlV6jCkQQBIrpLSU5ZyympOXM46GB+zsbnM0PAQBnW6HTq9D1nL9laQpKlJ1RjoZ1I4NNZ7w6sXgrx5sKaHO1l/2eDqoEizNC5AIiBOAz1hDaTTzIndinJ/wYYo7Fw0PrHGMTFxFTGO9T5+mrsEdgMHUC98sva8DWGKci4R/NFmoNm7hhww17nXjYQyVfzhmin8sQtCMB4SQVKEGDJ8RSAcwqoGaJYD1JNvfIxi9cNUIwBXEbAeaDcOWYHEf1t1z5RmmXsD+Eog1F82iTXZxX9Zlow8kJmxi2mgvdVjHZhq7dmU0RVWS9LrMdcUsd7qxqnKuTfXiNY1xMp5pWhdkIK3FGhcDns8L8rxAa+3zX7ocmLpwoFrlJaYsqaYzqrkzaLm6V1DMZuTDIdV0gi2d4cP4elVL89Xamn0vxHFNZaqlnpsby92TEUeFocKVABLKDYuMY6bznL3DI7bObDDot+m12uzvH4GA737nDc5sbhH8Plw/VmjjghaCsq1WmbHwEWnFGS9eewElIzq9DltntshLx1Yr44iC1pY0bjl2pSLi2MXCnzt7lsFghe3tbdbX17HWMhyN2d5+xN7+AfP53I2n1XWGJu37wb3fWF/G5Ry9dOkCP/iV75LnM4SU9HormEryk5+8w+179yl11chUGe7LqUdanYzXXnuVV15+iZODfT779DMOjk74/PY9Pr99Bx3YrXAkqtPNWBmskMYdYpVRlQWj0RF5kbO6ssXZrYsMOit00hZZmiAjqGzJdDbzKo8h09kEhyya6WTEaHzMyeiAvf1tdvceMM/HSCU8K7UkaUy726LVzkiymMT3pSu/sgDJx/zVl+YUtTrJa2Xc49+FqQa90WOfsRCF88olE55O5z47j7PElZV2oWFItBUgI1SSIKJGijtLne+zCaShWmENFqfYVljUxi7A1pgwoZqOvR5IA7v1vw2gu9jZvchvHbWvQ9JEEMga4r8H/gCu+lQtoqASCEzTfT+A8LKaoGZ9LNoVwN+1DadGqUwd92yNBYPTk4XaMY0xCkzU9YMXhUMtnvDw99xsQxgQK0AYy+xoRLvXYy4MkzJnXlbklQshLMrSgaNx1nljfQLroIMJTuBVRVVp8sLlY83zgiIvyec5ZV5SFoVjqvOcapZjZjPIc2xZYH3BvqosGB4dkZ+coCdjKApXNtlojBQ+2c5iYzTWUhntN1jnAC7swtPDALm1PmkMRPiqm7hsVAdHQ/KyYuvsOnEUcXI84tHuEavrK3z3W2+SqNSJ1ybcd4WufUVcL/oQgyX9uERwYfM8F85cQAjY2Fqn0+sxnRdM5y7lnZSu2F9RFE4VhqDMc7I04erVaxweDjk4OGIwGJCXJXsHh2w/eMjJyTFFUWAawNqU9LQ1XvUTNpuSKBK89o2vc/XSM8zzOUpFDAZrPNo74q23fs7h8QnaWufS1gCeAFz9QY9f+7Vvs7W+xu6DR3z6ySeMp3Pe/cUn7J8ceWmuIkoEcZyhlAvIqKqCeT5Ga02/t0q/v0oURRhdgnWSiq0kVvtsWMaV25HSoiTMJmOOjw/Z29/hwcO7PNp/yLycomJBFAs3whLSVurYajslTWPiJHJeSJHL57B0Xw2DdZNMNVlMY4X81XWqtf7QXXXxQS22CipjGM/nnIzGTCYTqqpCewfwsii9rsipAYSMiSK3WwTrfx3hoJdZqa0nbYMVBia0kK89wNgaYE1D7AusMYCw1qZmas33HTs1Nbg1dyMj8MEKomaUtehsG2y1/l2TbS+L5i4bF7UqQxuzzECt0xHVm5lXO7iNRyBtEE9qyxnCSqf7tk5MWdxz2BRtQzdNzSyXfSP9+Aq8jtBtijdu3kerBJPEzCvNJC+YFaXLeVlVlMZQ6coDZ+leN1mz73MLlFoznkyZTmfkeeE2XGOc2qiqKIuSKs8xZemt9TgpR0SopMWsrDg6PGQ6HDEfjdDzOboqHYAAKF9FQDiXMYN1z9ZtQqIuB0St3jDCicLKG3SkEKAtO7v7qChmdaVLWWoe7p4wnMx58cvPc/niFTCRY4AevBaSgtvgpFQukYsQNfUJnDVRCS8/96Kr+5RGnDt7FiEiJrMCY6G/0qeqSqbTGVXpCipmWeIqg2BpZV3e/fkvSLKMJImZzKY8fPSInZ1HTCaLgoHWBkDV3rWprDf9GiKEpd/r8Os//FViCdpUqCSm0x3wi198xvsffsx0Xiw2X4I9wWFAlCguX77AD3/t+9iq4u6tm9y+dYuTcc6//ek7DKdjKp2T53OEiH2OAUOeT7HW0u70SLMWVVVQFFOs8NKHlUibEImYNFJ02y1Wej06Lffd+XzGZDri+PiAo+N9ZvkIITRRJMiSxNUN63TodlusbawyWBm4JC5JgoqimqnWnkihR6Sos1XV+FcTIz+8S2vmrwKqIogxTRZJY/d1dctHkwnHwyHjsctlqCuN0c43MFhAQWAMSOUSEwsh6l3eOIXkEnOsmWRgosY0gMQxKWFc5qUAXIE1LjNBPKiLeqHXInoNNgsDlhdy3P++mqbxBQ9D7SShnCJxWY/pQfhU/zVBs9Gg+vP6NWC18Z4RwgOn4zrSuoQzzf9cRqLAhILegFpPJIVAeb2WJ471RhU2Igfapi5FHfoWYF5a3vr0cx4cDYk7XeZlxXg2Z5YXrgpAXlCUJaV26oCqqpy+1ftaNquoWgTaWGbzgqLSaB/hpWtvFb9Bal2zK4QElUCUodp9umubjGdTjo+PmJwMycdjzHyOKQqs1S5rk1J1XL+LpHKGPYxBNEqqKFwauEhGrmqBdCWtRSyZFTMeHR7QG/TpdVvM5jl3HuxSGMHV65eJoxSs83Aw1qkWjDW1tKBU5MJI5SKzvgPyYJ+QnFnb4uqly2hTsbLSZ219g6KsyNodBqsrGFzF0vFkShS5NHvT2ZSiLOgPVplOCj7++BPWNzacGmA44sGDbfb29pwaoLF2jF4Av9ZVAxTcxiyl5drlS/zKt77JdDoEJeh0+1ij+Mlbb3Pn7j2KsqpBJfiBK6WQsSTJUl555SXefP3rTE5O+PzTT3iw/ZBb93b44OMPmMxHGO3Gu6hy8mKOEJIs7RFFCZWuwEISt0iSDlGU+OqlBbaaIbAkSYSUgtl0wnQyQQjnZWKModSlY8ORZNDtsba6Qr/fo93KnF7VJ0rvtFukWUKSpUSxq0W2MGw+ruqr3fUaK7TJTp+CqU8H1WYtkKUL+pVaVprJfM7xcMTJ8ZB8PMVUTi51lkLHSkVjMBASGcWIWLowzDq9VuNh/EL0LEvYEF8fALBhXGo+WCjorbW1ZLzYm0W92waGHHaq4IZkhHWWafAlub2uK5wrAGsIZvAJuN2aWizc0FfN3dC9dlnvrX9feHcgYUL7RD3YYTNaaOUWGaiUcok0XOTwovqsS0DhahpJIZdgt7EF+xd+V7be5cZ6eLZQGMNnD/b56PN7dDc2yKVlXhRMZjMm85x5WVL6R6W1MwpW2uurnRdF0L9rY5hXhqK0CBuhNVRG1KzfSRC6Hl9LUH84B/q41WXlwmWSwSrTImc0PGFyckIxnVCVc3TlgNVKEH5Mwm0aY2p99cK30Na9GhyfA3M5Gk3Ii4qV1T7ttM3+4Yi793cRVnLr1gMOhidYXWCt9HPIl2631lXCiBNiXwhxsfzqrRoXsaV4+fpLdFodSlOxvr5OmmVsbK6Txi6Ovygqhicjirxwxjyve44VtNsdPvnkNsfDESsrfSpdsXd4zPbDbU5OjijLorb4uw10wVqd7txirfZ6aU0cS771xmtcOHeOoihQKmJlsMrO9gFvvf0OByfHaK0JPs21/6tUqCii1+/xve99m2fOnePg0QGfffwhw/GUn773C05mOUnWIi9mtYohTjKsgLIqXZWIrE2adkijjBiLrSbM5kdM5yOm8znj6ZTj0dDlQ/CGtdlszGw+xlQVsYzZWN1gY32DdruDVK5SQOSLNcaJotNv0+m3aHUykjR15XSUIlimJKEySRgpuWSYdlC0sKE0y72fPp7OVE8ZQerr4S4wr0pOJmMOj44ZHp9QzHKXBBbnMBxFMQtMcczKaBBSoWKF8AW6amD1Xj1NK3pt8Kn1mKZWBwQG23T5soDBeBHQYISpxTwwGCHQIhh+qEV4i3Mzcu4SCx1dFXYsIbBSeku8cLo8JeridU597oHes1zhxdHaEo/FSOuuL2wNxjVHrk2PBunDM92zd19qPOp+lc7IIiPhHorG95ZfL9RHjZBjb+FshDL4fw2lFnx+4x5Rt4vIYvKyZDKdM5rPmfligbVutXLAauvxAoOgMrYGXyUF0rooeen7yEiLVsKVZDEhN4QE5ZJrW6ORUhBnLVY2NkjabfKyYDQaMhqNyGczdJljvNjrANT76Qo3r5wx0PoaQ14FUIvm1pFi36eHBycoFdHttJnNKj765Db7+ycII3nnZx/x1js/Z1pMah20tc5/V0lBEsXEKkEsLavFBtb8c72/ygtXn6csSxCWrTMbnNlad4zfunDOk+Exs9nUqdFK7cp4W0Ov22E+L3j/g49cVv44Yp7n7OzusbO7y2Qy9uJ+RTDWLXStukE8QiE8y2DQ5zd+9AOk92RIsxaddp/33/+YDz/+lHmR+zkqGnfk3KyiJOLMuS1+4zd+RBpFPLhzjxuffkpewNvvfkShNVpDEmfEcQuEwlhQMiJSqSNfUqAoKPNjJpMDJrMJsyJnks+ZzXMiFdPp9sDC0fERR8cHFEVOK8vY3Nii0+liwSfGli6AQwhXHl1Cq5uxsjqgP+jR6bVptVskPiG2kIvNoqYgXsWxGDRb497CU+jJx9OZamAOSy4ZDswKo5nmc06GQ46PjhiPxpSl9tFXvnxuyPgT8gZI4Xw+vZgkhfS7gHGTk8XDeN/MwAaCTtW3avG5MEv+l9YGPehCNKcGL1EDeHPXqayz6Ne6kgZICyFqkXLhSYjXvQRHeVcZ1OJ3NmMXwGJtDbg6sN4ayMPCtHUgRQDLBdCG6y0ewWMADwRSisdAkqCyUD4arma+YTGIJYbbLAoYvmOt5fbd+4xmOWmnSyUshdbM84JpXjAvSvKioqg0hXZGKweswVsD5h54ta4Ai/QhVhoDkcSmMSZSfuEZV9uoyDHzGeODPUYHOwx3H3D08B5FXtJf8EvCAgAAs6JJREFUWaO3vkZhLcPxiNlkSjl3nifWLFQ+bgMOFTGD6L18f0K4eaikQCm34R8eHZOmrm7WzdsP+MWHN5jnFUVZcXQw4l/+3h9x/2AHY0rnFlaVCAuRSohV7EI0xekrLV6Hf5WQfOn6C2ysrJFXOe1WTKqoE28XRcVsnjPPnRtarU4R0B90EcKyt3vA/fvbrK2vYoHRcMr29iMODw+Zz2doU2J0Va+dmq3q4AAfog4NQhqev36FN1/9OvlkgkHQ7a+Q55a/+Iu32d7ZptK5L763sJ4L4aKe0lbCCy89y3e//Qbz8Zz7d+5xdDDk8HDGZ7fuk3VXiJIOUiZEKiNNOiRxGyVjsIaqnDKdHDCdHTAvpsyLgqJypbhXV1bZXNskkTHD4THD8REGQ6/XY2NjkyxLmUwmHB4dUunS5YOVUFlNXhVoNEmW0l/ps76xwvrGgMFKh26vTdpKXaCJ9GvK5x95EhGtgXdJ7Hv8+OWp/+xCx6A9k9BYZmXBcDrm+OSE0XDEbDKjqjRKxWB92WQ/k4WQLs+jT/wvpSCONTKSzrfVKZ2WJn4AAMsi9rbWe1i8KOwZrn+NB2yrbdhUvXuU8ZVhjRcDBT6uAWMNyjowxFiUki5frAy7siv4EgxrNuxmTb0tdpFU2i6CJaRsRvks92ktkrO4pxpBG++HK4S/3Tmpq7mGkzQneTC+BUam/CQI6gghJKIR62zNwrjWGAEQcDQcceP2NlfXB5w83EdWBipNlBfEKgKlMISJHDsXMKtRVnlVgKtWWWEpjMtTWhlBNc/pEaFiQ6QqKmWZViVJMSGaT7FHh0y9vrasSrCCfq/F1sYq7cEAEUVMJhMmkwkqTshUjFUKSeL04AjKqvL+q4+7d1uB91mUNajO85LxeEp/07ks7Tw6ZP9whFQCS0mVG97/4GN+9uGHnF/dRHqdpcuOFSO92P9EwVAsxlh4MXq13eMrL77Mg90dYuX8ZLWpAElRlJRlRZ7nyDSl0lXtHtjutFlfG3B0NOTzG7fZOrtOr9dlPJxweHjEw0c7dDqOiYnYGzKNkxyEcAm7hRa+1pTCWIOwLi3f97/1Jp9+dpPD8Yw4SRkM1rlzZ5ufvfMua6sD1leyxf7r14RQEoWi3W3zve99kzu37vPJ5ze4ffMOa+vr3LzziIsXr3Dlwjpp2iaJXM4CjMVUBWU5ZTY5ZjIZMp3OGE+nTIs5SBh0Bwx6KygUx0cnDEdDEIZut0e318daw8H+PicnQ4RwZX6M1ZTaFR5ECVQcIaOIONGkiaTTTui0XA0sja2lrTqEJhAbz1ZFWKOn5tEXHb8UVB3bCgvfLb5CGyazOcfjMSejIdPRmHwyw1S6XsjO+dt6QFUgHa+T3jFaRRVRHFPMnYiCV8HV160BuSmUUr/n3pW1GGO9aCdCmQkDInLGG5/rzv3W7RLOmi4COLrQPom3FgvhxE8pvcionCjq2/ikjaqOq3cB9Q6kqbzeTtTM0lpdMwR3Hrcwwykdc1gwReHOVverCd4APi8tuKCA5UQvoVH45BYLv2KJqIvzOHBx9zweT5nnOY2fEiuFruAXH93g+b/xLUgURVkhcMxyWhSgJIlVREiE1EilEFrXbm3WOOlFRTE7R0NUVFBimU1n9NMp59ZWGHQrlBJo6UMk1IgSxc7hESejIYOVVS5eeIaz7Y7PvSBJOz3iVttlKcrnqCyDOMGKymW/pxHx95jRwU8H4QweKlJEUcTJ0YSyMrRaKVjLaDKjKDXdbotur810Mmc6nvDHP/5z3vjyK2z2e4R40GCYCguwXpQ1jEuWwdYlfn/+6nXe//Qj9vfuY4Wg0m4Dz4vKSVHahQmX3kdYa00UKdZX1zg5GnN4OOTWrXu8+MLzzCZzZrM5Ozu79Hz5k27X3agKKigtACeOC1cS2Q22cQl41tZW+LXvf4//+p/9NiKJ6bTbTMYt3n7nPS5dvsirrwxQmaxTW4YENw7QYjY21vjRj77PgwfbPHr4kNs3b/OlL7/ILz7+nDOb5+i2gwO+oNRzynxCMT9hPhsxmYwZDqdMpjnWGtIkop0kYAwnoyOGoyFal6StFCUV+WzO4XjMbDLFGEucxJRaUBUlRZFjscRJ5FzsyopYRSStBLnSYXXg+if4tGttmM/C/LceKTxpaZI9P55PE/GfCqqm9n+0tYVYG8OsKDgZTTg6GTEcjhiPRsymM3RV4TIV+eQbgc0t5E6vb3LJIpTywOC5dmBmC9BciFJ1hirhJ4NxZZGtLysRR243UpFCeUosIlkzY+eTJn0VSuEX1HI6QxeK1xCjlfRhmA0XjNDnrsEuJV3DWIYXQVVgn9b3nXAs17p8bA5M/fedgc13tQl6v3qrhCCme35r/UIO2eaDz2y9o9YGs0V0WV2K159DYpFSOcOcsWxvPyIvqnrqAE6RbySffHyD+Q/fQKQJ5XiGrCpnQZcVUjldZmyjWmKwhDB0641lLpZ7Mpnw4NEdHg2HzK1ltdPh8pkzPLOxQaLcVBSxQgvBwdGQ7kqfC1evsr66ytbaOlIKiqIkiv13ZUyr16csc+bzOVG7TQghdjAmseiF/rR5dw0joVJuiZycjEBKl23NWsaTOVhBr53wzTde5rnrL/EP//F/x0cf3OBnH33I91/7OrEQREniVDHWbV5OQDm1GoPM1XxbCLpJm2+8/HX+5R/c52QyBSExBuZ5SRpLyrJECmq9dFlVFHnJfFagpGI+K3j4cJ+tjXVW11Y42Nvj5PiE7e0dup0uSZTWyVGE7w/j53KdfMY6g6cxLkz35S+9wM/fe5fP7t6jm3VYW11je+cu//YvfsYz587zzLnzxCKu54kQPleXhLiV8uzzV/ju997kd/7V73Pn1i3OnNmi08r4+NMbrLz6KpG0YFyEVFFOyfMxw6GLrBpNRligk2YkSYq0MBkNGU+mlLrACqc31dUQqw1lUbg5JgVaO3fOqnQeRSoKqUuhlIJISrI0IlbQaSXEkSJk4asqS1VqXHiuIzayoZN//Pgriv/Wn1SbIP67OPDxdMbJaMzJ8ZDhyZDpaIL2IWTGutLUcRQRRZEbRK/sDNZrF6qqkN5nTFe6XgiNWV/rAUOylUVaN0NZOCfhJImJfTlbqaRz7PU6SRm5/VlIUacdXKA0Xv8r6qoGtQVdCl+bXtSAqnxOWffTBet1rmHL7hZOxRAY8UJ9EgbHpTS0jtmbwGQ8O9XOLamstBMB89L71ga3J7tYsHZZYyeldKJoFKFiRdA+4F2U3HUFCCeGI9wWN5kX7B0coW2IAnL/SuGKs+3s7LG9s8tKu01+MKTQ2mWfKj3T1ZETT/XCjUhKf89lST6fYauSS8+cBylpDXrMS818NuPB3i7D2Yw0Sb3OygHy+vo6z1w4x7mzG7TSBEVBUViEcHPQGOtEuiwh63SZz6YURUkaJW7vlQtVilQK/QShPGyUUgqMNpycjFBRjIoirBFMJjOklKSp4uqVC/y9v/u3+fCTG/zZWx/x+z/+MS9ev8jFlTNu8xWLRC4LphrGtb5gQwJzYyMRXL94mUsXrrCzd5d21gLr/HdbaQtjNEVhKMvSzYeipJiXzCczAtkZD6c8fPCQl156gSxLyac5B/tH7HQf0W613ZqQAo2f08YbbLUGIYmEcmozvxG3WzE//NXvcfM/+y8odU6SJPR6q3z22S3eff89BoMeK70VZDOhNW6N2Dii3Wvz5rdf45NPb3Dj9g0+//RTVlfXuHXrHhfPnOOZc2cRtiLPZ+TzCcPjQ/b2HzGdD5EKYhXRytrEUcQsLyiLHCkha2eUZUWR5xRV6VKKSkkkldPha+f7bBuJqKNIEquIVEVgLUmiSGOJzJz0ZG1MUVgmk4LJaFKHYbtMZ8tpNWtcbPDEJx1PBVWtceWoMWgMpTZM85yT8ZTjk2OGx8dMTkbMQ51zLGiNTFztbqUUzqbuCLP1CTukkMQypZX1KLKcST6lZmDSuzkJB7xOaWy8j2iMtTCb5kQIWp0WcRYjG+5NUipPcJ2uJ4Cy8Gyk1pHUxplgafa6RvDRFhLbqHRgwoIPZWVsI09pCMsUzcTdYSPxDNenSgy6WMcSHHdo7vhg0VXF+OiEe9uPGI3nOHuL719/LUwImHCvhQfYOE5YW+lzZmuDdjtx7VC+zeBr2Us/9E7t8mjviPGkYGF6o1bdRJEkLyveff8Gv/7GyyAjZ2E15SJKyVq0cW2PVOnduCosgqqsKIoKtKXfyXj26kUKrSm1Jc8LjoaOhYDXgWrDysoKl86fYXXQJlGCSDqfUKTfdCrHRERZoHVFlMRk/QFlWdJSEp/XB2urOta7VmSH28O5pSnlxr2sDKPJBJlEJLFyBkFdkaauyOD6+gZrvQF/52/+Ku+89ymffn6XT27fYeuVFTLrortE1EiR6XVwDmjD1mdqAAqtEEA7SXnjq2/w3/zOHQY9Zwm31iCUczvUpaUsXa6Esigp84LpZErliUxZlJSlYefhQ86fPcej+R7T6Yyd3Uf0Bl2SVgJKkcTCmRWaAAHoyDqPC2NdUWcpuXzxPG989av8+Kc/odXr0+32mI1O+Mlb73LlyhU6z3ZIE5/QWrh5LnGJZOIsZn1zjR/+2vfY/s/vcf/uPdY212llX+Ktd96l04lJI8t8MuT46CHjkwOqqiSLUrcklSSWEmMqyionihRJ1sYimc/mUBpKKoQQRNLlTHWkLAT9uOQyQkRIoVB+wxPCkkTShavGCUm7B6LFydGU7WyXNHXkwNhFGZYFqQtj6qSeYBR90vFUUJ3OcpRyrjoInJ/idMZweMLJ8TEnx8eMhkOKfI7VGl1WWG1RvmCa20kbUiwB4pUXq6HV6VDMC4q5cy0RddW+hp+mcAYkIQXTaYFA0On1SdLY6U0lyMiL6rUoT+28vzDiBLYZGKm3Ynq22mSqNJ6dLrS21bvwRhlYHdT1xaWsReCF1U3Q1HdifWBDWeL80d1uC869CCRaxowqzcGsIDeeTaM9m1Y+QMC4CpHGbULGaHRlMPM5x5MTSltx5dIFXwpY+iTbTfB2CV6KvGR3b5/ULhhzWGwISRRHWGt4/xef8q2vPI+IwApDWRkEJdqHNsTa6diUVGDdxqm1c6eqispJO14MV0oSx4JeO2NjbcXpvCpDXhbosqTf77G+vkKn06bd6xAnCUZrrK6c25v+/xD3n12WpdedJ/Z7zHHXhU9XleWrgELBFBwBkKABwe6ZWZKWpLXmA+iVlr6J9EZr6b00pkczPT3d090ctqYdTYtkkwQBFAqmfFWWSZ/hI6457jF6sZ9zI7JAFLuppVFgFaoyMzLixrnn7Gfv//6biHNu3UUsF0s2S+EfoqSwucSr1AnC+SVsbIBU0lTStj1N0zIZlVRlSUDSVG0mD+HG1iZGG7765S/zhc89zU8++IB33r/Fd7/6DQiJD6wu4drxQmM3pGSoy/eK3BrS9UTFk9du8PILn+P9D9+mnIwYOHA+RHzvxEKv6+j7nqZu6DqJm1EaXC/XYrlcUtct0+mUs7MzTk/OePjgEZPxmNzmYgPIAK+lexsFasD5BwgrYK3hN7/767z9/rvM647SFmxt7XL/zh1++MPXuLK7x7W9q3Lvrhe2KsFtlnJU8fkvvMR3v/sd/s0f/QkfvneL2XSKdw2v/eynfPWVFzg6vMfy/BitoCxGRN8SfI8g4j3BB+H95pagLF3Xr+lhWkXMACHKBWdwEyUqeU6UHMJiyh7XvFqbF5TVmEhGswDfe4J3VEUhz1AyT9JaFJhr9HLdRMVLgZq//PGZRXWxXIFRZJl4GzZtz3y5Yn5+zvz0lLPjY1bzOb7rcV0nPFUfya1NheLi7tFcjDzeRYK1KG1RNiOvClGmuAhRpbA6lXxHRMGkbSbZ875nPBlTjtIG0UiIm9JKJGjacNGUqjW+qEiLqXQjSTG9yODSiUw/dJbrgjocBlx6MCIXMAH6YimRXm96XhhQUG0MQ0mTRVjERJ2WSDEtOdKboRQmaqbTKaPJGNUFDBqT2AhDcYzpYYvOS4FNBPzoPcq1NK7D6UBWZKyVV+uxRck11YaT/WNWTUdlLCotzNJnyOvWGpNnnCxq7h4ccaWw6BqiV7S9IxoDvSJYUTNlLm2XST4MvVuLA3onklRlNdoatFGyTBlPyGxO27XUyyVFlrG9ucFkOmE0mZEVJShY1gtc09CuahZtR1c3FHnOKERUZpnMprKXtBZCWjimDlUNb14qrMYYgrmAS5bLZYrsiFTVCK0hz6x0gs6t7RW2Zlv8p7/3m7z18S3e+/Bjjpcrrm1eJTcZRIWYqqTl4uWN8SUakjyX6yqLipAby9e+9FVuffQ+4DCZlcWVC/S9p+v8WtJb1w3eJbcuJFqmaxtGuxscHh5w8+ZTrFYr+q7h8OCQzZlIPE0SiwSdBCgDR9ArlBav0xAlqyOqyNb2Jr/zG7/BP/v9/xf5bJOiHFGVM3728zd58aUX2JzNGI9GaXIjvR5ZwFlrGU1Lvv3r3+C992/xyZ373HrvA8bjgjfffo9RpdkeQ5FloMC7Du8cCo8xFqUiWZaT6RwfNcu6ZT6fs1gsIEYyYxJ7Qa2X6APcZpRJarI0yhvpoK3V5EVJVo7QWYXvFIuzJefHJ1gVqfJM1KAhDIJDlI/AUFzTZPZY0/QfWVTbriMCnXNoa6jrmvPzc05PTzk5OmJ+dkq7XOHbjr5ucW2PNgVFWSRpGSiVVAuElACp8RE6F7FGEZQlK0fk3tGu6kQ1UGn8lFc4PITNqiEvK8bTDWyeiO4JR9VGJ5WRqJ10IuUPd+7QiQ7Y7EVBlUJl9CXO5lBWUs6R4tJpxVBo5VeCyV4EUKzHfy7w2ItlGPjg8d4SQ/k4DhsiOiS7RBS22MUrz8l8QQiW4GGwcQMZP2IyWiEIJ9N5T3A942yDZ564wuZstC7uRC2xIkR5X2Spyv7REUFrjLXg+7Q0lOprMsmMslq+94d39rn+xacxq0aWY97Tu4DOIvhAxKG7Tkw4UKgEUbQDz1KrNMEIVCJSUUNuLLm19E2D8ZGyzAmtY3G6oK0d5WhCXlZEZWnbyKP9Yz75+GMW5+fMplOuXt9jz3dkZUGRrp9Kh2EcMO3hXU3jnNGakO4dY1IUeZRk2BgCk9mU0ahif/+QVd3waP8RPniszvn2N77GS3/8h9x5dMjrb73BizeeZqR1Eq0IPHOBrSrWfDt55/gb2mZ0jFzd2uPzL3yBP//LP6MoLdooXNPTNB1tIxQr7wLLlWy7B9PpGANN3ZDlBW3bcHp2wvb2JocHByyXq7S0GpHleSpYZn2fSbMxsAFUwoY9Pkp/8OpXvshPXnudu/tHmKJktrnN/Qcf88MfvsZTN5/kmZs3yVJXHVNlldjsSF5lXLm2x/d/93f4b//bf8z923fZ2Jrx1M0n+MlP3+D7v/4qKEvXLvG+pRieW6VQSKwOytIsG87PRewhFDbLRcx3wlK9NBdaKaLSKLxMgUZjkwhmUHMZWxFDxtnRCQ/vPqRZrjB4cqspc4sP2Xr/4ZIpY0yN1GcV0/+gojoAvwRP6GCxmHN6esLJ0RFnxyfUiwWu62jrFc1qhe978nLKaDymqPLkealRWELs1y9MIaT/EDVKl9hcM1LgvaNvhUxtjMQEy6iYp+IMm1sjNjYM1aiiGk8ZjUaMxuKbWI1K8U8sC4pcTLGNzVJeuE03lIwGw1Z/6BasUpiEzyilE2dzIMhftP6Xm/4BTxzoXFFdGLOw/uxUYtWgFJMbwDu3/twQhFa1pncEj4+BpuuZr1YsVksODg44Oz+jrhvh9noZdkIMCT9SjKqKIrNsz8YUVtOsGqFrKUVmClHruB6DQueKh49OWKwajM2wWUD33WOv2ViLySyoiI6GT+4e8O0vvUTUBoyEswXxPpZlj1L0IaalpWzDXe9Sh+VJmgSZYrzCu8iqXuLmLUZLVxhC5Hh5CupsLXcV132PsZbOdZwuzsgrcR06nh8TlQTpbe3sUE07rFL0XQuux1ibaHFxeMOkqJsEi6T/CWwBbdNS1zW7e9tsbM7wPtB1PZ/cvkPbtVSjMVd29vj+d3+Df/g//c/86Mc/5jde/Rqja09LMHS86FCHeWW4W+JA9EpwgDTRw2QTsMrwlZe/xFtv/Yzj4xNGo5KTVU03CACc0KuEbhXX/Nq+99SrBmMM48mY+eKcyWTMaDJmuVhwcnLCw4ePGI1G64WtufROe6XQQRZX62Vu9KJEqgp+7/d+l//iH/x32KIkL0s2Ztu8986H/Oznv2B3ezstrS4tddJC2piMcjzi8194iW//2tf4o//3n/LJh7eZjKdoRrzxzse8+PQNFsuaqpR7LXpH1zpsYTFB0fUt5+enyf1/4JFe+JGQ/r1OzFAw5E3JEktjUh0xWYYyFu81q7Ml9z++z9nREa5vBfLQijwzuGAZAI1ORSBx6UlhiuuJ8e9UVB2dc3gHvXecnZ9yfHzE8dEh87NzXNrMtXVNXwv9JC8KqnGFsTpJ4qRLXRPiTVwHcgnmaoCMajRFK8/i7IwYpOM0FkZVwd6VbfIyY7Ec88orX+Tlz7/ME0/eZGd7j3E1pcgrMpNhlJHCqAZ864LPelEqho+Lm/3yh2Jo8Yf/+9SfX/rl418v/d76y1584vAqPv35A0b7qa9wCaNK0lYcbV+zasVUow89vRfljUainq0xVGVFiI5mdYY24qHa9z1aW6piQu8kgE1FRd0v+T//X/6vBCRbLMs+vR+/cHoPKqCj4nzRcvfRCVdzQ0CWRTpIh+bFaBZjBR9VSuF85Px8wXK5IgZNkWWYGInO07fSEVqtUSESnBhWq+Ty5ENYF2SjLdev3eDK09fJRwVBB3aubdH2K5arOcvlEqu05GClTrltajIiNs+T4/vjb/sFQU0+ijzHakPbdSzmCyCytbmJscLN3T84oG1bGINRGX//t3+Xdz54nzc++pgf/uw19qabbFVTYpR7foB01u9qTJLWiGyWh5tlGIWIqKDY29zh1772NR7t7+O8w2hYLZc0TSsjKJqmEQPpvDRsbk85O5FkUmU0RWEJseLo+JAre3s0TUPf9ew/OmAymZAXYvZSpIbBK1kmK6UIyhNCmrxi6jq15rnnnuHVL32Rn/z8DYrJmI3pFsv5GT/44Y944cXnGT8/ocjy1CVKN2eAqAzGZky3xvzmb3+LDz68xZ37D/lk8hHj0Uu8/d4nTEYjdiYTgu9oW08Mvdg2torOeeq6YbVaPWbQIzabSfU0jP3qEg8mTbmDI5tJdEulDb2L9G3D/r199u8/oE6wj9D/FNZI9powejKGwzCk5ZAesNvLzkmf+vjMolo3tdi7xUjd1JwcnXB8cMT58SldXdN3HW29pF2txNggH5FXJTbPEFMML2+OAoLY2ukQKKzGGCu8sgAuydGmG1tkmaFpWqw27GxM+c43vspvf+83mG1OWK0cV/eeZTq+krqMS0/J8H0YCtXlEnH5Mz9VFYeSpy5/tnr8U9Z/+1MbZHXxi6EYq+G1pM5VuqQB0UiP8WBkvIb214grMHB34/pEhoyiGDErti9tr2XrOqi50hFFiA6XzRIv16QH3GJ0DiR5r/J8eP9d7j94BBhU9NKZELlQ/sS0afcCEwdP5xVvvvcRV159nhhrvA845wlYYRhE1vS43kdOF0vu3LnPcrHE9dJJxN7huw6FJrOWzFqi93Rtgw5QGkuVl0zGY7a2ttje2GZ7e4cbTzyBrnJ65dCFJi80eTGmKAxVWSRIydG2DXQtvmuxpchNhSN88YZeHGZpZx0VZVVQFJbVomaxWOKcZzIZURY5ves5Ojjk7qM7VOWY8WiTG1du8p/93t/jg//iv+THP32dVz//eaZPPieb5sil9yU8BkHIwy7vt0xKgkELv9hglOGLn/sSb7z1Nj974xfMlwvOzk6Zn6+4cuUqbdPhOofOFTeevsZzzz/N27/4kKNHB9R1w2i0xXhimJ+JOmk6nXJ6fMz5YiFpBtMJNpmJqCGJFcTFy0vXKhOahiQfz63hN3/j2/zizTfxKR56a3OXe7fv8sMf/4Rre1e5ur2LwV6Sego0Zq0hlgVXnrjC97//O/yD/+Yf8eDeAzY2Zjxx4wpvvv0Bv/mtV+namq5vyazEjfd9T1+vRCLc9XRtR58YM6CI4TJkxxrG04hApk++w8qk51BLh9q5juV5z73bD3j0cJ/Qr6SoMuDfEasVwWhiZojRJtaOo4uX3su/66KqdS6NGw2npyccPnrAycE+9XyO7zv6rqFraoLrUdpQjKdMNibYzKRt6EWbLK740tXkQWFNhtIKF1xyqJc3eXMnwyrHCzef5vu/+Vt8+ZUvkReZjCZbGagSc4GQXbzYSz/k5aL46Y9PQyLqMy7OL38t9di/Pv2Lx347DisKlU46edP0WpQfHv97Sv700gu7eMEKRGQ4fN5Fh7seeZCxx3lPVDY5rgtz4uKhDRL9EXv+6gd/xeHhsSjPBpeoxy6O8GiDTqEmMRLQ3L6/z/xzN6mCxEQ3fUfbO2FIBHH7x0uBi33Pla0t7M4uy0XN6ck5XjtsXpGlcc1ozXRzgus7cisyz6tXrlJmBZsbM8F2DSwXp+AK8mkp0lNdQNRoW2ByoaG1fU/btkTvKbLkLQF4owl62LrLdQ1esDKtJTm1zC3j6YiD0yXn8xVd4xhVJZPxiKOTE5bzJYfH+3zxxVfJtAU0r37+y7z09FO8f+8ub73/HjevXGdWCI7tQ5CU4QiedGBBMqbQaG0v3l+UdIVpfz0bbfNrX/smH33yMWfzOZvbU5584oaoflaW3MJod8ILLz/N3u4Wh492OHh4yOnxGaNKXO7LasT5Ysnezg5FWVA3DUdHR8xmE8qyJMsLlDZpIStdshz4SRBgBFoiRKyGG09c47u/8R3+zR/9O0azDcpqTJlNef0nb/D5z73A1nRKlVsRfSQ3umHjHoylGo955ctf4Nvf+iZ/9hd/yd27D5htTNGq4O33P+JzLzxBt2qwWDTCOGlbR9N0NG1Hn+wHldGS5BAjRNmlRAa+cZp61tErsitQWuODeAQHYHles//wkOPDI6xxoPSleCIxLjcarNZEawfPa4iOX4Z1fvnjs2WqEbquZXF+ztGjhxzuP2BxfkLwPd739G2L7z3K5OSTMbO9HaYbU/I8E61/6iaHtl1wxSGORFRVWZajbQYEXFRs5hXf+ern+c++/zvsbe8RNKxWC4LvKcsxKPA6Q5si4VGfXRT///Eh5i0BgcvhaH7CW++/w+HJITubezz71LM41+L6PvkgZGQ2JzMS71ykOG+tBlL5pbcyPl7G42Nttlj+oTRG2fT3hpFJXPkDHSfLQ/7kT/+cZtkReiUabP8pICLGtbepTp2zCoGma/nw9gO+eGMXqzucUZycz+n6hnFVEfNcRnoCs1GJKiPL8yWtd8zKgh6F8oHZeEyZF1R5waSqaOuaLLN0ztEvlzi1om9Wwi82mnxRYjdmjOKE0cYY1Yvkt+slbG9ggHRdK5hxkV0o5mwuOHCCgdQFwrKWD+dlwcbmFnxyyHLRsGpWTKYjZhtTHh0cohTs7uxQZdVanbYx2eS73/42t/7JP+anP/s5r778MqNrT8pYHYKM0sO1HDrVYRJJS7Q1j5lB3CFKns899zwvPvMMi8WcWTWhLEacnZ4zrkpefOlJ8q2CG9f3iDGwd2WXPP+IxbLh7GzBBmNsJnuEo5Mjtra21o5iDx/uMx5PqKoxxlipo5fgMoLC+4siFaJEF2lj+fa3f42f/ewXnC1rMIaNrR0e3P+EH/71T3jqyae4ea3ARvOpUVygqZiXzDanfO/7v86tDz/i4aMj7szuM375Be7cO+Dq3g7bkynRtYktEnEusmpSWCQRpU0a6aMYBUm7svZGFbaJF//XEBEvfLWeHpUGq3LqZcf52ZLFYoU1jizL0lKboWNZ//xaR1HwpQlEnN/ADOLDv+HjM4tqloOfrzg7PuD4YJ/V+RnRiXVY33eykFCaYlQy3dll48o21aTCZALEa63XJrmX5tZkLusFRM4yAfh1IKpA2xsm421GozG1qzldndEs5lSFUKiKPCc4h9Z5AqU/hXn+LZ3n/xIfEYQOE3vevPM+/+O//Be8f+tDXIhkec7mxqbcEN5devMMRonWemtzk9lkxmw8pipLqixjVFZsTKdMRiOqopR4XmPTJlToWXJ6J5xSX0RnrLfQCRv68M6HvP3W+/gWCdML4tD0aWRkwLEGDbSKGo/m3Y/v8uK1PaxSjEYFbd9zejrH9wEmitwqtApYo6RziIFAoO4bwYJ9xC17Rl1Hn3d0XVqoNfLe9V0vfOJ6iQNUbinakg0byKYWVEnXtylsT+z+MltQlCXW2hSvrC4sHTsHiRa1xvgF+pONfwj0ITCZTjHG0LSOVd2gNcxmMyKarg8sVqtEGxpiuHNe/crX+dd/+sd8dPtj3v3oQ67vXmVkcnQSw6wtiaMUTRlXRYmElnwst+Y2xdTxewpr+earr/LJnU/YPzim6zuqqqRbrXjhxWdRIxmtV6uO2caYalzRd16EMdZQVRFjLfV8RV3XjEYjFos588WC/f0DZrMNsixDK4VLghaldMopT+s7I51hSNdsa3OD7/3Wb/KP/uk/p5jOyPKK6XiTN3/xLp97+W22t7aYVZN1IOK6mClZFhVVyfUnr/H97/8m//C//332Hx6xtbvFE1d3eff9j/n1b3yRvmlwvqP3ns5JaKc2VpaP3os0PX11jRixayWjvgtB4oYiwkBYM4JkoVfkJSGULBcdi0VNXbdkVhzwtLlQAw5NoHSsiS5mAkUmjmbWaJz71er/zyyqxnq8qzk/PWRxdoLvelQQ3Mz1rRQFYyimU2a720y3plSjkixRqB5fwwgoLzZbYhyhrCLTBq0KTAFROVaN4wc/e5vRVslss2RZ11gFVzY3idEyI8PoIJt8W8KnOtXLRfZvHe3/f1SAVaKE3Tt6wH/1T/5r3v7wI+rzXmI4tOLunYeUeSajUupQAhCN3AyZzciMkZgPFMZEkdtlGZk25DajKgrG1ZidzW12tncYlZWM0qMJT1y/wcZsSpln5JlF60ziPZLRzA9+8EPOzhYEH4WONRx8nzqgHjf/JhXIyOHZktsHhzw5yZgUORvTMb73HJ+c431gMi7JdESHKAukEMEabFVQe0/nHIs+cFJ3mHguEkIl8EVAJKMQMEZRjks2yg22tsbsXd1mMhthrJLOm4jNZQlRVCPKqlp32M57TAjYoFisOjIl3bMCSHBA53pUXdOFnqAim1ubZIUoxuqVhOFtbm5graVetnz80W3i1xwowWo1mqtbV/m1r7zK//AHv8+PX/8pX37pFUbbe9gkgvBJBHAB3XgZV7W4psUEzcQQBONEMMKoDM89+zzPPv0Uh0fHrFYLyrySL4KlLIvkAdAyqqaUZY5zQSwDVzXESFVVFEXJ8ckpN65dxzQNfddxcHjEbDplVObie5Coh0NhjTrFsAwUK+URp0bFV77yJX742mt8dO8BeTFiY2OHO/du8dc/+DEvPvcco2ee5SJJFsE6keIUbcZoPOGr3/gK777zIT/40evcvX2P2WSEijnvf3iHZ2/uUZ8txUAmRPJqTIiBru9pe4EjFQqvhO89LCxilGkLkM5Yg7UqFVRDUZRU4xmLuWI572jqjq4Tr4AAWBsSI0Q95tam0tLLKLW+TloZ7N8VU10t5yzmZyzOz3DtoO33uF7I/jEGbF5SjkeMJ2NGVU5VWhkzB6CY1IIbiVnWWuJUoh5ilyNK++G2w1vN7cNz/v2P3+ILL98kKy1GKVp3zNmqZXezpcpLttBMJhkX5BBY9+5clgo+Xjz/l+hkFREfHX/xkx/w4Ucfsjpe0tWglHREvXe0WZ7eI+HVSWy2uwDck0kFCHVGTL+TkQhIhnuMiWepBEfqhI5WZgWTqhDF0u4uV3avsrO1x6isKMuMX/z8HaFYqZY+Dobglx1jWV+/wSkLSCyAZC5cViy7Gu0DVVkwnYyo246T8zN89IzznND3WKXXSp7MGKbjEW3WUzedLDp7RxcdOuHMShnyqmA2nTCbjbl6dYeNrSnj8YjJbMZ0Y4aydt2JojUmE/6lNgbXNfi2QxmFLUrOG8/udJeYl8QoXEqb59hqzFnXYDJLrnJRTxUFtrDUdSOFKSg2NmY8+8zTTDcqTk/mfPTJJ0wnW1TVmKooUBq+/pVv8NO33uDs7IQH+w/Yns4ojF2rqkzUjxHHFSRcWA5V8X29UGVFIkEZ8qLiG1/9Or944y3OzuaEPlBkBfPzBdlGRugiTd1SmJKiyKmX4g3gLPRaYneyPEOjOTo+ZmNjg7PTU+qmZn//EbOJqNUGPrVOkBODx0UqJOLmJr7G5bjg7//e9/l//Ff/AB0CeVmwvbnHh+99zC9+8RbX966wMdtISzn12EGtlMLmBRtbG/zu93+LD27d4vDRAfdmYyYvvcjHdx8x3ZySZyXeB4qqAK1p24Zl3SRfXlngWh0uxvQEsw38Y60Hx36xyszynGo8YTzZYH62ommkmPZJmCJeqgqTaGoM/PWYjD9TYZVpUKbAz9rbfGZRffhgnwf3HrI4m683gZ1r6boa3/dykYqCajQizyxF0lLHqCGksUENW07E11NptLBxk6NABBOJ0UjrriIOz739I64/sc1OOcEF6NrAou85b1pGRcF8GXnpuQ0yrYm/9AM+Xkwvxt+/68enaU/qYlEUeWyzLFv5wPHymB++8VMWixZfRwgGLBgCfdfKYkgltb3W6yWVGg6b6PFKxsWgxaCkd5eAnCiLJBVSgi3JHNp5gjsnBgfpABRncEVwjhgdvQt459FIQF2MIYlWf/kaXaiCBif+wGQ85ubTz3L40dss5jUqBLKsYDabsmgbzpdLTFQoHWm6Brve0kYyC7nOmaXNvFKRPLOUWU5uLdZqqlHF9s4Om1tbjDdmZFUJWhI886oEbdbdvbZWIpid8Em7usG1LXlZEJXG5WN2bz7Psc7WD0oIit0rNzg9uAsM+nFLVhRsbW+TzXvaleXHP3yX07MF80XL6cmKf336V/z4x2+zuTnm6t51rl+7QpZbTudLZqNdut7zx3/0V7z2128yLiuMNWQpuiPP83VGUllWlOWIsiiTbj2Zm0WE/pPI64VVbO9c5ZlnnuPwZE69alKjKgteqy1929PoFXmWs4ytmMrkmr5LQo4YsSZjPp8zGo3J85J6teD4+ISHo4dU41HibwoEpbXBKg3W4pVHeSV+rEoaKm2FYvXVL32RH/30F+TjKdPpBuenR7z2o5/y8udfZDQek9tsfTep1E0aI54KRTni6Wee4Pvf+y7/4z/9Fzy4/4itzR32djd54+1bfPObr1BpQ54XtF1D1zuapqXvk7WolkbKGIM1dt3sCTdWsNY1V9UK4X80nlBVE7puSdv29H2iF+oIPSjVw7CUMjqZScX1vy+efHm/9KdLwqWPzyyqn7x3i4OHj2iWtYTYBXEW6poV3nlsPiLPR5RFQWZlQUKM6Yca5KYy5gDy8KdXI5jdRQ6RssmdPJl8HJ+tuLd/zsbuWEpYDPhoCG1NHzxt/4hriyfYme6tx6ohMRMGn8eL4vpp7HX4/f/wj8t//3JnnB4KFZM5iiYQ+ODOLT65e5d+5YSDqSM2QKY1q7bBdYOq1YKR8LkQVRppRHo7pIPGSFJUpeuYFgvBewm+C0MsRnpVPuCT8UZMW/aBB8pgOEFaRPmIUZL749XF9QOQxEMNyslCAHCux1jFZDqj2dnj0dktWME4l5t9PKo4Oj6hdT2zUYkLnrbtxCTDWgqjyG3CkLUiU4qqLMhtRlGVlFVFNa6YbW4w29zElBVZNSYvxygrAhCJxZbu2nuHSx1HW7e0qwZDwBQjGG+z+/TnKe0EyQVL9pVOoWzBxu4V+uWKttec3jnmfHGfxWnPycmc+3cO8D5I+m9mGY9KlI/0rdCr7t95wJtlnqS8BmuLxK8WkUlelBhrEi9U7ASzvCBEMRsa/CCy9NBXozHGWoqylOKQDlmtNTtPfomvZtvcev9t+q6l3ACdR3zX0nUdKzTVuODw6JS+NzRtEJyRnkgkz0XueXR4xLXr16ibFW3Xs39wzMbmJmVVXVCsjCEq/fh4q6wcitERXcTkOb/127/JG2+9gwsBZS2bW7t8eOsOP3r9p9y4fpXt2Y4sB3Xid4pfC0ZlqEwxno755re/wRtvvMub77/LJ7c/YTQZ0QfFnYcHvPT0TRbzOcvVirpuUVGjk/m9Rp4jYyWw0TvJSRMz8SEANKZ7LCPPK8pyjNYFTd2KO1bb0XknV9kZjE487SG3KlmQDIkg8rQGLtRxv5qo+plF9cG9+zTLlcghCfSuk7C1piFGI7KvohRvAK0Ea1UheTM+riwKSbIIIfn6XhS+rnOYhPtFr/Chp+sjDx4ec/PJHWbTUnwOdUhAuqN3C+7v32dzvIU2+acK3eMfv2qZ9TcV2l/9IeMpl4uOUhdr+Zg8S1WkCT1/9fqPODk6oe+cHB5OAlWUNfRNg48qbfcDJgv42CH0oeSQ1IuvQQyXbsoQEgUmKdK8qKmilzFzwIKi80Qfca3cbCqSQuCSm5WXn2eQZrrocIknMCwBiAqXcr50lMNS4o+lkHVdx7XrT3Dy6BHnp+dElySTTsIc54uaKs8pyhHa5tJpdI4sudEba8i0Tg9HJhLTqkJZKzEsbQeLJRUKdEbEkI0qjJWtfkicwa73LFetuOQ3S6JrmEwn5LNNZlefYra5DY2TUS4OP7fi/LzHVyN+8Nc/YrVY0rQOHwY9/IWu3ru07KtyiY12PdZqVoWVHCStsFlGZsuk+tNYm2OzGmONRCObTMZsY+UaJ1nxQDkcTzfY3NxiMtsAnZEXOQShAWljybOK6zfG7Gw/yZ//6b9D68jNJ57l0f5t4JCuc4zGBUMkeNdLuuha6q3E62DVCAd3VI1Y9Oecz+c8fPCI6XRCnueJQSFd4GVzmIEZIAeBPMPXrl/lu9/9Df7Vv/0TRhsbjGcbHJ+e8NqPf8aXXvkck8+PKbJREvkMhs8q/VqTlRnbe9t8//e+x8ef3OXB/X3G0wmff/kl7t85ZHdrl3a55PzsfC2mMNrggxPNvzESLum9PAdDlE6QdFbng/gqG0OWl+RFRd+RFImCzfoAAY9SDqcHaE0aGfE/ELbSYEi1rhd/Sy/2mUW1WS0FyPUO17d0TYOvG4IPaJuT5yIJtbnYyPm+owtqrbEfqCSD7DMxUfDeoZT4rYbo8U7IukVZYJVOLvVwdHjGnTsHvPTiTUwm/DRxwTME7bh7cI+b155iY7yNSiYQn1VU/7+BAy4K8C9/D7GLHSJMIo9O93ntFz+jW7b4LuBcSFn2SkZZF1k2LUqJ+iuzFmNEm+x1QBtD70Q1Y5KtmYvhU2+mGDb7XqJijLViE+cc+IuYb+88MXqCE7MUkRNKkqmJmgzofVxnDur14ZH8X6Nsyvuux3USm1K3HSdnC0bXd7jx7PO89/rrxKamzAxtEous6hXqDHam07X5hQ+B3rkU7wI6swmzgmg0OstwwdGuOlx0tK6n6TomvaesxD/AFDkmM6ANfdcJ/lnX9G0LOgguOtlkvPcU1c5TGDsGtUgc0PTgqUDnArrYYNEGzk5XqDAYHypQPgU3GnSIyRzboXVPiGC9pu8cSkeBJAqPMY4YVepseyIrlBKFoVJapjGdOJPr0dRQVCUoK5S6ohJifhqd80yKsA8BhWE03ubpZ77AX/zFv+Oll7/OM89usziv2X/wPlVeYKyYjjvvabserTK0Cigc0Yh73NHRMU8++YTcY23LwcEhm5sbVJMJNstRWjjnSpnH7rULk/Yg7Bub863v/Bqv/eSnnC1qTJ6zu3OFB3fu8MMfvc7169e4tp2Rka+XcjqqNGXJWF6OSl743PN89zvf4V/+23/L3XsP2Nza4srODq/95E2+9MqzEDUhqQfzPMN5kiVipO17DDo1CwHlWbvU+UT818bKdbUVi3lLmxIBhilZEXHB0ztQytArhVExdeqPy2GHOiDL21/dkH1mUU0EA3zf0q2W9HUjrkhK/AiLskqphOIq432HdxdGIgNxfa0QSooi74RQbLTY2AUu8t5lISMy1qbruXNnn/G44Mknd1FayzgZe2yE08UZDw4fMB1tSH67GkwdPuunurg4wGMc+0t/+kv/PVBxht+Rn09+xnW5jRGnPT9/9xfsPzrA1z2+h955cKLtVyoyGo05m9fiCJT4dYInFsQAbd+taUwe6TyVSodR8gf1lyJLtFKJHJ1+JjeM9vIADC96iI+RXkF4tPJXJHFTrkXiFBMo2poyheeppiaLERsUduVYPnxAnBRc39jEXb/B7Q/eJ2RijjLVGu8d9dExi6ZlNhqRKY2JXrap3mONI/c5eZFT+kDeeViusErhmpp2uYKiRJc1zaJFTSboWUsxnUgMdWbRTYdeLuHsnHFmMJkl0yVXZnvsbu1K7pPrwHUQNBHDYHOXFTlOw5Ub1zh+tJ8WfwjkghI7Pw1RR5yToqq0mJ47J7lfmdW4TvwqskI6TOdk90ACg3zfi/VgjKmTVbKY0oqirFBoQiXsC9fLJNA7t6YBGU1KblCgI0/evEnbOR49us8Xvvgqzz7/FZp6gW/OKYpMlETExPU0aCX8ZJ2Wen3fc3JywmQy5awX6tiDRwfMtrYoy0oOOufEH0Nf7lYvGQMphw+K2eaE73/vt/nv//E/Y5RlTMZTimzM66+/wZe+/DK7sx2yvGBth5nuN/HfEDbLdHPMr//mN3nnnXe5dfcTbn/yCdVkTGxXPHhwxN7WFmdnR2gVUdpijZZ4mb7HOEdh5GBWibYZtVrDgNpYinJEWY0By7I+xfmeqNYxmwxWh31Q6KDFRFoJh36wCX28XqjPVFPB31ZUYyS4nr5t6OuG0KcHLLOYIicrCtGNG4tWEedDiqAWCpAUSZNUPaSbVcafmPLeB/xzyLqJEay1ogJZOc7nKz788C5lnnP1xh5dtyLQJ7gv8uG9D3nq+k3G5QzWq5bHf+hf3ZUOjv2PQwdDvhbDiRRh7Y05fGZMY9G6qMrYULsVr73+Y+rTFX3r6D1intI5nBclSGFLJpMJxyenQqGJUhg75wSV1UYw5FQQo5cCOWS6hqRpXtNwtNi/+SiSR5NuXJX4h9458Z7UOg1iEXr5/C7xWb3zIstLP8tN5/gv8XRhlYpvGiVjgKZl8md/SfWj18QbwHnqpXSDsr1OPqDeY9Q5Vul16COQTGrieuM8uCMN9nghkWaHKG1ZoAjeZ6xdX2vB5cWARieJorAHKsjLtACE1kf2PvwAkYwqTFRsFAXFdJMnbz7D/U/uc7Z/SPRSgEj5XzG9z075lF+kAIsmYlTEG4M2YK3B+47oezKbE41JjArxcjWJKuWcLBOjFhf70Fu6pqatV/TdRBaJPqRdhEVh19fKGINCUY0qtrZ2ONh/hA8Ns80dnnjyC9z9+KcUhSVGl/jJ4BKlzGtFlFqB0ZbDwxPGkwlZXtB4z+HxCRuPZPwWJ6tMLBqVME6UUmm6lGWhix4dRGr+5S9/kb/+0Wt8cvc+1XjC3pWrfHznA370w5/y/FPPcv1Khb0k0hkUfuKpLNfh2s0r/L2//z3u/9f/Tx493GeytcFzTz/DJ588ZHt7B5OXBNekOmHEX9Y7rNJkGHSaUMXRUJ5bmxUUozHVRPi0fedYLZeE6LCZJssNIUpXK2mzEe8v0klQHmXiWvk2+AxcdKq/+uMzi2rfJ4OKrgMn2BxZQTYeU04mYmDsA6HvUx5Q+u5pM4tWYgMX5YaPCRJYn3hRDEN88Ogoo1YMJHcqS5YXuOiYnzd8eOs+V/ZucGXnGqv6nKZtcCHw6OSAg+NHVDfGKAw6aj7dnP/N2Gn41H8PyywpqEOSwWP5U58Cp0W9NGi6xU/00fE+b7/3Nl3tqHsnB03XEzuH85E+OqKrKayhyjLquiYqhXcG17VysgeHdz5BtSK7Uww0kQBRlCPG2HX0Cop0sg6uVxLdHaPgaWpgCxDFgi+RqWMA2sDCOZalaLc9MPKRr/tVUq2Qult1cV2bFk7WV5jhQFtDzJ91Y8G6E3/8Q138RTV83Ut/Gtd/8Dd+KH71zX4R8a3oMoPNM7ZmW+RFxZUbT+LqjuXZKWtXdZVcpTQEr3DO0TXCzdYqkluD1x5twGeGzBoZb60QyWOQQ0Jrk1gcOkVMyzXsTYeKmrIs8V1LvVqws7MtT1HwaCvLT6sS08GJc73NNHu717j/4ENWizmT6S4bm9c5md5Hm4/Q2q+bAFFDKZGgRsGIY1R45zg4OOTK1T3avqPtew4OD9na3qIsS1CGLIdPW1cOkBJKEV2PVoZyVPC73/st/u//5X9DHxzlqGI22ubNn7/Hu1/7gI2tLabFWHD5tCgcnn2lJOqkGo94+Usv8LWvf4U//8GP2L93wJXtK4zLknc/+JBXXn6B87NDQnTrhWzwIgOOIaKtJFRYKxzbaEBnBeQWbE5UmrqpWdYLfOjJS0tVVcnMXCSpPnGbtU7hmj4mya1fS+0HeO+X78zHP361LADo25quqXFdL+NjVlDOZkw2t6imY/F7dD1N09C2nWQppYdb/EQFl5ELEdIrEZu1PMtFmx2kS2qbnsGN3jlPCJBlBcZYnIfDw1N+/ot3Cd7wzNPP8vkXP8/zz73IjSee4Oj8GOe6S4/b0LI/joXK/4RvFxLvzkeXHPR7fHDyT3IXly7I4UP32D/OX/51Twiy5gkq8tb7b7H/6Iim7mi7nmbV0NUtXdPj2p5m2dGuOqILzEYj0YYn82ZpbwIqBHJjMUqLxV9MhrveE10QQ4200cdHDEpUSsl4wvUuaZlJ8IsswLSWhyq6IAW+d/i6J3SO0wh/3TSsBoqKBtZZ6PJPWF/D9L+hm1NIVpVKDzMxmZhc/tyLf8Jg9bWudMNdeulWjZ/6cxA+b/r7QT3+NYcjLyoISiFcDE1UiR6DgahY2oyPnrpJtrlNpjVbm5sopZhublKMqoT/kep7WlIFSbVwvYz6fevompQZ1YpVXdeJJV/XefpO8sXqVU1bt3RtR1uLuXZbN5Kx1HR0bcNqPqdLQprzszPapgEgyxRaeyKScqq0WscG3bhxk5OTU06OT8isZTQZsbl1gywbyb4jBV2uO7DERXZePCiMzTg+PqFtOsqyJKI4OTnjYP+A8/M5bdvgnMO5PkVj+9TJeZm20qHtXQ8q8MILz/GVL32R1WJBBPb2rnByeM5rP3qdg9NDwZDjAJsNx2+KBzeGsijYubLNb/3ub3Ft9ypHDw+5e/sOfYTT8yXHp3OKaoRPqimtjHiHRCmIRW4py4y8NGQjSzYqaH3gfNnQdBKWOF+sxCjHdxRVxmg6QhubIAB59HyMSUIf1j+vD+GxDLp46Z9f9fGZnWrXrPBdn0LWcvLJlMnmFuONqehhQ6DvGsDjY0Ge57K9jgGiWXeoYqY75NkkQ9uBXhWjFNHoKaucPM/xPoWSAVEZXOwIPnDr49ugI1/50otsbo7RVkaVRd8yb5ZsT6qLHzw9pANf7WLUH5ZKQ9wFF+385e1ehEgKJIyOx30y042hPF6JVA4l2/LXfvFTFqcNTdPTrVq6lZh3iwu5LJUyY+mbXsy8s5y6aaTr9BHXOYy1a9OIoUGOQTC5vm8hgovSndpssClTaEzKPBc3H2sEm9ZKDETazhG8Jy+yNXwwGF93IfDPk4nIr483qGKHjirxcOP6slyEyMijUeQSdyHE8QtCxOCNiwuDFAOXCv2Q5TXEekgUmFr/XfmQrhuV1gUKhqgUhRJvCW2JyqCzApuXRDMQtZPMMkqR1TFSNw2n53M+2t3joy9/HTMZYbOMvd0rFMUIZRcU4wmA5BSFAW6JGCuHvxx8wspwSLEyCkpV4HUgRmF6GGvFn1VB8D1d5y/SbLWWZIJG4LXOWJq6ZrVcMRrPWNUNkw25TnleiidDlIkv+AgxsHf1Kr0L7B884ombz1OOCiYbO8w2rnB0cEhhJT5HFpKywVbmEi6oRSb74MEjnn7qSZaLJV3b8ejRAVtb24wmY2yeoZ0kBAzYYiBiMBJVgsIHh/I9WZ7xve/9Nm++9Q7OOWxh2Bhv8tbP3+edr77Dlc0dTDZZ3zfSW0VQChM0GDGAef7FZ/nd3/tN/tE/+qc8vP+Q6eYmV6/s8P6tj/naqy/LCJvupyIrUNGR55qisphMozIIFppOcXZeCxwVFb5zLM4WNMua4HtsBsW4km62bQhBYLagQ4onArRGh8HkhotuNUAcDvtf8fGZRdU1UgyUzslGY8YbG0xnqaAqKUzee1TP2nvTDM7d6R8psjISGZO4rJBwML1u5SWb25PnMvo71+OcSxiaLKiC6/jg1m0U8MorzzPdGAGRjoyHB/tsjLawKkN4sRcZQYMX4lATQxT/gkBYF9iQNpw6PYykQiDFNEg3mqSRQoRPXZ8SGV+IioOjQ978xXuslg1t00p2EJEsy+ijo2kcwfV0uqPLrKSSGp2yraDre0pr1sV+zVZAEmFd0q8Pmn5rMimmxqK14KzWWKJJXUWU8dFYIwwBD861SJSGMAN875JBtudjZfi/1Y5/UJ9iCUnllKYPRLxRGEOVi++C1ooXbz7B8y88zdaGRGvkRYZSiqZpePTgEXc//oRuMccEkVDOFw0xRkxmKItcfAzKnDzLhLgdZZIJA3SkNVZbIdCXObOqIi8K8tkG1c41xrs3eOaFl5he2cVaK0yDLGGvWsIbY+/4V3/wr/j93/9nqJs3ufbEE2xkOZItn3Pz5pMc7e9jsxw9nlDXS6Hu6CzhpYG+c2tGXQgiZBgig5z3xJ6UB2YIXiCbhCQBMo3JMlBjcktZVbgOWq0pRmP6tmV5PqeqRjRNw8RP6fqePMtRaGwUT2OlFNPpmOl0g7bt8N5LMF6Ws7W9x60oNDCbie49hEBQWhZV6qJvKPKCxXzBfLEkLwoa7zg/P+fR/iNGk0pM3bVFaY9y8n2HpbMPDrRBBY33PdYYrl+/wq9942v8+7/+EZPZlM3dbT75+BY/+eEv+Pzzn6O4XpIjU9Cl/5O4HqXIVc5kOuIb33iVn//sDX7+1js8vPuAyWxCriO379znySeusjw7lcQPHYUxkYPJwZYaT8T5yHze8fDhMdevXaMsS9qmZ7lc0jS1+AsbTVUVlGVOs1TriTYG8ZRV+qKp05Biz+WgjkkS+1l0zL/V+R+TYcsR5XRKORkLKT2GZJTiUnER5Y50MpqiuCAur78OWigq2qzHEK0ulCQ2ubDL+CL69wQfXnLbNrS945PbD8nyjC9++QWmkwoTNIenBzx94waTfDP5lup0rHAJZ/WSc4+/SE1k0L3LG22HgyFGVFpUOQIh9MTYD5RssfBLaQRDN3Xr9vvcu/uAvpWFkUS7aLq6w/mAzXJsaei7liaZKedZlhYBHpvMKzSsHwilwGZWFgc6nUlRfg8iyl5YC+ZFDlrjeocp7JopMDxJygic4ZyknHofkuHv0M1ramOp0bK0Yb26A4S7aLX4nWbpYD3rO+bOcz3L2RxXjEYleS7erXp3i62nrnH3k7vcv/+IbtXgJlPqpsG3nkwZCjR51JRaKHYKRZ4Vg9daOqwtVVkyrgqOxyPieMbWcy/xwiuvkk+26DY3Oc518kswKR7dJGI+LM6W/NmDQ+6NZzy9t4nOpcMN3hGi54knbvDO22/T920ycA50Xb3OqBoYFsSBbSE2lngvTlhROkjXS6SHssPyENQ6LjmmljFAH2hVhLJCdZrl/BxrM4qiYrVasVqtcN4xthMkCFPeBZ1a+Sy3XL1ynfPzOaRDOy9Ldnavo21J39cps03gtBADPiS2DXI2iJm75eDgkOtPXCPWitb17B8csLm5yXQ6I88KYVr4T6fEKrApESMEoglkmeXb3/kmP3n9ZzjXk5Uls41t3vnFB7zz9ffZ3d3BqolAE+v7inUDZtAUZcGV63v8vf/k9/joo9scPjpgsjHh2Wef4sGjI67s7VFVY1zXYHQgLwxZHjAFKCuRMHXrOdhfcrh/xjNPPY3Rmnreslot6TpJUIhAUeWMZyPOzgyh79fvUYgS4R0Thiz3fZT6hVpPvp9VVD8TU0UltcdkQjEZo+zgrt6uieASPyJdVNu2tE0j9J51NEhAfDvi+kRIzaywANaLIPmWwQu1hKhSjIpgjvGSfGxZ19y/e8C9Tx5QZSVbmzPKynK+PKEPNX1o6VxD04lb/rJZUrc1bd/S9Q1t17CsF8wX5ywWc3HvWZ5Tt0vavqb3LX3f0PctMTp0FB7c4CQeosfFIcpW/vGh5+333hQ7MZuL0CFFcmeZWCFGFYk6ggZtDW3XsmpqCZwLUvBioh3FGNayO0lQSO7s0ZNlZk3qDunvlmWOyUQmPJmNmG1MGE8qylFBVmaUo4KiytFWBAXODdhxTAb0YvobvRdoJo39SoVEvwIVItF7XNshP4ZieT7n5PiE+fycrhXnKJA0zmo0Ynf3Ki994Yt8/hvfZPTEk7jRBD3ZINsYY8Y5MVN0oaduG+qmoe49y97ROkUkR9kKlZWcdz235y3L3efY+87/ime//p/QdBUP9s+5fe+Ak5MVbQtBGVyUhaDHEXzgwZ1H3L39MabMqMoRhR2tMVtjNJPJmKefeQZlMqI2mLzA5AW9H5gAlyN14lpXThTq2jrVAuTapoA+70W5FkKQVFnvLh5KH2iblrZt6buO1fI8sQDahIlqGfeT1+fwPUMUo/G9vSvMz+ecz09T51Ux3dhic3MX58M6wO7C1Dm5liHNAojSarFY0tRtSh/VnJ3P2T84YLlY0rQt3gk/ePh5vPcSO55cwkLwaXwOXLmyx7e++Q2W5+fEGNja3mV+1vCjH77Oo8NDXBzMoC/XmNSUKKFSjiYVL3/hRb773e/QrlYcPnzE2ek5ma24fecB1WgixY2IMYqiyrGlRmcKtGa1dDy4e0Kz6inyQuLe5wvqpqbrxJc1xkhRZmxszqiqCqImBCVE/2RLOoiXQpDIoOgvjIcuqxf/po/P7FTzakQ5GVOOK7LcEL2jTemdKoWmCQVKaFPeiSRRtoaspW8ok+g1GizJqm6wBxM9mB+iV1IrFtPfj9HQBfH2zXQmY64PnC2W3Prwrhhkq475+ZzM5IzLKV4HcbkZboSkXtEkOWY6ABRhHetiEm+uKAsmozGTUcX2xhbP3XySp25cJ88LnJJ4ElF3SYEzRqNURjCOe48eYK3m/GTJ2kkfBSqSlxlt10tqbFqC2Cyj71oZQ4uc4IVHaK1lECgIA0C2kq7v1wmSHi/hdTGQ50U6TSNZniU/20RD0gaX8E3Xi8LKZpIg6pIqRazoEjl+SBNgcK43hMHhKcb1kqLrO+FF9p7TsxXT2ZLJZEI1qgRzwoA1aAujIicfj8nGM9755B6r1hEWCxYnR8zn58SuIc8CRVQYelCGopgymu1SbWxxvKo5Pjvji1//Nl/8tW9z88lnaNsePTP0oWe/rvnF6+/SLJdc2dnkxWdu8uwT15iODK1reOOdNzk+P2Zj7yq2qMAqEv2Wpm7QxvD8889x/8F9Tk/PcX2ipaHp+hYNwjUNas0MGD5k+RcJToydFUKZErZgxCdWyYUeJgwbVKHNpdSDPM9ZrRZM2kbk4E1DlY+IsSPGQTAj1DRjFNvbO6xWDXWzIMaAsZqiqHjyyac4fPgJru8xFpmO7BAndGnFEuXrKBTLxZI8z2VhEwIHh8fsHh5SVCJGUHqwOhzcoAIhWobIdOFPG2xu+MY3v8qPX/sJfecwecbGxhZvv/E+b7/1Lntbu9iRGCRdTs0gsSPQlqyAje0pv/07v84777zF3bsP2N86YDqdcXw65+H+ITsbFagl1SijGBtsIUkTzVnP/oMF9+4cUo0lVcJ1jmZVXxxg6XAzmWEyGzGdTaiXK7zrZGoOSC1TwrYwSrw8glyA9XP5WR+fXVRHI8pRRZYZousE0+tTCJYxZIhno0XwNdLI2nUd2iiRviWeXQyBvuuwZOhcNv8hJsJ14km63lEUBdpYfBDTA3zAqAznJPgsBnDOs1IN+ycRtMOYnh/++DXaDqy2KB0v+IEJ61078EQgypJGr+ld0j3bTChFIR0cRZbx8jNP8X/4z/9znn3meYpijMs9hyf7NF1NZjKs0WhVEXRH7zxd18jXT5xbYTIIsT4vDH3vBXNL+2mbZ0TvEEMUWeZ1XSf4tDEy9iOae5BuKPgLDb8yhuBEw1+NpAOLIa5xxbbr1/pl8bVMcdjWMNuYcX56JguYYS2jVLJqkK26JsVLxGEBKCd57wImExHHfLlisVyxWjW0bUtRFtKdI52SzgrO6yWH5wuysmJUKJhMsLMZi3PxYXUBVh5sljHe2CHbvcHGk89hsgLTNjw/m7KztcnJSc3dj3/IE0/cYO/aHrNRyXg8Yro1o2klX+onH33M6++8y5c/9xJXNye8/e679KFnMq3QpqBPo130EkhYWEtZlTzz7LO8/8EtXOfouoLQNzTLOW29Spvmwc8iGTmloqhIxjcD3paYE49h4onwbu3FcGi1NB3DIo8o+P+qXqXFpMZ7L2mqXQdKU41KcqMZT0b4PlCvVnLQEzFZxnQ6lQiV0/3ks5FMo40cCEIHVmkBFjBa0zUdGiXFxmjm8zmPHu2zubVJUZXYLAMudiRCzXJJZi2YlLbytXb3tvn1b32Hf/lHf8h0e5Ot7W1ufXjAa6/9jM+99CLjmyU6mdtIPZXiKgmsUiuKKueJm1f5/vd+m//2v/snHDzYZ7a1ydVr23xy5w5XrrzCeDRiNLHkpUZnkXbhOT1qeXh/zsH+CTef2YYYaVbD6N9dxE972aOUVcHG5gbz0wWLRY9f712km/eJZy/i3DSVfGY5/Q8oqlmVpG/e4Z3D933ibwoy43tw2klueSH2awSPdx1tI11OrgZfSUdAyeZTaYb9u1xQuan6vsO5DIPFednIaWSp0TW9dMHSukHU1E3H6XnDM8/s8corn+ONn7+LUYois+RFkZZcF9v6YXQfNt/paE64mMFYMaCltHJyB8X9/SP+4F/9a778yhd49umn2L16lZOzM27ducfR/jEnJye4XiJnPnj7DtpbtHL4KIa6fRJMZAmf00oKUUAiQKwxGKVRPqKNPOhRiQbbObdesMUI+MFrVD6kcAtnsChKfOeweSYTQRDtv41C/HZO/AcMCqu02O0ZzWgyoVkuE8acsKJEe9Fa5JWDaGN4ISE4gld4n2GsoW07lk3DalXT1R1h7NOy3uAw3D9esH+6xGcjxtkI73r27x+wrFvGsz2q0Yz9Rwf0dc1k90me/9yrmHILFwO5kq75/u19Pnz7De7e/pjb737A5saUZ176At/+5rf44qsvs7O3xSSv2N3YJNx8ktOTM/7wx6/RHx/y8UefkOclJhcpaN9EyMB50DYnBCirkpdeep6ubTg6OiV4R1sv0dHjuzaNuHJtjBkSBIZJIibrxkRlCqBiSPyhxFSIkiXvvRLfzrTRt+n9dc7jgiPPC6zK0Bj6rmd+vuLBo32armG6MWVHbaHXSsYKl3ijTd0RFDivKHIxfm+XjhhaObDTNKkUSYwg9+JsY0SelZyenmOtsDi8d+wfHLK1s005GqHTIgwGxob8zM65NI16nOtRmSLLLV/95pf5yx/+FXXXUhYjtmY7vP3mLd58912uXd0lLzaIURO1eN4OzIKIxA1ZmzOaTPjy177El994mx/9+CccPnzAxmbFaGQ4PDng+hM3UbZDW5Frn591HOwvuXf3jLPzOc/aHbx3nC8kjbjrxLdhbbzuBf6YbkyZbExZ1tKtqsRRD2k560gNY/qZhSmkPrO4fmZR1VrUODF64jCer3EZoem4BPIqbSjLHKuh78WrUGvpuJQdXlTa9Hv/uMJG63VxGXBWY8y68EVIUIO/MBWJEL2haTz7j4554fkXaeuGe3cfgAv0TUunOkhtvApiQqK1RF2QfgatZAT0rmMY17WxUmiRB+j0+ISfvfUOu1ubVOWIOw8f8fGd+zR1Jx6maqCJyAiT24LgooThWXGT8p1LN7Qiavl3UNB3HbkRia2K4LsegKBFKojS9L7HKCPeB2mRF0LKEfKBLMvlRundehEIQZIhs5wQWnF49/IeeucFb0q4mk3bzraXyA2CT6wBK2qrEKWPHW6qpIZzLlCUgPKs6ob5qqftUvCfMtTO8uhkwXkf0OWM0hj6esmbP/4x50eHPHHzGptlxnhk2HpuA7Jr6PIKR4ua80dz2tU5lgXnh/dwvSxXrHI89dwetl/yV//mn/PDP/pDbjz5HN/+ze/yG9//HZ5+4SkyA9PRmKs7T/AHf/LHLA/u8sST18jKSoQWXmSifd+DQniUQQ65ra0Njo+OODk5YH58nJRiUGZZuhc9RSmO+X3XysQzLASl6iTMkvX18kQxrVak6WzYOF48F6Ro9L7vsSbDWMtiueLDWx/ycH8frwLX4hWm04qYl1RVxWg0wXtR1VlriQRc7Km7Bp0Z+n4BsaWyU4oyw9psHZgZI2TGMp5MODg4om4aRqNKir42LFcr9vcP2NjcTP4Fao27WiPtjnMuwXjqYiJUhq3tDb7znW/xP//rP6TIK7Z3dnn/o/d4/bWf8+UvfI7J9QnWPJ4ZdnH5tLBMyoKt3S2+97vf5Z133uXg4T4b2xM+98XnODw947y+wtZ2QdvVrJaB87PAwX7Ng/uHNE1Nlml651guV9RNQ5fEN2ucNL1HZVUw2RhzdlayWPQiHY8kXwDBVW00A2kpTWthvQP6jy6qIYVtaZXwtngB1id8WTZkaSnlvE+nnVhmdV2HtTb93sDb84ReCow2Jpl2xHVXlF61BHYlzTTOyc2IUDiGccp1AWegrgOHRwtefuXzaA3H+2dolV3gsyEkfEwKIK5fMwyqqsIajQqO1WJB1wn2QgwUeUFWlng0nzw85t1bd+la6dadj2u5rUlb+7zIMDpnNi3J84amqWlXDY4eFQXOcEoOkTx1lI0TcYXNRelijE3cOo/ODN73EAIu5c9rLYsLnaAWEmbnnCMvS0IA13uBP/JCRn9tyIuS8cjTLle0yyXj6ZRVUwtLyBisNZg8Y6wQOCKKo08IQzzFYDYi42yMcW3YUhSFdOuhow0OrwuOVnCwWBGVxhQFxhTMD0555yevsbM54ptf/haTScG4KhiPJ5h8RMwqejsj2B3OlxkPTmqs7fji87+NDUv++E9/wDsf3GVUTbn/0SdkVtOujvjo7UM+ev8n/OH/6w/47b/3n/L3/7f/Gfmk4tbHH1DXCzCK2eYm4/GEqCR9IqSM+2EbTZRlzGKxYHdvi+hbXLukKgWX00qJdaI22NxSZgV9ZlktFulrqAuKYFoshQF/80LZExhKxnEfPEQ56Ely3bwoBPLxcng+erjPe++9w6qp2drbwabX3bse13sya1ks5tJ8JG7lZGOTzb1dvvTV59nZ3STEwNnpOcf7J5yenjOfi3y66xKJnwf0rifPLaiYEhUM0UeODo/Z2TlmNpuSZxle+0vSYVnedJ1EKmlj6BOdzRrD177+Vf7iL/+atm6oxmM2J5u8++b7vP3OB1zZucLMJOggGaIMrnWpy8IYw2hc8dQzT/DtX/sm//YP/5QHdx+ye3WDKzf2eO/WHb46/QK966lXkeODnvt3zjk7O0MpoRa61uFDTd/1kvL7qQVUDAGTayYbY2abM/peon1iuBCTDFTFIc1jOAT/zpSqvm3lvTKCBQ0LKGC9FR2+uA/y0Mcg2n2VrOq6rhe6SJJARkgdQhTgN20oB226qIpI+e9q/QAPm1rxz/ToKC181yh8WXBytGA8KtjY3OHWu484PT5MfEIZd3yIggGZixY5JK9RpTRFbpiMCzY3t9jakVTI4+MjHj06ZD5fEFwUT9O1WYnQpkLw6UExhNCReSGlV+MJRVlR5zVd09CslpJH1PepeBoUkSLLkqJGcEo0aC9OVbLFHdIhewbitLUWbQ19U6MjdF1HlmXSxQ7LibwgoLDGkhcjeRC9Jy8r5mendF1LZjOathVxRjqArDX45HuQFzn0KRcoTSZypEoqbgxBjINjhgCJAV2OuXviOK1PiGXOdDKliDkfvfMhP/yLf8+4NBCnNP1tZtMpm7MNdrZgb69gZ1aysTkmEpnPInt7U+YrzYNjz4vPPMf/6f/4Cv/VP/wD3v7FL7h64wq2rDg5OMK1DQo4O7nN7/8P/zU/+Is/49u/8zssunPa5TmbszGjyRRrMtGL57lEWWsg8U2bpl1HyuTGsLuzg0GkvfPzc4y2LJdLvO8wJiMoQ5ZXoGqszdcsjZB8CECC62TquhgfQQ6oQKIjIRjnYK9nraUoCtq25+HDh+zvP2JrZ5vtrQ1G5YW938AbnZ+d0zQNoLF5zu7VJ3j06Cof373FrQ9vc7x/zuL8jC6JRtbUoJC6QqvIi4wsyxmic+S9VCyXSw72D9je2qIoRN2otEal5wp0ctDvxDbQCY3NKMXm1ozv/vq3+Rf/8t+Qjyr2dq/w/q23eO21n/H5z7/E+IkSTcaguPu0Qbo0HgWbWxt8+9e/xptvvMO9h4+4/fEDNnZ3OT7tuf9gzs72BovFCQePGg4PTnB9Q15prLH0nRP1YDKqCeHCuGn9TwxUo4KN7U2apsGd9IS0x0gGcfhkfCSHZmqmPgMA+Gyeat+CUmQqFwNem4wxkrJl4I9qRVpEycJkiDAIQXLh27aVxUVm1zeX6x0hLYmM0mhjGQw2iAgp3ej11lTc2cWlPSTunlJykeqlSGQfPTijqAq2d3Y4O0t2cOn7GW1l4RYRNHfdHVvA4KLi6GTF4fGcorBMJxUQ6DtRRhG1kINT5+b6Hu9DMoUBEOu+0UgMcvMY18WtKEvKqqRerWiaFW1dy+joZFFnklxO6LKKFLWD7126rj0KSV1VRmMzMbyIEboEF8gIZkVdog1g0DpjPJlKV1lDNZ4mBoTj7PSEa9efwEVF07VyEEafNvepI1UDHzYZahizls0Opz2IvA+dMap2eHjsuHtyl92dTbbKDHrFT/7qdX7+k9eJJhBiQTjsGM89h8eOrFiS50dMpwfs7u3x/HPP8rnP3eTp6xVZNqZuS5ZxzCfHC3bjjP/d3/suT+5NuXdnn7fe+wSX32dnrMh0z8HRnOPjOXfvvsP/9N9/wJPPPE2RBfb2nmYyma23910a2621xCBFITgv90uING3NcrGg7xxNXRMi9K2o+vK8oqyqxNnVtG1PnhmMlv1A3yV7uQQxhWTGOSxLhwbE5tn6v52Xe8VYydvS2hACzM/njEYVu7vbTCcTsYZMdKnoIl3bklcZXduitKgZJ7MxL7/yVT75KOeTD98hzyM72xW9H63v3QHCCUEMQwS+0GmslWdEK2lgjo9POD4+YTIdy/2nTcqtklgRYSb4BAUYnFZoq9Da8tWvfoW//MEPWdYrJqMJmxs7vP3m+7z73gdc39uTa6B+eZs+sICMsVTjir3rW3zzW69y95/9a+59ss906zbPvvAsH9x6QJlvc3bq2H90RlOLYUpmhcnQth2xZ03/DEkVOdDghq7VWsN0Y0y9moqceLkikhRz8RJ+OnSnjxFt/yOLquRcCx1KaQ1BS0ejtSgqhvEmdTGD8iAkTFQnFVDXtbSNpTQjdMLpQgxY58kzQ7zUPerBXq13qKCxRr6n1kq49jHD932KBjFoLQWOACfunHJkKaqKza0tDvsTERMk/beP4gsaCWRW5J2+d2gdURaMzSDmeBeZz3uMjlTjHWIsOD2WhdSA92pbgA443woX1zkUspgqmpaq94wmU5TR9MnztBqPMTYlfTpH4zp0SHEwIaRuJ6K8jPWudynfSUZHtMZmRXpYkwQvuQl55fGZdNDOe3IjyzqdnNxLLWNWkRfEhIE6F9nZucLB8SFd21Bm6WAzsoi0GaxVvok769NDOdyQg8emMprbj845rU/ZuX5NmCCd5q/+4k+5/cHHkJXJ2T8jLxVloSlKQ1GJ9ttmOYsVvP3hCQ/niq9+KePXvnSdJ69N6FTGxu6Ud+4c8/nJFl/+4te4fnOB3X6Cn//0DQ4+eZtcdyKj1jmqbOiXDfdu3+GVV55la2cbZTNhlcSI844ykyLUB4frO3zfs1qsJDerqWlWi8TRTBLG6MmLgqIsKIoClJKOsm8pMgO+x/d9OvD6xK0exkWBSoTihiSUBnmYhZoomLrJLDaz2DyXlNgY2buyx+6VXUbjsSiclGQ2uc6zmC/Y2NnFB49NDJssN+zsXqcoJ1y9+gz3Pn6b44OPaNuGppG4FZ9MndcNQcIQnUtsGDvEPmuWyxWHh+K5WhQlxmT4oflRam1d2Xet5EMRcepSt/qb3+Gf/v6/EHetnT0++vBdXv/JT/nC519idH2cFs/pFhsYAesJVmiHk9kGr3zpc/ziZ2/x1rsf8OCTR2xs7rC9PWP/wRknRx3HJyeJeSPXlajo6j45vF3IzNdCjBjXCzeAvMyYbkypl43ABX2bmC4XkGccRCCfzaj6W4oqKi0wQ1oSqTWnTJ7xQWUhHVtEXHrSX0UridF1vaOua1CKMplWqATaDxnjgtklrb4asDvWP/zAM3XRoRBPVu8jtlBkmRX+2apFqwqwTKYbrJaO1XKFilFAemPW3NQQhfoVB2qJEswkBjFzEYu3HG1yJpsVJhtzcnjEcrHA9U4eCK0pypKm7WS7HiK+bdPWHohKQubyDGUNMTi0thRFiZqA7wPtqpHFRVTYTEn2F4LfGWPWiyk1mD8gabYhyR59Wkqp5Iwu75mkMlhjiVGobVleiJghBLKiYrqxyWrVcOXGk3igXs5ZzedUVSGYuHdYq9Y3/NDdEFgXiMGwI4QAOlL3PdPNbbY2JuSm5Mc/+DEPb3+Myg3FKMcUFpMrrFFgFJk1VFYzyWE8y6hmFdl4irNj3rvv0dUp3/valO2qQCnL++GQH73xNvt3H0nGVu+5srvN3pVv49ol+4/u0PojzLzGuZY8j+xe3WM8m6KsFKseT2ZztDIJQ+uo65p6seD87ISuHiaJTqhKQSYCo5WkFSQOsNKa8XQqzvHB4/vURXbtRU+CNBlKyULRa3/RGSqVDkmhc9k8ZzSaUI3G8uxYQ1lVWFuK+ZCx0hX2Dmfg/EzEK3nxJE3TMh4XGBWpipIYNbbIqKoJZT7C+5bTo3upo/QQJPcsxsEbQ4prCCrdbwEQWMs5x+HBIVubm4xGlXSriUNudEweAzHBAElxaHqUNShj+OqrX+Hf//lfsFwtGVUTZqMZ77z5Hu/fusXVnSuMi4tE5IF5MhjwoMQgfDSZsnd1j29/5+vc+vATHtx5yHhzzN7uq5ydLTg+PGW1XNA0Lc7JBBJ8pG0baTzWXWpY70EEvlICdShJ7h2NKyZT4a2ufC8pAoOgTcmSO/DLiXj/UUVVMBSVNl/i1iMa+bDe/A1YUEyFURstpxwQo4zEIB2rYFKO0XgkgHza7JdFgcmswAVelizayEsLPmGYBnFs73pUVFilRE3kIjEaMJ6m9mTGJyL0iPG0o1mtBH6IisIYyqKSTouItflFdnzv6F2HNprcFlgr41nbdBitKcoJ23sZJjtheXYmFnCoxHooUUrR1BIN7PqexWJBVIqp2SJ6wWW8F26swQBaMNdVKzZjRFyfFGrIdtpYybuyNhfMFsGBeif8yr7rkrDBopSV3PMY0WlMcxGsmEwSXI+OiszkVMWEosqZn5xhs4JqOhWKTjni/PSIPLMSWxJ0YmoYhFwyRGoM479wZX2U92l3b5ONazfxwfDum++yWs2Z7m7jghh1Z8phGKSkOuWaRXxoaZtjqhK2rmyy+/Q1YrHHmYMff3TOb7w8ZWQDvj7nH/53f8Dy4V2a5RI7Kfju//p/Qz6d8t7PX2d+dML58QnNcgGuYePKHlu7V9A6I0v3cqYsfddT9yt831PXSxbzM1bzOavlOV2zom/bJBLxGCWTk0kZbDbLUjeZYfOSja0ddJCu0fce33W0YTD6liJFVOvuaTicbJGniBWDzTK0thLlHYWVoFNaaL1c0FRjYpTmIcsygs05OT6j6VeMxhOUzmBYqCRME2dRpWK2tcfNp7/C/PyYzLW4PqOPCV9VCu+GmpbeTyfGIipBQBrN/HzJw4f7TGZTiqpYQ4BwgQcPSkhrLcr1eC3P/WQ24Xu/9dv843/+z6nKMXt717j18bu89pOf8dLnXuKp3RvyetMxNPBWB5WlwF6Wze1NXnzpWb74xRf54U9+TnQthMByvmCxOE3OWj0heIySxe2qES75EPoQZacuMNtlF88olLcsE8ev0XRC33W4Nq6XaF7QnfTzXnTV/9FFVaKAhyV6Amfj0E5r4nDiKrPG+qyxqIhgpmkJZa3EUrddS9s1QrwtKgG3U903w5uTFDtWGfGyjF7MmoMCI8B4lr7m2vpSawzSKZydzcmKHJvlzCYzXNOxMlLgurbFOxEYmMyS58X6lHV9T5ceprpuKAqhG5mU3Ol6T5YV7O5doSorzk6kq1ExkNmMvMrQQYxEXJRl2nK+QinpmuXQiGuoABR5XlAWBau+TswGsRPyCQOOCafVRqAK6RxSMU1WdMHHlEekGHLbnfP0LpAVBpuXuBDX3GClNVku4/YQkFaNJ4SuZTLbxGQZy8W56Ma9EzqWDnII9i49i8OYBjF4dIy0dY81Bc7Bo6NHdLQUE0kyUC7i65p6tcSUmkxlaL2BLSx5DkVhmY0L9jbGbJSBkV6we+UGptrl3qnjjTvnfOWZTfxqzuHZnD70rOozXv3qt7l64wbn52csz89ouwZlIRvlmFyxubMpjl/OJ/6ouEVJCKIcuPPzU1YLIfi3dS0Kp669GNeVWudQaa0pqxKFYjQeM9vcJPiekPD11fx8DYcNQgnSvyNpMQtrVkCWZdi8QGuT/D0tfS+dtPdivbdaLpmMV3RtS1kVyQdhzPHRoUhnkXjyiMJkI9pelG+DDeRyWZOPpmzsXGX/4RyT93iJ65XipUmTWWKRhIById1LIqJp+57Do2O2DreYTidkWY61jhCEtmRtJrxz78hSaoB3jrzM8d7zhVde5sqf/RnnywWT8YzRaMI7b7zDrQ8+4OrGFqUtWctpoxRsoVYa2cAbGE/H7N3Y42vf+jKPzg7Z3RVy/2q1FAMc3yXZuEBnolQT7qxWej32X97+k+7lAWcFKKuc6WxM3zYsnMf5nkFuHuKwKv5sVdVn81SNXm8yhw28ODaRJIshqTUgs0KlGFypuq5jiEcxeUZVleSlmDJ7JzK8sizRaLquRWnIbCZuTN7j+i6Z/QpdyyBcMZWy2y9TfYzWZFlJmZd0dUNbd3RtYDyasLW1m2R1UBYlbVPT9R0ZgiNlRnCqoigp8lI6wbZbHwha6dRlSvBdNSrZ2N5lNtvk+PCQ87Mz4bahmc02Qc+pVyt853G9p16uqKqJOAG1rfgeaIM2YnmYZQWKRhYIAXQUZU6mhRMoER4XOGbXCTc29A6fbv7BJ3XADEMIsvgzGSEKdU38CATfzrUUVdLhlOcli7qhtDk7V66RFSVdsyL6Xh64hOuGEMX7oe8SzpsggOQF63tPmee88sVXODrZ5cGdj1gu5ug+oIKhbiOn+yecx0i76OmvbLGxWckiUjW4rmacR65tZMxKmExhNpny1u1Dbm6NsKHj+tM3WdVT6u0NnnjhJXyAUVUyGVWcZhZMRTmq0E3NbGMD7xx929HUtRxUPlCvFnR1TVMvODs9oa5XtE0tvrZ9i1KQFTb9jFamqbIkxEBZFoKblxXVSBytCPLAiemxv5jehufI2gsqkjVJ+ikWgOPRWLB8dPKIkPe77zqCE7x3MT9HaUMIFUVREVzk7p2PGJclhEjXdoTzOVVeoLVlteqZny5YnZ2xPDuh7WqybANrJgQbCBZ67wHHYJASo1/vYXxw6CBUO3n9hsViwaOHjyTPqqoYTKszIWivD/6m6xliY2zwaJ1RjQq++51v88/+xb9kNNlkd+8at2+/y89/+gYvv/gCV7euisn9MGdfOpCkjxNpwGxrwouff4HT+ZyolCjfmpbVaiU+wkksg5KmzvV9as4uuKmPm86zxldDWmBbqxhNSrp2Qt863NKn5zuV05CwWPW4Yf1/cFGVrmSgTkkRCwlAlo+LjmU46YL36+2a4EaGECJ935PlltFoJPhn19O2rWwarcH1XoxntejMfRgct9XaYi04n8jLEt3iYxCnICTSxeoMVSgxT2l6+u6c8biiGk05OztlVJZMdqc0TcNitRRvxiIdHFoOhDzXAsb3/ZouopSmrCqRrCW9tCozrj75JOV4wvnJSQpDs5TjKE78oRPM03lWiwV5npNnOT4I59bHFH+btvYSl6LSwylkarEElBEyJjcp2UL7C2syI0XVZOnQUcKbtVrje0enO6qqWh9Cxlp819H17dpOsBigG20oK8HvumZFvZyT2QzXtXTNCqXAOxl/JRAyndogDluu4eDBXZS1vPj8F3nu2Re5fft9Hj64y/z0mMxGGq2o50sOHj3i+PSUyWyT2XTC1Z0x2maMtndYffSIeBf29lY8efMGN7Y3eevuGT0BDOSjKTubuwRy6lVDYQPT2ZQszwRacYHY9eQ6w3c9rmtpa0OWZdSLFYvTE7qmpusblvPzxE2uU6fmqUYVIeHwJh301sqkMRpPWCxXzDY2KMqSznX0bSMy60Q9cz6kUTNeNCQJnlYMHhOlbPmjYlxWwstWAgsFH9Z59ngvSyCb0bfCQOnbBQf797h244qwF9qGpq5xeU7Xdhw8POL+3fscHj7Ep/uwyku2tku6eI7VFm9kpFVhKGBD9zWYiARCEI9cazVd6zk+Pubw0QFVWTLb2MAVntIDIa4FKBgROoQYiEqTFRXKKj734kvsbP4ldbukqCqMynnjZ2/za9/6GpvTLQpbpIpy4XMMUlAJUtSyrGBnd4+bT9zk7oN96lVPvWpZLWrapsN1yZjIh3VRddqAsRcqyqFyDR3quriyNpwpypzJdELX9vS+o21EHDK8Ltn1/B071RjkwpBiZVXKypG5T77B5ZC/wZ1nWDzJckg27H164VmWUZYjOtWKC3rXilVcFKmetawpG+uFj3CNZCy2qcirlIOUFg3oihjFvMXajA4vS5UA5WgsONqqRpuM2eYOtqxoW3FhNz4ZOqcI4byoiFmxNiARV6dAloldmg8ejSbLLFu7e1TjEfsPHxFCoByLyqXVgs1FoHc9Xdcxns1YLM4TzzAZAA9xuyEmrwKVqDWydGI9qsR1MQ1eDKpNZrCZTd2PmKLIYBFomyVZ7skyjeuaJLIQE42mXUnUstFSEPqSvm9p6hV5USZGgWI0GtMbQ4t0L7kS34HMy2LQu8HA1+B8T7s6x9UNH86XWDJuPP8Mz774JfauXuf44B4HD+9xtn/E6qygXRQs6wbnAqtV4HZzyvliibcbzI1m86lrfGFW0D7cR9mSk9qybAK5NdgQybKCdtWw0GeEAgpryM2A8UecMWiiQDRyMxOLguX8lOX5GX3fUjdLWUh1wsdWRlOYQlgTWq+TTYfMLW0iWZ6T945qNEpLQyf6e+/WXGAh94fHuyEGpZ50ojbLyKsKnWfYomAynaG0Js8KWcBaOWCFdSMcS+ccXbvk3p37dF1DURWs6hprl/g+sn/2iHv373Bwsk8xyvjit17hcy+/TOgcb772Mx7c/xAXQTLKQ7LWVEQfZfpUyYpTJdAx+hQnbslswXLRcO/uI7Qy1Ds1ZSFUwbIo1llWGJsWa4aoDdPpJllW0KwaRnnOw4f32Llyje2tK9y/fZuf//wtnnvqOXY27Bo6WUcyJR606xy97+l8z+l5w2LhmJ+vCCEyP5uzWq6Ei5pcwbyTpZlzDqelhny6Q714Xy7/2aCkgnJUMJ6N6bpWeOJdt35d4iL3qzlVn62ocgGX8nLWIW1m4Kom/COFeg3KqgE7kvHgAsMQMxNxjZINqoD9fduyXK7SKS0jpbUZKji6PjnTu2RHpzWZsmJmrC0xCEez73viSsbpPMuIKqBUyxC2ZvOM6cYm1hb0ztG0PWU1pigr8SlY1XgXKHS2pnxFHFkpyZJ929D3fo2DychmEgwhiqKyqjg+lPC4TBsW1tB3BS4pToY3Ls9y2iT5jUNhtVas9IzCZGIqLQoy+R8JavHOCY5mRJ2mjSwGbW6T6lFYGn3bJLVKJMakrrIWYwy1czT1gugdmdH0XUu9WtLWtZjVdB2BSNeLz0L0noh0zzF56Q5UFGsuWBvee5p6SVEq5mePuPvR25hcMdvaQvWaghHTfIMwarAx0GY5o0mP90JTscayvb3F/QdnMNvh6VLz5HbGk7ubnC47PvzwExaLjt3NDc7P91GhwbeRXnvqLqK6lhLhHgcbUZmmcw3LOXStOIGdnXpW8wV4GauNVpiywFjNoFkuyhKDIYSAzQux4ENhoixJTZYlfFvTdG2KwunX93kcBCXpGl1OJNVakRc5WVmA1mKAY8UDVxmdTMelY2w7l7jIgbZtMD7DGMtq0XD/7l1GE/GtbduOU3fK4aMjHh09YO/aHn//13+P5154njyryE2Oc46r157ko/fe54d//a95cPsjfNfju0DXJpvOgf4lwGF6DoeCKhNk2zTUi7scHx0zmVSURUGRZ+Jjm5I9fJTJMioF2jKabqCUYXG64mevv07MFBs7u0ymmzy4e5uf/+wtvvbqlxmPR2Q6J/SKs9Nz7t6+z8OH+5yenwkWX2i2r+zg+8i9B0f0vaNrW+bnZ2nKSFHsUQpqn3YO3viLevapQjhAGBc0KxJfVxaTFzCAFOjoBy/Vz6qaf5vzv3MYk4wOUoeqE5As7jpq3QYPfo8DsD9wzfqksgouYFLGjneB8WTMaDym1oo2OcnoZBMo+GBSUKWlTjbo0J1PGznZxsqmvwQNdd8k56iMLDOs6hajwLqcsigYTWSZVTcrurZnVFWURcW4mlAvVnSuQ6X4YJv4pGU5Ila50Gt8IMuSumzNrRV6WJaNMUaxOD+HcQU2Ui+X9AmX8ggEUo5HNF2TtvaJNpJp0dprjcms2AoChmFEkawi9HA4qfXYr7UcMumVCL6XikaIAdVKVMtjS7luhe89yhraroZVpHdiGhKcdNc+YdmkjKYQUoBj4vxmVvjIqGSIrySOGdthYsf50X0efmTp5tdQaNrVgmY+x9ctqpeuPKsKjNb0bUeW7A7PTk64OllQNocsDscc+obJxogbm5E//fkHTLKM3SeeZrlY4lyH9g1927I4O0bHQKZlIRdzTcTTdTUhetR5TN1jIMstJitkEAiBSpWyaAlBNvIJS0eJ7FRb0eL7EJhMRvjgGY1HNM2JXC/fE10jqZ4qilAiJlNpqaaYzMrBZjPyYkQ5GoHJGI0nGJsRgsLYnN75lCfl8YjVpiFQKE29XHH46JDF4pQb29dQSjM/PePg8COUha//xtd59tnn2JxtYpVFe0XTdXR9h8kK9q7f5He+/7/nB3/x7/jrv/gz+kbwYJHMRmJUxD4wQBZaJ1ZPmgAUGhUVjw6OqKqSalRhMysTlpLEBrRwzV2IFKMxTz5VUFRjlt6RFzlHp0f0bc1ktM10us3tD+7zszff4vr160yzLd5/5x5/+Ed/zMnpUaLqKWxpeeqZJwhes//gEfP5CShZKNe15GnFBK6Qrl3veklcTSKZNYT5N7D2P911DjsMbSShoRzJRN2HTmC4tKz6OxVVEm80RoX3F20yWDAqbezlcdb6AjsaIIGBPtIlzMdYQ5YVjMYKX8oNPJ5MyUxG23acLxYUzuF8QVkmWRy9vFHGgPdizxXSQx8An7rfrEh8NBiVI7xzrOoaQqBvHVU1Ai0Lpc3NTY4OD9EhUo1H5EXOZKZwThgKygix21qLChGiIc9tCjf0dP2KXBVrVx9lFH3vyHLLeDJmuVyQlxm9E+MNyYIHF2RE1NYQgksPL2RG41VyY0+LswFiiTGKnDLGJCWVh1XktWoNx+g0OfjBNCUEeZgTVtzWqzXgH1yXqFKarl3hvYytROjaZnjnBUdKHUxIh4Aa7BoRXq9SyXs0RkLf08SVeBXUS44e3KZdzCUep2/puyWuayAkv1atJfssjeqL8zkxaOLymKO7t1DdnLPdHTY2JjTzcxb7d+icZzwdk+eWLDp801Av57TNkiGPyxiFytOtrSMhOrquEUpVnqH0MI6LrdvQbQfETUyjJd4ls+KYnwpiiOKvubE5YzIdsZyfUZUWNRuhY4dRjsxG2pWVRa2P9M6BESloXuRYKz4LeS78TMHxxbCkdz2lSrE5IXL12nX2tje588nHGG2E2vTgHlVlqIqK0+M5BwcP2dzZ5Mtf+zpPP/0cZVZC0EntLQyGcVWSZxmbk4p+e8qVq3u8+vVXuXf3Fkf7D1gtFzgnmGS7bITLqiJFUaSDU3wfogvM5ytuf3wP6zWTYsJ4YypR9VYObpMXZFlOlpdkZcXO3lWmm5vMjw/JTc4P/v2fs1osmEx32NjZ4+C9h/z09Tf5wotfIHNn/NN/8j+zf7yP0mIlqK3mytYem1sb1IsVh/sH9K5dUzRlLH+c2O96R9/1OOfx1sthMFCuL5H3P72wWjME0v4iRrC5pL26vmcZI30XIfjPKKl/a1G92DqjgpymUQqt9oYwGCGr5FeqLzDCGCX9UyhRPo0YQqzXxmJtA0pTVSVFOUaZjKatqZsVIQaRj2bC54oxrPN55AHtRd7nvIToBU+mZAnjvMfYjOlsQ06xPmC1ItOK8XTKfDHHGMV0MmI+P2c0LskzQ9BirlCMC/quJbg+8ULlFDdalljey+PnfEMMgrv5ztFfcnq3mUZ3khEUDeggo0fve2KX3lQ5f9LPpC+uX9KjM1A3NGmYNOv3ZAi2k+XC8PnJoTwGgleQcFHH4wqQofMNUdy+BuxpuLlcmjaGYqoSFruuoypJ5tOvY4iSi6kgBkffepEfa027dLhmJd0tAaKD4FMXqAhpW66Rgcc56YxODu/R1nMOHtxjPJmQZzkhOPrVMXW9oltY8iJLPr1eRA2ux+ooKQVaoTO7jrVQSra1IklO3p1Gp6RYea1ayT1ijByUxiY+qlIJblHk1kKMVNaSZZpilBFjQV5AUSnaVU7XTmUR2HXyUCerOW0sZVlhsxKTlxTVCJOXGGOE4mcNA5lytVzg+oAKmvn5AhD2yfHRCW2z4MqVbZrVipPzc55+9hmee/5FymJMV3fkOqcPnTQFWbpnYqBtl+R5RWEyRhvbXPu13yB+81vcuvUOf/mXf84H775Dt1qBc3R9j4sRWKZFrSyMtbZpMtV0vaN3AW1yympCWZXkeSk/n5FFHNrQdI6i9xSTDYrZFjt7Vzk9PmG2fRWdSQ7WJ+9+wk9/9BYf37rLh7c+QhkvqkVjGc1Ktjdn6Ki4c/ceq5WkCvS97Ej6rpNmYei2Q8T3kofmekfIJItO1O9qPeZ/usZdrnXDv72X5ysvM4pRJXuE9H6qz6iqn72oGtriMMQyRELsIRqillFSCP+WLGmXB7d/79MGMRnCXjzYkb4TcrwP4hVQVCV5UZIXGavVirZtiAHKsiLLZfTo+2TcnCR9A/hsjBHzhL4XhkElmU/GGrY2Nzk/m8s43PUUZYbSAdc3lGVGUyvm5ydoHbCZwYUE4HuHdz3RC41CGy0HQuKzDp6shLhW1/hkdHHBgYvr01EbRC4XAq5LlAypgMI8SMbFa4MaAeRSEbvE3RvglWGsHCpdvKSMUULJUkNJTO/h2jA5xgQ7pG5UBWLK8Bq+qHzrhDENL0cNL0kqqxr+O8Y195Lhe6AgeIiO4Ht8vFDmqUGVEhUQUiij2CHG1J03ztHWK06Pjxgio6UQCxSklKKrE4d0GPwSzk/0KMQNiii/T/LDlJcr10ohI75JBVWnw81kifpkSAFzWmS7SpFlAgfkeU7EkReazFa43hCnOb6fJB8Bl0xwBBMd0kiNyTFZgTY5EUNWVBibg5I9gs1yQt+CNjLdhCCLEuc4OT/h5OSI8XjC/HyFU0ueeeEF9q4+warp0VlN3NgUWMloVl1DaCSypRqNhJ/cRgwaFQM+iM3hC899kb3dJ/nTP/kT/vzf/TH1Qri6LiRusrt8L4q+X6Ho24bl+Sl5ka/vLdcHytyRFwU9HpNZ+tjTlYZiNMOMpuxdeYL9t17n7OQIYkaRjzjdf8Sf/OGfslo1xOjQGqzJMbnlxvYeWxsTDu7tc3RwSO9EFt53jq4V1duglCLZU7re0XX9Y4tzeer0rxzcL0MA0qkONKyAyQzFqKB3F4U1+l9dVT+b/M+Fxd9lF5mBMnXhVMXFyKo1KkgmuHS4rNVRw8gaopfxKIILkcp5RpOSsswT/SdS1ytc75htztZjthjoykhDUnppI1v4JsVQZMbIhQ6dOApZuWB9X9O3Cu8aKbB5TpZplosFR4cto1FFnttUMOXUC5DwmlTBfEg56IlWlpQa6CRD9NJRe+/pu35d6FmffpEYXXLi8ol1PVBZ1PrtvvivX37Tf2nrOBC3ueDPxRjXC8S/8WsMn7suhP5iLFIXhfLic9VgKra+LpqLF3nJNjsxM+QPdIQwRJCmTx+KtFLihqQSQkUyrlAodAwQxNc1MdzRWmFkVkdFTYwXEJMyah2KF5Ms1CRHIZXSHoT8PxC+QQV1EdA2MFzisK+KIsEkrC+JGFPLFJRlGqUCZZGhMMSYpW5pSN1NzvHpINUDK0FpIpq8GBOjLMAyWyQDlUiWlVibkRclvRO10HKeE7qCk6MjlBa/2vFkyrXdHWFOtEueuvYUG5NNqqqi6TpcXV8cyCGim5ayKFmu5hwfH1LXS65eu8LmzpTxeERZVHzrW9/l1rvv8e5bxyJoSJOm/FzDWByxmZX3zPXUyyWj0YK+KuitgSLQqbh2/wpK/JXr5QKTjyjHU2w1oswLTo+OyfOx5Fz1nqODw0QrE5+MYGA2Ldnd28a1jqP9A5q6pnO1xCT1Add16wyttTFLFApi3/W0XUdZlMlPJB3sXDCXLo/8MT6+tFr3k1HESNoYSfGtSrwPdKHjV318dlFNHqZyEK0fpeEJhRQKMgDyIYj2OYZATPZkxmaC+108g/KGBcnYdokq4lxPV+VUo5KqKiUMbbVAG8N4MkKlPKXQ9ym6QmhFIYqQIESH1cho7jqC7+i6Wh50HWnaJWiPcx2L+Zwuz7FGY42iaZZE1+DSqRvjAFWkE8v79JrTeKBYU2aGn1VqrnAVfdqmeu8ujLbTaCJtXUjcleGKXHRSKPVY4bxcQtdFZLj8n6aIQFomDUUsdZ3puqQvIkY467fxUhZW2vym6oQiLSri8HuXvi4Dnp7+7OIXF18iqXUUMeHA6UZOEEJU8aKYRojJ21Ru/kjEp5csxcgPz2vy/VSp89BRJVVQSPS0QbiRlmkk14R0sAUFYmwbCUqKnsEkelGQZN8USRyIkChsaI1ODAvvHNmQ2KqyNZWLYRKIw5sEKMNgZB4jySowSx28jP9ibZmR5wUoTdv15LYi+E2KLNA252SZo6zGTGZbLM9rFqs5V3afZWs2I7jAcj5nVdd4IC8KrJHNve8dp/MDjk6PKEc5L7z0HNeuXaUqK6KPtK3H2gkvfv5VPvzwFn2zSKbtEsm8VgGmTt9og0uqqXq5oBqLJ4DWCm8zqQMRjDJYU9C7SN80GGXxwHg85dH+Q0YT2bcopQkuAOIdEDWoLHDlxhYbsw1Ojs9ZLBe0ncT1RC+skd659VQoTBgDysuf9SK+6Z0kXFhlkpXoLz8367s4ssZS46VndgjI1MZQVCIQipdaiU9/fDalygsWAcKfJG31151UjOsttHSgyZZMcjnk90NICiJ9KZESvJetY+yFihW8o+9zeucoCrEE61zL6ekJESFk+yBj/IWTEgm76sgyI9KyIPGzKEffCSkbhN51dt6ggVW9oGs0uc2kM+07FsuW1bBgu9Tg+ZRU4JNr0HBih2HMl3cgneZJtYF0TPES/SimBY94WYZ1UVOpH1pP9JcK3vo3h+4xFb0B71x3gMN4xnASc1HZ1PCLoWBe3EBr953hBougY7woxmsYQqVxnUvXZoAJLl7nuuMePjd86sZdV/jhew530tDdDtBGGH4SEi5w8TDooftN3yrp6QcKQlwXfpKi70KRJkOFdCRdkOI5LKuCUmjv1zhrxONCTEIMhQlgUzeTlvwpIieFXGrZKxiTuMZrHFInj4h0eKxD9LTE5iiJKhHn/mEBacgyRZd5rN4iM5HM9Gh9nXI0Y7FcUk8ydndf5MqNp1DaSgqFc1gDrusx5GjAdx3Hp2dEFbj59FNs72wxnUxQXtOvhMfZec2y7hhPtxhNNjhpJUzQpZ81hPVsIybf1qJtwPc9Td2yWjUU1RibeaLrccMiNUKmDShDs1jgvWK5Wsqh5wPNckHft5Lt5TxmOKw1bM6mPHnzGkYblvN6DQu6rofo8IE13BbTPSjG9rJv6fue1vVJRpvSh4cnZCiawwwaL0+AF51swsiEauhD2pdY8uRr+6s+PttPNW2SVQxoBoxKX+B6yf4rqouHKPoBGkjaiGSdRhTgWaesHHkKBGAWDXsvWVjB41wOOmIyi2s75menhL4TJU/wuDAU7rBu+63WuBSp67xFqSgb575P10iJjpdA23Z0MdAqJQXdubWRrTzrav0ghvS9hjcvDEUoPdDy6P9NFzhe2jcNhTKu/3voEFNJ4aKKpbfzEgY63A5rkH0oHhE0ITn6yGEQUocpHdNjLye9VnVRlOIlDXNMrxe9fq3rbnaAJdKBOoD0kUt/f/1ah9c7HBSX4Q2duk7pFnW6FtJJD1/0ArZQeoA1hPER9QVePDSGl6+RNNOBqO3ayNnEmA729LCEFBUOeD10lMjvx2TtpqVLjiESE+wk04UjaA2hJziSzNgkXB8kEi0JZIbgSSUcVIEPUtKAuvBq0NrIxJRM4BmerajxeUFhPNZssLNVrZ3Bum6MzXLG4w3KckrXOcZljktYYF3XFHlBXbecnJwyKjU3n36Gra1tQlDEHtrgpAglmKKqckCxvXOF87N9YuhQUaeUDgnGDCFlpEXhKMcuCONjtaKdjMnzTCw7tQEnzc9ysSDLcla1OEZ1iwX1qkFpQ1sv5S5KcFroAsFossJy5eouk7xidVJzenJOV7eCz/cXY7eKyXTaC0NJJUvSGDxd7+h6T+t6Mp+tjXFY/z9rC9IhLy8MY//6Nk5TjorJa1jqjbWavMx+6YkfPj67Ux0wKFQiPMf1Ta+tFT1sKgyX/TXj+jmVMhQS2V2n/PqBBmS0ThSpIAWvlzHV9y0xyS211mLF1jaS0W2EerIO7uMSJOY9XadQtSIGydUKSb8e05snMraEZ8ZIHMLA0gGS+qXhDJOb/NI1GU7FoaiuO0JSIUwN2LoQXB61LxeAx7/icMEeG8uH34uf+jRJLLikLx+6tVQ3hvqh0ql/+Xt+OrLscnFPGAAX7IKLQnqZ37eWIF9+WfHSNbj89YfpRCUJbnoVl+ad9aEnZ0Z87JBed+aXYQh5mQz9E/rSz5EgGmNSdHQI6+5UmoJB5y24s1bC5vAMyRIBp5xIo7UU5Kg1MbEvYgQ6n76PyB+tDXgd1otboU1Jl2wSG8Za6V6jToU14az60qLMJlGH0hqrBavNM8u4SoYjqQigIkVeoU1GjOCdXGPnQ8oUG9G1HYqOIpuys7PD1uYuZTHCe+i9FFI5l0XQ0qme7c0Zm5tbaJOjMyd5aVqs8QZYQxaLidanxKRG/JJXVFXx/2nvW3pkSbK0vmPmkY+bt6q6uqoZGE33DNI0M7BpzYodiP2Iv8sCgeAHDEgskJBYMN0aYDRT3fdmxsMjws0Oi/M0j8hHVZfQLNJVtzIzwt3cnp9952HnYKob14MvRD7Wu8MMQsV+94TjLCrCfl58PtlGR7Xgm2+/xE9+8iV2TzN2n494enzE8XgCkQAbM9wwbD87h+pLjsWbXWPBeaMxAHRTM9J3ecoq/52kKZ2fHuaSyKPYXbve5FJltoaOBtIzvWhFggq0DlBz0UX+Ux2rVbA3AA2lAa2dne1a/E+QLI7ez2jnLm453EWsmiYUIpyODcfjQaInASpaKxtj+dtFcYIkX+MO7osmG5TFY7pRYgaapo9WcR664E3dIVigGkSKQNqkjJFslRmQmJcEy+ZgYJE6c+xXXAEhAywdUBtYF5ZXZXitNbIPkDkmpY0CIdbDHxre6ZuhfpXdRtwzYairCVTwZzsMpHV7IotByS6KS83sSXj7RMyX+wuVy/tcZQAfd2E6rBZ2lS5a98Vj7xZwrb5obJyaBgSvJYanM/umW6ucruIF4C46WwC6qasdYZHcbMsicSSW1jA1RqkSP3VTJRWPZJqIWA0St1QCpFPT7LW1uldCrRU3UwXubt3BHoAbvkoyFFtMY3NdnA/Ah/uvFLQr+nmPEzcUmlBJgrufWxP96NJwd0P4xc//EKX8S/zxH/8BPj9+h1//5n/hN3/9azz+7hFoEjAHzQRUcVs7n5vEmJglnkefFtBC6FPFcj5LoJRacXtzi8dPj5j3BxznA7idQSQHRkhVLp0KHj7c4Nt/9DWoEHb7Ix6fnjDPB0CZoh0yEnuMgKlJcGzrnzW+69I8zrFlZzZDpqvq9F/vERvYy+um1hOVFmk+Lfl6XLf5etlQZaKIXhZ1ChBDQe0FDZKOmUB+dt1A08xawtbkGYljyDqRJZCyiXnSWbobdj1DXSVTZGtiAKpuSTU9Jfs7TGltMESqIjDAZaNyKpL3pcGsz8QmaEINDcKufKXpZzRgZE8AGG31/sMIfOu+9b5Zifqmk87AoQ85uAWzTO9NO7By5ai7bXUkO3pIzAZapBtSqv/QtvSydDn7VlC2v53tcs5rprpS23j0PsmQW7wcoPhRUPZ3EzwIprLXkCFET53jUIjoLpuIpPghdIrz+GY8tb7rraESwK2jIcR+9zbpDC7B8zfThLYIU+pdAqGYRkzmcEHpwDQ11eF1VwswF5fETNduAL3ZbDAxq2qkaDDo4lJbBtNCsfmb3GqA83B/D1PPMMsRbjG6nLEsR4AKiBegVz0ZueBmA/zyT3+BX/3qz3D/4Q6n0xnf/d13+C9/9Vf4z//xP+F//+bXOB5m9L6ACqH0Cjp3tHPDcX/A8cMH3GxuQAVoZwC1Y2GN3tWB7eNnBVTJ0CyzpQtRwwZ1U/DNz34iBrQu82m/26O3MwrpBmaHW5oFmjYXHNt+SWJ+LOIBIIFVmujPdW75HIIYON19SssOL4B0hDWvT8ea69erKaoHnRnJADoIsR5jbIY/BYXFkiruI3o/SxBmcESwgooOSz8rmOnMst1GFxo1Ql8k1Bwz47SI3ss4mfKToOzaxeLyowCqYbqEYaqi2nS/47INkOgdMHZqk/YarqxBRxc1YdS0rsE2aC8U8IdCL54BLEIYpXrLO5VbK/6a+MypytqnKHGfVz0DMeBbIbEfQ4V3oWxm5E3V3qexD2RPH5lomkW4eumcMD2s99UVhhwlcdpv0obDDFJGxb0ouLL3X77yM5JdVL0KdNeK+ghjYZXEGhq42CZAIGqQ5L8EZg3/x0BnwlIZDDGWdCKRYpocRC5l42qDLKWQt0nVMZLHRk4uFjmJVUkOi1hCzrw5D4YXAuSos7FzBV9mie+xNJxOchxXMg/oZlg3+MmXwL/+V/8G/+Kf/zn+w7//d/if/+O/Y7vd4rA/YXeYwXq4ZzlLpK/78w3KBOAsm0Inca9czh2neR5Tm7QWK58Y91/c4dtvf4p2ZizHjoXlGGpvDSji3tibkLOlLaLi48ATABpQX1OuH884qWvjpsoc9NOeCLuJAylyhC6JgmfM2BmsT9dn5jHeIP7nCZvlQVlIDYb8zAZathhN9JOlJfmrLN+2gFu3SDkM3VW9xrqJqZcjUThw2xQ3kYFN3xPia8bAVUNkEFW3KmWp+oGlTWzAqyIC6XsNsIbibE2TsKhgdgGSAWAhcg7fcLonV9iA65kxkTItDKPUNbdT2h/yPHMAW0+Frr1ZvS7dpBT5pLs4b23O9Sv+PjkjLr9bNohcjsR+fWZ8vJ/sBd4cWTwI4FCqkWodoGT39N7FSJWAExiBOksK9nfW1+eAKNZhdvCFWdQOyxK6wVIKehfmh4mALrnUJI+YKDeKqpeydFVIXN2YCJ1EhVAojWuxRH0dm4nRG4teliNXnIXptDbazyxxGMlhFt3yeRHj8Bew8IM3WBrjfFqwtAPassfxfMZXX3+Jv/y3f4n/9l//Mb77u7/F026L3/7us6S+/u4TDvMJQJOU6ix5umxzJSLMh5OoB5xZsq9dEGG6Bf7Jz/8A9/cf8fl3TyCWY+HH41EM2K1rjjhxo5TcUzZOwnihMUlAFuFKfFXP5xssGhDfx5tMjRhAamPf1d2zr5iqz48XABV4g6HKJxXpNPfB8rfAb9DGSWxQKGNSUEoMJDNEE3VtjVBCGSf1RDBLOwNAIV98LA5JIfSzaTvI16X7CFpd/JXmVmHGIAWeIgArbmIcgTFSxw6Mx/vA2KNNm7g/i/FxV3qcrJPytzzgOMPmYPEXhJWdhhtJC1bnFn+Hsbu1asf6mtKubw8JC8Ll5Zg9IqSB6LBH5DTNfVXf1WVtZm8wxrr2AAfKcyyNiywQiYovQCeGGViIxQS0pSSjVikSJ5YA7h1VA70QkR8gaL27gbaoSNIWAdlpkuDWkiqIwZiQZgIAPdVUBHIaFsmg0bTPWNzXqBcsvaGCQE2d+AsDKGiNANLwjyBRV0Akw5LG1YyMBmzGZg0UOsuhBtsp5dSerCaaGHTHoHqD81JxXhbc3XzEr/7iL/B//uavcTjusd/P2D5u8fm3n/H4tMXhMPuon88LmtpQ5tawnOVghIjY0mfm7Ud3E/7on/4Cv/jFn+Dx0xbMjOV0wmG3l2OymU0yVEfaXb+JDnTqLlUWkMdUPc4nHO8k420wVQljCoIayk132h1U5V1d1QN9BF4e1+X6eiWeqoJOEfYmehhW6x454DIbOAUDyYvXl5dhxoAU2iucibBBkq5mB1QCkSwWO5pD9lksLalbAnHjbKazNcd7F4SziHnluaFPXujNEKeD2TJSuxKwIi1+DB8nUZzMpSj1it3H+VTTKCIPtU7NYmZw0UWGXJhUWAxEI9wN3TGMqfzNlFitgraAjQE0wveTWWlyYorAAIQAabaJ2Ajyxu167AykiYGMQKuMtTWgCkMegv0M+0cYLYzBSHofMZiKsC4nn1pr4rpjp8GsDR2aX0rUYCiKfQRQJ5wXRRKaQEsDVRGRwUBD0/saCot/97IweCooTY7N9qZqpVLEXmDrppOoOCpEF6yNktTThG4n3NTPvOix2akQgOoD3r3donO+4Q+47yJdLsuC8/mMLx7ucH8/4Xjc4TifsN/tsd/vsd8fcJpPOJ3lIM9hP+NwOOJpN2O7n7HbnjQAPNQ9q4Opo0wFP//ln+CXv/xzHLYztts9plrRWLJcSMQvBeQucm9nCf7DLLp0CyDNpYdbdpc4zqfTGfPxjM0koDrVjW4uMjcteSU61EvJDFUJbHt36UXWwyUu5OsVQ5WdRFGw7OzH+QrDreCx6uV+2yHXom7Go8LswJiB+NLlx56PFeDGpU7xuXYQqYhvBiwncVSwdPFWMKd8+UrfugIT3RJ1MV4CadZZ2YbiDJmN+Vr/kLNGdxdaEUIikv4lCVDSKd6R/U5JEXtkuus+uxShh3ZdYd4vMUe7Mlv0/mMRV61ecp/Gch3IPGtf5emSdMkh+jhwiiN/GAcH/Sezg0Ng72U/cC8emlCVmuLPqyewSDeCUqoGA4s5rrImOpkhDRAVFkATNAWIbBqdSF25wgCGXlWn2EHqIVOKgFqjBvNeMWNdZwK4qm5XFWeNsUA9A/Q+Uz1UTTfk5AYCVpmJg0rqb0uPBO1X6dui6V+qjkOvBVwv+3LRjKl3txuczzPOi8Q0PZ1OmOcZh8NBxe0Fx3nGfDxhr6D6+LjHV199wBcfN/j0999hu33Cds/4+mff4E//7J+hUsWn3/4Ox/0B5cO9RPhqZ7RFckT13nQZZx24AKofzBEqqpJTV9eqBfN8ws2NxCVhNBR0l9SYbJ7A2SmAFSvl1A/S0RcHW9L1sqFKp6wvGFUikrwV7qdpi9iYGa30UBgX3RoVyBHYwCixTgToBg+CMisT10v6Xt7XFWjdH5KbnjdgOzuZyh/ZpZSgf3f2gZS6RsUZ6zLsXVGO/R7tURgnc4WxwhKAQjYtkG4feYOwd6Xrat109IkKxrutinylLfHsmjGnKiYx0nrct5NUhkgTDNVXd50FCVUZ0efeDRBQYDbvfkIE+e7DfhCslFPdyMX4od56Ooq5y9xA93naux46VKC2QMXsTFXy2XfquuF1EdcZoAq1VDOoJt0tQ3V+BTRJhDdjvuJnLCfpJBJS+Hi32oG2YOoAV6lLR5NTSnXycTGVhWfiaM11q6YCK0XcHk38Z6ixTVl4GPesX8n7sORNuZiqgzCVipvNhNbuxCOnLVi6BYY+KdCecDodPd7pbn/AdrfHN998iT/6w2/w9OkRj9st9qcZX3/7LW7vPuK7//sdzvMsh4WaHPDp58XtH2QTT3dqO53Ysmhe1Mxq86szlnPD6XTG8XgWP2AAlShc9pLU0rOthVfSi4n8rqJ7/noZVBV4RK/JtgJgUJvFMrMK24QcOQ2nBbC6DPrTIme7X38PNDE2a++0z9VPlmTRdor7rIa9sWSQVEDNjJiYXOdLQMQLhbBzTiyZ+zMs0IA0YetVRgb7fvyM+aJEWRjaTluoQrgoRBQEkKxBctgkVBwvV4bA+hwYHaOt/5hHvTJ7/5j4GtZqb69LFda2AL9sJPJ6pjb3PqpmzIc4Vz1E/aj3KP5L+d1PU5U4TODvh48tsQrzPQDG/Z2VORLYj5mujRfiByueBlYPs+oLu6TxcxCaztnWRLdpPq/SwAWVCzoqmvVtZ98sDFS9LaUEqOpcsM2lFA0qwxIDuYBRKYDVyop+tbFUtY5GZCokTHsqN1jKBn0y39GOdtvQ9GCNZIIVoD0ejzgej9jNe+y3O2wfn7Db7rCfDyibDVAKToeG6dzRD7MHq9/t9iikIfvUYwfmCqjAlvWceV6UQuL+1mRjk7o0zd5RgGq+03CgtgNK6/k5XoFlL10vi/9uo2L/v7xMdTlJZIMBE7G6IwYjy5MvNz5syiEus4NzWkgJu0N85STyKcDbhDP8N/apelRx+reyAygBqOiNeBCAnTk3IPW2+OYS1Qq9Kfthiatdz6oGyA/nn+kyjZ3UlscTRatFvXY9khMqK92P7cpYgWTqx66TjCg3M/p71H9i7Jcrbc11uDYZM2DagnaXEX9X6FFDtSFPmcpn3Q/DuzSoiwVPse8tsjy6skydjb0LWIuFvbornonlljHYVRoKvCBdo72rGEp+kKCwGsOabBgNjELm5gU/rGDHa22ul7QL0jRBozvq7uMk1ZlwKZo6HkA2wDEkDby4PTJ6kQ222lpa9WEaxDycNjAgIj36KXrSquDW1S/cAgqd9Qj4F8sJp6+OOPx0j/3hgPMiJx3P5wWH/QEbAj5+cY/5NGM5nfD46QkPD7f49Pkz9vsZp/mE5dzUxUkOOCxtiZOcxWVSiTVSqqhJOmuAFdGvViLxvvC1bLEorOxr01jGH+t59cz1ik41d+ya9mb2OYLNyMDWQGqfm2uFfgc7Vx9imRyDNStqut2qk95hbiMCPibuKHw1KEtl3c051cGc0818w/afv8ONQs/1k7UzAbwxyNHoFPfaLun7Rdo4TK8XOB3gSrgc+Gvi/xqlA4yi83K5F89JA2CQ3o2NppKjfYaCSZenr/GJzskj5IK5535SpROPfWWzgNJmaFMvVB2jq1TuE+9z/bwzu6GPvAwFwRIA71lrdawyIAsbbApeSbdpUoQd6+wm9hN6F8szkRiiYP6rnXz7EVAVKcCCIlu5kgZeomj1zmiFgK5GKU7sHAiWqp0lJbIGmhejJZeC0uUI7TVgXf8ELD4TXdxHRJggOs3GjD5VObiz2eCu32O5O+Ph40eclpMwSM3DtdtvcX93h5/+bIfDccZhv8PXjzt8881XeHx8wvZph6fHHXbbvfzb79XbovvxVh/vLgHBS5n8sEdrEmp0Uws2esIsNkAZ50LGUm2MEXMqaJgTHF6tmny9EvoPiXGpEQrk01tHQPX6CYxku4AdnfSOR5Qls9mGydiKuQDp5yscZ5i4SeCxFrFo0ltIO8zcJAo0TC2TR0UCzAqcRMgV2PsEwggAAMIIYoOaAOPqrmZg4YCtm4DVOgF5tG3Vv/oZGWoN9RLGYqePRFpQRjm0KS4i0UWxbmqWrkWAAR70kS6etZ3bAIyjXqDAZOeAsqhtwqYbvPQoT3ue7ZRULOdgstBwgSOQAma0lPcQ1LBq4jd3+RsFhQnUA1BALJb7rvOA1CvCJAwO0DGx3toqorAYlMAQyzExQHqSUFlRV7UAQCgKtK0xuDfUJpIebaqe6JJgJktvorpptnokVgE1OXZdC2D4aWnUxQBjuxujs1r+nWnrfC1FjI0JINeM1SVCIIw7q3uIVNLRGVCpgipJSuzeJJngZoObdiOgeiOgOt1scHN3jy/nI07HGYf5gN3TE3Zf77Dd7bHbbrHb7rHfHrB72uHzp0d8+vSIp6ctjodZEvMZi+0MFJEUqKjRrzW0VnA6LdjUCSBh7bb+CUBPoAoE2Ar+dd+wjBC8xFdfj/yfRfz005hWkFkDFaQTPa65yKXGT8p/j+8dGJ3eb2zU3udQ5IvOjyJ4Od1Es257jFXefqEBGPz9vmuPdb+YSMZK7W+tY1/d54WxAWoC/4QtmWkNrG/ovzLiUXrOJsGafZp7k78PCYjTOD+n9yZF5rFc3dgojG6x0Y3qCgLCcrsqNxH8xBpZN4e0SVFRph5tLaksc+GQ13ZRrhudTQTcxDjOZaU+CNFe84JxtCE/Y0A6WtXTvZrfjQ3gEsOl1pSJJjcv3fmoITIZ2Oxa1CvEzt2r762/q7NmNAUseDyppwMYyLZjSXcjBirPokoChcY4M7Cu50TvvAqa9DwQ5++tnZUKemVM00bi0m42uL+TqPqn00nSh3/5Jfb7vRi6djsc9nvsdwdsH7d4/PSIx8ctnp6esH/aY7vdYb+Ve09nDSLPEBVMF2NX00wMcz2BscFUi7uY2Xz1TUPhgNM8KWkMkdp17XoZVJWBrTt1AFIijyFqxhBKkz6/O1tvLZCvNcX3DIpyrWEg2/t8WEc85gBcWzTQCW9AFlPeQIqcAV1yN1x0WuA5X97HcUNXJubsOy1U75P008IMDN8NZbO3NcG+3e4MgvMz6b0xdnmyp71y3W6/YXiVW8evXRZr1c506TJ1UDXVBxsIpM14ANm0yQySg6Guhjh0dRjS/FEJwxk2Qw4cpLb6vWxtHDdS2NjpSToDeO6mjw1dqoHpNRDpHDEOBEhFZ2ogWCncvCRgCwOapI8KsDREehnbgBno1JRVWVk6xv4/AVZPc1RE1VBIT7xRsNcOdRnS+Aoiragf64q1+piZSoRjMx3mwRUAzjrdrMYgkoBKNGla+taxmSbc3txgWe5wd3ePDw8POB5nHA4fMR+POOxn7LY7fPW1qgSettg+bbF93GK3E3Cd90cc5xnn0xnzfsZh7hK9axEPiuNRqdg0Yarkm6FtYGGjCQLALl1pe/B7gGrumEsG03Xt0QAKGejsuGpnA0Wd4cVqOAwJQq5L4KCLZHi9IZyzOnnMgNXBJgGqgfO6Xd6ByOfq7QavzotAlOuLFfCuQa47k7J70jvNMJabam5r2n2c+kIGWN93MZntncavAOYRkIh5uB9+p/XXuJWt9eMmDoNwMcmcgSYe4Jsjh8uYvVOAMbZY28C8Htr+jnRime3opumraWyjMrWooxiMgPAxDa+JAnV/B1EBdTn1ZIvOY+1Wuc8WoRmYfLppndwbhpTnNGVPlTSbq9wjkaokTmxhYYG1AtyAUjqWBkhOuKYHCYR9i+tPBXPTGLA6P+xgkXZCKUU9F2Iku24KBUXOz+tm1I0B69ypNHoFhEQSstBaZQBKmSd8Awq9Zw4RGhNLg8PUiNRVa8U0bSQz6+0t7k4n3N3PuLu/x8PDA774ao8vtzvsd3s8PQlrFVCdcdzPmA9HHPYHPD7usN8fNFswofWG48kI1ySZd9NmYCzV5p6BasYRvjLf8/UmULUOcvaAYBdpmQlDMNZkKNRjAlo5YIh/H1Iha8AywISnvLH/aRKX8aL0TCd17nZGkoFaxcpExYSFkXfcCkpSK1f07UofXeuzqJrotYyFOzFHML2xn+HpTEQ8hE9OK9RjIySQRhLVS6AZgh5rey82maiafWAsZmyaudSNGyDnNiUJw6MSpHGO7RMuHhM6iKoHfTFfTuic8wAuPgP1zm5gE5XwTUwXNakxp3cD76bpUYRtNu5x0gziylPUR7SXIsFLNLi6+ND2YayY7dy/ZGotaezFSZ/RS0Vt3UGjKgiWSYyzVUXSiXU68iKni6p4a/QJ6CxZCJbGKFUDcRN5kOs4hklonVXMLQ52zALWRSNlUdqQQHIox3TqFjDGJAvSzcP7lILNhbSAcKfTaekZM9S2AeTNLMDX5hYRYdIEnxLkWwB2mm6w2dzi9vYON3d3uL2/w8PHBzx88REPTw+YDzP2+z3m/QGHvfz+8HTA09MOh/2M0+mMtiyahFMOM5jqhgZECaxarwWb5z/YUHVNR+Lw6Dl56GIxcrrXBkOmatzgEZBSx2am6QWZpd7/9tfKvU7bbUwinJd9mILE+8TyjpOnESYyAS9KJyZyoJag4xbziYYJYbwrqkojsINcXB6COyGBk6F7YnmsItQAhKby4MRKXWSMST5cxhadwcWGZ0Wk6R2bm7PeVJDXIeoThj4LpC3FZ3FR5ka4MJkxzSrQB5eurLMVEHA3LDUuCHsNdyufdwDQ1cexdM1vpcGijQQUBVhADFYFIEjYPtL04oUYvYoLFLFElper4nxuKEUYZ60S5b+wMNOqwT3aonFZK2MphNo7isYy3WwmVJ5A1LAs0n+bDStjLVhK99B/50UCYks+KHNeh2QOWApQoeE0K8z0eC6WAt3SyTcH32q610IRTlD1noQ41hr/8rH0mGP6oc499mQ4rv6Aqhz6KDZn+4EbYjO7VQI2UZUM7TfkdaxTxeZmg+PtHW7v7nB3f4f9POPDbo/TQU53zfOM3e6Aj087bB93OOzl9Nf5eEI762EJja/8XM6pzFRtLq4tFuvrZabKOXjzepFmV5dMlGRixxlyRtQpDB4mlxHYg5cM4qUjjWIpxafOdpFebAyIu8QGMCDnMJ0QEOKyAbODA3xRusU0t5OT8Um/dlF56DTyn15KblsxZ/lstb4OftE0GsAvhkC9IQysyH8dxLLhkbGK3q8X39kt2cKx+s4A0cXzdcGuzmBnzgCUHZEPbCbR2l1RdwpWZBtHT/1izzZlWD5fVCpx8VePNIdGRJmqggFB7AHcWEGSPXcVwCD9vBaL8xptIBJAXRqDqUmQ6UlC84n6gFHKosBGqFNRZkpYFkkxVGt1jtFa1ziu4vpTq+RfmmrFtBiQV++rUknuqQW1ClhL10ldSyWUUjFNBqxyNNViA+QDBVZH23xkuaYUSnkuUxoH29RKrF0jHB6sHgknfO2MbNAIl6lRmp67t1Us7dhI6ZqOhuqEstlgc3eHu9tbnI8zjscHHA4z7j7scf/hAx4+PGC722OeTzjOR5znE86zRMDqi2Vy6EFevI3G4gIDAAy4uL5eAVW4GGfd4FQfaRHY56kCtkxzZ7p+1EQ0K4OAwWiAYDakCy+0CRE/MetxHOI4dpUw4thP6CJIDcoDmvrS0zvY34gFK81YMzfrjCibiNQIkfSgFi0pxR+wHs31ykwgZyXI0fhz3ZW7OYApJx7VCUkVQb6JjD6iQ/G+oV0BfayMFals6SAbXfYNyER0GYfYtGQikI9zAYvaA5DTbmA/lggkKQcw25XMDRZ2hdTW3ltqd1GQ1fnDom0sVoC2qhTRa8oRUvK5RoVB1DGVgtYZZQnfVAMrFJLI/MvixyENAIuzxiLJ6GoBFWWOJEdDCxVsbroAYLXA10V1jJMYdeoG0zRmMahTEdDVdO7G2I2Vlkr6vUXIkoGoVDRvnIKsOtFLvFZjqJm1plCfJRm0VPoJNU1IhF2DvwSNsNWqK934hpYl2YjhR1ChG2RnieDf2qIHNMRtarO50U1BNqbNNKFuzqByAyoTNpsb3Nzc4ubuzo/OHuejumMJc+UmsVqXJplCWMMK2kEnm7KhP/+BoJrpuZUagBaqAAb0KKDlnEcKHJJA1QEKEdjYFjjFYheA0UW/UkHkq9niYq2bDhCnkxFCUAzYYqBlraQ6OtszNmw1hbtTZMAEQp2R4MHZO6063n/NuohMz1aw5ZPP1CFDe3wLWQFzbGh29j7r/DDcq+W5FTn6TxhT6FHZ3kfGDTnKsMrZuFmdKeaG7URMmb9H/Fn5Oo7auifUuOuhFvZ5ZYm45DY7y8262HSh+76ngNAZRHJUkTCCgiICoIxt6eyn7LITPdWKRuRpUYoGMncmVwIILfcUa9R5M3yJDrTKkVcyZghMyhSnY8M0RfAVEXeL6hklA6y5T9n8CMAVRmrzwZ+vFbUQps3kY0vaDq9vrbqOIe0zQK3RXp8XysLTdh/H2hV8bewlyj9884p5ZZkcjBGTMEY2ULUEn4AEsrHg0Q3cWPNxdZzVR5WooCqL3aBiaWpXqBVUJtC0Qd3ciF/s7QY3tzc4Hmacjkcs5zPa0lE0qHVfFqDJya1oR1JLXCNUer0Cql1JH8PQgBUdLReRTfCI2mLGjRWSMwaEzxGMzMIdbCotDM5l2WLR4NROdXX37Frn9OpY3Gboyawv19HOliYGmTBUwIaHihMFrDqYgvz0kdU1UUOgWxQjhxyY7pE4XI6i35HymybXjrF3tW4xMeGsYm0s88b4HrEGL1j/Wv2RxsYf4sTEowxjLKmTXAdHXh75OKftQ+41CYFyPxvrtEIgulJnR4S20omNukB7n1n3ow5BtLVtWY+oA29pqkkNPqaLLEksNt2keeDXWt3w1cCgUhzAainYTJMAjy+hAK5aQ1Q3YDXQpCKGm2JsU/tNzuTLaStLl80kueqtDLeql1DpCDjrhrfqr021+ijD1oAkro4yCSapXiQJ5zr0eXfmrA64AMsci81N77TUJh16Gk03aE5BoxV45Qiq5eaS2AO9ywm05czonQAqoDqhbhibru7qFKqDWgvqzYTT8YTltIj0UAvauaCdF1AvkuOOO9DhgPp7MFVNcsWwqQFjNFAAgXyVxAB9Nma3o9LgNeALjWLH0lKDNJAvVSlKnyDX5Op3TfSSDPeFhDFOItVZZnFVFpgxJKuvpKKlIJBrdCVEm9PH5owTjA2Iw3zWhp4f0efZn5ZFnPrBQUdZp5aaDw6Eq1rUjZCMQBSib1SZ4B2cwdSNQ1f021cAbmD5Q1GJJcIWXkgUF/VZ/R2+mZff2WcxLMPOMNQ7R6kivdfbHh3m88wixhtQEOT0l72m2D2JgcpcHMGo+9/FDWNIfWbMcTLdZZG+BwVwExFu6uSAV6oCsjnPa94qRoj/xppLNXG/qPpAGW8Vv1AB2RFURT2ha6NY2wlTFYZc1TBk9fGNMkQzGCmyeth77Ra3sWi/hVuShRxMsS66xT3uXrxnDBj0s6yZVO3UlKRqaZ1xXiTyf+8L0JumkCEwF9Q6odYNpo2eCyIxjrrnEikYU9FULpJ9mZsExzX963PXK0GqFSqsPQmUXHdnIGKT3dBI2dAo3RooBpU2ccD5o05O7TYXU2zBxIQIV/MLPQdjmMgBSgRQ9hQYcVMjAXh77PO8J11XRVwBYo62yp8KVplRESPOAqdNCkBOwIeLXZG97t3C4Of+iz8GXarX31yhkJixB+pIum7T2Znoa/cCwzvWtDm/kyjNFRior6zHWRCxOZXGEOlXAoUGJY/Rqp3dQNMTvumGfUHxE5P1sbI5B6Sqy9xz63hsHpQAvFt7SOZS0f6M+4LdFktXTbGYydgqEoDWOmwS+TnvQ0Qdi24QU500PbadHlKdqbJFKiSZBRSgw2AVSTxrIQdUC4toY+pzBIijzalexcFeiJCoQgC4/6sMRrW+s/nCkdTPVozpNm3sLXZIB2m2ZAFUMW5JpoHTsoD7ItOpS/LDZTl59gFTYwDC7htViHdERd3YNNSxak2SR5EcnCjreZSuV0AVsaAtI6kvgpElZN7oLMY6nsjLsaU1uA95CYjdwi5SK6t1fDfxnP2n6T+tqoNC3BdegIm/jlIpmt3AJMy8poe0MNb01BqHSV8cNmJJgZoBIvUYK6tJtpcr74k9SfmR99zF2DowrsDfdcKyYwuIGBMjFW30nWum2vkCtIa22Pg6ezWwTI2SG/3PrD4aNEUrpuqWf0S4NkJ637U9DrERR3/ZFQeZs6GNiDzLS+jx81w0nSmcPBh7lTxmxWShcY9QICiqGjCmZ20KQKYYcyJNrhHMFgiDFRI7rTVlMtD3WpBqIhHFxehVQVSHtlAlNaZJu2pNln81bvl7ijA8m1sCbGENLxCQZgopoZKwbAsZaMzVTiSVopuOeYlkQsJwzOiwfFZQbw39lEjDI0suMst51XpDWxjnpaG3BRYPtPeGtiwSJIdVd9skXGEYprQ1JPFZuQjh8CAyYKiO4/rEw1sMVSaS+k8Dx3HXHwDBKVvoFvO6uWbgeb4S69LjixGOV4847cjfUKrR6jsOMI3nzTASebqsPowApeF9w5VFhGA2Y33ZWelQnUTY8hc216LvEm8cmmaAM+p73R9wBZC+MBPQDrrpK+0jxEIg2ygptdXqZyBr5SIx8fTd9Tddb5+/gaJt1yro85RWXyBUKWnP131h2Akc9OJRhjF6i8xlaGtqJlidFFQDTItLBKmSsAUbGw0rYMsC9upTAaigKtEgpNgBLO8ufpAggBFchk24lopJQRSFkFUCVMTgVSfxGCDzbGCglMn1uR0Y1G3SGyrqm1HOomqZG51uWqanFowqML9hE8INsxjk4f7c91370teIGrTMkMVgd0vztPWs+lrNmmBxlTt3LMtZAmMvmgOLWX3dFd9J1DqdoHaZlz1VXzlR5XK/80gz6PBoxsZq1q6+u/7pCCWEy2ds6VwBnWfufe39l/fZ6F3a091x/4ITPh8IMEQ5XFnMEB/aYYHCF0cA5GV716Axnkiy+g1bm/+9lgXWlbIF4juL3es7gMHWJdzpLB+Y0sU9VhZkgg715dVIOVhd1jPPlGDduXhazSIpw4HS9Pheh/Ug2ZMljUl6JwDXg6cNJOhDbLTjM6ltBpoghBpmvCergiy/lzFP22QJURaQNibtF0qAK22uIX24SoJcLVFMJQBSEC8u8hdXGwQxENZOXl+rg20gRU+HmRpB3J3Cl3VMq53aAai/rdpOWIFN7TvRDyZNpX8soRqbRWjLRi1TNzKDm7p1UpzjJ40Da6etWmtoi2R7lowhOs7uSvk8rL7JpSqGPi/Pvvps7Jzvfz2/JK8z0TWQvPXd6/uvlX4NoPP7nu9QZ+kexueFOnD8xdde+8JFq9+T9J2Kzm2M3y2JA/k9CcgoV1oZ2JVG8PjU8NY1mAMYNC9k7MwBOz1Fq34b+oQMh70B0YbLWWF1zLOW0j3XLilPU2okwLBNJh+/Rf7M28z+EgNzHtqgPbACk7hSw1ebbuzF+oV+Z/XIe7V95jr0QTWDC713/NQx9w2DVu3FoMKwk43plTBDXahg9IABqw9viuhVzPiFKLeqka142eGmJW0wNUsI5UQWiI6R9bWd2UN/ev0sYp2NEanyhs2nloMd60/5W4NHMcBZCF1dr5/9zwt/mIpjTKL//9f6/W8F9TUwjs+4iJzKHu94CVzTwnr2uqynz8kXkPUtvXzpP5d/jzZZ/fiiLnylDs/NHga/ob99+aQGCBakgM6rGj4PNQEO62eu37/+PtV5vQu9Up68fQQhfyabwenafLwc1+zl4uVTOuiRUDRvmmzPRqWcfa97cK2rzVWJ5tu94xi5oc4rgAB332yjrLHH7cEyts/6hBDAau8hnRMKrOZhQVaXUnzTJUQcY0LqF93PJJwwI79cEitGWm9rY3iLJDtPYrVRRmK75pr1zPXGgCpZNB74x9se/wd35XqvJ/vz31277y0wvn7y+vmka3V7vR7P8fi31uXyPWseR8/c+5ZrpcPOb+Z29fOX30Qj5b2A4ec2pfx5Hz9+7j3P1mvUNV/cMdBkzQ11UU8D4GvlK9jZibRsIFR0dL034lCKHbjIJbEHU406U3pR7J9aDlPqyeCBQ8+s0HeYHRcbJMX7EoBn3XG8LZiqYBnF80kVY8UYc2Wwbw5G3Nc2JHfaD7ItP93XF5BMC4LScQoyMfUEujIsz8/SN0epCjHqHyKQfn9o+36s9vt9/0Nq83o9Xriep3Zv+OIaSK3v/7Fb9EM35uuqiLeV933n7TNt9gSY688puspEbS/mkmFntQSG++JPVpRgPT0mOE1eDcAc7ZV10SX7hdXE7lMkdYChkaEFfBVhzRws2L06SGDQI3iGqDX8PXgF9vh+/E27jJHcCGPzGeSkCzq9aiYZEKdNB+HXitxmfafr4l0KSMWS3UtJZTFuTNeuV87+a2dqR0slK0b7/bojfqzrNYb0Utaol8qk1d/2jpdY6bVy7LsfH0IvJYLn7sEb7rte9nO1vl7aS0D82ruer8P1v/Jz1/rhObAzXnPNhBk8x4nBij3lhcTmjG8Myp8m9xgYX6AsLxFKSfuj5QEwkXbQyXozUw1dD5qSM2bdpeFzwgnXceqXwQLZmZ7NfV8BFLPA2J7rCVl5anJByUxUsFaMQFItdkMl2e/GsNPnwb71rZwAFey6zlincdwZ4PBUvNhE0zMEZ+9pQIf7xy1Arj7csaa08L61D65Jm3a9wlTzxM+Tr2jVsg36pUW+Bq/XFuVr7Gldx7eyyZcW+dugbHzm933vWJyeVPaaiGtzXYl247ufC1lmNIJWVpIIa22TLbWDADvdJaylwHxaXflfCvKsvOa7agztIvhLAqQwcMhKGXmAjocHeMnMQxiN29xtjbpiTualWNflqCZYz60xqWxomSPGtpv5g1A8TkFgr5wyAo8sz51rzPJt35sVHsbA5NAq2Wv1Fum+SM6XGVGh0CNK09TzxgxAlrlQMcSCD1GpaiiyvmVItFhlq0VVUOZmpd0gqaB1XXMDIwKjGJZRZ/cbFRaodbK0LJrS3bJuDM86GOtRcgNc8c1ygLafMSMMOJF+2u+rz31OZdUTr54br8Etcfxi9cq87p6/6CXdwPv1fr1f79f79f2uHyJDv1/v1/v1fr1fz1zvoPp+vV/v1/v1I17voPp+vV/v1/v1I17voPp+vV/v1/v1I17voPp+vV/v1/v1I17voPp+vV/v1/v1I17/D6X5zqweybcDAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure = plt.figure(figsize=(5, 5))\n",
    "predicted_image = cv2.imread(full_face_detection_pipeline('desktop/prooo/sleepy-driver.jpg'))\n",
    "predicted_image = cv2.cvtColor(predicted_image, cv2.COLOR_BGR2RGB)\n",
    "plt.imshow(predicted_image)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
